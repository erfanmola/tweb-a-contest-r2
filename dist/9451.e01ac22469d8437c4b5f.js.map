{"version":3,"file":"9451.e01ac22469d8437c4b5f.js","mappings":"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","sources":["webpack://telegram-t/./src/components/mediaViewer/helpers/getViewableMedia.ts","webpack://telegram-t/./src/components/mediaViewer/helpers/ghostAnimation.ts","webpack://telegram-t/./src/hooks/usePictureInPicture.ts","webpack://telegram-t/./src/hooks/useBlur.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useMediaProps.ts","webpack://telegram-t/./src/hooks/useBlurSync.ts","webpack://telegram-t/./src/components/common/ReportAvatarModal.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useZoomChangeSignal.ts","webpack://telegram-t/./src/components/common/DeleteProfilePhotoModal.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerActions.tsx","webpack://telegram-t/./src/hooks/useSignalRef.ts","webpack://telegram-t/./src/components/mediaViewer/hooks/useControlsSignal.ts","webpack://telegram-t/./src/hooks/useCurrentTimeSignal.ts","webpack://telegram-t/./src/components/mediaViewer/MediaViewerFooter.tsx","webpack://telegram-t/./src/components/mediaViewer/hooks/useVideoWaitingSignal.ts","webpack://telegram-t/./src/lib/video-preview/VideoPreview.ts","webpack://telegram-t/./src/components/mediaViewer/SeekLine.module.scss?dc47","webpack://telegram-t/./src/components/mediaViewer/SeekLine.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayerControls.tsx","webpack://telegram-t/./src/components/mediaViewer/VideoPlayer.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerContent.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewerSlides.tsx","webpack://telegram-t/./src/components/mediaViewer/SenderInfo.tsx","webpack://telegram-t/./src/components/mediaViewer/MediaViewer.tsx","webpack://telegram-t/./src/components/story/StoryViewer.module.scss?5f32","webpack://telegram-t/./src/components/story/helpers/ghostAnimation.ts","webpack://telegram-t/./src/components/story/helpers/dimensions.ts","webpack://telegram-t/./src/components/story/hooks/useSlideSizes.ts","webpack://telegram-t/./src/components/story/hooks/useStoryProps.ts","webpack://telegram-t/./src/components/story/StealthModeModal.module.scss?40cf","webpack://telegram-t/./src/components/story/StealthModeModal.tsx","webpack://telegram-t/./src/components/story/StoryDeleteConfirmModal.tsx","webpack://telegram-t/./src/components/story/privacy/AllowDenyList.tsx","webpack://telegram-t/./src/components/story/privacy/CloseFriends.module.scss?5d02","webpack://telegram-t/./src/components/story/privacy/CloseFriends.tsx","webpack://telegram-t/./src/components/story/StorySettings.module.scss?b887","webpack://telegram-t/./src/components/story/StorySettings.tsx","webpack://telegram-t/./src/components/common/embedded/EmbeddedStoryForward.tsx","webpack://telegram-t/./src/components/story/StoryCaption.tsx","webpack://telegram-t/./src/components/story/StoryFooter.module.scss?19b1","webpack://telegram-t/./src/components/story/StoryFooter.tsx","webpack://telegram-t/./src/components/story/StoryProgress.tsx","webpack://telegram-t/./src/components/story/StoryProgress.module.scss?59b4","webpack://telegram-t/./src/components/story/Story.tsx","webpack://telegram-t/./src/components/story/StoryPreview.tsx","webpack://telegram-t/./src/components/story/StorySlides.tsx","webpack://telegram-t/./src/hooks/useScrolledState.ts","webpack://telegram-t/./src/components/story/StoryViewModal.module.scss?06b1","webpack://telegram-t/./src/components/story/StoryView.tsx","webpack://telegram-t/./src/components/story/StoryViewModal.tsx","webpack://telegram-t/./src/components/story/StoryViewer.tsx","webpack://telegram-t/./src/components/common/pickers/ChatOrUserPicker.tsx","webpack://telegram-t/./src/components/common/RecipientPicker.tsx","webpack://telegram-t/./src/components/main/ForwardRecipientPicker.tsx","webpack://telegram-t/./src/components/main/DraftRecipientPicker.tsx","webpack://telegram-t/./src/components/main/AttachBotRecipientPicker.tsx","webpack://telegram-t/./src/components/main/Dialogs.tsx","webpack://telegram-t/./src/components/main/Notifications.tsx","webpack://telegram-t/./src/components/main/SafeLinkModal.tsx","webpack://telegram-t/./src/components/modals/map/MapModal.module.scss?0842","webpack://telegram-t/./src/components/modals/map/MapModal.tsx","webpack://telegram-t/./src/components/modals/urlAuth/UrlAuthModal.tsx","webpack://telegram-t/./src/components/common/CalendarModal.tsx","webpack://telegram-t/./src/components/main/HistoryCalendar.tsx","webpack://telegram-t/./src/components/main/NewContactModal.tsx","webpack://telegram-t/./src/hooks/useDraggable.ts","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.module.scss?a30f","webpack://telegram-t/./src/components/modals/webApp/MinimizedWebAppModal.tsx","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.module.scss?b350","webpack://telegram-t/./src/components/modals/webApp/WebAppGridItem.tsx","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.module.scss?8058","webpack://telegram-t/./src/components/modals/webApp/MoreAppsTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/useWebAppFrame.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.module.scss?c843","webpack://telegram-t/./src/components/modals/webApp/WebAppModalTabContent.tsx","webpack://telegram-t/./src/components/modals/webApp/hooks/usePopupLimit.ts","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.module.scss?615e","webpack://telegram-t/./src/components/modals/webApp/WebAppModal.tsx","webpack://telegram-t/./src/components/main/BotTrustModal.tsx","webpack://telegram-t/./src/components/modals/attachBotInstall/AttachBotInstallModal.tsx","webpack://telegram-t/./src/components/main/DeleteFolderDialog.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.module.scss?7431","webpack://telegram-t/./src/components/main/premium/PremiumFeatureItem.tsx","webpack://telegram-t/./src/components/common/SliderDots.module.scss?afdd","webpack://telegram-t/./src/components/common/SliderDots.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.module.scss?00e6","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitsCompare.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitPreview.module.scss?28b4","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.module.scss?0900","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStickers.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.module.scss?e925","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewStories.tsx","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.module.scss?0228","webpack://telegram-t/./src/components/main/premium/previews/PremiumFeaturePreviewVideo.tsx","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.module.scss?b65b","webpack://telegram-t/./src/components/main/premium/PremiumFeatureModal.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.tsx","webpack://telegram-t/./src/components/main/premium/PremiumSubscriptionOption.module.scss?b798","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.module.scss?323f","webpack://telegram-t/./src/components/main/premium/PremiumMainModal.tsx","webpack://telegram-t/./src/components/common/pickers/ItemPicker.tsx","webpack://telegram-t/./src/components/common/CountryPickerModal.module.scss?d5e6","webpack://telegram-t/./src/components/common/CountryPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayChannelPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayTypeOption.module.scss?6d7c","webpack://telegram-t/./src/components/main/premium/GiveawayUserPickerModal.tsx","webpack://telegram-t/./src/components/main/premium/GiveawayModal.module.scss?ac86","webpack://telegram-t/./src/components/main/premium/GiveawayModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.tsx","webpack://telegram-t/./src/components/main/premium/common/PremiumLimitReachedModal.module.scss?434e","webpack://telegram-t/./src/components/common/hooks/useStickerPickerObservers.ts","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.module.scss?4629","webpack://telegram-t/./src/components/middle/composer/StickerSetCover.tsx","webpack://telegram-t/./src/components/common/StickerButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiButton.tsx","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.module.scss?9dc8","webpack://telegram-t/./src/components/common/reactions/ReactionEmoji.tsx","webpack://telegram-t/./src/components/common/StickerSet.tsx","webpack://telegram-t/./src/components/middle/composer/StickerPicker.module.scss?0978","webpack://telegram-t/./src/components/common/CustomEmojiPicker.tsx","webpack://telegram-t/./src/components/common/CustomEmojiPicker.module.scss?b9fd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.module.scss?d7cd","webpack://telegram-t/./src/components/left/main/StatusPickerMenu.tsx","webpack://telegram-t/./src/components/left/main/FolderIconPickerMenu.tsx","webpack://telegram-t/./src/components/left/main/FolderIconPickerMenu.module.scss?4ccf","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.module.scss?77cd","webpack://telegram-t/./src/components/modals/suggestedStatus/SuggestedStatusModal.tsx","webpack://telegram-t/./src/components/modals/boost/BoostModal.module.scss?aeb4","webpack://telegram-t/./src/components/modals/boost/BoostModal.tsx","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.module.scss?1c77","webpack://telegram-t/./src/components/modals/giftcode/GiftCodeModal.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.module.scss?f731","webpack://telegram-t/./src/components/modals/chatlist/ChatlistAlready.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistDelete.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistNew.tsx","webpack://telegram-t/./src/components/modals/chatlist/ChatlistModal.tsx","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.module.scss?5f0b","webpack://telegram-t/./src/components/modals/chatInvite/ChatInviteModal.tsx","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.module.scss?b66d","webpack://telegram-t/./src/components/modals/aboutAds/AboutAdsModal.tsx","webpack://telegram-t/./src/components/common/AboutMonetizationModal.module.scss?2ca6","webpack://telegram-t/./src/components/common/AboutMonetizationModal.tsx","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.module.scss?bb6b","webpack://telegram-t/./src/components/common/VerificationMonetizationModal.tsx","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.module.scss?4803","webpack://telegram-t/./src/components/modals/emojiStatusAccess/EmojiStatusAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.tsx","webpack://telegram-t/./src/components/modals/locationAccess/LocationAccessModal.module.scss?843e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.module.scss?b26e","webpack://telegram-t/./src/components/modals/reportAd/ReportAdModal.tsx","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.module.scss?3c2e","webpack://telegram-t/./src/components/modals/reportModal/ReportModal.tsx","webpack://telegram-t/./src/components/modals/preparedMessage/PreparedMessageModal.module.scss?94bc","webpack://telegram-t/./src/components/modals/preparedMessage/PreparedMessageModal.tsx","webpack://telegram-t/./src/components/modals/sharePreparedMessage/SharePreparedMessageModal.tsx","webpack://telegram-t/./src/components/right/hooks/useManagePermissions.ts","webpack://telegram-t/./src/components/main/PermissionCheckboxList.tsx","webpack://telegram-t/./src/components/common/DeleteMessageModal.module.scss?fbca","webpack://telegram-t/./src/components/common/DeleteMessageModal.tsx","webpack://telegram-t/./src/components/common/PinMessageModal.tsx","webpack://telegram-t/./src/components/common/UnpinAllMessagesModal.tsx","webpack://telegram-t/./src/components/middle/hooks/useCopySelectedMessages.ts","webpack://telegram-t/./src/components/middle/MessageSelectToolbar.tsx","webpack://telegram-t/./src/components/common/SeenByModal.tsx","webpack://telegram-t/./src/components/common/SeenByModal.module.scss?1d45","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.module.scss?a8aa","webpack://telegram-t/./src/components/common/PrivacySettingsNoticeModal.tsx","webpack://telegram-t/./src/components/middle/ReactorListModal.tsx","webpack://telegram-t/./src/components/middle/EmojiInteractionAnimation.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.tsx","webpack://telegram-t/./src/components/middle/ChatLanguageModal.module.scss?68c3","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.module.scss?497f","webpack://telegram-t/./src/components/modals/collectible/CollectibleInfoModal.tsx","webpack://telegram-t/./src/components/left/search/helpers/createMapStateToProps.ts","webpack://telegram-t/./src/components/left/search/AudioResults.tsx","webpack://telegram-t/./src/hooks/useSelectWithEnter.ts","webpack://telegram-t/./src/components/left/search/LeftSearchResultChat.tsx","webpack://telegram-t/./src/components/left/search/BotAppResults.tsx","webpack://telegram-t/./src/components/left/search/ChatMessage.tsx","webpack://telegram-t/./src/components/left/search/DateSuggest.tsx","webpack://telegram-t/./src/components/left/search/LeftSearchResultTopic.tsx","webpack://telegram-t/./src/components/left/search/ChatMessageResults.tsx","webpack://telegram-t/./src/components/left/search/RecentContacts.tsx","webpack://telegram-t/./src/components/left/search/ChatResults.tsx","webpack://telegram-t/./src/components/left/search/FileResults.tsx","webpack://telegram-t/./src/components/left/search/LinkResults.tsx","webpack://telegram-t/./src/components/left/search/MediaResults.tsx","webpack://telegram-t/./src/components/left/search/LeftSearch.tsx","webpack://telegram-t/./src/hooks/reducers/useTwoFaReducer.ts","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersChatFilters.tsx","webpack://telegram-t/./src/components/left/main/FolderIconPickerMenu.async.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersEdit.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFoldersMain.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsShareChatlist.tsx","webpack://telegram-t/./src/components/left/settings/folders/SettingsFolders.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPasswordForm.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeEnabled.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscodeStart.tsx","webpack://telegram-t/./src/components/left/settings/passcode/SettingsPasscode.tsx","webpack://telegram-t/./src/components/left/settings/PremiumStatusItem.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.tsx","webpack://telegram-t/./src/components/left/settings/PrivacyLockedOption.module.scss?16a3","webpack://telegram-t/./src/components/left/settings/PrivacyMessages.tsx","webpack://telegram-t/./src/components/left/settings/helpers/getSessionIcon.ts","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.module.scss?ead4","webpack://telegram-t/./src/components/left/settings/SettingsActiveSession.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveSessions.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.module.scss?99ae","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsite.tsx","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.module.scss?28f4","webpack://telegram-t/./src/components/left/settings/SettingsActiveWebsites.tsx","webpack://telegram-t/./src/components/common/StickerSetCard.tsx","webpack://telegram-t/./src/components/left/settings/SettingsCustomEmoji.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDataStorage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.module.scss?24c7","webpack://telegram-t/./src/components/left/settings/SettingsDoNotTranslate.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.tsx","webpack://telegram-t/./src/components/common/ManageUsernames.module.scss?3086","webpack://telegram-t/./src/components/common/UsernameInput.tsx","webpack://telegram-t/./src/components/left/settings/SettingsEditProfile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsExperimental.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneral.tsx","webpack://telegram-t/./src/components/left/settings/WallpaperTile.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackground.tsx","webpack://telegram-t/./src/components/left/settings/SettingsGeneralBackgroundColor.tsx","webpack://telegram-t/./src/components/left/settings/SettingsHeader.tsx","webpack://telegram-t/./src/hooks/useMultiClick.ts","webpack://telegram-t/./src/components/left/settings/SettingsLanguage.tsx","webpack://telegram-t/./src/components/left/settings/SettingsMain.tsx","webpack://telegram-t/./src/components/left/settings/SettingsNotifications.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPerformance.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacy.tsx","webpack://telegram-t/./src/components/left/settings/BlockUserModal.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyBlockedUsers.tsx","webpack://telegram-t/./src/components/left/settings/helpers/privacy.ts","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyLastSeen.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicPhoto.module.scss?04c5","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyPublicProfilePhoto.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibility.tsx","webpack://telegram-t/./src/components/left/settings/SettingsPrivacyVisibilityExceptionList.tsx","webpack://telegram-t/./src/components/left/settings/SettingsQuickReaction.tsx","webpack://telegram-t/./src/components/left/settings/SettingsStickers.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaCongratulations.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEmailCode.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaEnabled.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaSkippableForm.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFaStart.tsx","webpack://telegram-t/./src/components/left/settings/twoFa/SettingsTwoFa.tsx","webpack://telegram-t/./src/components/left/settings/Settings.tsx","webpack://telegram-t/./src/components/left/main/ContactList.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep1.tsx","webpack://telegram-t/./src/components/left/newChat/NewChatStep2.tsx","webpack://telegram-t/./src/components/left/newChat/NewChat.tsx","webpack://telegram-t/./src/components/left/ArchivedChats.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.tsx","webpack://telegram-t/./src/components/left/ChatFolderModal.module.scss?6993","webpack://telegram-t/./src/components/left/MuteChatModal.tsx","webpack://telegram-t/./src/components/common/StickerSetModal.tsx","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.module.scss?b138","webpack://telegram-t/./src/components/common/CustomEmojiSetsModal.tsx","webpack://telegram-t/./src/components/middle/HeaderMenuContainer.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.module.scss?f0ab","webpack://telegram-t/./src/components/middle/search/MiddleSearchResult.tsx","webpack://telegram-t/./src/components/middle/search/MiddleSearch.module.scss?725f","webpack://telegram-t/./src/components/middle/search/MiddleSearch.tsx","webpack://telegram-t/./src/hooks/events/useOutsideClick.ts","webpack://telegram-t/./src/components/middle/composer/StickerPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPickerLimited.module.scss?0536","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.tsx","webpack://telegram-t/./src/components/middle/message/reactions/ReactionPicker.module.scss?695a","webpack://telegram-t/./src/components/middle/composer/helpers/getHtmlTextLength.ts","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.module.scss?41a0","webpack://telegram-t/./src/components/middle/composer/AttachmentModalItem.tsx","webpack://telegram-t/./src/util/visibility/isFullyVisible.ts","webpack://telegram-t/./src/util/findInViewport.ts","webpack://telegram-t/./src/util/setTooltipItemVisible.ts","webpack://telegram-t/./src/components/middle/composer/hooks/useKeyboardNavigation.ts","webpack://telegram-t/./src/components/middle/composer/MentionTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.module.scss?23ea","webpack://telegram-t/./src/components/middle/composer/AttachmentModal.tsx","webpack://telegram-t/./src/components/middle/composer/PollModal.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiCategory.tsx","webpack://telegram-t/./src/components/common/AllEmojiPicker.tsx","webpack://telegram-t/./src/components/common/AllEmojiPicker.module.scss?4b7b","webpack://telegram-t/./src/components/middle/composer/EmojiPicker.tsx","webpack://telegram-t/./src/components/common/GifButton.tsx","webpack://telegram-t/./src/components/middle/composer/GifPicker.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenuFooter.tsx","webpack://telegram-t/./src/components/middle/composer/SymbolMenu.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommand.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/ChatCommandTooltip.module.scss?f347","webpack://telegram-t/./src/components/middle/composer/BotCommandMenu.tsx","webpack://telegram-t/./src/components/middle/composer/StickerTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.module.scss?c44f","webpack://telegram-t/./src/components/middle/composer/CustomEmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/CustomSendMenu.tsx","webpack://telegram-t/./src/components/middle/composer/TextFormatter.tsx","webpack://telegram-t/./src/util/getKeyFromEvent.ts","webpack://telegram-t/./src/components/middle/composer/CustomEmojiButton.tsx","webpack://telegram-t/./src/components/middle/composer/EmojiTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/BaseResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/ArticleResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/GifResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/MediaResult.tsx","webpack://telegram-t/./src/components/middle/composer/inlineResults/StickerResult.tsx","webpack://telegram-t/./src/components/middle/composer/InlineBotTooltip.tsx","webpack://telegram-t/./src/components/middle/composer/SendAsMenu.tsx","webpack://telegram-t/./src/components/right/StickerSetResult.tsx","webpack://telegram-t/./src/components/right/StickerSearch.tsx","webpack://telegram-t/./src/components/right/GifSearch.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPost.module.scss?fea0","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentPostMeta.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentMessage.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsRecentStory.tsx","webpack://telegram-t/./src/components/right/statistics/Statistics.module.scss?96a0","webpack://telegram-t/./src/components/right/statistics/Statistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsPublicForward.module.scss?bbd6","webpack://telegram-t/./src/components/right/statistics/StatisticsMessagePublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/MessageStatistics.tsx","webpack://telegram-t/./src/components/right/statistics/StatisticsStoryPublicForward.tsx","webpack://telegram-t/./src/components/right/statistics/StoryStatistics.tsx","webpack://telegram-t/./src/components/right/PollAnswerResults.tsx","webpack://telegram-t/./src/components/right/PollResults.tsx","webpack://telegram-t/./src/components/right/ManageTopic.module.scss?04dd","webpack://telegram-t/./src/components/right/CreateTopic.tsx","webpack://telegram-t/./src/components/right/EditTopic.tsx","webpack://telegram-t/./src/components/right/management/ManageBot.tsx","webpack://telegram-t/./src/components/right/management/ManageChannel.tsx","webpack://telegram-t/./src/components/right/management/ManageChatAdministrators.tsx","webpack://telegram-t/./src/components/right/management/ManageChatPrivacyType.tsx","webpack://telegram-t/./src/components/right/management/RemoveGroupUserModal.tsx","webpack://telegram-t/./src/components/right/management/ManageChatRemovedUsers.tsx","webpack://telegram-t/./src/components/right/management/ManageDiscussion.tsx","webpack://telegram-t/./src/components/right/management/ManageGroup.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupAdminRights.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupMembers.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissions.tsx","webpack://telegram-t/./src/components/right/management/ManageGroupUserPermissionsCreate.tsx","webpack://telegram-t/./src/components/right/management/ManageInvite.tsx","webpack://telegram-t/./src/components/right/management/ManageInviteInfo.tsx","webpack://telegram-t/./src/components/right/management/ManageInvites.tsx","webpack://telegram-t/./src/components/right/management/JoinRequest.tsx","webpack://telegram-t/./src/components/right/management/ManageJoinRequests.tsx","webpack://telegram-t/./src/components/right/management/ManageReactions.tsx","webpack://telegram-t/./src/components/right/management/ManageUser.tsx","webpack://telegram-t/./src/components/right/management/Management.tsx","webpack://telegram-t/./src/components/common/helpers/detectCardType.ts","webpack://telegram-t/./src/hooks/reducers/usePaymentReducer.ts","webpack://telegram-t/./src/components/payment/Checkout.module.scss?4e47","webpack://telegram-t/./src/components/payment/Checkout.tsx","webpack://telegram-t/./src/components/payment/ConfirmPayment.tsx","webpack://telegram-t/./src/components/payment/PasswordConfirm.tsx","webpack://telegram-t/./src/hooks/useFocusAfterAnimation.ts","webpack://telegram-t/./src/components/payment/CardInput.tsx","webpack://telegram-t/./src/components/middle/helpers/inputFormatters.ts","webpack://telegram-t/./src/components/payment/ExpiryInput.tsx","webpack://telegram-t/./src/components/payment/PaymentInfo.tsx","webpack://telegram-t/./src/components/payment/SavedPaymentCredentials.tsx","webpack://telegram-t/./src/components/payment/Shipping.tsx","webpack://telegram-t/./src/components/payment/ShippingInfo.tsx","webpack://telegram-t/./src/components/payment/PaymentModal.tsx","webpack://telegram-t/./src/components/payment/ReceiptModal.tsx","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.module.scss?717b","webpack://telegram-t/./src/components/modals/inviteViaLink/InviteViaLinkModal.tsx","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.module.scss?de6c","webpack://telegram-t/./src/components/modals/oneTimeMedia/OneTimeMediaModal.tsx","webpack://telegram-t/./src/components/main/WebAppsCloseConfirmationModal.tsx","webpack://telegram-t/./src/components/common/PasswordMonkey.tsx","webpack://telegram-t/./src/components/common/PeerBadge.module.scss?732c","webpack://telegram-t/./src/components/common/PeerBadge.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.tsx","webpack://telegram-t/./src/components/common/pickers/PickerModal.module.scss?7af2","webpack://telegram-t/./src/components/modals/common/TableAboutModal.module.scss?0459","webpack://telegram-t/./src/components/modals/common/TableAboutModal.tsx","webpack://telegram-t/./src/components/modals/common/TableInfoModal.module.scss?4f33","webpack://telegram-t/./src/components/modals/common/TableInfoModal.tsx","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.module.scss?22c9","webpack://telegram-t/./src/components/modals/stars/StarTopupOptionList.tsx"],"sourcesContent":["import type {\n  ApiMessage, ApiPeer, ApiPeerPhotos, ApiSponsoredMessage,\n} from '../../../api/types';\nimport type { MediaViewerMedia } from '../../../types';\n\nimport { getMessageContent, isDocumentPhoto, isDocumentVideo } from '../../../global/helpers';\n\nexport type MediaViewerItem = {\n  type: 'message';\n  message: ApiMessage;\n  mediaIndex?: number;\n} | {\n  type: 'avatar';\n  avatarOwner: ApiPeer;\n  profilePhotos: ApiPeerPhotos;\n  mediaIndex: number;\n} | {\n  type: 'standalone';\n  media: MediaViewerMedia[];\n  mediaIndex: number;\n} | {\n  type: 'sponsoredMessage';\n  message: ApiSponsoredMessage;\n  mediaIndex?: number;\n};\n\ntype ViewableMedia = {\n  media: MediaViewerMedia;\n  isSingle?: boolean;\n};\n\nexport function getMediaViewerItem({\n  message, avatarOwner, profilePhotos, standaloneMedia, mediaIndex, sponsoredMessage,\n}: {\n  message?: ApiMessage;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  standaloneMedia?: MediaViewerMedia[];\n  sponsoredMessage?: ApiSponsoredMessage;\n  mediaIndex?: number;\n}): MediaViewerItem | undefined {\n  if (avatarOwner && profilePhotos) {\n    return {\n      type: 'avatar',\n      avatarOwner,\n      profilePhotos,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (standaloneMedia) {\n    return {\n      type: 'standalone',\n      media: standaloneMedia!,\n      mediaIndex: mediaIndex!,\n    };\n  }\n\n  if (message) {\n    return {\n      type: 'message',\n      message,\n      mediaIndex,\n    };\n  }\n\n  if (sponsoredMessage) {\n    return {\n      type: 'sponsoredMessage',\n      message: sponsoredMessage,\n      mediaIndex,\n    };\n  }\n\n  return undefined;\n}\n\nexport default function getViewableMedia(params?: MediaViewerItem): ViewableMedia | undefined {\n  if (!params) return undefined;\n\n  if (params.type === 'standalone') {\n    return {\n      media: params.media[params.mediaIndex],\n      isSingle: params.media.length === 1,\n    };\n  }\n\n  if (params.type === 'avatar') {\n    const avatar = params.profilePhotos?.photos[params.mediaIndex];\n    if (avatar) {\n      return {\n        media: avatar,\n      };\n    }\n    return undefined;\n  }\n\n  const {\n    action, document, photo, video, webPage, paidMedia,\n  } = getMessageContent(params.message);\n\n  if (action?.type === 'chatEditPhoto' || action?.type === 'suggestProfilePhoto') {\n    return {\n      media: action.photo!,\n      isSingle: true,\n    };\n  }\n\n  if (document && (isDocumentPhoto(document) || isDocumentVideo(document))) {\n    return {\n      media: document,\n    };\n  }\n\n  if (webPage) {\n    const { photo: webPagePhoto, video: webPageVideo, document: webPageDocument } = webPage;\n    const isDocumentMedia = webPageDocument && (isDocumentPhoto(webPageDocument) || isDocumentVideo(webPageDocument));\n    const mediaDocument = isDocumentMedia ? webPageDocument : undefined;\n    const media = webPageVideo || mediaDocument || webPagePhoto;\n    if (media) {\n      return {\n        media,\n        isSingle: true,\n      };\n    }\n  }\n\n  if (paidMedia) {\n    const extendedMedia = paidMedia.extendedMedia[params.mediaIndex || 0];\n    if (!('mediaType' in extendedMedia)) {\n      const { photo: extendedPhoto, video: extendedVideo } = extendedMedia;\n      return {\n        media: (extendedPhoto || extendedVideo)!,\n      };\n    }\n  }\n\n  const media = video || photo;\n\n  if (media) {\n    return {\n      media,\n      isSingle: video?.isGif,\n    };\n  }\n\n  return undefined;\n}\n","import type { ApiDimensions, ApiMessage } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY, MESSAGE_CONTENT_SELECTOR } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getMessageHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport getOffsetToContainer from '../../../util/visibility/getOffsetToContainer';\nimport { isElementInViewport } from '../../../util/visibility/isElementInViewport';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport {\n  calculateDimensions,\n  getMediaViewerAvailableDimensions,\n  MEDIA_VIEWER_MEDIA_QUERY,\n  REM,\n} from '../../common/helpers/mediaDimensions';\n\nconst ANIMATION_DURATION = 200;\n\nexport function animateOpening(\n  hasFooter: boolean,\n  origin: MediaViewerOrigin,\n  bestImageData: string,\n  dimensions: ApiDimensions,\n  isVideo: boolean,\n  message?: ApiMessage,\n  mediaIndex?: number,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, message, mediaIndex);\n  if (!fromImage) {\n    return;\n  }\n\n  const { width: windowWidth } = windowSize.get();\n  const {\n    width: availableWidth, height: availableHeight,\n  } = getMediaViewerAvailableDimensions(hasFooter, isVideo);\n  const { width: toWidth, height: toHeight } = calculateDimensions(\n    availableWidth, availableHeight, dimensions.width, dimensions.height,\n  );\n  const toLeft = (windowWidth - toWidth) / 2;\n  const toTop = getTopOffset(hasFooter) + (availableHeight - toHeight) / 2;\n\n  let {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    const uncovered = uncover(toWidth, toHeight, fromTop, fromLeft, fromWidth, fromHeight);\n    fromTop = uncovered.top;\n    fromLeft = uncovered.left;\n    fromWidth = uncovered.width;\n    fromHeight = uncovered.height;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || fromImage);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n    applyShape(ghost, origin);\n\n    document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      ghost.style.transform = '';\n      clearShape(ghost);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  origin: MediaViewerOrigin, bestImageData: string, message?: ApiMessage, mediaIndex?: number,\n) {\n  const { container, mediaEl: toImage } = getNodes(origin, message, mediaIndex);\n  if (!toImage) {\n    return;\n  }\n\n  const fromImage = document.getElementById('MediaViewer')!.querySelector<HTMLImageElement>(\n    '.MediaViewerSlide--active img, .MediaViewerSlide--active video',\n  );\n  if (!fromImage) {\n    return;\n  }\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: targetTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  let toTop = targetTop;\n  if (!isElementInViewport(container)) {\n    const { height: windowHeight } = windowSize.get();\n    toTop = targetTop < fromTop ? -toHeight : windowHeight;\n  }\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  let fromScaleX = fromWidth / toWidth;\n  let fromScaleY = fromHeight / toHeight;\n\n  const shouldFadeOut = (\n    [\n      MediaViewerOrigin.Inline,\n      MediaViewerOrigin.ScheduledInline,\n      MediaViewerOrigin.Album,\n      MediaViewerOrigin.ScheduledAlbum,\n    ].includes(origin)\n    && !isMessageImageFullyVisible(toImage)\n  );\n\n  if ([\n    MediaViewerOrigin.SharedMedia,\n    MediaViewerOrigin.Album,\n    MediaViewerOrigin.ScheduledAlbum,\n    MediaViewerOrigin.SearchResult,\n  ].includes(origin)) {\n    if (fromScaleX > fromScaleY) {\n      fromScaleX = fromScaleY;\n    } else if (fromScaleY > fromScaleX) {\n      fromScaleY = fromScaleX;\n    }\n  }\n\n  const existingGhost = document.getElementsByClassName('ghost')[0] as HTMLDivElement;\n  const ghost = existingGhost || createGhost(bestImageData || toImage, origin);\n\n  let styles: Record<string, string>;\n  if (existingGhost) {\n    const {\n      top, left, width, height,\n    } = existingGhost.getBoundingClientRect();\n    const scaleX = width / toWidth;\n    const scaleY = height / toHeight;\n\n    styles = {\n      transition: 'none',\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      transformOrigin: 'top left',\n      transform: `translate3d(${left - toLeft}px, ${top - toTop}px, 0) scale(${scaleX}, ${scaleY})`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n    };\n  } else {\n    styles = {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    };\n  }\n\n  requestMutation(() => {\n    applyStyles(ghost, styles);\n    if (!existingGhost) document.body.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      if (existingGhost) {\n        existingGhost.style.transition = '';\n      }\n\n      ghost.style.transform = '';\n\n      if (shouldFadeOut) {\n        ghost.style.opacity = '0';\n      }\n\n      applyShape(ghost, origin);\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (document.body.contains(ghost)) {\n            document.body.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nfunction createGhost(source: string | HTMLImageElement | HTMLVideoElement, origin?: MediaViewerOrigin) {\n  const ghost = document.createElement('div');\n  ghost.classList.add('ghost');\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n\n  if (typeof source === 'string') {\n    img.src = source;\n  } else if (source instanceof HTMLVideoElement) {\n    img.src = source.poster;\n  } else {\n    img.src = source.src;\n  }\n\n  ghost.appendChild(img);\n\n  if (origin === MediaViewerOrigin.ProfileAvatar || origin === MediaViewerOrigin.SettingsAvatar) {\n    ghost.classList.add('ProfileInfo');\n    if (origin === MediaViewerOrigin.SettingsAvatar) {\n      ghost.classList.add('self');\n    }\n    const profileInfo = document.querySelector(\n      origin === MediaViewerOrigin.ProfileAvatar\n        ? '#RightColumn .ProfileInfo .info'\n        : '#Settings .ProfileInfo .info',\n    );\n    if (profileInfo) {\n      ghost.appendChild(profileInfo.cloneNode(true));\n    }\n  }\n\n  return ghost;\n}\n\nfunction uncover(realWidth: number, realHeight: number, top: number, left: number, width: number, height: number) {\n  if (realWidth === realHeight) {\n    const size = Math.max(width, height) * (realWidth / realHeight);\n    left -= (size - width) / 2;\n    top -= (size - height) / 2;\n    width = size;\n    height = size;\n  } else if (realWidth > realHeight) {\n    const srcWidth = width;\n    width = height * (realWidth / realHeight);\n    left -= (width - srcWidth) / 2;\n  } else if (realHeight > realWidth) {\n    const srcHeight = height;\n    height = width * (realHeight / realWidth);\n    top -= (height - srcHeight) / 2;\n  }\n\n  return {\n    top, left, width, height,\n  };\n}\n\nfunction isMessageImageFullyVisible(imageEl: HTMLElement) {\n  const messageListElement = document.querySelector<HTMLDivElement>('.Transition_slide-active > .MessageList')!;\n\n  const { top } = getOffsetToContainer(imageEl, messageListElement);\n\n  return top > messageListElement.scrollTop\n    && top + imageEl.offsetHeight < messageListElement.scrollTop + messageListElement.offsetHeight;\n}\n\nfunction getTopOffset(hasFooter: boolean) {\n  const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n  let topOffsetRem = 4.125;\n  if (hasFooter && !IS_TOUCH_ENV) {\n    topOffsetRem += mql.matches ? 0.875 : 2.125;\n  }\n\n  return topOffsetRem * REM;\n}\n\nfunction getNodes(origin: MediaViewerOrigin, message?: ApiMessage, index?: number) {\n  let containerSelector;\n  let mediaSelector;\n\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n      // eslint-disable-next-line max-len\n      containerSelector = `.Transition_slide-active > .MessageList #album-media-${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.full-media';\n      break;\n\n    case MediaViewerOrigin.PreviewMedia:\n      containerSelector = `#preview-media${index}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n      containerSelector = `#shared-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.SearchResult:\n      containerSelector = `#search-media${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = 'img';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo .Avatar';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.SettingsAvatar:\n      containerSelector = '#Settings .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ProfileAvatar:\n      containerSelector = '#RightColumn .ProfileInfo .Transition_slide-active .ProfilePhoto';\n      mediaSelector = '.avatar-media';\n      break;\n\n    case MediaViewerOrigin.ChannelAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = '.Avatar img';\n      break;\n\n    case MediaViewerOrigin.StarsTransaction:\n      containerSelector = '.transaction-media-preview';\n      mediaSelector = index === 0 ? `.stars-transaction-media-${index} :is(img, video)` : undefined;\n      break;\n\n    case MediaViewerOrigin.SponsoredMessage:\n      containerSelector = '.Transition_slide-active > .MessageList .sponsored-media-preview';\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n      break;\n\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.Inline:\n    default:\n      containerSelector = `.Transition_slide-active > .MessageList #${getMessageHtmlId(message!.id, index)}`;\n      mediaSelector = `${MESSAGE_CONTENT_SELECTOR} .full-media,${MESSAGE_CONTENT_SELECTOR} .thumbnail:not(.blurred-bg)`;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = mediaSelector\n    ? container?.querySelectorAll<HTMLImageElement | HTMLVideoElement>(mediaSelector) : undefined;\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n\nfunction applyShape(ghost: HTMLDivElement, origin: MediaViewerOrigin) {\n  switch (origin) {\n    case MediaViewerOrigin.Album:\n    case MediaViewerOrigin.ScheduledAlbum:\n    case MediaViewerOrigin.Inline:\n    case MediaViewerOrigin.ScheduledInline:\n    case MediaViewerOrigin.StarsTransaction:\n    case MediaViewerOrigin.PreviewMedia:\n    case MediaViewerOrigin.ChannelAvatar:\n      ghost.classList.add('rounded-corners');\n      break;\n\n    case MediaViewerOrigin.SharedMedia:\n    case MediaViewerOrigin.SettingsAvatar:\n    case MediaViewerOrigin.ProfileAvatar:\n    case MediaViewerOrigin.SearchResult:\n      (ghost.firstChild as HTMLElement).style.objectFit = 'cover';\n      break;\n\n    case MediaViewerOrigin.MiddleHeaderAvatar:\n    case MediaViewerOrigin.SuggestedAvatar:\n      ghost.classList.add('circle');\n      if (origin === MediaViewerOrigin.SuggestedAvatar) {\n        ghost.classList.add('transition-circle');\n      }\n      break;\n  }\n}\n\nfunction clearShape(ghost: HTMLDivElement) {\n  (ghost.firstChild as HTMLElement).style.objectFit = 'default';\n  ghost.classList.remove('rounded-corners', 'circle');\n}\n","import { useCallback, useLayoutEffect, useState } from '../lib/teact/teact';\n\nimport { DEBUG } from '../config';\nimport safePlay, { getIsVideoPlaying } from '../util/safePlay';\nimport { createSignal } from '../util/signals';\nimport { IS_IOS, IS_PWA } from '../util/windowEnvironment';\n\ntype RefType = {\n  current: HTMLVideoElement | null;\n};\n\ntype ReturnType = [boolean, () => void, boolean] | [false];\ntype CallbackType = () => void;\n\nconst signal = createSignal(false);\nconst setIsPictureInPicture = signal[1];\n\nexport function usePictureInPictureSignal() {\n  return signal;\n}\n\nexport default function usePictureInPicture(\n  elRef: RefType,\n  onEnter: CallbackType,\n  onLeave: CallbackType,\n): ReturnType {\n  const [isSupported, setIsSupported] = useState(false);\n  const [isActive, setIsActive] = useState(false);\n\n  useLayoutEffect(() => {\n    // PIP is not supported in PWA on iOS, despite being detected\n    if ((IS_IOS && IS_PWA) || !elRef.current) return undefined;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    const isEnabled = (document.pictureInPictureEnabled && !elRef.current?.disablePictureInPicture)\n      || setMode !== undefined;\n    if (!isEnabled) return undefined;\n    // @ts-ignore\n    video.autoPictureInPicture = true;\n    setIsSupported(true);\n    const onEnterInternal = () => {\n      onEnter();\n      setIsActive(true);\n      setIsPictureInPicture(true);\n    };\n    const onLeaveInternal = () => {\n      setIsPictureInPicture(false);\n      setIsActive(false);\n      onLeave();\n    };\n    video.addEventListener('enterpictureinpicture', onEnterInternal);\n    video.addEventListener('leavepictureinpicture', onLeaveInternal);\n    return () => {\n      video.removeEventListener('enterpictureinpicture', onEnterInternal);\n      video.removeEventListener('leavepictureinpicture', onLeaveInternal);\n    };\n  }, [elRef, onEnter, onLeave]);\n\n  const exitPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    const video = elRef.current;\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('inline');\n    } else {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [elRef]);\n\n  const enterPictureInPicture = useCallback(() => {\n    if (!elRef.current) return;\n    exitPictureInPicture();\n    const video = elRef.current;\n    const isPlaying = getIsVideoPlaying(video);\n    const setMode = getSetPresentationMode(video);\n    if (setMode) {\n      setMode('picture-in-picture');\n    } else {\n      requestPictureInPicture(video);\n    }\n    // Muted video stops in PiP mode, so we need to play it again\n    if (isPlaying) {\n      safePlay(video);\n    }\n  }, [elRef, exitPictureInPicture]);\n\n  if (!isSupported) {\n    return [false];\n  }\n\n  return [isSupported, enterPictureInPicture, isActive];\n}\n\nfunction getSetPresentationMode(video: HTMLVideoElement) {\n  // @ts-ignore\n  if (video.webkitSupportsPresentationMode && typeof video.webkitSetPresentationMode === 'function') {\n    // @ts-ignore\n    return video.webkitSetPresentationMode.bind(video);\n  }\n  return undefined;\n}\n\nfunction requestPictureInPicture(video: HTMLVideoElement) {\n  if (video.requestPictureInPicture) {\n    try {\n      video.requestPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n\nexport function exitPictureInPictureIfNeeded() {\n  if (document.pictureInPictureElement) {\n    try {\n      document.exitPictureInPicture();\n    } catch (err) {\n      if (DEBUG) {\n        // eslint-disable-next-line no-console\n        console.log('[MV] PictureInPicture Error', err);\n      }\n    }\n  }\n}\n","import { useEffect, useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useForceUpdate from './useForceUpdate';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\nconst MAX_CACHE_SIZE = 1000;\n\nconst cache = new Map<string, string>();\n\nexport default function useBlur(dataUri?: string, isDisabled = false, delay?: number) {\n  const blurredRef = useRef<string | undefined>(dataUri ? cache.get(dataUri) : undefined);\n  const timeoutRef = useRef<number>();\n  const forceUpdate = useForceUpdate();\n\n  if (timeoutRef.current && isDisabled) {\n    clearTimeout(timeoutRef.current);\n    timeoutRef.current = undefined;\n  }\n\n  useEffect(() => {\n    if (!dataUri || blurredRef.current || isDisabled) {\n      return;\n    }\n\n    const img = new Image();\n\n    img.onload = () => {\n      const canvas = imgToCanvas(img);\n      fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n      const blurredDataUri = canvas.toDataURL();\n\n      blurredRef.current = blurredDataUri;\n      forceUpdate();\n\n      if (cache.size >= MAX_CACHE_SIZE) {\n        cache.clear();\n      }\n      cache.set(dataUri, blurredDataUri);\n    };\n\n    if (delay) {\n      timeoutRef.current = window.setTimeout(() => {\n        img.src = dataUri;\n      }, delay);\n    } else {\n      img.src = dataUri;\n    }\n  }, [dataUri, delay, forceUpdate, isDisabled]);\n\n  return blurredRef.current;\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport type { MediaViewerMedia } from '../../../types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { MediaViewerOrigin } from '../../../types';\n\nimport {\n  getMediaFileSize,\n  getMediaFormat,\n  getMediaHash,\n  getMediaThumbUri,\n  getPhotoFullDimensions,\n  getProfilePhotoMediaHash,\n  getVideoDimensions,\n  getVideoProfilePhotoMediaHash,\n  isDocumentPhoto,\n  isDocumentVideo,\n} from '../../../global/helpers';\nimport { AVATAR_FULL_DIMENSIONS, VIDEO_AVATAR_FULL_DIMENSIONS } from '../../common/helpers/mediaDimensions';\n\nimport useBlurSync from '../../../hooks/useBlurSync';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\n\nconst FALLBACK_DIMENSIONS = AVATAR_FULL_DIMENSIONS;\n\ntype UseMediaProps = {\n  media?: MediaViewerMedia;\n  isAvatar?: boolean;\n  origin?: MediaViewerOrigin;\n  delay: number | false;\n};\n\nexport const useMediaProps = ({\n  media,\n  isAvatar,\n  origin,\n  delay,\n}: UseMediaProps) => {\n  const isPhotoAvatar = isAvatar && media?.mediaType === 'photo' && !media.isVideo;\n  const isVideoAvatar = isAvatar && media?.mediaType === 'photo' && media.isVideo;\n  const isDocument = media?.mediaType === 'document';\n  const isVideo = (media?.mediaType === 'video' && !media.isRound) || (isDocument && isDocumentVideo(media));\n  const isPhoto = media?.mediaType === 'photo' || (isDocument && isDocumentPhoto(media));\n  const isGif = media?.mediaType === 'video' && media.isGif;\n  const isFromSharedMedia = origin === MediaViewerOrigin.SharedMedia;\n  const isFromSearch = origin === MediaViewerOrigin.SearchResult;\n\n  const getMediaOrAvatarHash = useMemo(() => (isFull?: boolean) => {\n    if (!media) return undefined;\n\n    if ((isPhotoAvatar || isVideoAvatar) && !isFull) {\n      return getProfilePhotoMediaHash(media);\n    }\n\n    if (isVideoAvatar && isFull) {\n      return getVideoProfilePhotoMediaHash(media);\n    }\n\n    return getMediaHash(media, isFull ? 'full' : 'preview');\n  }, [isVideoAvatar, isPhotoAvatar, media]);\n\n  const pictogramBlobUrl = useMedia(\n    media\n    // Only use pictogram if it's already loaded\n    && (isFromSharedMedia || isFromSearch || isDocument)\n    && getMediaHash(media, 'pictogram'),\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const previewMediaHash = getMediaOrAvatarHash();\n  const previewBlobUrl = useMedia(\n    previewMediaHash,\n    undefined,\n    ApiMediaFormat.BlobUrl,\n    delay,\n  );\n  const {\n    mediaData: fullMediaBlobUrl,\n    loadProgress,\n  } = useMediaWithLoadProgress(\n    getMediaOrAvatarHash(true),\n    undefined,\n    media && getMediaFormat(media, 'full'),\n    delay,\n  );\n\n  const localBlobUrl = media && 'blobUrl' in media ? media.blobUrl : undefined;\n  let bestImageData = (!isVideo && (localBlobUrl || fullMediaBlobUrl)) || previewBlobUrl || pictogramBlobUrl;\n  const thumbDataUri = useBlurSync(!bestImageData && media && getMediaThumbUri(media));\n  if (!bestImageData && origin !== MediaViewerOrigin.SearchResult) {\n    bestImageData = thumbDataUri;\n  }\n  if (isVideoAvatar && previewBlobUrl) {\n    bestImageData = previewBlobUrl;\n  }\n  const bestData = localBlobUrl || fullMediaBlobUrl || (\n    (!isVideoAvatar && !isVideo) ? (previewBlobUrl || pictogramBlobUrl || bestImageData) : undefined\n  );\n\n  const mediaSize = media && getMediaFileSize(media);\n\n  const isLocal = Boolean(localBlobUrl);\n\n  const dimensions = useMemo(() => {\n    if (isAvatar) {\n      return isVideoAvatar ? VIDEO_AVATAR_FULL_DIMENSIONS : AVATAR_FULL_DIMENSIONS;\n    }\n\n    if (isDocument) {\n      return media.mediaSize!;\n    }\n\n    if (isPhoto) {\n      return getPhotoFullDimensions(media);\n    }\n\n    if (isVideo) {\n      return getVideoDimensions(media);\n    }\n\n    return FALLBACK_DIMENSIONS;\n  }, [isAvatar, isDocument, isPhoto, isVideo, isVideoAvatar, media]);\n\n  return {\n    getMediaHash: getMediaOrAvatarHash,\n    media,\n    isVideo,\n    isPhoto,\n    isGif,\n    isDocument,\n    bestImageData,\n    bestData,\n    dimensions,\n    isFromSharedMedia,\n    isVideoAvatar,\n    isLocal,\n    loadProgress,\n    mediaSize,\n  };\n};\n","import { useRef } from '../lib/teact/teact';\n\nimport fastBlur from '../lib/fastBlur';\nimport { imgToCanvas } from '../util/files';\nimport useBlur from './useBlur';\nimport useSyncEffect from './useSyncEffect';\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nexport default function useBlurSync(dataUri: string | false | undefined) {\n  const blurredRef = useRef<string>();\n\n  let isChanged = false;\n\n  useSyncEffect(() => {\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    isChanged = true;\n\n    blurredRef.current = undefined;\n\n    if (!dataUri) {\n      return;\n    }\n\n    const img = new Image();\n    img.src = dataUri;\n    if (!img.width) {\n      return;\n    }\n\n    const canvas = imgToCanvas(img);\n    fastBlur(canvas.getContext('2d'), 0, 0, canvas.width, canvas.height, RADIUS, ITERATIONS);\n\n    blurredRef.current = canvas.toDataURL();\n  }, [dataUri]);\n\n  // Sometimes `Image` do not manage to load synchronously,\n  // so we fall back the non-blurred variant and prepare the async one at least for the next time\n  const blurredAsync = useBlur(dataUri || undefined, Boolean(blurredRef.current));\n\n  return blurredRef.current || (!isChanged && blurredAsync) || dataUri || undefined;\n}\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto, ApiReportReason } from '../../api/types';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  peerId?: string;\n  photo?: ApiPhoto;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nconst ReportAvatarModal: FC<OwnProps> = ({\n  isOpen,\n  peerId,\n  photo,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { reportProfilePhoto } = getActions();\n\n  const [selectedReason, setSelectedReason] = useState<ApiReportReason>('spam');\n  const [description, setDescription] = useState('');\n\n  const handleReport = useLastCallback(() => {\n    reportProfilePhoto({\n      chatId: peerId, photo, reason: selectedReason, description,\n    });\n    onClose();\n  });\n\n  const handleSelectReason = useLastCallback((value: string) => {\n    setSelectedReason(value as ApiReportReason);\n  });\n\n  const handleDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setDescription(e.target.value);\n  });\n\n  const lang = useOldLang();\n\n  const REPORT_OPTIONS: { value: ApiReportReason; label: string }[] = useMemo(() => [\n    { value: 'spam', label: lang('lng_report_reason_spam') },\n    { value: 'violence', label: lang('lng_report_reason_violence') },\n    { value: 'pornography', label: lang('lng_report_reason_pornography') },\n    { value: 'childAbuse', label: lang('lng_report_reason_child_abuse') },\n    { value: 'copyright', label: lang('ReportPeer.ReasonCopyright') },\n    { value: 'illegalDrugs', label: 'Illegal Drugs' },\n    { value: 'personalDetails', label: 'Personal Details' },\n    { value: 'other', label: lang('lng_report_reason_other') },\n  ], [lang]);\n\n  if (!peerId || !photo) {\n    return undefined;\n  }\n\n  const title = lang('ReportPeer.Report');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={isOpen ? handleReport : undefined}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      className=\"narrow\"\n      title={title}\n    >\n      <RadioGroup\n        className=\"dialog-checkbox-group\"\n        name=\"report-message\"\n        options={REPORT_OPTIONS}\n        onChange={handleSelectReason}\n        selected={selectedReason}\n      />\n      <InputText\n        label={lang('lng_report_reason_description')}\n        value={description}\n        onChange={handleDescriptionChange}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleReport}>\n          {lang('lng_report_button')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAvatarModal);\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nconst [getZoomChange, setZoomChange] = createSignal(1);\n\nexport default function useZoomChange() {\n  useUnmountCleanup(() => {\n    setZoomChange(1);\n  });\n\n  return [getZoomChange, setZoomChange] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiPhoto } from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  photo: ApiPhoto;\n  profileId: string;\n  onConfirm?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\nconst DeleteProfilePhotoModal: FC<OwnProps> = ({\n  isOpen,\n  photo,\n  profileId,\n  onClose,\n  onConfirm,\n}) => {\n  const {\n    deleteProfilePhoto,\n    deleteChatPhoto,\n  } = getActions();\n\n  const handleDeletePhoto = useCallback(() => {\n    onConfirm?.();\n    if (isUserId(profileId)) {\n      deleteProfilePhoto({ photo });\n    } else {\n      deleteChatPhoto({\n        photo,\n        chatId: profileId,\n      });\n    }\n    onClose();\n  }, [onConfirm, profileId, onClose, deleteProfilePhoto, photo, deleteChatPhoto]);\n\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleDeletePhoto}\n      className=\"delete dialog-buttons-column\"\n      title={lang('AreYouSure')}\n    >\n      <div className=\"dialog-buttons mt-2\">\n        <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeletePhoto}>\n          {lang('Preview.DeletePhoto')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(DeleteProfilePhotoModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { ActiveDownloads, MediaViewerOrigin, MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { MenuItemProps } from '../ui/MenuItem';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  getIsDownloading,\n  getMediaFilename,\n  getMediaFormat,\n  getMediaHash,\n  isUserId,\n} from '../../global/helpers';\nimport {\n  selectActiveDownloads,\n  selectAllowedMessageActionsSlow, selectCurrentChat,\n  selectCurrentMessageList,\n  selectIsChatProtected,\n  selectIsMessageProtected,\n  selectTabState,\n} from '../../global/selectors';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaWithLoadProgress from '../../hooks/useMediaWithLoadProgress';\nimport useOldLang from '../../hooks/useOldLang';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport DeleteProfilePhotoModal from '../common/DeleteProfilePhotoModal';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ProgressSpinner from '../ui/ProgressSpinner';\n\nimport './MediaViewerActions.scss';\n\ntype StateProps = {\n  activeDownloads: ActiveDownloads;\n  isProtected?: boolean;\n  isChatProtected?: boolean;\n  canDelete?: boolean;\n  chat?: ApiChat;\n  canUpdate?: boolean;\n  messageListType?: MessageListType;\n  origin?: MediaViewerOrigin;\n};\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  mediaData?: string;\n  isVideo: boolean;\n  canUpdateMedia?: boolean;\n  canReportAvatar?: boolean;\n  activeDownloads?: ActiveDownloads;\n  onReportAvatar: NoneToVoidFunction;\n  onBeforeDelete: NoneToVoidFunction;\n  onCloseMediaViewer: NoneToVoidFunction;\n  onForward: NoneToVoidFunction;\n};\n\nconst MediaViewerActions: FC<OwnProps & StateProps> = ({\n  item,\n  mediaData,\n  isVideo,\n  chat,\n  isChatProtected,\n  isProtected,\n  canReportAvatar,\n  canDelete,\n  canUpdate,\n  messageListType,\n  activeDownloads,\n  origin,\n  onReportAvatar: onReport,\n  onCloseMediaViewer,\n  onBeforeDelete,\n  onForward,\n}) => {\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n  const [getZoomChange, setZoomChange] = useZoomChange();\n  const { isMobile } = useAppLayout();\n\n  const {\n    downloadMedia,\n    cancelMediaDownload,\n    updateProfilePhoto,\n    updateChatPhoto,\n    openMediaViewer,\n    openDeleteMessageModal,\n  } = getActions();\n\n  const isMessage = item?.type === 'message';\n\n  const { media } = getViewableMedia(item) || {};\n  const fileName = media && getMediaFilename(media);\n  const isDownloading = media && getIsDownloading(activeDownloads, media);\n\n  const { loadProgress: downloadProgress } = useMediaWithLoadProgress(\n    media && getMediaHash(media, 'download'),\n    !isDownloading,\n    media && getMediaFormat(media, 'download'),\n  );\n\n  const handleDownloadClick = useLastCallback(() => {\n    if (!media) return;\n\n    if (isDownloading) {\n      cancelMediaDownload({ media });\n    } else {\n      const message = item?.type === 'message' ? item.message : undefined;\n      downloadMedia({ media, originMessage: message });\n    }\n  });\n\n  const handleZoomOut = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange < 0 ? zoomChange : 0;\n    setZoomChange(change - 1);\n  });\n\n  const handleZoomIn = useLastCallback(() => {\n    const zoomChange = getZoomChange();\n    const change = zoomChange > 0 ? zoomChange : 0;\n    setZoomChange(change + 1);\n  });\n\n  const handleUpdate = useLastCallback(() => {\n    if (item?.type !== 'avatar') return;\n    const { avatarOwner, profilePhotos, mediaIndex } = item;\n    const avatarPhoto = profilePhotos?.photos[mediaIndex]!;\n    if (isUserId(avatarOwner.id)) {\n      updateProfilePhoto({ photo: avatarPhoto });\n    } else {\n      updateChatPhoto({ chatId: avatarOwner.id, photo: avatarPhoto });\n    }\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: avatarOwner.id,\n      mediaIndex: 0,\n      isAvatarView: true,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const lang = useOldLang();\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : undefined}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, []);\n\n  function renderDeleteModal() {\n    return (item?.type === 'avatar') ? (\n      <DeleteProfilePhotoModal\n        isOpen={isDeleteModalOpen}\n        onClose={closeDeleteModal}\n        onConfirm={onBeforeDelete}\n        profileId={item.avatarOwner.id}\n        photo={item.profilePhotos.photos[item.mediaIndex!]}\n      />\n    ) : undefined;\n  }\n\n  function renderDownloadButton() {\n    if (isProtected || item?.type === 'standalone') {\n      return undefined;\n    }\n\n    return item?.type !== 'sponsoredMessage' && (isVideo ? (\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n        onClick={handleDownloadClick}\n      >\n        {isDownloading ? (\n          <ProgressSpinner progress={downloadProgress} size=\"s\" onClick={handleDownloadClick} />\n        ) : (\n          <Icon name=\"download\" />\n        )}\n      </Button>\n    ) : (\n      <Button\n        href={mediaData}\n        download={fileName}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('AccActionDownload')}\n      >\n        <Icon name=\"download\" />\n      </Button>\n    ));\n  }\n\n  const openDeleteModalHandler = useLastCallback(() => {\n    if (item?.type === 'message' && chat) {\n      openDeleteMessageModal({\n        chatId: chat?.id,\n        messageIds: [item.message.id],\n        isSchedule: messageListType === 'scheduled',\n        onConfirm: onBeforeDelete,\n      });\n    } else {\n      openDeleteModal();\n    }\n  });\n\n  if (isMobile) {\n    const menuItems: MenuItemProps[] = [];\n    if (isMessage && item.message.isForwardingAllowed && !item.message.content.action && !isChatProtected) {\n      menuItems.push({\n        icon: 'forward',\n        onClick: onForward,\n        children: lang('Forward'),\n      });\n    }\n    if (!isProtected) {\n      if (isVideo) {\n        menuItems.push({\n          icon: isDownloading ? 'close' : 'download',\n          onClick: handleDownloadClick,\n          children: isDownloading ? `${Math.round(downloadProgress * 100)}% Downloading...` : 'Download',\n        });\n      } else {\n        menuItems.push({\n          icon: 'download',\n          href: mediaData,\n          download: fileName,\n          children: lang('AccActionDownload'),\n        });\n      }\n    }\n\n    if (canReportAvatar) {\n      menuItems.push({\n        icon: 'flag',\n        onClick: onReport,\n        children: lang('ReportPeer.Report'),\n      });\n    }\n\n    if (canUpdate) {\n      menuItems.push({\n        icon: 'copy-media',\n        onClick: handleUpdate,\n        children: lang('ProfilePhoto.SetMainPhoto'),\n      });\n    }\n\n    if (canDelete) {\n      menuItems.push({\n        icon: 'delete',\n        onClick: openDeleteModalHandler,\n        children: lang('Delete'),\n        destructive: true,\n      });\n    }\n\n    if (menuItems.length === 0) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"MediaViewerActions-mobile\">\n        <DropdownMenu\n          trigger={MenuButton}\n          positionX=\"right\"\n        >\n          {menuItems.map(({\n            icon, onClick, href, download, children, destructive,\n          }) => (\n            <MenuItem\n              key={icon}\n              icon={icon as IconName}\n              href={href}\n              download={download}\n              onClick={onClick}\n              destructive={destructive}\n            >\n              {children}\n            </MenuItem>\n          ))}\n        </DropdownMenu>\n        {isDownloading && <ProgressSpinner progress={downloadProgress} size=\"s\" noCross />}\n        {canDelete && renderDeleteModal()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"MediaViewerActions\">\n      {isMessage && item.message.isForwardingAllowed && !isChatProtected && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Forward')}\n          onClick={onForward}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {renderDownloadButton()}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomOut')}\n        onClick={handleZoomOut}\n      >\n        <Icon name=\"zoom-out\" />\n      </Button>\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('MediaZoomIn')}\n        onClick={handleZoomIn}\n      >\n        <Icon name=\"zoom-in\" />\n      </Button>\n      {canReportAvatar && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang(isVideo ? 'PeerInfo.ReportProfileVideo' : 'PeerInfo.ReportProfilePhoto')}\n          onClick={onReport}\n        >\n          <Icon name=\"flag\" />\n        </Button>\n      )}\n      {canUpdate && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('ProfilePhoto.SetMainPhoto')}\n          onClick={handleUpdate}\n        >\n          <Icon name=\"copy-media\" />\n        </Button>\n      )}\n      {canDelete && (\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent-white\"\n          ariaLabel={lang('Delete')}\n          onClick={openDeleteModalHandler}\n        >\n          <Icon name=\"delete\" />\n        </Button>\n      )}\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={onCloseMediaViewer}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {canDelete && renderDeleteModal()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, {\n    item, canUpdateMedia,\n  }): StateProps => {\n    const tabState = selectTabState(global);\n    const { origin } = tabState.mediaViewer;\n\n    const message = item?.type === 'message' ? item.message : undefined;\n    const avatarOwner = item?.type === 'avatar' ? item.avatarOwner : undefined;\n    const avatarPhoto = item?.type === 'avatar' && item.profilePhotos.photos[item.mediaIndex];\n\n    const chat = selectCurrentChat(global);\n    const currentMessageList = selectCurrentMessageList(global);\n    const { threadId } = selectCurrentMessageList(global) || {};\n    const isProtected = selectIsMessageProtected(global, message);\n    const activeDownloads = selectActiveDownloads(global);\n    const isChatProtected = message && selectIsChatProtected(global, message?.chatId);\n    const { canDelete: canDeleteMessage } = (threadId\n      && message && selectAllowedMessageActionsSlow(global, message, threadId)) || {};\n    const isCurrentAvatar = avatarPhoto && (avatarPhoto.id === avatarOwner?.avatarPhotoId);\n    const canDeleteAvatar = canUpdateMedia && Boolean(avatarPhoto);\n    const canDelete = canDeleteMessage || canDeleteAvatar;\n    const canUpdate = canUpdateMedia && Boolean(avatarPhoto) && !isCurrentAvatar;\n    const messageListType = currentMessageList?.type;\n\n    return {\n      activeDownloads,\n      isProtected,\n      chat,\n      isChatProtected,\n      canDelete,\n      canUpdate,\n      messageListType,\n      origin,\n    };\n  },\n)(MediaViewerActions));\n","import { useRef } from '../lib/teact/teact';\n\nimport type { Signal } from '../util/signals';\n\nimport useEffectOnce from './useEffectOnce';\n\n// Allows to use signal value as \"silent\" dependency in hooks (not causing updates)\nexport function useSignalRef<T>(getValue: Signal<T>) {\n  const ref = useRef<T>(getValue());\n\n  useEffectOnce(() => {\n    return getValue.subscribe(() => {\n      ref.current = getValue();\n    });\n  });\n\n  return ref;\n}\n","import { createSignal } from '../../../util/signals';\n\nimport useDerivedSignal from '../../../hooks/useDerivedSignal';\n\nconst [getControlsVisible, setControlsVisible] = createSignal(false);\nconst [getIsLocked, setIsLocked] = createSignal(false);\n\nexport default function useControlsSignal() {\n  const getVisible = useDerivedSignal(\n    () => getControlsVisible() && !getIsLocked(),\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n    [getControlsVisible, getIsLocked],\n  );\n\n  return [getVisible, setControlsVisible, setIsLocked] as const;\n}\n","import { useUnmountCleanup } from '../lib/teact/teact';\n\nimport { createSignal } from '../util/signals';\n\nexport const [getCurrentTime, setCurrentTime] = createSignal(0);\n\nexport default function useCurrentTimeSignal() {\n  useUnmountCleanup(() => {\n    setCurrentTime(0);\n  });\n\n  return [getCurrentTime, setCurrentTime] as const;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useEffect, useState } from '../../lib/teact/teact';\n\nimport type { TextPart } from '../../types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { throttle } from '../../util/schedulers';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Button from '../ui/Button';\n\nimport './MediaViewerFooter.scss';\n\nconst RESIZE_THROTTLE_MS = 500;\n\ntype OwnProps = {\n  text: TextPart | TextPart[];\n  buttonText?: string;\n  onClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  isForVideo: boolean;\n  isForceMobileVersion?: boolean;\n  isProtected?: boolean;\n};\n\nconst MediaViewerFooter: FC<OwnProps> = ({\n  text = '', buttonText, isForVideo, onClick, handleSponsoredClick, isProtected, isForceMobileVersion,\n}) => {\n  const [isMultiline, setIsMultiline] = useState(false);\n  const { isMobile } = useAppLayout();\n  const [getIsVisible] = useControlsSignal();\n  const isHidden = useDerivedState(() => (IS_TOUCH_ENV ? !getIsVisible() : false), [getIsVisible]);\n\n  useEffect(() => {\n    const footerContent = document.querySelector('.MediaViewerFooter .media-text') as HTMLDivElement | null;\n\n    const checkIsMultiline = () => {\n      const height = footerContent ? footerContent.clientHeight : 0;\n\n      setIsMultiline(height > REM * 2);\n    };\n\n    // First run for initial detection of multiline footer text\n    checkIsMultiline();\n\n    const handleResize = throttle(checkIsMultiline, RESIZE_THROTTLE_MS, true);\n\n    window.addEventListener('resize', handleResize, false);\n\n    return () => {\n      window.removeEventListener('resize', handleResize, false);\n    };\n  }, []);\n\n  function stopEvent(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    if (text) {\n      e.stopPropagation();\n    }\n  }\n\n  const onButtonClick = useLastCallback(() => {\n    handleSponsoredClick();\n  });\n\n  const classNames = buildClassName(\n    'MediaViewerFooter',\n    isForVideo && 'is-for-video',\n    isHidden && 'is-hidden',\n    isProtected && 'is-protected',\n    isForceMobileVersion && 'mobile',\n  );\n\n  return (\n    <div className={classNames} onClick={stopEvent}>\n      {Boolean(text) && (\n        <div className=\"media-viewer-footer-content\" onClick={!isMobile ? onClick : undefined}>\n          <p className={`media-text custom-scroll allow-selection ${isMultiline ? 'multiline' : ''}`} dir=\"auto\">\n            {text}\n          </p>\n        </div>\n      )}\n      {Boolean(buttonText) && (\n        <Button\n          className={buildClassName('media-viewer-footer-content', 'media-viewer-button')}\n          size=\"default\"\n          color=\"primary\"\n          isRectangular\n          onClick={onButtonClick}\n        >\n          {buttonText}\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default MediaViewerFooter;\n","import { useUnmountCleanup } from '../../../lib/teact/teact';\n\nimport { createSignal } from '../../../util/signals';\n\nexport const [getIsVideoWaiting, setIsVideoWaiting] = createSignal(false);\n\nexport default function useVideoWaitingSignal() {\n  useUnmountCleanup(() => {\n    setIsVideoWaiting(false);\n  });\n\n  return [getIsVideoWaiting, setIsVideoWaiting] as const;\n}\n","import { ApiMediaFormat } from '../../api/types';\n\nimport launchMediaWorkers, { MAX_WORKERS } from '../../util/launchMediaWorkers';\nimport { IS_ANDROID, IS_IOS } from '../../util/windowEnvironment';\nimport { callApi } from '../../api/gramjs';\nimport { requestMutation } from '../fasterdom/fasterdom';\n\nconst IS_MOBILE = IS_ANDROID || IS_IOS;\nconst PREVIEW_SIZE_RATIO = (IS_ANDROID || IS_IOS) ? 0.3 : 0.25;\nconst MAX_FRAMES = IS_MOBILE ? 40 : 80;\nconst PREVIEW_MAX_SIDE = 200;\n\nconst connections = launchMediaWorkers();\n\nlet videoPreview: VideoPreview | undefined;\n\nexport class VideoPreview {\n  frames: Map<number, ImageBitmap> = new Map();\n\n  currentTime = 0;\n\n  canvas: HTMLCanvasElement;\n\n  constructor(url: string, canvas: HTMLCanvasElement) {\n    this.canvas = canvas;\n    connections.forEach(({ connector }, index) => {\n      void connector.request({\n        name: 'video-preview:init',\n        args: [\n          url,\n          MAX_FRAMES,\n          index,\n          MAX_WORKERS,\n          this.onFrame.bind(this),\n        ],\n      });\n    });\n  }\n\n  private onFrame(time: number, frame: ImageBitmap) {\n    this.frames.set(time, frame);\n    if (time === this.currentTime) {\n      this.render(time);\n    }\n  }\n\n  private clearCache() {\n    this.frames.forEach((frame) => {\n      frame.close();\n    });\n    this.frames.clear();\n  }\n\n  render(time: number) {\n    this.currentTime = time;\n    const frame = this.frames.get(time);\n    if (!frame) return false;\n    requestMutation(() => {\n      this.canvas.width = frame.width;\n      this.canvas.height = frame.height;\n      const ctx = this.canvas.getContext('2d')!;\n      ctx.drawImage(frame, 0, 0, this.canvas.width, this.canvas.height);\n    });\n    return true;\n  }\n\n  destroy() {\n    this.clearCache();\n    connections.forEach(({ connector }) => {\n      void connector.request({\n        name: 'video-preview:destroy',\n        args: [],\n      });\n    });\n  }\n}\n\nexport function getPreviewDimensions(width: number, height: number) {\n  width = Math.round(width * PREVIEW_SIZE_RATIO);\n  height = Math.round(height * PREVIEW_SIZE_RATIO);\n  const ratio = width / height;\n  if (width > PREVIEW_MAX_SIDE) {\n    width = PREVIEW_MAX_SIDE;\n    height = Math.round(width / ratio);\n  }\n  if (height > PREVIEW_MAX_SIDE) {\n    height = PREVIEW_MAX_SIDE;\n    width = Math.round(height * ratio);\n  }\n  return { width, height };\n}\n\nconnections.forEach(({ worker }) => {\n  worker.addEventListener('message', async (e) => {\n    const { type, messageId, params } = e.data as {\n      type: string;\n      messageId: string;\n      params: { url: string; start: number; end: number };\n    };\n\n    if (type !== 'requestPart') {\n      return;\n    }\n\n    const result = await callApi('downloadMedia', { mediaFormat: ApiMediaFormat.Progressive, ...params });\n    if (!result) {\n      return;\n    }\n\n    const { arrayBuffer } = result;\n\n    worker.postMessage({\n      type: 'partResponse',\n      messageId,\n      result: arrayBuffer,\n    }, [arrayBuffer!]);\n  });\n});\n\nexport function createVideoPreviews(url: string, canvas: HTMLCanvasElement) {\n  if (videoPreview) {\n    videoPreview.destroy();\n  }\n  videoPreview = new VideoPreview(url, canvas);\n  return () => {\n    videoPreview?.destroy();\n    videoPreview = undefined;\n  };\n}\n\nexport function renderVideoPreview(time: number) {\n  if (!videoPreview) return false;\n  return videoPreview.render(time);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"ingarEvU\",\"preview\":\"TqpEWfl3\",\"previewCanvas\":\"fKVz2lln\",\"previewTime\":\"bGiNvx5D\",\"previewTimeText\":\"mnkqvOMR\",\"track\":\"Od9ZSc1U\",\"buffered\":\"ANe2DKfp\",\"played\":\"igaGLblf\",\"seeking\":\"beUP6SqY\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\n\nimport { createVideoPreviews, getPreviewDimensions, renderVideoPreview } from '../../lib/video-preview/VideoPreview';\nimport { animateNumber } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport { captureEvents } from '../../util/captureEvents';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { clamp, round } from '../../util/math';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport { useThrottledSignal } from '../../hooks/useAsyncResolvers';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport ShowTransition from '../ui/ShowTransition';\n\nimport styles from './SeekLine.module.scss';\n\ntype OwnProps = {\n  url?: string;\n  duration: number;\n  bufferedRanges: BufferedRange[];\n  playbackRate: number;\n  isActive?: boolean;\n  isPlaying?: boolean;\n  isPreviewDisabled?: boolean;\n  isReady: boolean;\n  posterSize?: ApiDimensions;\n  onSeek: (position: number) => void;\n  onSeekStart: () => void;\n};\n\nconst LOCK_TIMEOUT = 250;\nlet cancelAnimation: Function | undefined;\n\nconst SeekLine: FC<OwnProps> = ({\n  duration,\n  bufferedRanges,\n  isReady,\n  posterSize,\n  playbackRate,\n  url,\n  isActive,\n  isPlaying,\n  isPreviewDisabled,\n  onSeek,\n  onSeekStart,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const seekerRef = useRef<HTMLDivElement>(null);\n  const [getCurrentTimeSignal] = useCurrentTimeSignal();\n  const [getIsWaiting] = useVideoWaitingSignal();\n  const getCurrentTime = useThrottledSignal(getCurrentTimeSignal, LOCK_TIMEOUT);\n  const [getSelectedTime, setSelectedTime] = useSignal(getCurrentTime());\n  const [getPreviewOffset, setPreviewOffset] = useSignal(0);\n  const [getPreviewTime, setPreviewTime] = useSignal(0);\n  const isLockedRef = useRef<boolean>(false);\n  const [isPreviewVisible, setPreviewVisible] = useState(false);\n  const [isSeeking, setIsSeeking] = useState(false);\n  // eslint-disable-next-line no-null/no-null\n  const previewCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const progressRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const previewTimeRef = useRef<HTMLDivElement>(null);\n\n  const previewSize = useMemo(() => {\n    return getPreviewDimensions(posterSize?.width || 0, posterSize?.height || 0);\n  }, [posterSize]);\n\n  const setPreview = useLastCallback((time: number) => {\n    time = Math.floor(time);\n    setPreviewTime(time);\n    renderVideoPreview(time);\n  });\n\n  useEffect(() => {\n    if (isPreviewDisabled || !url || !isReady) return undefined;\n    return createVideoPreviews(url, previewCanvasRef.current!);\n  }, [url, isReady, isPreviewDisabled]);\n\n  useEffect(() => {\n    setPreviewVisible(false);\n  }, [isActive]);\n\n  useEffect(() => {\n    if (cancelAnimation) cancelAnimation();\n    cancelAnimation = undefined;\n    if (!isLockedRef.current && !isSeeking) {\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n  }, [getCurrentTime, isSeeking, setSelectedTime, playbackRate, duration]);\n\n  useEffect(() => {\n    if (!isPlaying || getIsWaiting()) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    }\n  }, [isPlaying, getSelectedTime, getIsWaiting]);\n\n  useEffect(() => {\n    if (isPlaying) {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n      const time = getCurrentTime();\n      const remaining = duration - time;\n      cancelAnimation = animateNumber({\n        from: time,\n        to: duration,\n        duration: (remaining * 1000) / playbackRate,\n        onUpdate: setSelectedTime,\n      });\n    }\n    // eslint-disable-next-line\n  }, [isPlaying, playbackRate, duration]);\n\n  useLayoutEffect(() => {\n    if (!progressRef.current) return;\n    const progress = round((getSelectedTime() / duration) * 100, 2);\n    progressRef.current.style.width = `${progress}%`;\n  }, [getSelectedTime, duration]);\n\n  useLayoutEffect(() => {\n    if (!previewRef.current) return;\n    previewRef.current.style.left = `${getPreviewOffset()}px`;\n  }, [getPreviewOffset]);\n\n  useLayoutEffect(() => {\n    if (!previewTimeRef.current) return;\n    previewTimeRef.current.innerText = formatMediaDuration(getPreviewTime());\n  }, [getPreviewTime]);\n\n  useEffect(() => {\n    if (!seekerRef.current || !isActive) return undefined;\n    const seeker = seekerRef.current;\n    let seekerSize = seeker.getBoundingClientRect();\n\n    let time = 0;\n    let offset = 0;\n\n    const getPreviewProps = (e: MouseEvent | TouchEvent) => {\n      const pageX = e instanceof MouseEvent ? e.pageX : e.touches[0].pageX;\n      const t = clamp(duration * ((pageX - seekerSize.left) / seekerSize.width), 0, duration);\n      if (isPreviewDisabled) return [t, 0];\n      if (!seekerSize.width) seekerSize = seeker.getBoundingClientRect();\n      const preview = previewRef.current!;\n      const o = clamp(\n        pageX - seekerSize.left - preview.clientWidth / 2, -4, seekerSize.width - preview.clientWidth + 4,\n      );\n      return [t, o];\n    };\n\n    const stopAnimation = () => {\n      if (cancelAnimation) cancelAnimation();\n      cancelAnimation = undefined;\n    };\n\n    const handleSeek = (e: MouseEvent | TouchEvent) => {\n      stopAnimation();\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      void setPreview(time);\n      setPreviewOffset(offset);\n      setSelectedTime(time);\n    };\n\n    const handleStartSeek = () => {\n      stopAnimation();\n      setPreviewVisible(true);\n      setIsSeeking(true);\n      onSeekStart();\n    };\n\n    const handleStopSeek = () => {\n      stopAnimation();\n      isLockedRef.current = true;\n      setPreviewVisible(false);\n      setIsSeeking(false);\n      setSelectedTime(time);\n      onSeek(time);\n      // Prevent current time updates from overriding the selected time\n      setTimeout(() => {\n        isLockedRef.current = false;\n      }, LOCK_TIMEOUT);\n    };\n\n    const cleanup = captureEvents(seeker, {\n      onCapture: handleStartSeek,\n      onRelease: handleStopSeek,\n      onClick: handleStopSeek,\n      onDrag: handleSeek,\n    });\n\n    if (IS_TOUCH_ENV || isPreviewDisabled) {\n      return cleanup;\n    }\n\n    const handleSeekMouseMove = (e: MouseEvent) => {\n      setPreviewVisible(true);\n      ([time, offset] = getPreviewProps(e));\n      setPreviewOffset(offset);\n      void setPreview(time);\n    };\n\n    const handleSeekMouseLeave = () => {\n      setPreviewVisible(false);\n    };\n\n    seeker.addEventListener('mousemove', handleSeekMouseMove);\n    seeker.addEventListener('mouseenter', handleSeekMouseMove);\n    seeker.addEventListener('mouseleave', handleSeekMouseLeave);\n\n    return () => {\n      cleanup();\n      seeker.removeEventListener('mousemove', handleSeekMouseMove);\n      seeker.removeEventListener('mouseenter', handleSeekMouseMove);\n      seeker.removeEventListener('mouseleave', handleSeekMouseLeave);\n    };\n  }, [\n    duration,\n    setPreview,\n    isActive,\n    onSeek,\n    onSeekStart,\n    setPreviewOffset,\n    setSelectedTime,\n    setIsSeeking,\n    isPreviewDisabled,\n    playbackRate,\n  ]);\n\n  return (\n    <div className={styles.container} ref={seekerRef}>\n      {!isPreviewDisabled && (\n        <ShowTransition\n          isOpen\n          isHidden={!isPreviewVisible}\n          className={styles.preview}\n          style={`width: ${previewSize.width}px; height: ${previewSize.height}px`}\n          ref={previewRef}\n        >\n          <canvas className={styles.previewCanvas} ref={previewCanvasRef} />\n          <div className={styles.previewTime}>\n            <span className={styles.previewTimeText} ref={previewTimeRef} />\n          </div>\n        </ShowTransition>\n      )}\n      <div className={styles.track}>\n        {bufferedRanges.map(({\n          start,\n          end,\n        }) => (\n          <div\n            key={`${start}-${end}`}\n            className={styles.buffered}\n            // @ts-ignore\n            style={`left: ${start * 100}%; right: ${100 - end * 100}%`}\n          />\n        ))}\n      </div>\n      <div className={styles.track}>\n        <div\n          ref={progressRef}\n          className={buildClassName(styles.played, isSeeking && styles.seeking)}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SeekLine);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useSignal,\n} from '../../lib/teact/teact';\n\nimport type { ApiDimensions } from '../../api/types';\nimport type { BufferedRange } from '../../hooks/useBuffering';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\nimport { formatMediaDuration } from '../../util/dates/dateFormat';\nimport { formatFileSize } from '../../util/textFormat';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useControlsSignal from './hooks/useControlsSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport RangeSlider from '../ui/RangeSlider';\nimport SeekLine from './SeekLine';\n\nimport './VideoPlayerControls.scss';\n\ntype OwnProps = {\n  url?: string;\n  bufferedRanges: BufferedRange[];\n  bufferedProgress: number;\n  duration: number;\n  isReady: boolean;\n  fileSize: number;\n  isForceMobileVersion?: boolean;\n  isPlaying: boolean;\n  isFullscreenSupported: boolean;\n  isPictureInPictureSupported: boolean;\n  isFullscreen: boolean;\n  isPreviewDisabled?: boolean;\n  isBuffered: boolean;\n  volume: number;\n  isMuted: boolean;\n  playbackRate: number;\n  posterSize?: ApiDimensions;\n  onChangeFullscreen: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onPictureInPictureChange?: () => void;\n  onVolumeClick: () => void;\n  onVolumeChange: (volume: number) => void;\n  onPlaybackRateChange: (playbackRate: number) => void;\n  onPlayPause: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\n  onSeek: (position: number) => void;\n};\n\nconst stopEvent = (e: React.MouseEvent<HTMLElement>) => {\n  e.stopPropagation();\n};\n\nconst PLAYBACK_RATES = [\n  0.5,\n  1,\n  1.5,\n  2,\n];\n\nconst HIDE_CONTROLS_TIMEOUT_MS = 3000;\n\nconst VideoPlayerControls: FC<OwnProps> = ({\n  url,\n  bufferedRanges,\n  bufferedProgress,\n  duration,\n  isReady,\n  fileSize,\n  isForceMobileVersion,\n  isPlaying,\n  isFullscreenSupported,\n  isFullscreen,\n  isBuffered,\n  isPreviewDisabled,\n  volume,\n  isMuted,\n  playbackRate,\n  posterSize,\n  onChangeFullscreen,\n  onVolumeClick,\n  onVolumeChange,\n  onPlaybackRateChange,\n  isPictureInPictureSupported,\n  onPictureInPictureChange,\n  onPlayPause,\n  onSeek,\n}) => {\n  const [isPlaybackMenuOpen, openPlaybackMenu, closePlaybackMenu] = useFlag();\n  const [getCurrentTime] = useCurrentTimeSignal();\n  const currentTime = useDerivedState(() => Math.trunc(getCurrentTime()), [getCurrentTime]);\n  const [getIsSeeking, setIsSeeking] = useSignal(false);\n\n  const { isMobile } = useAppLayout();\n  const [getIsVisible, setVisibility] = useControlsSignal();\n  const isVisible = useDerivedState(getIsVisible);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && !isForceMobileVersion) return undefined;\n    let timeout: number | undefined;\n    if (!isVisible || !isPlaying || isPlaybackMenuOpen || getIsSeeking()) {\n      if (timeout) window.clearTimeout(timeout);\n      return undefined;\n    }\n    timeout = window.setTimeout(() => {\n      setVisibility(false);\n    }, HIDE_CONTROLS_TIMEOUT_MS);\n    return () => {\n      if (timeout) window.clearTimeout(timeout);\n    };\n  }, [isPlaying, isVisible, setVisibility, isPlaybackMenuOpen, getIsSeeking, isForceMobileVersion]);\n\n  useLayoutEffect(() => {\n    if (isVisible) {\n      document.body.classList.add('video-controls-visible');\n    } else {\n      document.body.classList.remove('video-controls-visible');\n    }\n    return () => {\n      document.body.classList.remove('video-controls-visible');\n    };\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (!isVisible) {\n      closePlaybackMenu();\n    }\n  }, [closePlaybackMenu, isVisible]);\n\n  const lang = useOldLang();\n\n  const handleSeek = useLastCallback((position: number) => {\n    setIsSeeking(false);\n    onSeek(position);\n  });\n\n  const handleSeekStart = useLastCallback(() => {\n    setIsSeeking(true);\n  });\n\n  const volumeIcon: IconName = useMemo(() => {\n    if (volume === 0 || isMuted) return 'muted';\n    if (volume < 0.3) return 'volume-1';\n    if (volume < 0.6) return 'volume-2';\n    return 'volume-3';\n  }, [volume, isMuted]);\n\n  return (\n    <div\n      className={buildClassName('VideoPlayerControls', isForceMobileVersion && 'mobile', isVisible && 'active')}\n      onClick={stopEvent}\n    >\n      <SeekLine\n        url={url}\n        duration={duration}\n        isReady={isReady}\n        isPlaying={isPlaying}\n        isPreviewDisabled={isPreviewDisabled}\n        posterSize={posterSize}\n        bufferedRanges={bufferedRanges}\n        playbackRate={playbackRate}\n        onSeek={handleSeek}\n        onSeekStart={handleSeekStart}\n        isActive={isVisible}\n      />\n      <div className=\"buttons\">\n        <Button\n          ariaLabel={lang('AccActionPlay')}\n          size=\"tiny\"\n          ripple={!isMobile}\n          color=\"translucent-white\"\n          className=\"play\"\n          round\n          onClick={onPlayPause}\n        >\n          <Icon name={isPlaying ? 'pause' : 'play'} />\n        </Button>\n        <Button\n          ariaLabel=\"Volume\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"volume\"\n          round\n          onClick={onVolumeClick}\n        >\n          <Icon name={volumeIcon} />\n        </Button>\n        {!IS_IOS && (\n          <RangeSlider bold className=\"volume-slider\" value={isMuted ? 0 : volume * 100} onChange={onVolumeChange} />\n        )}\n        {renderTime(currentTime, duration)}\n        {!isBuffered && (\n          <div className=\"player-file-size\">\n            {`${formatFileSize(lang, fileSize * bufferedProgress)} / ${formatFileSize(lang, fileSize)}`}\n          </div>\n        )}\n        <div className=\"spacer\" />\n        <Button\n          ariaLabel=\"Playback rate\"\n          size=\"tiny\"\n          color=\"translucent-white\"\n          className=\"playback-rate\"\n          round\n          onClick={openPlaybackMenu}\n        >\n          {`${playbackRate}x`}\n        </Button>\n        {isPictureInPictureSupported && (\n          <Button\n            ariaLabel=\"Picture in picture\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onPictureInPictureChange}\n          >\n            <Icon name=\"pip\" />\n          </Button>\n        )}\n        {isFullscreenSupported && (\n          <Button\n            ariaLabel=\"Fullscreen\"\n            size=\"tiny\"\n            color=\"translucent-white\"\n            className=\"fullscreen\"\n            round\n            onClick={onChangeFullscreen}\n          >\n            <Icon name={isFullscreen ? 'smallscreen' : 'fullscreen'} />\n          </Button>\n        )}\n      </div>\n      <Menu\n        isOpen={isPlaybackMenuOpen}\n        className={buildClassName(\n          'playback-rate-menu',\n          !isFullscreenSupported && 'no-fullscreen',\n          !isPictureInPictureSupported && 'no-pip',\n        )}\n        positionX=\"right\"\n        positionY=\"bottom\"\n        autoClose\n        onClose={closePlaybackMenu}\n      >\n        {PLAYBACK_RATES.map((rate) => (\n          // eslint-disable-next-line react/jsx-no-bind\n          <MenuItem disabled={playbackRate === rate} onClick={() => onPlaybackRateChange(rate)}>\n            {`${rate}x`}\n          </MenuItem>\n        ))}\n      </Menu>\n    </div>\n  );\n};\n\nfunction renderTime(currentTime: number, duration: number) {\n  return (\n    <div className=\"player-time\">\n      {`${formatMediaDuration(currentTime)} / ${formatMediaDuration(duration)}`}\n    </div>\n  );\n}\n\nexport default memo(VideoPlayerControls);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiDimensions } from '../../api/types';\n\nimport { clamp } from '../../util/math';\nimport safePlay from '../../util/safePlay';\nimport stopEvent from '../../util/stopEvent';\nimport { IS_IOS, IS_TOUCH_ENV, IS_YA_BROWSER } from '../../util/windowEnvironment';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useBuffering from '../../hooks/useBuffering';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePictureInPicture from '../../hooks/usePictureInPicture';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useVideoCleanup from '../../hooks/useVideoCleanup';\nimport useFullscreen from '../../hooks/window/useFullscreen';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useVideoWaitingSignal from './hooks/useVideoWaitingSignal';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ProgressSpinner from '../ui/ProgressSpinner';\nimport VideoPlayerControls from './VideoPlayerControls';\n\nimport './VideoPlayer.scss';\n\ntype OwnProps = {\n  url?: string;\n  isGif?: boolean;\n  posterData?: string;\n  posterSize?: ApiDimensions;\n  loadProgress?: number;\n  fileSize: number;\n  isPreviewDisabled?: boolean;\n  isMediaViewerOpen?: boolean;\n  noPlay?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  isProtected?: boolean;\n  shouldCloseOnClick?: boolean;\n  isForceMobileVersion?: boolean;\n  isClickDisabled?: boolean;\n  isSponsoredMessage?: boolean;\n  timestamp?: number;\n  handleSponsoredClick?: (isFromMedia?: boolean) => void;\n  onClose: (e: React.MouseEvent<HTMLElement, MouseEvent>) => void;\n};\n\nconst MAX_LOOP_DURATION = 30; // Seconds\nconst MIN_READY_STATE = 4;\nconst REWIND_STEP = 5; // Seconds\n\nconst VideoPlayer: FC<OwnProps> = ({\n  url,\n  isGif,\n  posterData,\n  posterSize,\n  loadProgress,\n  fileSize,\n  isMediaViewerOpen,\n  noPlay,\n  volume,\n  isMuted,\n  playbackRate,\n  isForceMobileVersion,\n  shouldCloseOnClick,\n  isProtected,\n  isClickDisabled,\n  isPreviewDisabled,\n  isSponsoredMessage,\n  timestamp,\n  handleSponsoredClick,\n  onClose,\n}) => {\n  const {\n    setMediaViewerVolume,\n    setMediaViewerMuted,\n    setMediaViewerPlaybackRate,\n    setMediaViewerHidden,\n  } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const [isPlaying, setIsPlaying] = useState(!IS_TOUCH_ENV || !IS_IOS);\n  const [isFullscreen, setFullscreen, exitFullscreen] = useFullscreen(videoRef, setIsPlaying);\n  const { isMobile } = useAppLayout();\n  const duration = videoRef.current?.duration || 0;\n  const isLooped = isGif || duration <= MAX_LOOP_DURATION;\n\n  const handleEnterFullscreen = useLastCallback(() => {\n    // Yandex browser doesn't support PIP when video is hidden\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: true });\n  });\n\n  const handleLeaveFullscreen = useLastCallback(() => {\n    if (IS_YA_BROWSER) return;\n    setMediaViewerHidden({ isHidden: false });\n  });\n\n  const [\n    isPictureInPictureSupported,\n    enterPictureInPicture,\n    isInPictureInPicture,\n  ] = usePictureInPicture(videoRef, handleEnterFullscreen, handleLeaveFullscreen);\n\n  const [, toggleControls, lockControls] = useControlsSignal();\n\n  const handleVideoMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const handleVideoLeave = useLastCallback((e) => {\n    const bounds = videoRef.current?.getBoundingClientRect();\n    if (!bounds) return;\n    if (e.clientX < bounds.left || e.clientX > bounds.right || e.clientY < bounds.top || e.clientY > bounds.bottom) {\n      toggleControls(false);\n    }\n  });\n\n  const {\n    isReady, isBuffered, bufferedRanges, bufferingHandlers, bufferedProgress,\n  } = useBuffering();\n  const isUnsupported = useUnsupportedMedia(videoRef, undefined, !url);\n\n  const {\n    shouldRender: shouldRenderSpinner,\n    transitionClassNames: spinnerClassNames,\n  } = useShowTransitionDeprecated(\n    !isBuffered && !isUnsupported, undefined, undefined, 'slow',\n  );\n  const {\n    shouldRender: shouldRenderPlayButton,\n    transitionClassNames: playButtonClassNames,\n  } = useShowTransitionDeprecated(\n    IS_IOS && !isPlaying && !shouldRenderSpinner && !isUnsupported, undefined, undefined, 'slow',\n  );\n\n  const [, setCurrentTime] = useCurrentTimeSignal();\n  const [, setIsVideoWaiting] = useVideoWaitingSignal();\n\n  useEffect(() => {\n    lockControls(shouldRenderSpinner);\n  }, [lockControls, shouldRenderSpinner]);\n\n  useEffect(() => {\n    if (noPlay || !isMediaViewerOpen || isUnsupported) {\n      videoRef.current!.pause();\n    } else if (url && !IS_TOUCH_ENV) {\n      // Chrome does not automatically start playing when `url` becomes available (even with `autoPlay`),\n      // so we force it here. Contrary, iOS does not allow to call `play` without mouse event,\n      // so we need to use `autoPlay` instead to allow pre-buffering.\n      safePlay(videoRef.current!);\n    }\n  }, [noPlay, isMediaViewerOpen, url, setMediaViewerMuted, isUnsupported]);\n\n  useEffect(() => {\n    videoRef.current!.volume = volume;\n  }, [volume]);\n\n  useEffect(() => {\n    videoRef.current!.playbackRate = playbackRate;\n  }, [playbackRate]);\n\n  useEffect(() => {\n    if (!timestamp) return;\n    videoRef.current!.currentTime = timestamp;\n    setCurrentTime(timestamp);\n  }, [setCurrentTime, timestamp]);\n\n  const togglePlayState = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent> | KeyboardEvent) => {\n    e.stopPropagation();\n    if (isPlaying) {\n      videoRef.current!.pause();\n      setIsPlaying(false);\n    } else {\n      safePlay(videoRef.current!);\n      setIsPlaying(true);\n    }\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLVideoElement, MouseEvent>) => {\n    if (isSponsoredMessage) {\n      handleSponsoredClick?.(true);\n      onClose(e);\n    }\n    if (isClickDisabled) {\n      return;\n    }\n    if (shouldCloseOnClick) {\n      onClose(e);\n    } else {\n      togglePlayState(e);\n    }\n  });\n\n  useVideoCleanup(videoRef, bufferingHandlers);\n\n  const handleTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= MIN_READY_STATE) {\n      setIsVideoWaiting(false);\n      setCurrentTime(video.currentTime);\n    }\n    if (!isLooped && video.currentTime === video.duration) {\n      setCurrentTime(0);\n      setIsPlaying(false);\n    }\n  });\n\n  const handleEnded = useLastCallback(() => {\n    if (isLooped) return;\n    setCurrentTime(0);\n    setIsPlaying(false);\n    toggleControls(true);\n  });\n\n  const handleFullscreenChange = useLastCallback(() => {\n    if (isFullscreen && exitFullscreen) {\n      exitFullscreen();\n    } else if (!isFullscreen && setFullscreen) {\n      setFullscreen();\n    }\n  });\n\n  const handleSeek = useLastCallback((position: number) => {\n    videoRef.current!.currentTime = position;\n  });\n\n  const handleVolumeChange = useLastCallback((newVolume: number) => {\n    setMediaViewerVolume({ volume: newVolume / 100 });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setMediaViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handlePlaybackRateChange = useLastCallback((newPlaybackRate: number) => {\n    setMediaViewerPlaybackRate({ playbackRate: newPlaybackRate });\n  });\n\n  useEffect(() => {\n    if (!isMediaViewerOpen) return undefined;\n    const rewind = (dir: number) => {\n      if (!isFullscreen) return;\n      const video = videoRef.current!;\n      const newTime = clamp(video.currentTime + dir * REWIND_STEP, 0, video.duration);\n      if (Number.isFinite(newTime)) {\n        video.currentTime = newTime;\n      }\n    };\n    const handleKeyDown = (e: KeyboardEvent) => {\n      if (isInPictureInPicture) return;\n      switch (e.key) {\n        case ' ':\n        case 'Enter':\n          e.preventDefault();\n          togglePlayState(e);\n          break;\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          e.preventDefault();\n          rewind(-1);\n          break;\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          e.preventDefault();\n          rewind(1);\n          break;\n      }\n    };\n\n    document.addEventListener('keydown', handleKeyDown, false);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  }, [togglePlayState, isMediaViewerOpen, isFullscreen, isInPictureInPicture]);\n\n  const wrapperStyle = posterSize && `width: ${posterSize.width}px; height: ${posterSize.height}px`;\n  const videoStyle = `background-image: url(${posterData})`;\n  const shouldToggleControls = !IS_TOUCH_ENV && !isForceMobileVersion;\n\n  return (\n    // eslint-disable-next-line jsx-a11y/mouse-events-have-key-events\n    <div\n      className=\"VideoPlayer\"\n      onMouseMove={shouldToggleControls ? handleVideoMove : undefined}\n      onMouseOut={shouldToggleControls ? handleVideoLeave : undefined}\n    >\n      <div\n        style={wrapperStyle}\n      >\n        {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n        {isProtected && (\n          <div\n            onContextMenu={stopEvent}\n            onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n            onClick={!isMobile ? togglePlayState : undefined}\n            className=\"protector\"\n          />\n        )}\n        <video\n          ref={videoRef}\n          autoPlay={IS_TOUCH_ENV}\n          controlsList=\"nodownload\"\n          playsInline\n          loop={isLooped}\n          // This is to force autoplaying on mobiles\n          muted={isGif || isMuted}\n          id=\"media-viewer-video\"\n          style={videoStyle}\n          onWaiting={() => setIsVideoWaiting(true)}\n          onPlay={() => setIsPlaying(true)}\n          onEnded={handleEnded}\n          onClick={!isMobile && !isFullscreen ? handleClick : undefined}\n          onDoubleClick={!IS_TOUCH_ENV ? handleFullscreenChange : undefined}\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n          onPause={(e) => {\n            setIsPlaying(false);\n            bufferingHandlers.onPause(e);\n          }}\n          onTimeUpdate={handleTimeUpdate}\n          src={url}\n        />\n      </div>\n      {shouldRenderPlayButton && (\n        <Button round className={`play-button ${playButtonClassNames}`} onClick={togglePlayState}>\n          <Icon name=\"play\" />\n        </Button>\n      )}\n      {shouldRenderSpinner && (\n        <div className={['spinner-container', spinnerClassNames].join(' ')}>\n          {!isBuffered && <div className=\"buffering\">Buffering...</div>}\n          <ProgressSpinner\n            size=\"xl\"\n            progress={isBuffered ? 1 : loadProgress}\n            onClick={onClose}\n          />\n        </div>\n      )}\n      {!isGif && !isSponsoredMessage && !isUnsupported && (\n        <VideoPlayerControls\n          url={url}\n          isPlaying={isPlaying}\n          bufferedRanges={bufferedRanges}\n          bufferedProgress={bufferedProgress}\n          isBuffered={isBuffered}\n          isFullscreenSupported={Boolean(setFullscreen)}\n          isPictureInPictureSupported={isPictureInPictureSupported}\n          isFullscreen={isFullscreen}\n          isPreviewDisabled={isPreviewDisabled}\n          fileSize={fileSize}\n          duration={duration}\n          isReady={isReady}\n          posterSize={posterSize}\n          isForceMobileVersion={isForceMobileVersion}\n          onSeek={handleSeek}\n          onChangeFullscreen={handleFullscreenChange}\n          onPictureInPictureChange={enterPictureInPicture}\n          onPlayPause={togglePlayState}\n          volume={volume}\n          playbackRate={playbackRate}\n          isMuted={isMuted}\n          onVolumeClick={handleVolumeMuted}\n          onVolumeChange={handleVolumeChange}\n          onPlaybackRateChange={handlePlaybackRateChange}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(VideoPlayer);\n","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiDimensions, ApiMessage, ApiSponsoredMessage,\n} from '../../api/types';\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION } from '../../config';\nimport {\n  selectIsMessageProtected, selectMessageTimestampableDuration, selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\nimport { ARE_WEBCODECS_SUPPORTED, IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { calculateMediaViewerDimensions } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia from './helpers/getViewableMedia';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentTimeSignal from '../../hooks/useCurrentTimeSignal';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalEffect } from '../../hooks/useSignalEffect';\nimport useThrottledCallback from '../../hooks/useThrottledCallback';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Spinner from '../ui/Spinner';\nimport MediaViewerFooter from './MediaViewerFooter';\nimport VideoPlayer from './VideoPlayer';\n\nimport './MediaViewerContent.scss';\n\ntype OwnProps = {\n  item: MediaViewerItem;\n  isActive?: boolean;\n  withAnimation?: boolean;\n  isMoving?: boolean;\n  onClose: () => void;\n  onFooterClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: () => void;\n};\n\ntype StateProps = {\n  textMessage?: ApiMessage | ApiSponsoredMessage;\n  origin?: MediaViewerOrigin;\n  isProtected?: boolean;\n  volume: number;\n  isMuted: boolean;\n  isHidden?: boolean;\n  playbackRate: number;\n  threadId?: ThreadId;\n  timestamp?: number;\n  maxTimestamp?: number;\n};\n\nconst ANIMATION_DURATION = 350;\nconst MOBILE_VERSION_CONTROL_WIDTH = 350;\nconst PLAYBACK_SAVE_INTERVAL = 1000;\n\nconst MediaViewerContent = ({\n  item,\n  isActive,\n  textMessage,\n  origin,\n  withAnimation,\n  isProtected,\n  volume,\n  playbackRate,\n  isMuted,\n  isHidden,\n  isMoving,\n  threadId,\n  timestamp,\n  maxTimestamp,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}: OwnProps & StateProps) => {\n  const { updateLastPlaybackTimestamp } = getActions();\n\n  const lang = useOldLang();\n\n  const isAvatar = item.type === 'avatar';\n  const isSponsoredMessage = item.type === 'sponsoredMessage';\n  const { media } = getViewableMedia(item) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isLocal,\n    isVideoAvatar,\n    mediaSize,\n    loadProgress,\n  } = useMediaProps({\n    media, isAvatar, origin, delay: withAnimation ? ANIMATION_DURATION : false,\n  });\n\n  const [, toggleControls] = useControlsSignal();\n  const [getCurrentTime] = useCurrentTimeSignal();\n\n  const isOpen = Boolean(media);\n  const { isMobile } = useAppLayout();\n\n  const toggleControlsOnMove = useLastCallback(() => {\n    toggleControls(true);\n  });\n\n  const updatePlaybackTimestamp = useThrottledCallback(() => {\n    if (!isActive || !textMessage || media?.mediaType !== 'video') return;\n    if (media.duration < MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION) return;\n\n    const message = 'id' in textMessage ? textMessage : undefined;\n    const currentTime = getCurrentTime();\n    if (!currentTime || !message || message.isInAlbum) return;\n\n    // Reset timestamp if we are close to the end of the video\n    const newTimestamp = media.duration - currentTime > PLAYBACK_SAVE_INTERVAL / 1000 ? currentTime : undefined;\n    updateLastPlaybackTimestamp({ chatId: message.chatId, messageId: message.id, timestamp: newTimestamp });\n  }, [getCurrentTime, isActive, media, textMessage], PLAYBACK_SAVE_INTERVAL);\n\n  useSignalEffect(updatePlaybackTimestamp, [getCurrentTime]);\n\n  if (!media) return undefined;\n\n  if (item.type === 'avatar') {\n    if (!isVideoAvatar) {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          {renderPhoto(\n            bestData,\n            calculateMediaViewerDimensions(dimensions!, false),\n            !isMobile && !isProtected,\n            isProtected,\n          )}\n        </div>\n      );\n    } else {\n      return (\n        <div key={media.id} className=\"MediaViewerContent\">\n          <VideoPlayer\n            key={media.id}\n            url={bestData}\n            isGif\n            posterData={bestImageData}\n            posterSize={calculateMediaViewerDimensions(dimensions!, false, true)}\n            loadProgress={loadProgress}\n            fileSize={mediaSize!}\n            isMediaViewerOpen={isOpen && isActive}\n            isProtected={isProtected}\n            isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n            noPlay={!isActive}\n            onClose={onClose}\n            isMuted\n            shouldCloseOnClick\n            volume={0}\n            isClickDisabled={isMoving}\n            playbackRate={1}\n            isSponsoredMessage={isSponsoredMessage}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        </div>\n      );\n    }\n  }\n\n  const textParts = textMessage && (textMessage.content.action?.type === 'suggestProfilePhoto'\n    ? lang('Conversation.SuggestedPhotoTitle')\n    : renderMessageText({\n      message: textMessage, maxTimestamp, threadId, forcePlayback: true, isForMediaViewer: true,\n    }));\n  const buttonText = textMessage && 'buttonText' in textMessage ? textMessage.buttonText : undefined;\n  const hasFooter = Boolean(textParts);\n  const posterSize = calculateMediaViewerDimensions(dimensions!, hasFooter, isVideo);\n  const isForceMobileVersion = isMobile || shouldForceMobileVersion(posterSize);\n\n  return (\n    <div\n      className={buildClassName('MediaViewerContent', hasFooter && 'has-footer')}\n      onMouseMove={isForceMobileVersion && !IS_TOUCH_ENV ? toggleControlsOnMove : undefined}\n    >\n      {isPhoto && renderPhoto(\n        bestData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      )}\n      {isVideo && (!isActive ? renderVideoPreview(\n        bestImageData,\n        posterSize,\n        !isMobile && !isProtected,\n        isProtected,\n      ) : (\n        <VideoPlayer\n          key={media.id}\n          url={bestData}\n          isGif={isGif}\n          posterData={bestImageData}\n          posterSize={posterSize}\n          loadProgress={loadProgress}\n          fileSize={mediaSize!}\n          isMediaViewerOpen={isOpen && isActive}\n          noPlay={!isActive}\n          isPreviewDisabled={!ARE_WEBCODECS_SUPPORTED || isLocal}\n          onClose={onClose}\n          isMuted={isMuted}\n          isHidden={isHidden}\n          isForceMobileVersion={isForceMobileVersion}\n          isProtected={isProtected}\n          volume={volume}\n          isClickDisabled={isMoving}\n          playbackRate={playbackRate}\n          isSponsoredMessage={isSponsoredMessage}\n          handleSponsoredClick={handleSponsoredClick}\n          timestamp={timestamp}\n        />\n      ))}\n      {textParts && (\n        <MediaViewerFooter\n          text={textParts}\n          buttonText={buttonText}\n          onClick={onFooterClick}\n          isProtected={isProtected}\n          isForceMobileVersion={isForceMobileVersion}\n          isForVideo={isVideo && !isGif}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const {\n      volume,\n      isMuted,\n      playbackRate,\n      isHidden,\n      origin,\n      timestamp,\n      threadId,\n    } = selectTabState(global).mediaViewer;\n    const message = item.type === 'message' ? item.message : undefined;\n    const sponsoredMessage = item.type === 'sponsoredMessage' ? item.message : undefined;\n    const textMessage = message || sponsoredMessage;\n\n    const maxTimestamp = message && selectMessageTimestampableDuration(global, message, true);\n\n    return {\n      origin,\n      textMessage,\n      isProtected: message && selectIsMessageProtected(global, message),\n      volume,\n      isMuted,\n      isHidden,\n      playbackRate,\n      threadId,\n      timestamp,\n      maxTimestamp,\n    };\n  },\n)(MediaViewerContent));\n\nfunction renderPhoto(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  return blobUrl\n    ? (\n      <div style=\"position: relative;\">\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <img\n          src={blobUrl}\n          alt=\"\"\n          className={buildClassName(isProtected && 'is-protected')}\n          style={imageSize ? `width: ${imageSize.width}px` : ''}\n          draggable={Boolean(canDrag)}\n        />\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction renderVideoPreview(blobUrl?: string, imageSize?: ApiDimensions, canDrag?: boolean, isProtected?: boolean) {\n  const wrapperStyle = imageSize && `width: ${imageSize.width}px; height: ${imageSize.height}px`;\n  const videoStyle = `background-image: url(${blobUrl})`;\n  return blobUrl\n    ? (\n      <div\n        className=\"VideoPlayer\"\n      >\n        {isProtected && <div onContextMenu={stopEvent} className=\"protector\" />}\n        <div\n          style={wrapperStyle}\n        >\n          {/* eslint-disable-next-line jsx-a11y/media-has-caption */}\n          <video\n            style={videoStyle}\n            className={buildClassName(isProtected && 'is-protected')}\n            draggable={Boolean(canDrag)}\n          />\n        </div>\n      </div>\n    )\n    : (\n      <div\n        className=\"spinner-wrapper\"\n        style={imageSize ? `width: ${imageSize.width}px` : ''}\n      >\n        <Spinner color=\"white\" />\n      </div>\n    );\n}\n\nfunction shouldForceMobileVersion(posterSize?: { width: number; height: number }) {\n  if (!posterSize) return false;\n  return posterSize.width < MOBILE_VERSION_CONTROL_WIDTH;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\n\nimport type { MediaViewerOrigin, ThreadId } from '../../types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport { animateNumber, timingFunctions } from '../../util/animation';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport { clamp, isBetween, round } from '../../util/math';\nimport { debounce } from '../../util/schedulers';\nimport { IS_IOS, IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useDerivedState from '../../hooks/useDerivedState';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { useSignalRef } from '../../hooks/useSignalRef';\nimport { useFullscreenStatus } from '../../hooks/window/useFullscreen';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useControlsSignal from './hooks/useControlsSignal';\nimport useZoomChange from './hooks/useZoomChangeSignal';\n\nimport MediaViewerContent from './MediaViewerContent';\n\nimport './MediaViewerSlides.scss';\n\nconst { easeOutCubic, easeOutQuart } = timingFunctions;\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n  isVideo?: boolean;\n  isGif?: boolean;\n  isPhoto?: boolean;\n  isOpen?: boolean;\n  chatId?: string;\n  threadId?: ThreadId;\n  avatarOwnerId?: string;\n  origin?: MediaViewerOrigin;\n  withAnimation?: boolean;\n  isHidden?: boolean;\n  hasFooter?: boolean;\n  getNextItem: (from: MediaViewerItem, direction: number) => MediaViewerItem | undefined;\n  selectItem: (item: MediaViewerItem) => void;\n  loadMoreItemsIfNeeded: (item: MediaViewerItem) => void;\n  onFooterClick: (e: React.MouseEvent<HTMLDivElement>) => void;\n  handleSponsoredClick: (isFromMedia?: boolean) => void;\n  onClose: () => void;\n};\n\nconst SWIPE_X_THRESHOLD = 50;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SLIDES_GAP = IS_TOUCH_ENV ? 40 : 0;\nconst ANIMATION_DURATION = 350;\nconst DEBOUNCE_SELECT_MEDIA = 350;\nconst DEBOUNCE_SWIPE = 500;\nconst DEBOUNCE_ACTIVE = 800;\nconst DOUBLE_TAP_ZOOM = 3;\nconst CLICK_Y_THRESHOLD = 80;\nconst HEADER_HEIGHT = 60;\nconst MAX_ZOOM = 4;\nconst MIN_ZOOM = 1;\nlet cancelAnimation: Function | undefined;\nlet cancelZoomAnimation: Function | undefined;\n\ntype Transform = {\n  x: number;\n  y: number;\n  scale: number;\n};\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nconst MediaViewerSlides: FC<OwnProps> = ({\n  item,\n  isVideo,\n  isGif,\n  isOpen,\n  withAnimation,\n  isHidden,\n  isLoadingMoreMedia,\n  isSynced,\n  loadMoreItemsIfNeeded,\n  getNextItem,\n  selectItem,\n  onClose,\n  onFooterClick,\n  handleSponsoredClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const activeSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const leftSlideRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const rightSlideRef = useRef<HTMLDivElement>(null);\n  const lastTransformRef = useRef<Transform>({ x: 0, y: 0, scale: 1 });\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const initialContentRectRef = useRef<DOMRect | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const [isActive, setIsActive] = useState(true);\n  const [getZoomChange] = useZoomChange();\n  const prevZoomChangeRef = useRef(getZoomChange());\n  const isFullscreen = useFullscreenStatus();\n  const [isMouseDown, setIsMouseDown] = useState(false);\n  const [getTransform, setTransform] = useSignal<Transform>({ x: 0, y: 0, scale: 1 });\n  const transformRef = useSignalRef(getTransform);\n  const [getActiveItem, setActiveItem] = useSignal<MediaViewerItem | undefined>(item);\n  const activeItemRef = useSignalRef(getActiveItem);\n  const isScaled = useDerivedState(() => getTransform().scale !== 1, [getTransform]);\n  const activeItem = useDerivedState(getActiveItem);\n  const { height: windowHeight, width: windowWidth, isResizing } = useWindowSize();\n  const [getControlsVisible, setControlsVisible, lockControls] = useControlsSignal();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  const selectItemDebounced = useDebouncedCallback(selectItem, [selectItem], DEBOUNCE_SELECT_MEDIA, true);\n  const clearSwipeDirectionDebounced = useDebouncedCallback(() => {\n    swipeDirectionRef.current = undefined;\n  }, [], DEBOUNCE_SWIPE, true);\n\n  const setIsActiveDebounced = useDebouncedCallback((value) => setIsActive(value), [], DEBOUNCE_ACTIVE, true);\n\n  const shouldCloseOnVideo = Boolean(isGif && !IS_IOS);\n  const clickXThreshold = IS_TOUCH_ENV ? 40 : windowWidth / 10;\n\n  const handleControlsVisibility = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    if (!IS_TOUCH_ENV) return;\n    const isFooter = windowHeight - e.pageY < CLICK_Y_THRESHOLD;\n    if (!isFooter && e.pageX < clickXThreshold) return;\n    if (!isFooter && e.pageX > windowWidth - clickXThreshold) return;\n    setControlsVisible(!getControlsVisible());\n  });\n\n  useTimeout(() => setControlsVisible(true), ANIMATION_DURATION);\n\n  useEffect(() => {\n    const { scale, x, y } = transformRef.current;\n    // Only update active media if slide is in default position\n    if (x === 0 && y === 0 && scale === 1) {\n      setActiveItem(item);\n    }\n  }, [item, setActiveItem, transformRef]);\n\n  useEffect(() => {\n    if (!isSynced || !activeItem || isLoadingMoreMedia) return;\n    loadMoreItemsIfNeeded(activeItem);\n  }, [activeItem, loadMoreItemsIfNeeded, isSynced, isLoadingMoreMedia]);\n\n  useLayoutEffect(() => {\n    const { x, y, scale } = getTransform();\n    lockControls(scale !== 1);\n    if (leftSlideRef.current) {\n      leftSlideRef.current.style.transform = getTransformStyle(-windowWidth + x - SLIDES_GAP);\n    }\n    if (activeSlideRef.current) {\n      activeSlideRef.current.style.transform = getTransformStyle(x, y, scale);\n    }\n    if (rightSlideRef.current) {\n      rightSlideRef.current.style.transform = getTransformStyle(windowWidth + x + SLIDES_GAP);\n    }\n  }, [getTransform, lockControls, windowWidth]);\n\n  useEffect(() => {\n    if (!containerRef.current || activeItemRef.current === undefined || isHidden || isFullscreen) {\n      return undefined;\n    }\n    let lastTransform = lastTransformRef.current;\n    const lastDragOffset = {\n      x: 0,\n      y: 0,\n    };\n    const lastZoomCenter = {\n      x: 0,\n      y: 0,\n    };\n    const panDelta = {\n      x: 0,\n      y: 0,\n    };\n    let lastGestureTime = Date.now();\n    let content: HTMLElement | null;\n    const setLastGestureTime = debounce(() => {\n      lastGestureTime = Date.now();\n    }, 500, false, true);\n\n    const changeSlide = (direction: number) => {\n      const cActiveItem = activeItemRef.current;\n      if (cActiveItem === undefined) return false;\n      const nextItem = getNextItem(cActiveItem, direction);\n      if (nextItem !== undefined) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        const transform = transformRef.current;\n        const x = transform.x + offset;\n        setIsActive(false);\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n        setIsActiveDebounced(true);\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        if (!withAnimation) {\n          setTransform(lastTransform);\n          return true;\n        }\n        cancelAnimation = animateNumber({\n          from: x,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            y: 0,\n            x: value,\n            scale: 1,\n          }),\n        });\n        return true;\n      }\n      return false;\n    };\n\n    const changeSlideOnClick = (e: MouseEvent): [boolean, boolean] => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return [false, false];\n      if ((e.target as HTMLElement).closest('div.VideoPlayerControls')) {\n        return [false, false];\n      }\n      let direction = 0;\n      if (windowHeight - e.pageY < CLICK_Y_THRESHOLD) {\n        return [false, false];\n      }\n      if (e.pageX < clickXThreshold) {\n        direction = -1;\n      } else if (e.pageX > windowWidth - clickXThreshold) {\n        direction = 1;\n      }\n      const hasNextSlide = changeSlide(direction);\n      const isInThreshold = direction !== 0;\n      return [isInThreshold, hasNextSlide];\n    };\n\n    const handleKeyDown = (e: KeyboardEvent) => {\n      const { scale } = transformRef.current;\n      if (scale !== 1) return;\n      switch (e.key) {\n        case 'Left': // IE/Edge specific value\n        case 'ArrowLeft':\n          changeSlide(-1);\n          break;\n\n        case 'Right': // IE/Edge specific value\n        case 'ArrowRight':\n          changeSlide(1);\n          break;\n      }\n    };\n\n    const calculateOffsetBoundaries = (\n      { x, y, scale }: Transform,\n      offsetTop = 0,\n    ): [Transform, boolean, boolean] => {\n      const initialContentRect = initialContentRectRef.current;\n      if (!initialContentRect) return [{ x, y, scale }, true, true];\n      // Get current content boundaries\n      let inBoundsX = true;\n      let inBoundsY = true;\n\n      const centerX = (windowWidth - windowWidth * scale) / 2;\n      const centerY = (windowHeight - windowHeight * scale) / 2;\n\n      // If content is outside window we calculate offset boundaries\n      // based on initial content rect and current scale\n      const minOffsetX = Math.max(-initialContentRect.left * scale, centerX);\n      const maxOffsetX = windowWidth - initialContentRect.right * scale;\n      inBoundsX = isBetween(x, maxOffsetX, minOffsetX);\n      x = clamp(x, maxOffsetX, minOffsetX);\n\n      const minOffsetY = Math.max(-initialContentRect.top * scale + offsetTop, centerY);\n      const maxOffsetY = windowHeight - initialContentRect.bottom * scale;\n      inBoundsY = isBetween(y, maxOffsetY, minOffsetY);\n      y = clamp(y, maxOffsetY, minOffsetY);\n\n      return [{ x, y, scale }, inBoundsX, inBoundsY];\n    };\n\n    const onRelease = (e: MouseEvent | RealTouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      if (e.type === 'mouseup') {\n        setIsMouseDown(false);\n      }\n      const transform = transformRef.current;\n      const { y, scale } = transform;\n      let x = transform.x;\n      const absX = Math.abs(x);\n      const absY = Math.abs(y);\n\n      clearSwipeDirectionDebounced();\n      setIsActiveDebounced(true);\n\n      // If scale is less than 1 we need to bounce back\n      if (scale < 1) {\n        lastTransform = { x: 0, y: 0, scale: 1 };\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [0, 0, 1],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      if (scale > 1) {\n        // Get current content boundaries\n        const s1 = Math.min(scale, MAX_ZOOM);\n        const scaleFactor = s1 / scale;\n\n        // Calculate new position based on the last zoom center to keep the zoom center\n        // at the same position when bouncing back from max zoom\n        let x1 = x * scaleFactor + (lastZoomCenter.x - scaleFactor * lastZoomCenter.x);\n        let y1 = y * scaleFactor + (lastZoomCenter.y - scaleFactor * lastZoomCenter.y);\n\n        // Arbitrary pan velocity coefficient\n        const k = 0.15;\n\n        // If scale didn't change, we need to add inertia to pan gesture\n        if (e.type !== 'wheel' && lastTransform.scale === scale) {\n          // Calculate user gesture velocity\n          const Vx = Math.abs(lastDragOffset.x) / (Date.now() - lastGestureTime);\n          const Vy = Math.abs(lastDragOffset.y) / (Date.now() - lastGestureTime);\n\n          // Add extra distance based on gesture velocity and last pan delta\n          x1 -= Math.abs(lastDragOffset.x) * Vx * k * panDelta.x;\n          y1 -= Math.abs(lastDragOffset.y) * Vy * k * panDelta.y;\n        }\n\n        [lastTransform] = calculateOffsetBoundaries({ x: x1, y: y1, scale: s1 }, HEADER_HEIGHT);\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: value[0],\n            y: value[1],\n            scale: value[2],\n          }),\n        });\n        return;\n      }\n      lastTransform = {\n        x,\n        y,\n        scale,\n      };\n      if (absY >= SWIPE_Y_THRESHOLD) {\n        onClose();\n        return;\n      }\n      // Bounce back if vertical swipe is below threshold\n      if (absY > 0) {\n        cancelAnimation = animateNumber({\n          from: y,\n          to: 0,\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => setTransform({\n            x: 0,\n            y: value,\n            scale,\n          }),\n        });\n        return;\n      }\n      // Get horizontal swipe direction\n      const direction = x < 0 ? 1 : -1;\n      const cActiveItem = activeItemRef.current;\n      const nextItem = cActiveItem && getNextItem(cActiveItem, x < 0 ? 1 : -1);\n      // Get the direction of the last pan gesture.\n      // Could be different from the total horizontal swipe direction\n      // if user starts a swipe in one direction and then changes the direction\n      // we need to cancel slide transition\n      const dirX = panDelta.x < 0 ? -1 : 1;\n      if (nextItem !== undefined && absX >= SWIPE_X_THRESHOLD && direction === dirX) {\n        const offset = (windowWidth + SLIDES_GAP) * direction;\n        // If image is shifted by more than SWIPE_X_THRESHOLD,\n        // We shift everything by one screen width and then set new active message id\n        x += offset;\n        setActiveItem(nextItem);\n        selectItemDebounced(nextItem);\n      }\n      // Then we always return to the original position\n      cancelAnimation = animateNumber({\n        from: x,\n        to: 0,\n        duration: ANIMATION_DURATION,\n        timing: easeOutCubic,\n        onUpdate: (value) => setTransform({\n          y: 0,\n          x: value,\n          scale: scale ?? 1,\n        }),\n      });\n    };\n\n    const cleanup = captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      excludedClosestSelector: '.MediaViewerFooter, .ZoomControls, .VideoPlayerControls',\n      minZoom: MIN_ZOOM,\n      maxZoom: MAX_ZOOM,\n      doubleTapZoom: DOUBLE_TAP_ZOOM,\n      withWheelDrag: true,\n      onCapture: (e) => {\n        if (checkIfControlTarget(e)) return;\n        const { x, y, scale } = transformRef.current;\n        if (e.type === 'mousedown') {\n          setIsMouseDown(true);\n          if (scale !== 1) {\n            e.preventDefault();\n            return;\n          }\n        }\n        lastGestureTime = Date.now();\n        if (x === 0 && y === 0 && scale === 1) {\n          if (!activeSlideRef.current) return;\n          content = activeSlideRef.current.querySelector('img, video');\n          if (!content) return;\n          // Store initial content rect, without transformations\n          initialContentRectRef.current = content.getBoundingClientRect();\n        }\n      },\n      onDrag: (event, captureEvent, {\n        dragOffsetX,\n        dragOffsetY,\n      }, cancelDrag) => {\n        if (isReleasedRef.current || checkIfControlTarget(event)) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (cancelAnimation) {\n          cancelAnimation();\n          cancelAnimation = undefined;\n        }\n        panDelta.x = lastDragOffset.x - dragOffsetX;\n        panDelta.y = lastDragOffset.y - dragOffsetY;\n        lastDragOffset.x = dragOffsetX;\n        lastDragOffset.y = dragOffsetY;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const { x, y, scale } = transformRef.current;\n\n        // If user is inactive but is still touching the screen\n        // we reset last gesture time\n        setLastGestureTime();\n\n        // If image is scaled we just need to pan it\n        if (scale !== 1) {\n          const x1 = lastTransform.x + dragOffsetX;\n          const y1 = lastTransform.y + dragOffsetY;\n          if (['wheel', 'mousemove'].includes(event.type)) {\n            const [transform, inBoundsX, inBoundsY] = calculateOffsetBoundaries({ x: x1, y: y1, scale }, HEADER_HEIGHT);\n            if (cancelDrag) cancelDrag(!inBoundsX, !inBoundsY);\n            setTransform(transform);\n            return;\n          }\n          if ('touches' in event && event.touches.length === 1) {\n            setTransform({\n              x: x1,\n              y: y1,\n              scale,\n            });\n          }\n          return;\n        }\n        if (event.type === 'mousemove') return;\n        if (swipeDirectionRef.current !== SwipeDirection.Vertical) {\n          // If user is swiping horizontally or horizontal shift is dominant\n          // we change only horizontal position\n          if (swipeDirectionRef.current === SwipeDirection.Horizontal\n            || Math.abs(x) > SWIPE_DIRECTION_THRESHOLD || absOffsetX / absOffsetY > SWIPE_DIRECTION_TOLERANCE) {\n            swipeDirectionRef.current = SwipeDirection.Horizontal;\n            setIsActive(false);\n            const limit = windowWidth + SLIDES_GAP;\n            const x1 = clamp(dragOffsetX, -limit, limit);\n            setTransform({\n              x: x1,\n              y: 0,\n              scale,\n            });\n            // We know that at this point onRelease will trigger slide change,\n            // We can trigger onRelease directly instead of waiting for the debounced callback\n            // to avoid a delay\n            if (event.type === 'wheel' && Math.abs(x1) > SWIPE_X_THRESHOLD * 2) {\n              onRelease(event);\n              isReleasedRef.current = true;\n            }\n            return;\n          }\n        }\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(y) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          const y1 = clamp(dragOffsetY, -limit, limit);\n          setTransform({\n            x: 0,\n            y: y1,\n            scale,\n          });\n          if (event.type === 'wheel' && Math.abs(y1) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onZoom: (e, {\n        zoom,\n        zoomFactor,\n        initialCenterX,\n        initialCenterY,\n        dragOffsetX,\n        dragOffsetY,\n        currentCenterX,\n        currentCenterY,\n      }) => {\n        if (cancelAnimation) cancelAnimation();\n        initialCenterX = initialCenterX || windowWidth / 2;\n        initialCenterY = initialCenterY || windowHeight / 2;\n        currentCenterX = currentCenterX || windowWidth / 2;\n        currentCenterY = currentCenterY || windowHeight / 2;\n\n        // Calculate current scale based on zoom factor and limits, add zoom margin for bounce back effect\n        const scale = zoom ?? clamp(lastTransform.scale * zoomFactor!, MIN_ZOOM * 0.5, MAX_ZOOM * 3);\n        const scaleFactor = scale / lastTransform.scale;\n        const offsetX = Math.abs(Math.min(lastTransform.x, 0));\n        const offsetY = Math.abs(Math.min(lastTransform.y, 0));\n\n        // Save last zoom center for bounce back effect\n        lastZoomCenter.x = currentCenterX;\n        lastZoomCenter.y = currentCenterY;\n\n        // Calculate new center relative to the shifted image\n        const scaledCenterX = offsetX + initialCenterX;\n        const scaledCenterY = offsetY + initialCenterY;\n\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (scaledCenterX - scaleFactor * scaledCenterX);\n        const scaleOffsetY = (scaledCenterY - scaleFactor * scaledCenterY);\n\n        const [transform] = calculateOffsetBoundaries({\n          x: lastTransform.x + scaleOffsetX + dragOffsetX,\n          y: lastTransform.y + scaleOffsetY + dragOffsetY,\n          scale,\n        });\n\n        setTransform(transform);\n      },\n      onClick(e) {\n        setIsMouseDown(false);\n        const [isInThreshold, hasNextSlide] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          if (IS_TOUCH_ENV) return;\n          if (!hasNextSlide) onClose();\n          return;\n        }\n        if (lastTransform.scale !== 1 || IS_TOUCH_ENV) return;\n        if (shouldCloseOnVideo || !checkIfInsideSelector(e.target as HTMLElement, '.VideoPlayer')) {\n          onClose();\n        }\n      },\n      onDoubleClick(e, {\n        centerX,\n        centerY,\n      }) {\n        const [isInThreshold] = changeSlideOnClick(e as MouseEvent);\n        if (isInThreshold) {\n          e.preventDefault();\n          e.stopPropagation();\n          return;\n        }\n        if (!IS_TOUCH_ENV && e.type !== 'wheel') return;\n        const { x, y, scale } = transformRef.current;\n        // Calculate how much we need to shift the image to keep the zoom center at the same position\n        const scaleOffsetX = (centerX - DOUBLE_TAP_ZOOM * centerX);\n        const scaleOffsetY = (centerY - DOUBLE_TAP_ZOOM * centerY);\n        if (scale === 1) {\n          if (x !== 0 || y !== 0) return;\n          lastTransform = calculateOffsetBoundaries({\n            x: scaleOffsetX,\n            y: scaleOffsetY,\n            scale: DOUBLE_TAP_ZOOM,\n          })[0];\n        } else {\n          lastTransform = {\n            x: 0,\n            y: 0,\n            scale: 1,\n          };\n        }\n        cancelAnimation = animateNumber({\n          from: [x, y, scale],\n          to: [lastTransform.x, lastTransform.y, lastTransform.scale],\n          duration: ANIMATION_DURATION,\n          timing: easeOutCubic,\n          onUpdate: (value) => {\n            const transform = {\n              x: value[0],\n              y: value[1],\n              scale: value[2],\n            };\n            setTransform(transform);\n          },\n        });\n      },\n      onRelease,\n    });\n    document.addEventListener('keydown', handleKeyDown, false);\n    return () => {\n      cleanup();\n      document.removeEventListener('keydown', handleKeyDown, false);\n    };\n  },\n  [\n    activeItemRef,\n    clearSwipeDirectionDebounced,\n    clickXThreshold,\n    getNextItem,\n    isFullscreen,\n    isHidden,\n    onClose,\n    selectItemDebounced,\n    setActiveItem,\n    setIsActiveDebounced,\n    setTransform,\n    shouldCloseOnVideo,\n    transformRef,\n    windowHeight,\n    windowWidth,\n    withAnimation,\n  ]);\n\n  useEffect(() => {\n    const zoomChange = getZoomChange();\n    const hasZoomChanged = prevZoomChangeRef.current !== undefined\n      && prevZoomChangeRef.current !== zoomChange;\n    if (!containerRef.current || !hasZoomChanged || isHidden || isFullscreen) return;\n    prevZoomChangeRef.current = zoomChange;\n    const { scale } = transformRef.current;\n    const dir = zoomChange > 0 ? -1 : +1;\n    const minZoom = MIN_ZOOM * 0.6;\n    const maxZoom = MAX_ZOOM * 3;\n    let steps = 100;\n    let prevValue = 0;\n    if (scale <= minZoom && dir > 0) return;\n    if (scale >= maxZoom && dir < 0) return;\n    if (scale === 1 && dir > 0) steps = 20;\n    if (cancelZoomAnimation) cancelZoomAnimation();\n    cancelZoomAnimation = animateNumber({\n      from: dir,\n      to: dir * steps,\n      duration: ANIMATION_DURATION,\n      timing: easeOutQuart,\n      onUpdate: (value) => {\n        if (!containerRef.current) return;\n        const delta = round(value - prevValue, 2);\n        prevValue = value;\n        // To reuse existing logic we trigger wheel event for zoom buttons\n        const wheelEvent = new WheelEvent('wheel', {\n          deltaY: delta,\n          ctrlKey: true,\n        });\n        containerRef.current.dispatchEvent(wheelEvent);\n      },\n    });\n  }, [getZoomChange, isHidden, isFullscreen, transformRef]);\n\n  const [prevItem, nextItem] = useMemo(() => {\n    if (activeItem === undefined) return [undefined, undefined];\n    return [getNextItem(activeItem, -1), getNextItem(activeItem, 1)];\n  }, [activeItem, getNextItem]);\n\n  if (activeItem === undefined) return undefined;\n\n  const hasPrev = prevItem !== undefined;\n  const hasNext = nextItem !== undefined;\n  const isMoving = isMouseDown && isScaled;\n\n  return (\n    <div className=\"MediaViewerSlides\" ref={containerRef}>\n      <div className=\"MediaViewerSlide\" ref={leftSlideRef}>\n        {hasPrev && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={prevItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'MediaViewerSlide',\n          'MediaViewerSlide--active',\n          isMoving && 'MediaViewerSlide--moving',\n        )}\n        onClick={handleControlsVisibility}\n        ref={activeSlideRef}\n      >\n        <MediaViewerContent\n          item={activeItem}\n          withAnimation={withAnimation}\n          isActive={isActive}\n          isMoving={isMoving}\n          onClose={onClose}\n          onFooterClick={onFooterClick}\n          handleSponsoredClick={handleSponsoredClick}\n        />\n      </div>\n      <div className=\"MediaViewerSlide\" ref={rightSlideRef}>\n        {hasNext && !isScaled && !isResizing && (\n          <MediaViewerContent\n            withAnimation={withAnimation}\n            isMoving={isMoving}\n            item={nextItem}\n            onClose={onClose}\n            onFooterClick={onFooterClick}\n            handleSponsoredClick={handleSponsoredClick}\n          />\n        )}\n      </div>\n      {hasPrev && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation prev ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('AccDescrPrevious')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n      {hasNext && !isScaled && !IS_TOUCH_ENV && (\n        <button\n          type=\"button\"\n          className={`navigation next ${isVideo && !isGif && 'inline'}`}\n          aria-label={lang('Next')}\n          dir={lang.isRtl ? 'rtl' : undefined}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(MediaViewerSlides);\n\nfunction getTransformStyle(x = 0, y = 0, scale = 1) {\n  return `translate3d(${x.toFixed(3)}px, ${y.toFixed(3)}px, 0px) scale(${scale.toFixed(3)})`;\n}\n\nfunction checkIfInsideSelector(element: HTMLElement, selector: string) {\n  if (!element) return false;\n  if (element.matches(selector)) return true;\n  return Boolean(element.closest(selector));\n}\n\nfunction checkIfControlTarget(e: TouchEvent | MouseEvent) {\n  const target = e.target as HTMLElement;\n  if (checkIfInsideSelector(target, '.VideoPlayerControls')) {\n    if (checkIfInsideSelector(\n      target,\n      '.play, .fullscreen, .volume, .volume-slider, .playback-rate, .playback-rate-menu, .SeekLine',\n    )) {\n      return true;\n    }\n    e.preventDefault();\n    return true;\n  }\n  return false;\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiPeer } from '../../api/types';\nimport type { MediaViewerItem } from './helpers/getViewableMedia';\n\nimport {\n  isChatChannel, isChatGroup, isUserId,\n} from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectSender,\n} from '../../global/selectors';\nimport { formatMediaDateTime } from '../../util/dates/dateFormat';\nimport renderText from '../common/helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\n\nimport './SenderInfo.scss';\n\ntype OwnProps = {\n  item?: MediaViewerItem;\n};\n\ntype StateProps = {\n  owner?: ApiPeer;\n};\n\nconst BULLET = '\\u2022';\nconst ANIMATION_DURATION = 350;\n\nconst SenderInfo: FC<OwnProps & StateProps> = ({\n  owner,\n  item,\n}) => {\n  const {\n    closeMediaViewer,\n    focusMessage,\n    toggleChatInfo,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n\n  const handleFocusMessage = useLastCallback(() => {\n    closeMediaViewer();\n\n    if (item?.type !== 'message') return;\n\n    const message = item.message;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId: message.chatId, messageId: message.id });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId: message.chatId, messageId: message.id });\n    }\n  });\n\n  const lang = useOldLang();\n\n  const subtitle = useMemo(() => {\n    if (!item || item.type === 'standalone') return undefined;\n\n    const avatarOwner = item.type === 'avatar' ? item.avatarOwner : undefined;\n    const profilePhotos = item.type === 'avatar' ? item.profilePhotos : undefined;\n    const avatar = profilePhotos?.photos[item.mediaIndex!];\n    const isFallbackAvatar = avatar?.id === profilePhotos?.fallbackPhoto?.id;\n    const isPersonalAvatar = avatar?.id === profilePhotos?.personalPhoto?.id;\n    const date = item.type === 'message' ? item.message.date : avatar?.date;\n    if (!date) return undefined;\n\n    const formattedDate = formatMediaDateTime(lang, date * 1000, true);\n    const count = profilePhotos?.count\n      && (profilePhotos.count + (profilePhotos?.fallbackPhoto ? 1 : 0));\n    const currentIndex = item.mediaIndex! + 1 + (profilePhotos?.personalPhoto ? -1 : 0);\n    const countText = count && lang('Of', [currentIndex, count]);\n\n    const parts: string[] = [];\n    if (avatar) {\n      const chat = !isUserId(avatarOwner!.id) ? avatarOwner as ApiChat : undefined;\n      const isChannel = chat && isChatChannel(chat);\n      const isGroup = chat && isChatGroup(chat);\n      parts.push(lang(\n        isPersonalAvatar ? 'lng_mediaview_profile_photo_by_you'\n          : isFallbackAvatar ? 'lng_mediaview_profile_public_photo'\n            : isChannel ? 'lng_mediaview_channel_photo'\n              : isGroup ? 'lng_mediaview_group_photo' : 'lng_mediaview_profile_photo',\n      ));\n    }\n\n    if (countText && !isPersonalAvatar && !isFallbackAvatar) {\n      parts.push(countText);\n    }\n\n    parts.push(formattedDate);\n\n    return parts.join(` ${BULLET} `);\n  }, [item, lang]);\n\n  if (!owner) {\n    return undefined;\n  }\n\n  const senderTitle = getPeerTitle(lang, owner);\n\n  return (\n    <div className=\"SenderInfo\" onClick={handleFocusMessage}>\n      <Avatar key={owner.id} size=\"medium\" peer={owner} />\n      <div className=\"meta\">\n        <div className=\"title\" dir=\"auto\">\n          {senderTitle && renderText(senderTitle)}\n        </div>\n        <div className=\"date\" dir=\"auto\">\n          {subtitle}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default withGlobal<OwnProps>(\n  (global, { item }): StateProps => {\n    const message = item?.type === 'message' ? item.message : undefined;\n    const messageSender = message && selectSender(global, message);\n\n    const owner = item?.type === 'avatar' ? item.avatarOwner : messageSender;\n\n    return {\n      owner,\n    };\n  },\n)(SenderInfo);\n","import React, {\n  beginHeavyAnimation,\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPeer,\n  ApiPeerPhotos,\n  ApiPhoto,\n  ApiSponsoredMessage,\n} from '../../api/types';\nimport { type MediaViewerMedia, MediaViewerOrigin, type ThreadId } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport {\n  getChatMediaMessageIds, getMessagePaidMedia, isChatAdmin, isUserId,\n} from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectChatMessages,\n  selectChatScheduledMessages,\n  selectCurrentChatMediaSearch,\n  selectCurrentSharedMediaSearch,\n  selectIsChatWithSelf,\n  selectListedIds,\n  selectOutlyingListByMessageId,\n  selectPeer,\n  selectPeerPhotos,\n  selectPerformanceSettingsValue,\n  selectScheduledMessage, selectSponsoredMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport { stopCurrentAudio } from '../../util/audioPlayer';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { MEDIA_VIEWER_MEDIA_QUERY } from '../common/helpers/mediaDimensions';\nimport { renderMessageText } from '../common/helpers/renderMessageText';\nimport getViewableMedia, { getMediaViewerItem, type MediaViewerItem } from './helpers/getViewableMedia';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useElectronDrag from '../../hooks/useElectronDrag';\nimport useFlag from '../../hooks/useFlag';\nimport useForceUpdate from '../../hooks/useForceUpdate';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport { exitPictureInPictureIfNeeded, usePictureInPictureSignal } from '../../hooks/usePictureInPicture';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport { useMediaProps } from './hooks/useMediaProps';\n\nimport Icon from '../common/icons/Icon';\nimport ReportAvatarModal from '../common/ReportAvatarModal';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport Transition from '../ui/Transition';\nimport MediaViewerActions from './MediaViewerActions';\nimport MediaViewerSlides from './MediaViewerSlides';\nimport SenderInfo from './SenderInfo';\n\nimport './MediaViewer.scss';\n\ntype StateProps = {\n  chatId?: string;\n  threadId?: ThreadId;\n  messageId?: number;\n  message?: ApiMessage;\n  collectedMessageIds?: number[];\n  isChatWithSelf?: boolean;\n  canUpdateMedia?: boolean;\n  origin?: MediaViewerOrigin;\n  avatar?: ApiPhoto;\n  avatarOwner?: ApiPeer;\n  profilePhotos?: ApiPeerPhotos;\n  chatMessages?: Record<number, ApiMessage>;\n  sponsoredMessage?: ApiSponsoredMessage;\n  standaloneMedia?: MediaViewerMedia[];\n  mediaIndex?: number;\n  isHidden?: boolean;\n  withAnimation?: boolean;\n  shouldSkipHistoryAnimations?: boolean;\n  withDynamicLoading?: boolean;\n  isLoadingMoreMedia?: boolean;\n  isSynced?: boolean;\n};\n\nconst ANIMATION_DURATION = 250;\nconst AVATAR_LOAD_TRIGGER = 4;\n\nconst MediaViewer = ({\n  chatId,\n  threadId,\n  messageId,\n  message,\n  collectedMessageIds,\n  isChatWithSelf,\n  canUpdateMedia,\n  origin,\n  avatar,\n  avatarOwner,\n  profilePhotos,\n  chatMessages,\n  sponsoredMessage,\n  standaloneMedia,\n  mediaIndex,\n  withAnimation,\n  isHidden,\n  shouldSkipHistoryAnimations,\n  withDynamicLoading,\n  isLoadingMoreMedia,\n  isSynced,\n}: StateProps) => {\n  const {\n    openMediaViewer,\n    closeMediaViewer,\n    openForwardMenu,\n    focusMessage,\n    toggleChatInfo,\n    searchChatMediaMessages,\n    loadMoreProfilePhotos,\n    clickSponsoredMessage,\n    openUrl,\n  } = getActions();\n\n  const isOpen = Boolean(avatarOwner || message || standaloneMedia || sponsoredMessage);\n  const { isMobile } = useAppLayout();\n\n  /* Animation */\n  const animationKey = useRef<number>();\n  const senderId = message?.senderId || avatarOwner?.id || message?.chatId;\n  const prevSenderId = usePreviousDeprecated<string | undefined>(senderId);\n  const headerAnimation = withAnimation ? 'slideFade' : 'none';\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  /* Controls */\n  const [isReportAvatarModalOpen, openReportAvatarModal, closeReportAvatarModal] = useFlag();\n\n  const currentItem = getMediaViewerItem({\n    message, avatarOwner, standaloneMedia, profilePhotos, mediaIndex, sponsoredMessage,\n  });\n  const { media, isSingle } = getViewableMedia(currentItem) || {};\n\n  const {\n    isVideo,\n    isPhoto,\n    bestImageData,\n    bestData,\n    dimensions,\n    isGif,\n    isFromSharedMedia,\n  } = useMediaProps({\n    media, isAvatar: Boolean(avatarOwner), origin, delay: isGhostAnimation && ANIMATION_DURATION,\n  });\n\n  const canReportAvatar = (() => {\n    if (isChatWithSelf) return false;\n    if (currentItem?.type !== 'avatar' || !avatarOwner) return false;\n    const info = currentItem.profilePhotos;\n    if (media === info.personalPhoto) return false;\n    return true;\n  })();\n  const isVisible = !isHidden && isOpen;\n\n  const messageMediaIds = useMemo(() => {\n    return withDynamicLoading\n      ? collectedMessageIds\n      : getChatMediaMessageIds(chatMessages || {}, collectedMessageIds || [], isFromSharedMedia);\n  }, [chatMessages, collectedMessageIds, isFromSharedMedia, withDynamicLoading]);\n\n  if (isOpen && (!prevSenderId || prevSenderId !== senderId || animationKey.current === undefined)) {\n    animationKey.current = isSingle ? 0 : (messageId || mediaIndex);\n  }\n\n  const [getIsPictureInPicture] = usePictureInPictureSignal();\n\n  useEffect(() => {\n    if (!isOpen || getIsPictureInPicture()) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      stopPriorityPlayback();\n      enableDirectTextInput();\n    };\n  }, [isOpen, getIsPictureInPicture]);\n\n  useEffect(() => {\n    if (isVisible) {\n      exitPictureInPictureIfNeeded();\n    }\n  }, [isVisible]);\n\n  useEffect(() => {\n    if (isMobile) {\n      requestMutation(() => {\n        document.body.classList.toggle('is-media-viewer-open', isOpen);\n      });\n    }\n  }, [isMobile, isOpen]);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  useElectronDrag(headerRef);\n\n  const forceUpdate = useForceUpdate();\n  useEffect(() => {\n    const mql = window.matchMedia(MEDIA_VIEWER_MEDIA_QUERY);\n    mql.addEventListener('change', forceUpdate);\n\n    return () => {\n      mql.removeEventListener('change', forceUpdate);\n    };\n  }, [forceUpdate]);\n\n  const prevMessage = usePreviousDeprecated<ApiMessage | undefined>(message);\n  const prevIsHidden = usePreviousDeprecated<boolean | undefined>(isHidden);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const prevItem = usePreviousDeprecated(currentItem);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const textParts = message ? renderMessageText({ message, forcePlayback: true, isForMediaViewer: true }) : undefined;\n  const hasFooter = Boolean(textParts);\n  const shouldAnimateOpening = prevIsHidden && prevItem !== currentItem;\n\n  useEffect(() => {\n    if (isGhostAnimation && isOpen && (shouldAnimateOpening || !prevItem)) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(hasFooter, origin!, bestImageData!, dimensions!, isVideo, message, mediaIndex);\n    }\n\n    if (isGhostAnimation && !isOpen && prevItem) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevOrigin!, prevBestImageData!, prevMessage, prevItem?.mediaIndex);\n    }\n  }, [\n    bestImageData, dimensions, hasFooter, isGhostAnimation, isOpen, isVideo, message, origin,\n    prevBestImageData, prevItem, prevMessage, prevOrigin, shouldAnimateOpening, mediaIndex,\n  ]);\n\n  const handleClose = useLastCallback(() => closeMediaViewer());\n\n  const handleFooterClick = useLastCallback((e: React.MouseEvent<HTMLDivElement>) => {\n    if (e.target instanceof HTMLElement && e.target.closest('a')) return; // Prevent closing on timestamp click\n\n    handleClose();\n\n    if (!chatId || !messageId) return;\n\n    if (isMobile) {\n      setTimeout(() => {\n        toggleChatInfo({ force: false }, { forceSyncOnIOs: true });\n        focusMessage({ chatId, threadId, messageId });\n      }, ANIMATION_DURATION);\n    } else {\n      focusMessage({ chatId, threadId, messageId });\n    }\n  });\n\n  const handleSponsoredClick = useLastCallback((isFromMedia?: boolean) => {\n    if (!sponsoredMessage || !chatId) return;\n\n    clickSponsoredMessage({ isMedia: isFromMedia, isFullscreen: true, peerId: chatId });\n    openUrl({ url: sponsoredMessage!.url });\n    closeMediaViewer();\n  });\n\n  const handleForward = useLastCallback(() => {\n    openForwardMenu({\n      fromChatId: chatId!,\n      messageIds: [messageId!],\n    });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isVideo && !isGif) {\n      stopCurrentAudio();\n    }\n  }, [isGif, isVideo]);\n\n  const loadMoreItemsIfNeeded = useLastCallback((item?: MediaViewerItem) => {\n    if (!item || isLoadingMoreMedia) return;\n\n    if (item.type === 'avatar') {\n      const isNearEnd = item.mediaIndex >= item.profilePhotos.photos.length - AVATAR_LOAD_TRIGGER;\n      if (!isNearEnd) return;\n      loadMoreProfilePhotos({ peerId: item.avatarOwner.id });\n    }\n\n    if (item.type === 'message' && withDynamicLoading) {\n      searchChatMediaMessages({ chatId, threadId, currentMediaMessageId: item.message.id });\n    }\n  });\n\n  const getNextItem = useLastCallback((from: MediaViewerItem, direction: number): MediaViewerItem | undefined => {\n    if (direction === 0 || isSingle) return undefined;\n\n    if (from.type === 'standalone') {\n      const { media: fromMedia, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && nextIndex < fromMedia.length) {\n        return { type: 'standalone', media: fromMedia, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'avatar') {\n      const { avatarOwner: fromAvatarOwner, profilePhotos: fromProfilePhotos, mediaIndex: fromMediaIndex } = from;\n      const nextIndex = fromMediaIndex + direction;\n      if (nextIndex >= 0 && fromProfilePhotos && nextIndex < fromProfilePhotos.photos.length) {\n        return {\n          type: 'avatar',\n          avatarOwner: fromAvatarOwner,\n          profilePhotos: fromProfilePhotos,\n          mediaIndex: nextIndex,\n        };\n      }\n\n      return undefined;\n    }\n\n    if (from.type === 'sponsoredMessage') {\n      const { message: fromSponsoredMessage, mediaIndex: fromSponsoredMessageIndex } = from;\n      const nextIndex = fromSponsoredMessageIndex! + direction;\n      if (nextIndex >= 0 && fromSponsoredMessage) {\n        return { type: 'sponsoredMessage', message: fromSponsoredMessage, mediaIndex: nextIndex };\n      }\n\n      return undefined;\n    }\n\n    const { message: fromMessage, mediaIndex: fromMediaIndex } = from;\n\n    const paidMedia = getMessagePaidMedia(fromMessage);\n    if (paidMedia) {\n      const nextIndex = fromMediaIndex! + direction;\n\n      if (nextIndex >= 0 && nextIndex < paidMedia.extendedMedia.length) {\n        return { type: 'message', message: fromMessage, mediaIndex: nextIndex };\n      }\n    }\n\n    const index = messageMediaIds?.indexOf(fromMessage.id);\n    if (index === undefined) return undefined;\n    const nextIndex = index + direction;\n    const nextMessageId = messageMediaIds![nextIndex];\n    const nextMessage = chatMessages?.[nextMessageId];\n    if (nextMessage) {\n      return { type: 'message', message: nextMessage };\n    }\n\n    return undefined;\n  });\n\n  const openMediaViewerItem = useLastCallback((item?: MediaViewerItem) => {\n    if (!item) {\n      handleClose();\n      return;\n    }\n\n    const itemChatId = item.type === 'avatar'\n      ? item.avatarOwner.id : item.type === 'message'\n        ? item.message.chatId : undefined;\n    const itemMessageId = item.type === 'message' ? item.message.id : undefined;\n    const itemStandaloneMedia = item.type === 'standalone' ? item.media : undefined;\n\n    openMediaViewer({\n      origin: origin!,\n      chatId: itemChatId,\n      messageId: itemMessageId,\n      standaloneMedia: itemStandaloneMedia,\n      mediaIndex: item.mediaIndex,\n      isAvatarView: item.type === 'avatar',\n      withDynamicLoading,\n    }, {\n      forceOnHeavyAnimation: true,\n    });\n  });\n\n  const handleBeforeDelete = useLastCallback(() => {\n    const mediaCount = profilePhotos?.photos.length\n      || standaloneMedia?.length || messageMediaIds?.length || 0;\n    if (mediaCount <= 1 || !currentItem) {\n      handleClose();\n      return;\n    }\n    // Before deleting, select previous media\n    const prevMedia = getNextItem(currentItem, -1);\n    if (prevMedia) {\n      openMediaViewerItem(prevMedia);\n      return;\n    }\n\n    if ((currentItem.type === 'avatar' && isUserId(currentItem.avatarOwner.id)) || currentItem.type === 'standalone') {\n      // Keep current item, it'll update when indexes shift\n      return;\n    }\n\n    handleClose();\n  });\n\n  const lang = useOldLang();\n\n  return (\n    <ShowTransition\n      id=\"MediaViewer\"\n      isOpen={isOpen}\n      isHidden={isHidden}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className=\"media-viewer-head\" dir={lang.isRtl ? 'rtl' : undefined} ref={headerRef}>\n        {isMobile && (\n          <Button\n            className=\"media-viewer-close\"\n            round\n            size=\"smaller\"\n            color=\"translucent-white\"\n            ariaLabel={lang('Close')}\n            onClick={handleClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <Transition activeKey={animationKey.current!} name={headerAnimation}>\n          <SenderInfo\n            key={media?.id}\n            item={currentItem}\n          />\n        </Transition>\n        <MediaViewerActions\n          mediaData={bestData}\n          isVideo={isVideo}\n          item={currentItem}\n          canUpdateMedia={canUpdateMedia}\n          canReportAvatar={canReportAvatar}\n          onBeforeDelete={handleBeforeDelete}\n          onReportAvatar={openReportAvatarModal}\n          onCloseMediaViewer={handleClose}\n          onForward={handleForward}\n        />\n        <ReportAvatarModal\n          isOpen={isReportAvatarModalOpen}\n          onClose={closeReportAvatarModal}\n          photo={avatar}\n          peerId={avatarOwner?.id}\n        />\n      </div>\n      <MediaViewerSlides\n        item={currentItem}\n        loadMoreItemsIfNeeded={loadMoreItemsIfNeeded}\n        isLoadingMoreMedia={isLoadingMoreMedia}\n        isSynced={isSynced}\n        getNextItem={getNextItem}\n        chatId={chatId}\n        isPhoto={isPhoto}\n        isGif={isGif}\n        threadId={threadId}\n        avatarOwnerId={avatarOwner?.id}\n        origin={origin}\n        isOpen={isOpen}\n        hasFooter={hasFooter}\n        isVideo={isVideo}\n        withAnimation={withAnimation}\n        onClose={handleClose}\n        selectItem={openMediaViewerItem}\n        isHidden={isHidden}\n        onFooterClick={handleFooterClick}\n        handleSponsoredClick={handleSponsoredClick}\n      />\n    </ShowTransition>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { mediaViewer, shouldSkipHistoryAnimations } = selectTabState(global);\n    const {\n      chatId,\n      threadId,\n      messageId,\n      origin,\n      isHidden,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isAvatarView,\n      isSponsoredMessage,\n    } = mediaViewer;\n    const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n    const { currentUserId, isSynced } = global;\n    const isChatWithSelf = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    if (isAvatarView) {\n      const peer = selectPeer(global, chatId!);\n      let canUpdateMedia = false;\n      if (peer) {\n        canUpdateMedia = isUserId(peer.id) ? peer.id === currentUserId : isChatAdmin(peer as ApiChat);\n      }\n\n      const profilePhotos = selectPeerPhotos(global, chatId!);\n\n      return {\n        profilePhotos,\n        avatar: profilePhotos?.photos[mediaIndex!],\n        avatarOwner: peer,\n        isLoadingMoreMedia: profilePhotos?.isLoading,\n        isChatWithSelf,\n        canUpdateMedia,\n        withAnimation,\n        origin,\n        shouldSkipHistoryAnimations,\n        isHidden,\n        standaloneMedia,\n        mediaIndex,\n        isSynced,\n      };\n    }\n\n    let message: ApiMessage | undefined;\n    if (chatId && messageId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        message = selectScheduledMessage(global, chatId, messageId);\n      } else {\n        message = selectChatMessage(global, chatId, messageId);\n      }\n    }\n\n    let sponsoredMessage: ApiSponsoredMessage | undefined;\n    if (isSponsoredMessage && chatId) {\n      if (origin === MediaViewerOrigin.SponsoredMessage) {\n        sponsoredMessage = selectSponsoredMessage(global, chatId);\n      }\n    }\n\n    let chatMessages: Record<number, ApiMessage> | undefined;\n\n    if (chatId) {\n      if (origin && [MediaViewerOrigin.ScheduledAlbum, MediaViewerOrigin.ScheduledInline].includes(origin)) {\n        chatMessages = selectChatScheduledMessages(global, chatId);\n      } else {\n        chatMessages = selectChatMessages(global, chatId);\n      }\n    }\n\n    let isLoadingMoreMedia = false;\n    const isOriginInline = origin === MediaViewerOrigin.Inline;\n    const isOriginAlbum = origin === MediaViewerOrigin.Album;\n    let collectedMessageIds: number[] | undefined;\n\n    if (chatId && threadId && messageId) {\n      if (withDynamicLoading && (isOriginInline || isOriginAlbum)) {\n        const currentSearch = selectCurrentChatMediaSearch(global);\n        isLoadingMoreMedia = Boolean(currentSearch?.isLoading);\n        const { foundIds } = (currentSearch?.currentSegment) || {};\n        collectedMessageIds = foundIds;\n      } else if (origin === MediaViewerOrigin.SharedMedia) {\n        const currentSearch = selectCurrentSharedMediaSearch(global);\n        const { foundIds } = (currentSearch && currentSearch.resultsByType && currentSearch.resultsByType.media) || {};\n        collectedMessageIds = foundIds;\n      } else if (isOriginInline || isOriginAlbum) {\n        const outlyingList = selectOutlyingListByMessageId(global, chatId, threadId, messageId);\n        collectedMessageIds = outlyingList || selectListedIds(global, chatId, threadId);\n      }\n    }\n\n    return {\n      chatId,\n      threadId,\n      messageId,\n      isChatWithSelf,\n      origin,\n      message,\n      chatMessages,\n      sponsoredMessage,\n      collectedMessageIds,\n      withAnimation,\n      isHidden,\n      shouldSkipHistoryAnimations,\n      withDynamicLoading,\n      standaloneMedia,\n      mediaIndex,\n      isLoadingMoreMedia,\n      isSynced,\n    };\n  },\n)(MediaViewer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"bu_hGbaa\",\"fullSize\":\"W9A8SEMl\",\"backdrop\":\"OFh6u50Q\",\"captionBackdrop\":\"Jd1DYS6Y\",\"backdropNonInteractive\":\"xe67dhtF\",\"close\":\"Mye8Dwxa\",\"wrapper\":\"gLHHo5k8\",\"slideAnimation\":\"GJVwqV9e\",\"slideAnimationToActive\":\"_Yn4SWUB\",\"content\":\"hGCH03qc\",\"slideAnimationFromActive\":\"ZecqXqKy\",\"storyHeader\":\"e7HHuS1g\",\"composer\":\"FXineBYO\",\"caption\":\"RKedwa0I\",\"captionGradient\":\"sHNAfxzf\",\"media\":\"PVZ8TOWS\",\"mediaPreview\":\"lQfkulvp\",\"contentInner\":\"Wi0DXPH2\",\"name\":\"Ka1CGfzq\",\"slide\":\"urTtSsk9\",\"mobileSlide\":\"AjXOHOgE\",\"slidePreview\":\"Sef28wEh\",\"activeSlide\":\"uAlXNXJN\",\"slideInner\":\"g8ypsnnC\",\"mediaWrapper\":\"YiuvOPgT\",\"forward\":\"pGKsAszF\",\"storyIndicators\":\"jGDd2sza\",\"sender\":\"eMYhXF_X\",\"senderInfoTransition\":\"PXnfXZur\",\"senderInfo\":\"WpyVfrsc\",\"senderMeta\":\"jmKI_lhC\",\"senderName\":\"H1uod43o\",\"storyMetaRow\":\"zimpR8Hz\",\"storyMeta\":\"hGTnZuar\",\"closeButton\":\"WlLsjJ2Z\",\"actions\":\"GrsJNw3y\",\"active\":\"q756IpZB\",\"visibilityButton\":\"prxptFFf\",\"visibilityButtonSelf\":\"_MVsZpgB\",\"button\":\"TkphaPyQ\",\"buttonMenu\":\"K0_xAdzf\",\"captionInner\":\"D_5mWNmi\",\"captionContent\":\"ilyTRZtw\",\"captionText\":\"hmFA5qb1\",\"hasOverflow\":\"e1gyTmKe\",\"expanded\":\"HIMnUViv\",\"animate\":\"CvnxnCxN\",\"withShowMore\":\"Vq8pl_kQ\",\"captionShowMore\":\"bM5rlQtM\",\"navigate\":\"nZ30pf4g\",\"prev\":\"SXpRZiax\",\"next\":\"twOBFwUE\",\"modal\":\"nLPOogqS\",\"thumbnail\":\"MnNC7VHS\",\"ghost\":\"fME2l_yv\",\"ghost2\":\"TYicp2_K\",\"ghostImage\":\"HjoURJRK\",\"forwardHeader\":\"JJFtefb9\",\"clickable\":\"BsqMBS2I\",\"headerTitle\":\"G8OgmMDJ\",\"forwardInfo\":\"_M8CgT7s\",\"fromPeer\":\"nJr8QgYX\"};","import type { IDimensions } from '../../../types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport fastBlur from '../../../lib/fastBlur';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getPeerStoryHtmlId } from '../../../global/helpers';\nimport { applyStyles } from '../../../util/animation';\nimport stopEvent from '../../../util/stopEvent';\nimport { IS_CANVAS_FILTER_SUPPORTED } from '../../../util/windowEnvironment';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport storyRibbonStyles from '../StoryRibbon.module.scss';\nimport styles from '../StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 200;\nconst OFFSET_BOTTOM = 3.5 * REM;\nconst MOBILE_OFFSET = 0.5 * REM;\nconst MOBILE_WIDTH = 600;\n\nexport function animateOpening(\n  userId: string,\n  origin: StoryViewerOrigin,\n  thumb: string,\n  bestImageData: string | undefined,\n  dimensions: IDimensions,\n) {\n  const { mediaEl: fromImage } = getNodes(origin, userId);\n  if (!fromImage) {\n    return;\n  }\n  const { width: windowWidth, height: windowHeight } = windowSize.get();\n  let { width: toWidth, height: toHeight } = dimensions;\n\n  const isMobile = windowWidth <= MOBILE_WIDTH;\n\n  if (isMobile) {\n    toWidth = windowWidth - 2 * MOBILE_OFFSET;\n    toHeight = windowHeight - OFFSET_BOTTOM - 2 * MOBILE_OFFSET;\n\n    const safeAreaBottom = getComputedStyle(document.documentElement).getPropertyValue('--safe-area-bottom');\n    if (safeAreaBottom) {\n      toHeight -= parseFloat(safeAreaBottom);\n    }\n  }\n\n  const toLeft = isMobile ? MOBILE_OFFSET : (windowWidth - toWidth) / 2;\n  const toTop = isMobile ? MOBILE_OFFSET : (windowHeight - (toHeight + OFFSET_BOTTOM)) / 2;\n\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n\n  const fromTranslateX = (fromLeft + fromWidth / 2) - (toLeft + toWidth / 2);\n  const fromTranslateY = (fromTop + fromHeight / 2) - (toTop + toHeight / 2);\n  const fromScaleX = fromWidth / toWidth;\n  const fromScaleY = fromHeight / toHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData || thumb, !bestImageData);\n    applyStyles(ghost, {\n      top: `${toTop}px`,\n      left: `${toLeft}px`,\n      width: `${toWidth}px`,\n      height: `${toHeight}px`,\n      transform: `translate3d(${fromTranslateX}px, ${fromTranslateY}px, 0) scale(${fromScaleX}, ${fromScaleY})`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: '',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nexport function animateClosing(\n  userId: string,\n  origin: StoryViewerOrigin,\n  bestImageData: string,\n) {\n  const { mediaEl: toImage } = getNodes(origin, userId);\n\n  const fromImage = document.getElementById('StoryViewer')!.querySelector<HTMLImageElement>(\n    `.${styles.mobileSlide} .${styles.media}, .${styles.activeSlide} .${styles.media}`,\n  );\n  if (!fromImage || !toImage) {\n    return;\n  }\n  const {\n    top: fromTop, left: fromLeft, width: fromWidth, height: fromHeight,\n  } = fromImage.getBoundingClientRect();\n  const {\n    top: toTop, left: toLeft, width: toWidth, height: toHeight,\n  } = toImage.getBoundingClientRect();\n\n  const toTranslateX = (toLeft + toWidth / 2) - (fromLeft + fromWidth / 2);\n  const toTranslateY = (toTop + toHeight / 2) - (fromTop + fromHeight / 2);\n  const toScaleX = toWidth / fromWidth;\n  const toScaleY = toHeight / fromHeight;\n\n  requestMutation(() => {\n    const ghost = createGhost(bestImageData);\n    applyStyles(ghost, {\n      top: `${fromTop}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromHeight}px`,\n    });\n\n    const ghost2 = createGhost(toImage.src, undefined, true);\n    const ghost2Top = (fromTop + fromHeight / 2) - fromWidth / 2;\n    applyStyles(ghost2, {\n      top: `${ghost2Top}px`,\n      left: `${fromLeft}px`,\n      width: `${fromWidth}px`,\n      height: `${fromWidth}px`,\n    });\n\n    const container = document.getElementById('StoryViewer')!;\n    container.appendChild(ghost);\n    document.body.appendChild(ghost2);\n    document.body.classList.add('ghost-animating');\n\n    requestMutation(() => {\n      applyStyles(ghost, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX}, ${toScaleY})`,\n      });\n\n      applyStyles(ghost2, {\n        transform: `translate3d(${toTranslateX}px, ${toTranslateY}px, 0) scale(${toScaleX})`,\n        opacity: '1',\n      });\n\n      setTimeout(() => {\n        requestMutation(() => {\n          if (container.contains(ghost)) {\n            container.removeChild(ghost);\n          }\n\n          if (document.body.contains(ghost2)) {\n            document.body.removeChild(ghost2);\n          }\n\n          document.body.classList.remove('ghost-animating');\n        });\n      }, ANIMATION_DURATION + ANIMATION_END_DELAY);\n    });\n  });\n}\n\nconst RADIUS = 2;\nconst ITERATIONS = 2;\n\nfunction createGhost(source: string, hasBlur = false, isGhost2 = false) {\n  const ghost = document.createElement('div');\n  ghost.classList.add(!isGhost2 ? styles.ghost : styles.ghost2);\n\n  const img = new Image();\n  img.draggable = false;\n  img.oncontextmenu = stopEvent;\n  img.classList.add(styles.ghostImage);\n\n  if (hasBlur) {\n    const canvas = document.createElement('canvas');\n    canvas.classList.add(styles.thumbnail);\n    img.onload = () => {\n      const ctx = canvas.getContext('2d', { alpha: false })!;\n      const {\n        width,\n        height,\n      } = img;\n\n      requestMutation(() => {\n        canvas.width = width;\n        canvas.height = height;\n\n        if (IS_CANVAS_FILTER_SUPPORTED) {\n          ctx.filter = `blur(${RADIUS}px)`;\n        }\n\n        ctx.drawImage(img, -RADIUS * 2, -RADIUS * 2, width + RADIUS * 4, height + RADIUS * 4);\n\n        if (!IS_CANVAS_FILTER_SUPPORTED) {\n          fastBlur(ctx, 0, 0, width, height, RADIUS, ITERATIONS);\n        }\n      });\n    };\n    img.src = source;\n    ghost.appendChild(canvas);\n  } else {\n    img.src = source;\n    ghost.appendChild(img);\n  }\n\n  return ghost;\n}\n\nfunction getNodes(origin: StoryViewerOrigin, userId: string) {\n  let containerSelector;\n  const mediaSelector = `#${getPeerStoryHtmlId(userId)}`;\n\n  switch (origin) {\n    case StoryViewerOrigin.StoryRibbon:\n      containerSelector = `#LeftColumn .${storyRibbonStyles.root}`;\n      break;\n    case StoryViewerOrigin.MiddleHeaderAvatar:\n      containerSelector = '.MiddleHeader .Transition_slide-active .ChatInfo';\n      break;\n    case StoryViewerOrigin.ChatList:\n      containerSelector = '#LeftColumn .chat-list';\n      break;\n    case StoryViewerOrigin.SearchResult:\n      containerSelector = '#LeftColumn .LeftSearch--container';\n      break;\n  }\n\n  const container = document.querySelector<HTMLElement>(containerSelector)!;\n  const mediaEls = container && container.querySelectorAll<HTMLImageElement>(`${mediaSelector} img`);\n\n  return {\n    container,\n    mediaEl: mediaEls?.[0],\n  };\n}\n","import type { IDimensions } from '../../../types';\n\nimport { roundToNearestEven } from '../../../util/math';\n\nexport const BASE_STORY_WIDTH = 720;\nexport const BASE_STORY_HEIGHT = 1280;\nconst BASE_SCREEN_WIDTH = 1200;\nconst BASE_SCREEN_HEIGHT = 800;\nconst BASE_ACTIVE_SLIDE_WIDTH = 405;\nconst BASE_ACTIVE_SLIDE_HEIGHT = 720;\nconst BASE_SLIDE_WIDTH = 135;\nconst BASE_SLIDE_HEIGHT = 240;\nconst BASE_GAP_WIDTH = 40;\n\nexport function calculateSlideSizes(windowWidth: number, windowHeight: number): {\n  activeSlide: IDimensions;\n  slide: IDimensions;\n  scale: number;\n  toActiveScale: number;\n  fromActiveScale: number;\n} {\n  const scale = calculateScale(BASE_SCREEN_WIDTH, BASE_SCREEN_HEIGHT, windowWidth, windowHeight);\n\n  const activeSlideWidth = roundToNearestEven(BASE_ACTIVE_SLIDE_WIDTH * scale);\n  const slideWidth = roundToNearestEven(BASE_SLIDE_WIDTH * scale);\n  // Avoid fractional values to prevent blurry text\n  return {\n    activeSlide: {\n      width: activeSlideWidth,\n      height: roundToNearestEven(BASE_ACTIVE_SLIDE_HEIGHT * scale),\n    },\n    slide: {\n      width: slideWidth,\n      height: roundToNearestEven(BASE_SLIDE_HEIGHT * scale),\n    },\n    scale,\n    toActiveScale: activeSlideWidth / slideWidth,\n    fromActiveScale: slideWidth / activeSlideWidth,\n  };\n}\n\nexport function calculateOffsetX({\n  scale,\n  slideAmount,\n  isActiveSlideSize,\n  isMoveThroughActiveSlide,\n  isBackward,\n}: {\n  scale: number;\n  slideAmount: number;\n  isActiveSlideSize: boolean;\n  isMoveThroughActiveSlide?: boolean;\n  isBackward: boolean;\n}) {\n  const mainOffset = BASE_GAP_WIDTH + (isActiveSlideSize ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH);\n  const additionalOffset = (Math.abs(slideAmount) - 1)\n    * ((isMoveThroughActiveSlide ? BASE_ACTIVE_SLIDE_WIDTH : BASE_SLIDE_WIDTH) + BASE_GAP_WIDTH);\n  const totalOffset = roundToNearestEven((mainOffset + additionalOffset) * scale);\n\n  return isBackward ? -totalOffset : totalOffset;\n}\n\nfunction calculateScale(baseWidth: number, baseHeight: number, newWidth: number, newHeight: number) {\n  const widthScale = newWidth / baseWidth;\n  const heightScale = newHeight / baseHeight;\n\n  return Math.min(widthScale, heightScale);\n}\n","import { useMemo } from '../../../lib/teact/teact';\n\nimport { calculateSlideSizes } from '../helpers/dimensions';\n\nimport useWindowSize from '../../../hooks/window/useWindowSize';\n\nexport default function useSlideSizes() {\n  const { width: windowWidth, height: windowHeight } = useWindowSize();\n  return useMemo(() => calculateSlideSizes(windowWidth, windowHeight), [windowWidth, windowHeight]);\n}\n","import type { ApiTypeStory } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\n\nimport { getStoryMediaHash, hasMessageText } from '../../../global/helpers';\n\nimport useMedia from '../../../hooks/useMedia';\n\nexport default function useStoryProps(\n  story?: ApiTypeStory, isCurrentUserPremium = false, isDropdownMenuOpen = false,\n) {\n  const isLoadedStory = story && 'content' in story;\n  const isDeletedStory = story && 'isDeleted' in story;\n  const hasText = isLoadedStory ? hasMessageText(story) : false;\n  const hasForwardInfo = isLoadedStory && Boolean(story.forwardInfo);\n\n  let thumbnail: string | undefined;\n  if (isLoadedStory) {\n    if (story.content.photo?.thumbnail) {\n      thumbnail = story.content.photo.thumbnail.dataUri;\n    }\n    if (story.content.video?.thumbnail?.dataUri) {\n      thumbnail = story.content.video.thumbnail.dataUri;\n    }\n  }\n\n  const previewHash = isLoadedStory ? getStoryMediaHash(story) : undefined;\n  const previewBlobUrl = useMedia(previewHash);\n  const isVideo = Boolean(isLoadedStory && story.content.video);\n  const noSound = isLoadedStory && story.content.video?.noSound;\n  const fullMediaHash = isLoadedStory ? getStoryMediaHash(story, 'full') : undefined;\n  const fullMediaData = useMedia(fullMediaHash, !story, isVideo ? ApiMediaFormat.Progressive : ApiMediaFormat.BlobUrl);\n  const altMediaHash = isVideo && isLoadedStory ? getStoryMediaHash(story, 'full', true) : undefined;\n  const altMediaData = useMedia(altMediaHash, !story, ApiMediaFormat.Progressive);\n\n  const hasFullData = Boolean(fullMediaData || altMediaData);\n  const bestImageData = isVideo ? previewBlobUrl : fullMediaData || previewBlobUrl;\n  const hasThumb = !previewBlobUrl && !hasFullData;\n\n  const canDownload = isCurrentUserPremium && isLoadedStory && !story.noForwards;\n  const downloadHash = isLoadedStory ? getStoryMediaHash(story, 'download') : undefined;\n  const downloadMediaData = useMedia(downloadHash, !canDownload && !isDropdownMenuOpen);\n\n  return {\n    isLoadedStory,\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewHash,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaHash,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    bestImageData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"GrE47IXS\",\"closeButton\":\"NlWSF1pA\",\"stealthIcon\":\"qKi5jsGM\",\"title\":\"BFctFGoT\",\"description\":\"fZIJH4IG\",\"listItem\":\"RGD70uBt\",\"icon\":\"HCYfPccW\",\"button\":\"AM_sxoXP\",\"subtitle\":\"L8oRQyKb\"};","import React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStealthMode } from '../../api/types';\n\nimport { selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport TextTimer from '../ui/TextTimer';\n\nimport styles from './StealthModeModal.module.scss';\n\ntype StateProps = {\n  isOpen?: boolean;\n  stealthMode?: ApiStealthMode;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StealthModeModal = ({ isOpen, stealthMode, isCurrentUserPremium } : StateProps) => {\n  const {\n    toggleStealthModal,\n    activateStealthMode,\n    showNotification,\n    openPremiumModal,\n  } = getActions();\n  const [isOnCooldown, setIsOnCooldown] = useState(false);\n\n  useEffect(() => {\n    if (!stealthMode) return;\n    const serverTime = getServerTime();\n    if (stealthMode.cooldownUntil && stealthMode.cooldownUntil > serverTime) {\n      setIsOnCooldown(true);\n    }\n  }, [stealthMode, isOpen]);\n\n  const lang = useOldLang();\n\n  const handleTimerEnds = useLastCallback(() => {\n    setIsOnCooldown(false);\n  });\n\n  const handleClose = useLastCallback(() => {\n    toggleStealthModal({ isOpen: false });\n  });\n\n  const handleActivate = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({ initialSection: 'stories' });\n      return;\n    }\n\n    activateStealthMode();\n    showNotification({\n      title: lang('StealthModeOn'),\n      message: lang('StealthModeOnHint'),\n    });\n    toggleStealthModal({ isOpen: false });\n  });\n\n  return (\n    <Modal\n      className=\"component-theme-dark\"\n      contentClassName={styles.root}\n      isOpen={isOpen}\n      isSlim\n      onClose={handleClose}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.stealthIcon}>\n        <Icon name=\"eye-crossed-outline\" />\n      </div>\n      <div className={styles.title}>{lang('StealthMode')}</div>\n      <div className={styles.description}>\n        {lang(isCurrentUserPremium ? 'StealthModeHint' : 'StealthModePremiumHint')}\n      </div>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-past\" className={styles.icon} />}\n      >\n        <span className=\"title\">{lang('HideRecentViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideRecentViewsDescription')}</span>\n      </ListItem>\n      <ListItem\n        className={buildClassName(styles.listItem, 'smaller-icon')}\n        multiline\n        inactive\n        leftElement={<Icon name=\"stealth-future\" className={styles.icon} aria-hidden />}\n      >\n        <span className=\"title\">{lang('HideNextViews')}</span>\n        <span className={buildClassName('subtitle', styles.subtitle)}>{lang('HideNextViewsDescription')}</span>\n      </ListItem>\n      <Button\n        className={styles.button}\n        size=\"smaller\"\n        disabled={isOnCooldown}\n        isShiny={!isCurrentUserPremium}\n        withPremiumGradient={!isCurrentUserPremium}\n        onClick={handleActivate}\n      >\n        {!isCurrentUserPremium ? lang('UnlockStealthMode')\n          : isOnCooldown\n            ? (<TextTimer langKey=\"AvailableIn\" endsAt={stealthMode!.cooldownUntil!} onEnd={handleTimerEnds} />)\n            : lang('EnableStealthMode')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal((global): StateProps => {\n  const tabState = selectTabState(global);\n\n  return {\n    isOpen: tabState.storyViewer?.isStealthModalOpen,\n    stealthMode: global.stories.stealthMode,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StealthModeModal));\n","import React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\ninterface OwnProps {\n  isOpen: boolean;\n  story?: ApiTypeStory;\n  onClose: NoneToVoidFunction;\n}\n\nfunction StoryDeleteConfirmModal({\n  isOpen, story, onClose,\n}: OwnProps) {\n  const { deleteStory, openNextStory } = getActions();\n\n  const lang = useOldLang();\n\n  const handleDeleteStoryClick = useCallback(() => {\n    if (!story) {\n      return;\n    }\n\n    openNextStory();\n    deleteStory({ peerId: story.peerId, storyId: story.id });\n    onClose();\n  }, [onClose, story]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('DeleteStoryTitle')}\n      text={lang('DeleteStorySubtitle')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteStoryClick}\n      confirmIsDestructive\n      className=\"component-theme-dark\"\n    />\n  );\n}\n\nexport default memo(StoryDeleteConfirmModal);\n","import React, { memo, useMemo, useState } from '../../../lib/teact/teact';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\n\ninterface OwnProps {\n  id: string;\n  contactListIds?: string[];\n  currentUserId: string;\n  selectedIds?: string[];\n  lockedIds?: string[];\n  onSelect: (selectedIds: string[]) => void;\n}\n\nfunction AllowDenyList({\n  id,\n  contactListIds,\n  currentUserId,\n  selectedIds,\n  lockedIds,\n  onSelect,\n}: OwnProps) {\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((userId) => userId !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...selectedIds || [], ...contactIds], query: searchQuery, type: 'user' }));\n  }, [contactListIds, currentUserId, searchQuery, selectedIds]);\n\n  return (\n    <PeerPicker\n      key={id}\n      itemIds={displayedIds}\n      selectedIds={selectedIds ?? MEMO_EMPTY_ARRAY}\n      lockedSelectedIds={lockedIds}\n      filterValue={searchQuery}\n      filterPlaceholder={lang('Search')}\n      searchInputId={`${id}-picker-search`}\n      isSearchable\n      withDefaultPadding\n      forceShowSelf\n      onSelectedIdsChange={onSelect}\n      onFilterChange={setSearchQuery}\n      allowMultiple\n      withStatus\n      itemInputType=\"checkbox\"\n    />\n  );\n}\n\nexport default memo(AllowDenyList);\n","// extracted by mini-css-extract-plugin\nexport default {\"buttonHolder\":\"BDK_pgpt\",\"active\":\"N8ujSwlC\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nimport styles from './CloseFriends.module.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  currentUserId: string;\n  usersById: Record<string, ApiUser>;\n  contactListIds?: string[];\n  onClose: NoneToVoidFunction;\n};\n\nfunction CloseFriends({\n  isActive, contactListIds, usersById, currentUserId, onClose,\n}: OwnProps) {\n  const { saveCloseFriends } = getActions();\n\n  const lang = useOldLang();\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>([]);\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const displayedIds = useMemo(() => {\n    const contactIds = (contactListIds || []).filter((id) => id !== currentUserId);\n    return unique(filterPeersByQuery({ ids: [...closeFriendIds, ...contactIds], query: searchQuery, type: 'user' }));\n  }, [closeFriendIds, contactListIds, currentUserId, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (!prevIsActive && isActive) {\n      setIsSubmitShown(false);\n      setNewSelectedContactIds(closeFriendIds);\n    }\n  }, [isActive, closeFriendIds]);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useLastCallback(() => {\n    saveCloseFriends({ userIds: newSelectedContactIds });\n    onClose();\n  });\n\n  return (\n    <>\n      <PeerPicker\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        searchInputId=\"close-friends-picker-search\"\n        isSearchable\n        withDefaultPadding\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        withStatus\n        itemInputType=\"checkbox\"\n      />\n\n      <div className={buildClassName(styles.buttonHolder, isSubmitShown && styles.active)}>\n        <FloatingActionButton\n          isShown={isSubmitShown}\n          onClick={handleSubmit}\n          ariaLabel={lang('Save')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n    </>\n  );\n}\n\nexport default memo(CloseFriends);\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"hz7SomkK\",\"header\":\"NV6Rt2g9\",\"closeButton\":\"SN1GFS6L\",\"headerTitle\":\"gi0Y6Ns6\",\"content\":\"sTaVDkiD\",\"section\":\"eUiuPoEC\",\"title\":\"iPPiw9DI\",\"list\":\"OUP1Ss0W\",\"option\":\"JL33Sa3b\",\"checked\":\"qVPo_cVL\",\"input\":\"zsDaUk0i\",\"icon\":\"AfYCVlys\",\"action\":\"njMeBBwY\",\"optionContent\":\"TUAAnG2w\",\"footer\":\"r24Qz2bf\",\"info\":\"ljeRVBOm\",\"submit\":\"RwNLN_rH\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPrivacySettings, ApiStory, ApiUser, PrivacyVisibility,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport { selectPeerStory, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getHours } from '../../util/dates/units';\nimport stopEvent from '../../util/stopEvent';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Switcher from '../ui/Switcher';\nimport Transition from '../ui/Transition';\nimport AllowDenyList from './privacy/AllowDenyList';\nimport CloseFriends from './privacy/CloseFriends';\n\nimport styles from './StorySettings.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  onClose?: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  story?: ApiStory;\n  visibility?: ApiPrivacySettings;\n  contactListIds?: string[];\n  usersById: Record<string, ApiUser>;\n  currentUserId: string;\n}\n\ntype PrivacyAction = 'blockUserIds' | 'closeFriends' | 'blockContactUserIds' | 'allowUserIds';\n\ninterface PrivacyOption {\n  name: string;\n  value: PrivacyVisibility;\n  color: [string, string];\n  icon: IconName;\n  actions?: PrivacyAction;\n}\n\nconst OPTIONS: PrivacyOption[] = [{\n  name: 'StoryPrivacyOptionEveryone',\n  value: 'everybody',\n  color: ['#50ABFF', '#007AFF'],\n  icon: 'channel-filled',\n  actions: 'blockUserIds',\n}, {\n  name: 'StoryPrivacyOptionContacts',\n  value: 'contacts',\n  color: ['#C36EFF', '#8B60FA'],\n  icon: 'user-filled',\n  actions: 'blockContactUserIds',\n}, {\n  name: 'StoryPrivacyOptionCloseFriends',\n  value: 'closeFriends',\n  color: ['#88D93A', '#30B73B'],\n  icon: 'favorite-filled',\n  actions: 'closeFriends',\n}, {\n  name: 'StoryPrivacyOptionSelectedContacts',\n  value: 'nobody',\n  color: ['#FFB743', '#F69A36'],\n  icon: 'group-filled',\n  actions: 'allowUserIds',\n}];\n\nenum Screens {\n  privacy,\n  allowList,\n  closeFriends,\n  denyList,\n}\n\nfunction StorySettings({\n  isOpen,\n  story,\n  visibility,\n  contactListIds,\n  usersById,\n  currentUserId,\n  onClose,\n}: OwnProps & StateProps) {\n  const { editStoryPrivacy, toggleStoryInProfile } = getActions();\n\n  const lang = useOldLang();\n  const [isOpenModal, openModal, closeModal] = useFlag(false);\n  const [privacy, setPrivacy] = useState<ApiPrivacySettings | undefined>(visibility);\n  const [isPinned, setIsPinned] = useState(story?.isInProfile);\n  const [activeKey, setActiveKey] = useState<Screens>(Screens.privacy);\n  const [editingBlockingCategory, setEditingBlockingCategory] = useState<PrivacyVisibility>('everybody');\n  const isBackButton = activeKey !== Screens.privacy;\n\n  const closeFriendIds = useMemo(() => {\n    return (contactListIds || []).filter((userId) => usersById[userId]?.isCloseFriend);\n  }, [contactListIds, usersById]);\n\n  const lockedIds = useMemo(() => {\n    if (activeKey === Screens.allowList\n      && (!privacy?.allowUserIds?.length || privacy.allowUserIds[0] === currentUserId)\n    ) {\n      return [currentUserId];\n    }\n\n    return undefined;\n  }, [activeKey, currentUserId, privacy?.allowUserIds]);\n\n  const selectedBlockedIds = useMemo(() => {\n    if (editingBlockingCategory !== privacy?.visibility) return [];\n    return privacy?.blockUserIds || [];\n  }, [editingBlockingCategory, privacy?.blockUserIds, privacy?.visibility]);\n\n  const handleAllowUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      allowUserIds: newIds?.length ? newIds?.filter((id) => id !== currentUserId) : [currentUserId],\n    });\n  });\n\n  const handleDenyUserIdsChange = useLastCallback((newIds: string[]) => {\n    setPrivacy({\n      ...privacy!,\n      blockUserIds: newIds,\n      visibility: editingBlockingCategory,\n    });\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      setActiveKey(Screens.privacy);\n      openModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    setPrivacy(visibility);\n  }, [visibility]);\n\n  const handleCloseButtonClick = useLastCallback(() => {\n    if (activeKey === Screens.privacy) {\n      closeModal();\n      return;\n    }\n\n    setActiveKey(Screens.privacy);\n  });\n\n  function handleVisibilityChange(newVisibility: PrivacyVisibility) {\n    setPrivacy({\n      ...privacy!,\n      visibility: newVisibility,\n    });\n  }\n\n  function handleActionClick(e: React.MouseEvent<HTMLDivElement>, action: PrivacyAction) {\n    stopEvent(e);\n\n    switch (action) {\n      case 'closeFriends':\n        setActiveKey(Screens.closeFriends);\n        break;\n      case 'allowUserIds':\n        setActiveKey(Screens.allowList);\n        break;\n      case 'blockUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('everybody');\n        break;\n      case 'blockContactUserIds':\n        setActiveKey(Screens.denyList);\n        setEditingBlockingCategory('contacts');\n        break;\n    }\n  }\n\n  const handleIsPinnedToggle = useLastCallback(() => {\n    setIsPinned(!isPinned);\n  });\n\n  // console.warn(privacy?.visibility, story?.visibility, OPTIONS);\n\n  const handleSubmit = useLastCallback(() => {\n    editStoryPrivacy({\n      peerId: story!.peerId,\n      storyId: story!.id,\n      privacy: privacy!,\n    });\n    if (story!.isInProfile !== isPinned) {\n      toggleStoryInProfile({ peerId: story!.peerId, storyId: story!.id, isInProfile: isPinned });\n    }\n    closeModal();\n  });\n\n  function renderActionName(action: PrivacyAction) {\n    if (action === 'closeFriends') {\n      if (closeFriendIds.length === 0) {\n        return lang('StoryPrivacyOptionCloseFriendsDetail');\n      }\n\n      if (closeFriendIds.length === 1) {\n        return getPeerTitle(lang, usersById[closeFriendIds[0]]);\n      }\n\n      return lang('StoryPrivacyOptionPeople', closeFriendIds.length, 'i');\n    }\n\n    if ((action === 'blockUserIds' && privacy?.visibility === 'everybody')\n      || (action === 'blockContactUserIds' && privacy?.visibility === 'contacts')) {\n      if (!privacy?.blockUserIds?.length) {\n        return lang('StoryPrivacyOptionContactsDetail');\n      }\n\n      if (privacy.blockUserIds.length === 1) {\n        return lang('StoryPrivacyOptionExcludePerson', getUserFullName(usersById[privacy.blockUserIds[0]]));\n      }\n\n      return lang('StoryPrivacyOptionExcludePeople', privacy.blockUserIds.length, 'i');\n    }\n\n    if (!privacy?.allowUserIds || privacy.allowUserIds.length === 0) {\n      return lang('StoryPrivacyOptionSelectedContactsDetail');\n    }\n\n    if (privacy.allowUserIds.length === 1) {\n      return getUserFullName(usersById[privacy.allowUserIds[0]]);\n    }\n\n    return lang('StoryPrivacyOptionPeople', privacy.allowUserIds.length, 'i');\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderHeaderContent() {\n    switch (activeKey) {\n      case Screens.privacy:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertEditTitle')}</h3>;\n      case Screens.allowList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertSelectContactsTitle')}</h3>;\n      case Screens.closeFriends:\n        return <h3 className={styles.headerTitle}>{lang('CloseFriends')}</h3>;\n      case Screens.denyList:\n        return <h3 className={styles.headerTitle}>{lang('StoryPrivacyAlertExcludedContactsTitle')}</h3>;\n    }\n  }\n\n  // eslint-disable-next-line consistent-return\n  function renderContent(isActive: boolean) {\n    switch (activeKey) {\n      case Screens.privacy:\n        return renderPrivacyList();\n      case Screens.closeFriends:\n        return (\n          <CloseFriends\n            key=\"close-friends\"\n            isActive={isActive}\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            usersById={usersById}\n            onClose={handleCloseButtonClick}\n          />\n        );\n      case Screens.denyList:\n        return (\n          <AllowDenyList\n            key=\"deny-list\"\n            id=\"deny-list\"\n            contactListIds={contactListIds}\n            currentUserId={currentUserId}\n            selectedIds={selectedBlockedIds}\n            onSelect={handleDenyUserIdsChange}\n          />\n        );\n      case Screens.allowList:\n        return (\n          <AllowDenyList\n            key=\"allow-list\"\n            id=\"allow-list\"\n            contactListIds={contactListIds}\n            lockedIds={lockedIds}\n            currentUserId={currentUserId}\n            selectedIds={privacy?.allowUserIds}\n            onSelect={handleAllowUserIdsChange}\n          />\n        );\n    }\n  }\n\n  function renderPrivacyList() {\n    const storyLifeTime = story ? getHours(story.expireDate - story.date) : 0;\n\n    return (\n      <>\n        <div className={styles.section}>\n          <h3 className={styles.title}>{lang('StoryPrivacyAlertSubtitleProfile')}</h3>\n          <div className={styles.list}>\n            {OPTIONS.map((option) => (\n              <label\n                key={option.value}\n                className={buildClassName(styles.option, option.value === privacy?.visibility && styles.checked)}\n              >\n                <input\n                  type=\"radio\"\n                  name=\"story_privacy\"\n                  className={styles.input}\n                  value={option.value}\n                  checked={option.value === privacy?.visibility}\n                  onChange={() => handleVisibilityChange(option.value)}\n                  teactExperimentControlled\n                />\n                <span\n                  className={styles.icon}\n                  style={`--color-from: ${option.color[0]}; --color-to: ${option.color[1]}`}\n                >\n                  <Icon name={option.icon} />\n                </span>\n                <div className={styles.optionContent}>\n                  <span className={buildClassName(styles.option_name)}>{lang(option.name)}</span>\n                  {option.actions && (\n                    <div\n                      tabIndex={0}\n                      role=\"button\"\n                      className={styles.action}\n                      aria-label={lang('Edit')}\n                      onClick={(e) => { handleActionClick(e, option.actions!); }}\n                    >\n                      <span className={styles.actionInner}>{renderActionName(option.actions)}</span>\n                      <Icon name=\"next\" />\n                    </div>\n                  )}\n                </div>\n              </label>\n            ))}\n          </div>\n        </div>\n        <div className={styles.section}>\n          <ListItem ripple onClick={handleIsPinnedToggle}>\n            <span>{lang('StoryKeep')}</span>\n            <Switcher\n              id=\"group-notifications\"\n              label={lang('StoryKeep')}\n              checked={isPinned}\n              inactive\n            />\n          </ListItem>\n        </div>\n        <div className={styles.footer}>\n          <div className={styles.info}>{lang('StoryKeepInfo', storyLifeTime)}</div>\n          <div className={styles.submit}>\n            <Button onClick={handleSubmit}>{lang('StoryPrivacyButtonSave')}</Button>\n          </div>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpenModal}\n      className={buildClassName(styles.modal, 'component-theme-dark')}\n      onClose={closeModal}\n      noBackdrop\n      onCloseAnimationEnd={onClose}\n    >\n      <div className={styles.header}>\n        <Button\n          className={buildClassName(styles.closeButton, 'close-button')}\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          onClick={handleCloseButtonClick}\n          ariaLabel={isBackButton ? lang('Common.Back') : lang('Common.Close')}\n        >\n          <div className={buildClassName('animated-close-icon', isBackButton && 'state-back')} />\n        </Button>\n        <Transition name=\"slideFade\" activeKey={activeKey}>\n          {renderHeaderContent()}\n        </Transition>\n      </div>\n      <Transition\n        activeKey={activeKey}\n        name=\"slideFade\"\n        slideClassName=\"ChatOrUserPicker_slide\"\n        className={styles.content}\n      >\n        {renderContent}\n      </Transition>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      storyId, peerId,\n    },\n  } = selectTabState(global);\n  const story = (peerId && storyId)\n    ? selectPeerStory(global, peerId, storyId)\n    : undefined;\n\n  return {\n    story: story && 'content' in story ? story as ApiStory : undefined,\n    visibility: story && 'visibility' in story ? story.visibility : undefined,\n    contactListIds: global.contactList?.userIds,\n    usersById: global.users.byId,\n    currentUserId: global.currentUserId!,\n  };\n})(StorySettings));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPeer,\n  ApiStoryForwardInfo,\n  ApiTypeStory,\n} from '../../../api/types';\nimport type { IconName } from '../../../types/icons';\n\nimport {\n  isUserId,\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport { selectPeer, selectPeerStory } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getPeerColorClass } from '../helpers/peerColor';\nimport renderText from '../helpers/renderText';\nimport { renderTextWithEntities } from '../helpers/renderTextWithEntities';\n\nimport { useFastClick } from '../../../hooks/useFastClick';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../icons/Icon';\nimport PeerColorWrapper from '../PeerColorWrapper';\nimport EmojiIconBackground from './EmojiIconBackground';\n\nimport './EmbeddedMessage.scss';\n\ntype OwnProps = {\n  forwardInfo: ApiStoryForwardInfo;\n  className?: string;\n};\n\ntype StateProps = {\n  sender?: ApiPeer;\n  story?: ApiTypeStory;\n};\n\nconst EmbeddedStoryForward: FC<OwnProps & StateProps> = ({\n  className,\n  forwardInfo,\n  sender,\n  story,\n}) => {\n  const { openStoryViewer, loadPeerStoriesByIds, openChat } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!story && forwardInfo.fromPeerId && forwardInfo.storyId) {\n      loadPeerStoriesByIds({\n        peerId: forwardInfo.fromPeerId,\n        storyIds: [forwardInfo.storyId],\n      });\n    }\n  }, [forwardInfo, story]);\n\n  const senderTitle = sender ? getPeerTitle(lang, sender) : forwardInfo.fromName;\n\n  const openOriginalStory = useLastCallback(() => {\n    const { fromPeerId, storyId } = forwardInfo;\n    if (!fromPeerId) return;\n\n    const isStoryReady = story && !('isDeleted' in story && story.isDeleted);\n\n    if (isStoryReady) {\n      openStoryViewer({\n        peerId: fromPeerId,\n        storyId,\n        isSingleStory: true,\n      });\n    } else {\n      openChat({ id: fromPeerId });\n    }\n  });\n\n  const { handleClick, handleMouseDown } = useFastClick(openOriginalStory);\n\n  function renderTextContent() {\n    if (story && 'content' in story && story.content.text) {\n      return (\n        <p className=\"embedded-text-wrapper\">\n          {renderTextWithEntities(story.content.text)}\n        </p>\n      );\n    }\n\n    return undefined;\n  }\n\n  function renderSender() {\n    if (!sender || !senderTitle) {\n      return undefined;\n    }\n\n    const icon: IconName | undefined = !isUserId(sender.id) ? 'channel-filled' : 'user-filled';\n\n    return (\n      <>\n        {icon && <Icon name={icon} className=\"embedded-chat-icon\" />}\n        {senderTitle && renderText(senderTitle)}\n      </>\n    );\n  }\n\n  return (\n    <PeerColorWrapper\n      ref={ref}\n      className={buildClassName(\n        'EmbeddedMessage',\n        className,\n        getPeerColorClass(sender, true, true),\n      )}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      onClick={handleClick}\n      onMouseDown={handleMouseDown}\n    >\n      {sender?.color?.backgroundEmojiId && (\n        <EmojiIconBackground\n          emojiDocumentId={sender.color.backgroundEmojiId}\n          className=\"EmbeddedMessage--background-icons\"\n        />\n      )}\n      <div className=\"message-text\">\n        {renderTextContent()}\n        <div className=\"message-title\">\n          {renderSender()}\n        </div>\n      </div>\n    </PeerColorWrapper>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { forwardInfo }): StateProps => {\n    const sender = forwardInfo.fromPeerId ? selectPeer(global, forwardInfo.fromPeerId) : undefined;\n    const story = forwardInfo.storyId && forwardInfo.fromPeerId\n      ? selectPeerStory(global, forwardInfo.fromPeerId, forwardInfo.storyId) : undefined;\n    return {\n      sender,\n      story,\n    };\n  },\n)(EmbeddedStoryForward));\n","import React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { addExtraClass, removeExtraClass } from '../../lib/teact/teact-dom';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { requestForcedReflow, requestMeasure, requestMutation } from '../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../util/buildClassName';\nimport calcTextLineHeightAndCount from '../../util/element/calcTextLineHeightAndCount';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport EmbeddedStoryForward from '../common/embedded/EmbeddedStoryForward';\nimport MessageText from '../common/MessageText';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  story: ApiStory;\n  isExpanded: boolean;\n  className?: string;\n  onExpand: NoneToVoidFunction;\n  onFold?: NoneToVoidFunction;\n}\n\nconst EXPAND_ANIMATION_DURATION_MS = 400;\nconst LINES_TO_SHOW = 3;\n\nfunction StoryCaption({\n  story, isExpanded, className, onExpand, onFold,\n}: OwnProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const contentRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const textRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const showMoreButtonRef = useRef<HTMLDivElement>(null);\n  const renderingStory = useCurrentOrPrev(story, true);\n\n  const caption = renderingStory?.content.text;\n\n  const [hasOverflow, setHasOverflow] = useState(false);\n  const prevIsExpanded = usePrevDuringAnimation(isExpanded || undefined, EXPAND_ANIMATION_DURATION_MS);\n  const isInExpandedState = isExpanded || prevIsExpanded;\n\n  useEffect(() => {\n    requestMutation(() => {\n      if (!contentRef.current) {\n        return;\n      }\n\n      if (isExpanded) {\n        addExtraClass(contentRef.current, styles.animate);\n      } else {\n        removeExtraClass(contentRef.current, styles.animate);\n      }\n    });\n  }, [isExpanded]);\n\n  const canExpand = hasOverflow && !isInExpandedState;\n  const { shouldRender: shouldRenderShowMore, transitionClassNames } = useShowTransitionDeprecated(\n    canExpand, undefined, true, 'slow', true,\n  );\n\n  useLayoutEffect(() => {\n    requestMeasure(() => {\n      if (!showMoreButtonRef.current) {\n        return;\n      }\n\n      const button = showMoreButtonRef.current;\n\n      const { offsetWidth } = button;\n\n      requestMutation(() => {\n        button.style.setProperty('--expand-button-width', `${offsetWidth}px`);\n      });\n    });\n  }, []);\n\n  useLayoutEffect(() => {\n    requestForcedReflow(() => {\n      if (!contentRef.current || !textRef.current) {\n        return undefined;\n      }\n\n      const container = contentRef.current;\n      const textContainer = textRef.current;\n\n      const textOffsetTop = textContainer.offsetTop;\n      const { lineHeight, totalLines } = calcTextLineHeightAndCount(textContainer);\n      const isOverflowing = totalLines > LINES_TO_SHOW;\n      const overflowShift = textOffsetTop + lineHeight * LINES_TO_SHOW;\n\n      return () => {\n        if (isOverflowing) {\n          addExtraClass(container, styles.hasOverflow);\n          setHasOverflow(true);\n        }\n\n        container.style.setProperty('--_overflow-shift', `${overflowShift}px`);\n      };\n    });\n  }, [caption]);\n\n  useEffect(() => {\n    if (!isExpanded) {\n      ref.current?.scrollTo({ top: 0 });\n    }\n  }, [isExpanded]);\n\n  const fullClassName = buildClassName(\n    styles.captionContent,\n    isInExpandedState && styles.expanded,\n    shouldRenderShowMore && styles.withShowMore,\n  );\n\n  return (\n    <div className={buildClassName(styles.caption, className)}>\n      <div\n        ref={contentRef}\n        className={fullClassName}\n        role={canExpand ? 'button' : undefined}\n        onClick={canExpand ? onExpand : onFold}\n      >\n        <div\n          ref={ref}\n          className={buildClassName(styles.captionInner, 'allow-selection', 'custom-scroll')}\n        >\n          {renderingStory?.forwardInfo && (\n            <EmbeddedStoryForward\n              forwardInfo={renderingStory.forwardInfo}\n              className={styles.forwardInfo}\n            />\n          )}\n          {renderingStory && (\n            <div ref={textRef} className={styles.captionText}>\n              <MessageText\n                messageOrStory={renderingStory}\n                withTranslucentThumbs\n                forcePlayback\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      {shouldRenderShowMore && (\n        <div\n          ref={showMoreButtonRef}\n          className={buildClassName(styles.captionShowMore, transitionClassNames)}\n          onClick={onExpand}\n        >\n          {lang('Story.CaptionShowMore')}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(StoryCaption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"YVD19vOP\",\"viewInfo\":\"cknL5COh\",\"interactive\":\"pJAyeGkG\",\"avatars\":\"Vz_VtJ16\",\"spacer\":\"kKoeDk3Z\",\"reactionCount\":\"sf3u_6Vh\",\"reactionCountHeart\":\"Er2XKRqi\",\"footerItem\":\"vJRk_UUk\",\"views\":\"nIv3YAnZ\",\"viewIcon\":\"WyBiNM6e\",\"reactionButton\":\"lpDXVIuf\",\"reactionHeart\":\"twgMDT1y\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../global';\n\nimport type { ApiStory } from '../../api/types';\n\nimport { HEART_REACTION } from '../../config';\nimport {\n  getReactionKey, getStoryKey, isSameReaction, isUserId,\n} from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport AvatarList from '../common/AvatarList';\nimport Icon from '../common/icons/Icon';\nimport ReactionAnimatedEmoji from '../common/reactions/ReactionAnimatedEmoji';\nimport Button from '../ui/Button';\n\nimport styles from './StoryFooter.module.scss';\n\ntype OwnProps = {\n  story: ApiStory;\n  className?: string;\n};\n\nconst StoryFooter = ({\n  story,\n  className,\n}: OwnProps) => {\n  const { openStoryViewModal, openForwardMenu, sendStoryReaction } = getActions();\n  const lang = useOldLang();\n\n  const {\n    views, isOut, peerId, id: storyId, sentReaction,\n  } = story;\n  const { viewsCount, forwardsCount, reactionsCount } = views || {};\n  const isChannel = !isUserId(peerId);\n\n  const isSentStoryReactionHeart = sentReaction && isSameReaction(sentReaction, HEART_REACTION);\n\n  const canForward = Boolean(\n    (isOut || isChannel)\n    && story.isPublic\n    && !story.noForwards,\n  );\n\n  const containerId = getStoryKey(peerId, storyId);\n\n  const recentViewers = useMemo(() => {\n    const { users: { byId: usersById } } = getGlobal();\n\n    const recentViewerIds = views && 'recentViewerIds' in views ? views.recentViewerIds : undefined;\n    if (!recentViewerIds) return undefined;\n\n    return recentViewerIds.map((id) => usersById[id]).filter(Boolean);\n  }, [views]);\n\n  const handleOpenStoryViewModal = useLastCallback(() => {\n    openStoryViewModal({ storyId });\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleLikeStory = useLastCallback(() => {\n    const reaction = sentReaction ? undefined : HEART_REACTION;\n    sendStoryReaction({\n      peerId,\n      storyId,\n      containerId,\n      reaction,\n    });\n  });\n\n  if (!viewsCount) {\n    return (\n      <div className={buildClassName(styles.root, className)}>\n        {lang('NobodyViewed')}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        className,\n      )}\n    >\n      <div\n        className={buildClassName(styles.viewInfo, !isChannel && styles.interactive)}\n        onClick={!isChannel ? handleOpenStoryViewModal : undefined}\n      >\n        {Boolean(recentViewers?.length) && (\n          <AvatarList\n            size=\"small\"\n            peers={recentViewers}\n            className={styles.avatars}\n          />\n        )}\n\n        {isChannel ? (\n          <span className={styles.views}><Icon name=\"channelviews\" className={styles.viewIcon} />{viewsCount}</span>\n        ) : (\n          <span className={styles.views}>{lang('Views', viewsCount, 'i')}</span>\n        )}\n        {Boolean(reactionsCount) && !isChannel && (\n          <span className={styles.reactionCount}>\n            <Icon name=\"heart\" className={styles.reactionCountHeart} />\n            {reactionsCount}\n          </span>\n        )}\n      </div>\n      <div className={styles.spacer} />\n      {canForward && (\n        <Button\n          color=\"translucent\"\n          size=\"smaller\"\n          round\n          onClick={handleForwardClick}\n          ariaLabel={lang('Forward')}\n          className={styles.footerItem}\n        >\n          <Icon name=\"forward\" />\n        </Button>\n      )}\n      {isChannel && (\n        <>\n          {Boolean(forwardsCount) && (\n            <div className={styles.footerItem}>\n              <Button\n                round\n                color=\"translucent\"\n                size=\"smaller\"\n                nonInteractive\n                ariaLabel={lang('PublicShares')}\n              >\n                <Icon name=\"loop\" />\n              </Button>\n              <span>{forwardsCount}</span>\n            </div>\n          )}\n          <div className={styles.footerItem}>\n            <Button\n              round\n              className={styles.reactionButton}\n              color=\"translucent\"\n              size=\"smaller\"\n              onClick={handleLikeStory}\n              ariaLabel={lang('AccDescrLike')}\n            >\n              {sentReaction && (\n                <ReactionAnimatedEmoji\n                  key={getReactionKey(sentReaction)}\n                  containerId={containerId}\n                  reaction={sentReaction}\n                  withEffectOnly={isSentStoryReactionHeart}\n                />\n              )}\n              {(!sentReaction || isSentStoryReactionHeart) && (\n                <Icon\n                  name={isSentStoryReactionHeart ? 'heart' : 'heart-outline'}\n                  className={buildClassName(isSentStoryReactionHeart && styles.reactionHeart)}\n                />\n              )}\n            </Button>\n            {Boolean(reactionsCount) && (<span>{reactionsCount}</span>)}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StoryFooter);\n","import React, {\n  memo,\n} from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport styles from './StoryProgress.module.scss';\n\ninterface OwnProps {\n  isActive: boolean;\n  isViewed: boolean;\n  isVideo?: boolean;\n  duration?: number;\n  isPaused?: boolean;\n  onImageComplete: NoneToVoidFunction;\n}\n\nconst DEFAULT_STORY_DURATION_S = 6;\n\nfunction StoryProgress({\n  isActive, isViewed, isVideo, duration = DEFAULT_STORY_DURATION_S, isPaused, onImageComplete,\n}: OwnProps) {\n  const handleAnimationEnd = useLastCallback((event: React.AnimationEvent<HTMLElement>) => {\n    if (!isVideo && event.animationName === styles.progress) {\n      onImageComplete();\n    }\n  });\n\n  const classNames = buildClassName(\n    styles.root,\n    isViewed && styles.viewed,\n    isActive && styles.active,\n    isPaused && styles.paused,\n  );\n\n  return (\n    <span\n      className={classNames}\n      aria-hidden\n    >\n      {isActive && (\n        <i style={`--progress-duration: ${duration}s`} className={styles.inner} onAnimationEnd={handleAnimationEnd} />\n      )}\n    </span>\n  );\n}\n\nexport default memo(StoryProgress);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c1fbGgcx\",\"viewed\":\"xwOKghO2\",\"active\":\"ZuByYcIx\",\"inner\":\"qyBCpJct\",\"progress\":\"XY98E7VM\",\"paused\":\"n9V6B7hP\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMediaAreaChannelPost,\n  ApiPeer, ApiStealthMode, ApiStory, ApiTypeStory,\n} from '../../api/types';\nimport type { IDimensions } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport type { Signal } from '../../util/signals';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport { EDITABLE_STORY_INPUT_CSS_SELECTOR, EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { isChatChannel, isUserId } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  selectChat,\n  selectIsCurrentUserPremium,\n  selectPeer,\n  selectPeerPaidMessagesStars,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatMediaDuration, formatRelativePastTime } from '../../util/dates/dateFormat';\nimport download from '../../util/download';\nimport { formatStarsAsIcon } from '../../util/localization/format';\nimport { round } from '../../util/math';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_SAFARI } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\nimport { BASE_STORY_HEIGHT, BASE_STORY_WIDTH } from './helpers/dimensions';\nimport { PRIMARY_VIDEO_MIME, SECONDARY_VIDEO_MIME } from './helpers/videoFormats';\n\nimport useUnsupportedMedia from '../../hooks/media/useUnsupportedMedia';\nimport useAppLayout, { getIsMobile } from '../../hooks/useAppLayout';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useLongPress from '../../hooks/useLongPress';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport { useStreaming } from '../../hooks/useStreaming';\nimport useBackgroundMode from '../../hooks/window/useBackgroundMode';\nimport useStoryPreloader from './hooks/useStoryPreloader';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Avatar from '../common/Avatar';\nimport Composer from '../common/Composer';\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Skeleton from '../ui/placeholder/Skeleton';\nimport Transition from '../ui/Transition';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\nimport StoryCaption from './StoryCaption';\nimport StoryFooter from './StoryFooter';\nimport StoryProgress from './StoryProgress';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peerId: string;\n  storyId: number;\n  dimensions: IDimensions;\n  // eslint-disable-next-line react/no-unused-prop-types\n  isDeleteModalOpen?: boolean;\n  isPrivateStories?: boolean;\n  isArchivedStories?: boolean;\n  isSingleStory?: boolean;\n  getIsAnimating: Signal<boolean>;\n  onDelete: (story: ApiTypeStory) => void;\n  onClose: NoneToVoidFunction;\n  onReport: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peer: ApiPeer;\n  forwardSender?: ApiPeer;\n  fromPeer?: ApiPeer;\n  story?: ApiTypeStory;\n  isMuted: boolean;\n  orderedIds?: number[];\n  shouldForcePause?: boolean;\n  storyChangelogUserId?: string;\n  viewersExpirePeriod: number;\n  isChatExist?: boolean;\n  arePeerSettingsLoaded?: boolean;\n  isCurrentUserPremium?: boolean;\n  stealthMode: ApiStealthMode;\n  withHeaderAnimation?: boolean;\n  paidMessagesStars?: number;\n}\n\nconst VIDEO_MIN_READY_STATE = IS_SAFARI ? 4 : 3;\nconst SPACEBAR_CODE = 32;\n\nconst STEALTH_MODE_NOTIFICATION_DURATION = 4000;\n\nfunction Story({\n  peerId,\n  storyId,\n  peer,\n  forwardSender,\n  fromPeer,\n  isMuted,\n  isArchivedStories,\n  isPrivateStories,\n  story,\n  orderedIds,\n  isSingleStory,\n  dimensions,\n  shouldForcePause,\n  storyChangelogUserId,\n  viewersExpirePeriod,\n  isChatExist,\n  arePeerSettingsLoaded,\n  getIsAnimating,\n  isCurrentUserPremium,\n  stealthMode,\n  withHeaderAnimation,\n  onDelete,\n  onClose,\n  onReport,\n  paidMessagesStars,\n}: OwnProps & StateProps) {\n  const {\n    viewStory,\n    setStoryViewerMuted,\n    openPreviousStory,\n    openNextStory,\n    loadPeerSkippedStories,\n    openForwardMenu,\n    copyStoryLink,\n    toggleStoryInProfile,\n    openChat,\n    showNotification,\n    openStoryPrivacyEditor,\n    loadPeerSettings,\n    fetchChat,\n    loadStoryViews,\n    toggleStealthModal,\n  } = getActions();\n  const serverTime = getServerTime();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { isMobile } = useAppLayout();\n  const [isComposerHasFocus, markComposerHasFocus, unmarkComposerHasFocus] = useFlag(false);\n  const [isStoryPlaybackRequested, playStory, pauseStory] = useFlag(false);\n  const [isStoryPlaying, markStoryPlaying, unmarkStoryPlaying] = useFlag(false);\n  const [isAppFocused, markAppFocused, unmarkAppFocused] = useFlag(true);\n  const [isCaptionExpanded, expandCaption, foldCaption] = useFlag(false);\n  const [isPausedBySpacebar, setIsPausedBySpacebar] = useState(false);\n  const [isPausedByLongPress, markIsPausedByLongPress, unmarkIsPausedByLongPress] = useFlag(false);\n  const [isDropdownMenuOpen, markDropdownMenuOpen, unmarkDropdownMenuOpen] = useFlag(false);\n  // eslint-disable-next-line no-null/no-null\n  const videoRef = useRef<HTMLVideoElement>(null);\n  const {\n    isDeletedStory,\n    hasText,\n    hasForwardInfo,\n    thumbnail,\n    previewBlobUrl,\n    isVideo,\n    noSound,\n    fullMediaData,\n    altMediaHash,\n    altMediaData,\n    hasFullData,\n    hasThumb,\n    canDownload,\n    downloadMediaData,\n  } = useStoryProps(story, isCurrentUserPremium, isDropdownMenuOpen);\n\n  const isLoadedStory = story && 'content' in story;\n  const isChangelog = peerId === storyChangelogUserId;\n  const isUserStory = isUserId(peerId);\n  const isChatStory = !isUserStory;\n  const isChannelStory = isChatStory && isChatChannel(peer as ApiChat);\n  const isOut = isLoadedStory && story.isOut;\n\n  const canPinToProfile = useCurrentOrPrev(\n    isOut ? !story.isInProfile : undefined,\n    true,\n  );\n  const canUnpinFromProfile = useCurrentOrPrev(\n    isOut ? story.isInProfile : undefined,\n    true,\n  );\n  const areViewsExpired = Boolean(\n    isOut && (story!.date + viewersExpirePeriod) < getServerTime(),\n  );\n\n  const forwardSenderTitle = forwardSender ? getPeerTitle(oldLang, forwardSender)\n    : (isLoadedStory && story.forwardInfo?.fromName);\n\n  const canCopyLink = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !isChangelog\n    && peer?.usernames?.length,\n  );\n\n  const canShare = Boolean(\n    isLoadedStory\n    && story.isPublic\n    && !story.noForwards\n    && !isChangelog\n    && !isCaptionExpanded,\n  );\n\n  const canPlayStory = Boolean(\n    hasFullData && !shouldForcePause && isAppFocused && !isComposerHasFocus && !isCaptionExpanded\n    && !isPausedBySpacebar && !isPausedByLongPress,\n  );\n\n  const duration = isLoadedStory && story.content.video?.duration\n    ? story.content.video.duration\n    : undefined;\n\n  const shouldShowComposer = !(isOut && isUserStory) && !isChangelog && !isChannelStory;\n  const shouldShowFooter = isLoadedStory && !shouldShowComposer && (isOut || isChannelStory);\n  const headerAnimation = isMobile && withHeaderAnimation ? 'slideFade' : 'none';\n\n  const {\n    shouldRender: shouldRenderSkeleton,\n    transitionClassNames: skeletonTransitionClassNames,\n  } = useShowTransitionDeprecated(!hasFullData);\n\n  const {\n    transitionClassNames: mediaTransitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(fullMediaData));\n\n  const thumbRef = useCanvasBlur(thumbnail, !hasThumb);\n  const previewTransitionClassNames = useMediaTransitionDeprecated(previewBlobUrl);\n\n  const {\n    shouldRender: shouldRenderComposer,\n    transitionClassNames: composerAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(shouldShowComposer);\n\n  const {\n    shouldRender: shouldRenderCaptionBackdrop,\n    transitionClassNames: captionBackdropTransitionClassNames,\n  } = useShowTransitionDeprecated(hasText && isCaptionExpanded);\n\n  const { transitionClassNames: appearanceAnimationClassNames } = useShowTransitionDeprecated(true);\n  const {\n    shouldRender: shouldRenderCaption,\n    transitionClassNames: captionAppearanceAnimationClassNames,\n  } = useShowTransitionDeprecated(hasText || hasForwardInfo);\n\n  const isStreamingSupported = useStreaming(videoRef, fullMediaData, PRIMARY_VIDEO_MIME);\n\n  useStoryPreloader(peerId, storyId);\n\n  useEffect(() => {\n    if (storyId) {\n      viewStory({ peerId, storyId });\n    }\n  }, [storyId, peerId]);\n\n  useEffect(() => {\n    loadPeerSkippedStories({ peerId });\n  }, [peerId]);\n\n  // Fetching user privacy settings for use in Composer\n  useEffect(() => {\n    const canWrite = isUserId(peerId);\n    if (!isChatExist && canWrite) {\n      fetchChat({ chatId: peerId });\n    }\n  }, [isChatExist, peerId]);\n  useEffect(() => {\n    if (isChatExist && !arePeerSettingsLoaded) {\n      loadPeerSettings({ peerId });\n    }\n  }, [arePeerSettingsLoaded, isChatExist, peerId]);\n\n  const handlePauseStory = useLastCallback(() => {\n    if (isVideo) {\n      videoRef.current?.pause();\n    }\n\n    unmarkStoryPlaying();\n    pauseStory();\n  });\n\n  const handlePlayStory = useLastCallback(() => {\n    if (!canPlayStory) return;\n\n    playStory();\n    if (!isVideo) markStoryPlaying();\n  });\n\n  const handleLongPressStart = useLastCallback(() => {\n    markIsPausedByLongPress();\n  });\n  const handleLongPressEnd = useLastCallback(() => {\n    unmarkIsPausedByLongPress();\n  });\n\n  const handleDropdownMenuOpen = useLastCallback(() => {\n    markDropdownMenuOpen();\n    handlePauseStory();\n  });\n\n  const handleDropdownMenuClose = useLastCallback(() => {\n    unmarkDropdownMenuOpen();\n    handlePlayStory();\n  });\n\n  const {\n    onMouseDown: handleLongPressMouseDown,\n    onMouseUp: handleLongPressMouseUp,\n    onMouseLeave: handleLongPressMouseLeave,\n    onTouchStart: handleLongPressTouchStart,\n    onTouchEnd: handleLongPressTouchEnd,\n  } = useLongPress({\n    onStart: handleLongPressStart,\n    onEnd: handleLongPressEnd,\n  });\n\n  const isUnsupported = useUnsupportedMedia(\n    videoRef,\n    undefined,\n    !isVideo || !fullMediaData || isStreamingSupported,\n  );\n\n  const hasAllData = fullMediaData && (!altMediaHash || altMediaData);\n  // Play story after media has been downloaded\n  useEffect(() => {\n    if (hasAllData && !isUnsupported) handlePlayStory();\n  }, [hasAllData, isUnsupported]);\n\n  useBackgroundMode(unmarkAppFocused, markAppFocused);\n\n  useEffect(() => {\n    if (!hasAllData) return;\n    videoRef.current?.load();\n  }, [hasAllData]);\n\n  useEffect(() => {\n    if (!isLoadedStory || isDeletedStory || areViewsExpired) return;\n\n    if (!isOut && !isChannelStory) return;\n\n    // Refresh counters each time\n    loadStoryViews({ peerId, storyId });\n  }, [isDeletedStory, areViewsExpired, isLoadedStory, peerId, storyId, isOut, isChannelStory]);\n\n  useEffect(() => {\n    if (\n      shouldForcePause || !isAppFocused || isComposerHasFocus\n      || isCaptionExpanded || isPausedBySpacebar || isPausedByLongPress\n    ) {\n      handlePauseStory();\n    } else {\n      handlePlayStory();\n    }\n  }, [\n    handlePlayStory, isAppFocused, isCaptionExpanded, isComposerHasFocus,\n    shouldForcePause, isPausedBySpacebar, isPausedByLongPress,\n  ]);\n\n  useEffect(() => {\n    if (isComposerHasFocus || shouldForcePause || isCaptionExpanded) {\n      return undefined;\n    }\n\n    function handleKeyDown(e: KeyboardEvent) {\n      if (e.keyCode === SPACEBAR_CODE) {\n        e.preventDefault();\n        setIsPausedBySpacebar(!isPausedBySpacebar);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isCaptionExpanded, isComposerHasFocus, isPausedBySpacebar, shouldForcePause]);\n\n  // Reset the state of `isPausedBySpacebar` when closing the caption, losing focus by composer or disable forced pause\n  useEffectWithPrevDeps(([\n    prevIsComposerHasFocus,\n    prevIsCaptionExpanded,\n    prevShouldForcePause,\n    prevIsAppFocused,\n    prevIsPausedByLongPress,\n  ]) => {\n    if (\n      !isPausedBySpacebar || isCaptionExpanded || isComposerHasFocus\n      || shouldForcePause || !isAppFocused || isPausedByLongPress\n    ) {\n      return;\n    }\n\n    if (\n      prevIsCaptionExpanded !== isCaptionExpanded\n      || prevIsComposerHasFocus !== isComposerHasFocus\n      || prevShouldForcePause !== shouldForcePause\n      || prevIsAppFocused !== isAppFocused\n      || prevIsPausedByLongPress !== isPausedByLongPress\n    ) {\n      setIsPausedBySpacebar(false);\n    }\n  }, [isComposerHasFocus, isCaptionExpanded, shouldForcePause, isAppFocused, isPausedByLongPress, isPausedBySpacebar]);\n\n  const handleOpenChat = useLastCallback(() => {\n    onClose();\n    openChat({ id: peerId });\n  });\n\n  const handleForwardPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: forwardSender!.id });\n  });\n\n  const handleFromPeerClick = useLastCallback(() => {\n    onClose();\n    openChat({ id: fromPeer!.id });\n  });\n\n  const handleOpenPrevStory = useLastCallback(() => {\n    openPreviousStory();\n  });\n\n  const handleOpenNextStory = useLastCallback(() => {\n    openNextStory();\n  });\n\n  const handleVideoStoryTimeUpdate = useLastCallback((e: React.SyntheticEvent<HTMLVideoElement>) => {\n    const video = e.currentTarget;\n    if (video.readyState >= VIDEO_MIN_READY_STATE) {\n      markStoryPlaying();\n    } else {\n      unmarkStoryPlaying();\n    }\n    if (duration && round(video.currentTime, 2) >= round(duration, 2)) {\n      handleOpenNextStory();\n    }\n  });\n\n  useEffect(() => {\n    return !getIsAnimating() && !isComposerHasFocus ? captureKeyboardListeners({\n      onRight: handleOpenNextStory,\n      onLeft: handleOpenPrevStory,\n    }) : undefined;\n  }, [getIsAnimating, isComposerHasFocus]);\n\n  const handleCopyStoryLink = useLastCallback(() => {\n    copyStoryLink({ peerId, storyId });\n  });\n\n  const handlePinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: true });\n  });\n\n  const handleUnpinClick = useLastCallback(() => {\n    toggleStoryInProfile({ peerId, storyId, isInProfile: false });\n  });\n\n  const handleDeleteStoryClick = useLastCallback(() => {\n    onDelete(story!);\n  });\n\n  const handleReportStoryClick = useLastCallback(() => {\n    onReport();\n  });\n\n  const handleForwardClick = useLastCallback(() => {\n    openForwardMenu({ fromChatId: peerId, storyId });\n  });\n\n  const handleInfoPrivacyEdit = useLastCallback(() => {\n    openStoryPrivacyEditor();\n  });\n\n  const handleInfoPrivacyClick = useLastCallback(() => {\n    const visibility = !isLoadedStory || story.isPublic\n      ? undefined\n      : story.isForContacts ? 'contacts' : (story.isForCloseFriends ? 'closeFriends' : 'nobody');\n\n    let message;\n    const myName = getPeerTitle(oldLang, peer);\n    switch (visibility) {\n      case 'nobody':\n        message = oldLang('StorySelectedContactsHint', myName);\n        break;\n      case 'contacts':\n        message = oldLang('StoryContactsHint', myName);\n        break;\n      case 'closeFriends':\n        message = oldLang('StoryCloseFriendsHint', myName);\n        break;\n      default:\n        return;\n    }\n    showNotification({ message });\n  });\n\n  const handleVolumeMuted = useLastCallback(() => {\n    if (noSound) {\n      showNotification({\n        message: oldLang('Story.TooltipVideoHasNoSound'),\n      });\n      return;\n    }\n    // Browser requires explicit user interaction to keep video playing after unmuting\n    videoRef.current!.muted = !videoRef.current!.muted;\n    setStoryViewerMuted({ isMuted: !isMuted });\n  });\n\n  const handleOpenStealthModal = useLastCallback(() => {\n    if (stealthMode.activeUntil && getServerTime() < stealthMode.activeUntil) {\n      const diff = stealthMode.activeUntil - getServerTime();\n      showNotification({\n        title: oldLang('StealthModeOn'),\n        message: oldLang('Story.ToastStealthModeActiveText', formatMediaDuration(diff)),\n        duration: STEALTH_MODE_NOTIFICATION_DURATION,\n      });\n      return;\n    }\n\n    toggleStealthModal({ isOpen: true });\n  });\n\n  const handleDownload = useLastCallback(() => {\n    if (!downloadMediaData) return;\n    download(downloadMediaData, `story-${peerId}-${storyId}.${isVideo ? 'mp4' : 'jpg'}`);\n  });\n\n  useEffect(() => {\n    if (!isDeletedStory) return;\n\n    showNotification({\n      message: oldLang('StoryNotFound'),\n    });\n  }, [oldLang, isDeletedStory]);\n\n  const MenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => {\n      return (\n        <Button\n          round\n          ripple={!isMobile}\n          size=\"tiny\"\n          color=\"translucent-white\"\n          onClick={onTrigger}\n          className={buildClassName(styles.button, isOpen && 'active')}\n          ariaLabel={oldLang('AccDescrOpenMenu2')}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      );\n    };\n  }, [isMobile, oldLang]);\n\n  function renderStoriesTabs() {\n    return (\n      <div className={styles.storyIndicators}>\n        {(isSingleStory ? [storyId] : orderedIds ?? []).map((id) => (\n          <StoryProgress\n            key={`progress-${id}`}\n            isActive={id === story?.id}\n            isVideo={isVideo}\n            isViewed={Boolean(story?.id && ((isPrivateStories || isArchivedStories) ? id > story?.id : id < story?.id))}\n            isPaused={!isStoryPlaying}\n            duration={duration}\n            onImageComplete={handleOpenNextStory}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderStoryPrivacyButton() {\n    if (!isUserStory) return undefined;\n\n    let privacyIcon: IconName = 'channel-filled';\n    const gradient: Record<string, [string, string]> = {\n      'channel-filled': ['#50ABFF', '#007AFF'],\n      'user-filled': ['#C36EFF', '#8B60FA'],\n      'favorite-filled': ['#88D93A', '#30B73B'],\n      'group-filled': ['#FFB743', '#F69A36'],\n    };\n\n    if (isOut) {\n      const { visibility } = (story && 'visibility' in story && story.visibility) || {};\n\n      switch (visibility) {\n        case 'everybody':\n          privacyIcon = 'channel-filled';\n          break;\n        case 'contacts':\n          privacyIcon = 'user-filled';\n          break;\n        case 'closeFriends':\n          privacyIcon = 'favorite-filled';\n          break;\n        case 'nobody':\n          privacyIcon = 'group-filled';\n      }\n    } else {\n      if (!story || !('content' in story) || story.isPublic) {\n        return undefined;\n      }\n\n      privacyIcon = story.isForCloseFriends\n        ? 'favorite-filled'\n        : (story.isForContacts ? 'user-filled' : 'group-filled');\n    }\n\n    return (\n      <div\n        className={buildClassName(styles.visibilityButton, isOut && styles.visibilityButtonSelf)}\n        onClick={isOut ? handleInfoPrivacyEdit : handleInfoPrivacyClick}\n        style={`--color-from: ${gradient[privacyIcon][0]}; --color-to: ${gradient[privacyIcon][1]}`}\n      >\n        <Icon name={privacyIcon} />\n        {isOut && <Icon name=\"next\" />}\n      </div>\n    );\n  }\n\n  function renderSenderInfo() {\n    return (\n      <div className={styles.senderInfo}>\n        <Avatar\n          peer={peer}\n          size=\"tiny\"\n          onClick={handleOpenChat}\n        />\n        <div className={styles.senderMeta}>\n          <span onClick={handleOpenChat} className={styles.senderName}>\n            {renderText(getPeerTitle(oldLang, peer) || '')}\n          </span>\n          <div className={styles.storyMetaRow}>\n            {forwardSenderTitle && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.forwardHeader, forwardSender && styles.clickable,\n                )}\n                onClick={forwardSender ? handleForwardPeerClick : undefined}\n              >\n                <Icon name=\"loop\" />\n                <span className={styles.headerTitle}>\n                  {renderText(forwardSenderTitle)}\n                </span>\n              </span>\n            )}\n            {fromPeer && (\n              <span\n                className={buildClassName(\n                  styles.storyMeta, styles.fromPeer,\n                )}\n                onClick={handleFromPeerClick}\n              >\n                <Avatar peer={fromPeer} size=\"micro\" />\n                <span className={styles.headerTitle}>\n                  {renderText(getPeerTitle(oldLang, fromPeer) || '')}\n                </span>\n              </span>\n            )}\n            {story && 'date' in story && (\n              <span className={styles.storyMeta}>{formatRelativePastTime(oldLang, serverTime, story.date)}</span>\n            )}\n            {isLoadedStory && story.isEdited && (\n              <span className={styles.storyMeta}>{oldLang('Story.HeaderEdited')}</span>\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSender() {\n    return (\n      <div className={styles.sender}>\n        <Transition activeKey={Number(peerId)} name={headerAnimation} className={styles.senderInfoTransition}>\n          {renderSenderInfo()}\n        </Transition>\n\n        <div className={styles.actions}>\n          {renderStoryPrivacyButton()}\n          {isVideo && (\n            <Button\n              className={styles.button}\n              round\n              ripple={!isMobile}\n              size=\"tiny\"\n              color=\"translucent-white\"\n              disabled={!hasFullData}\n              onClick={handleVolumeMuted}\n              ariaLabel={oldLang('Volume')}\n            >\n              <Icon name={(isMuted || noSound) ? 'speaker-muted-story' : 'speaker-story'} />\n            </Button>\n          )}\n          <DropdownMenu\n            className={styles.buttonMenu}\n            trigger={MenuButton}\n            positionX=\"right\"\n            onOpen={handleDropdownMenuOpen}\n            onClose={handleDropdownMenuClose}\n          >\n            {canCopyLink && <MenuItem icon=\"copy\" onClick={handleCopyStoryLink}>{oldLang('CopyLink')}</MenuItem>}\n            {canPinToProfile && (\n              <MenuItem icon=\"save-story\" onClick={handlePinClick}>\n                {oldLang(isUserStory ? 'StorySave' : 'SaveToPosts')}\n              </MenuItem>\n            )}\n            {canUnpinFromProfile && (\n              <MenuItem icon=\"delete\" onClick={handleUnpinClick}>\n                {oldLang(isUserStory ? 'ArchiveStory' : 'RemoveFromPosts')}\n              </MenuItem>\n            )}\n            {canDownload && (\n              <MenuItem icon=\"download\" disabled={!downloadMediaData} onClick={handleDownload}>\n                {oldLang('lng_media_download')}\n              </MenuItem>\n            )}\n            {!isOut && isUserStory && (\n              <MenuItem icon=\"eye-crossed-outline\" onClick={handleOpenStealthModal}>\n                {oldLang('StealthMode')}\n              </MenuItem>\n            )}\n            {!isOut && <MenuItem icon=\"flag\" onClick={handleReportStoryClick}>{oldLang('lng_report_story')}</MenuItem>}\n            {isOut && (\n              <MenuItem\n                icon=\"delete\"\n                destructive\n                onClick={handleDeleteStoryClick}\n              >{oldLang('Delete')}\n              </MenuItem>\n            )}\n          </DropdownMenu>\n          <Button\n            className={buildClassName(styles.button, styles.closeButton)}\n            round\n            size=\"tiny\"\n            color=\"translucent-white\"\n            ariaLabel={oldLang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  const inputPlaceholder = paidMessagesStars\n    ? lang('ComposerPlaceholderPaidReply', {\n      amount: formatStarsAsIcon(lang, paidMessagesStars, { asFont: true, className: 'placeholder-star-icon' }),\n    }, {\n      withNodes: true,\n    })\n    : oldLang(isChatStory ? 'ReplyToGroupStory' : 'ReplyPrivately');\n\n  return (\n    <div\n      className={buildClassName(styles.slideInner, 'component-theme-dark')}\n      onMouseDown={handleLongPressMouseDown}\n      onMouseUp={handleLongPressMouseUp}\n      onMouseLeave={handleLongPressMouseLeave}\n      onTouchStart={handleLongPressTouchStart}\n      onTouchEnd={handleLongPressTouchEnd}\n    >\n      <div className={buildClassName(styles.storyHeader, appearanceAnimationClassNames)}>\n        {renderStoriesTabs()}\n        {renderSender()}\n      </div>\n\n      <div\n        className={styles.mediaWrapper}\n        style={`width: ${dimensions.width}px; height: ${dimensions.height}px`}\n      >\n        <canvas ref={thumbRef} className={styles.thumbnail} />\n        {previewBlobUrl && (\n          <img\n            key={`preview-${storyId}`}\n            src={previewBlobUrl}\n            draggable={false}\n            alt=\"\"\n            className={buildClassName(styles.media, styles.mediaPreview, previewTransitionClassNames)}\n          />\n        )}\n        {shouldRenderSkeleton && (\n          <Skeleton className={buildClassName(skeletonTransitionClassNames, styles.fullSize)} />\n        )}\n        {!isVideo && fullMediaData && (\n          <img\n            src={fullMediaData}\n            alt=\"\"\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            draggable={false}\n          />\n        )}\n        {isVideo && fullMediaData && (\n          <OptimizedVideo\n            ref={videoRef}\n            key={`video-${storyId}`}\n            className={buildClassName(styles.media, mediaTransitionClassNames)}\n            canPlay={isStoryPlaybackRequested}\n            muted={isMuted}\n            width={BASE_STORY_WIDTH}\n            height={BASE_STORY_HEIGHT}\n            draggable={false}\n            playsInline\n            disablePictureInPicture\n            isPriority\n            onPause={unmarkStoryPlaying}\n            onWaiting={unmarkStoryPlaying}\n            disableRemotePlayback\n            onTimeUpdate={handleVideoStoryTimeUpdate}\n          >\n            <source src={fullMediaData} type={PRIMARY_VIDEO_MIME} width=\"720\" />\n            {altMediaData && <source src={altMediaData} type={SECONDARY_VIDEO_MIME} width=\"480\" />}\n          </OptimizedVideo>\n        )}\n\n        {!isPausedByLongPress && !isComposerHasFocus && (\n          <>\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.prev)}\n              onClick={handleOpenPrevStory}\n              aria-label={oldLang('Previous')}\n            />\n            <button\n              type=\"button\"\n              className={buildClassName(styles.navigate, styles.next)}\n              onClick={handleOpenNextStory}\n              aria-label={oldLang('Next')}\n            />\n          </>\n        )}\n        {isLoadedStory && fullMediaData && (\n          <MediaAreaOverlay\n            key={`area-overlay-${storyId}-${peerId}`}\n            story={story}\n            isActive\n            isStoryPlaying={isDropdownMenuOpen}\n          />\n        )}\n        {!isMobile && (\n          <div className={styles.content}>\n            <div className={styles.contentInner}>\n              <Avatar\n                peer={peer}\n                withStory\n                storyViewerMode=\"disabled\"\n              />\n              <div className={styles.name}>{renderText(getPeerTitle(oldLang, peer) || '')}</div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {shouldShowFooter && (\n        <StoryFooter story={story} className={appearanceAnimationClassNames} />\n      )}\n      {shouldRenderCaptionBackdrop && (\n        <div\n          tabIndex={0}\n          role=\"button\"\n          className={buildClassName(styles.captionBackdrop, captionBackdropTransitionClassNames)}\n          onClick={() => foldCaption()}\n          aria-label={oldLang('Close')}\n        />\n      )}\n      {hasText && <div className={buildClassName(styles.captionGradient, captionAppearanceAnimationClassNames)} />}\n      {shouldRenderCaption && (\n        <StoryCaption\n          key={`caption-${storyId}-${peerId}`}\n          story={story as ApiStory}\n          isExpanded={isCaptionExpanded}\n          onExpand={expandCaption}\n          onFold={foldCaption}\n          className={captionAppearanceAnimationClassNames}\n        />\n      )}\n      {shouldRenderComposer && (\n        <Composer\n          type=\"story\"\n          chatId={peerId}\n          threadId={MAIN_THREAD_ID}\n          storyId={storyId}\n          isReady={!isOut}\n          messageListType=\"thread\"\n          isMobile={getIsMobile()}\n          editableInputCssSelector={EDITABLE_STORY_INPUT_CSS_SELECTOR}\n          editableInputId={EDITABLE_STORY_INPUT_ID}\n          inputId=\"story-input-text\"\n          className={buildClassName(styles.composer, composerAppearanceAnimationClassNames)}\n          inputPlaceholder={inputPlaceholder}\n          onForward={canShare ? handleForwardClick : undefined}\n          onFocus={markComposerHasFocus}\n          onBlur={unmarkComposerHasFocus}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, {\n  peerId,\n  storyId,\n  isDeleteModalOpen,\n}): StateProps => {\n  const { appConfig } = global;\n  const user = selectUser(global, peerId);\n  const chat = selectChat(global, peerId);\n  const userFullInfo = selectUserFullInfo(global, peerId);\n  const tabState = selectTabState(global);\n  const {\n    storyViewer: {\n      isMuted,\n      viewModal,\n      isPrivacyModalOpen,\n      isStealthModalOpen,\n      storyList,\n    },\n    forwardMessages: { storyId: forwardedStoryId },\n    premiumModal,\n    safeLinkModalUrl,\n    mapModal,\n    reportModal,\n    giftInfoModal,\n    isPaymentMessageConfirmDialogOpen,\n  } = tabState;\n  const { isOpen: isPremiumModalOpen } = premiumModal || {};\n  const story = selectPeerStory(global, peerId, storyId);\n  const isLoadedStory = story && 'content' in story;\n  const shouldForcePause = Boolean(\n    isPaymentMessageConfirmDialogOpen\n    || viewModal || forwardedStoryId || tabState.reactionPicker?.storyId || reportModal || isPrivacyModalOpen\n    || isPremiumModalOpen || isDeleteModalOpen || safeLinkModalUrl || isStealthModalOpen || mapModal || giftInfoModal,\n  );\n\n  const forwardInfo = isLoadedStory ? story.forwardInfo : undefined;\n  const mediaAreas = isLoadedStory ? story.mediaAreas : undefined;\n  const forwardSenderId = forwardInfo?.fromPeerId\n    || mediaAreas?.find((area): area is ApiMediaAreaChannelPost => area.type === 'channelPost')?.channelId;\n  const forwardSender = forwardSenderId ? selectPeer(global, forwardSenderId) : undefined;\n  const withHeaderAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  const fromPeer = isLoadedStory && story.fromId ? selectPeer(global, story.fromId) : undefined;\n  const paidMessagesStars = selectPeerPaidMessagesStars(global, peerId);\n\n  return {\n    peer: (user || chat)!,\n    forwardSender,\n    fromPeer,\n    story,\n    orderedIds: storyList?.storyIdsByPeerId[peerId],\n    isMuted,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    shouldForcePause,\n    storyChangelogUserId: appConfig!.storyChangelogUserId,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    isChatExist: Boolean(chat),\n    arePeerSettingsLoaded: Boolean(userFullInfo?.settings),\n    stealthMode: global.stories.stealthMode,\n    withHeaderAnimation,\n    paidMessagesStars,\n  };\n})(Story));\n","import React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiPeer, ApiPeerStories, ApiTypeStory,\n} from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { getStoryMediaHash } from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport { selectTabState } from '../../global/selectors';\nimport renderText from '../common/helpers/renderText';\n\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport MediaAreaOverlay from './mediaArea/MediaAreaOverlay';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  peer?: ApiPeer;\n  peerStories?: ApiPeerStories;\n}\n\ninterface StateProps {\n  lastViewedId?: number;\n  origin?: StoryViewerOrigin;\n  storyIdsForViewer?: number[];\n}\n\nfunction StoryPreview({\n  peer, peerStories, lastViewedId, storyIdsForViewer, origin,\n}: OwnProps & StateProps) {\n  const { openStoryViewer, loadPeerSkippedStories } = getActions();\n  const lang = useOldLang();\n\n  const story = useMemo<ApiTypeStory | undefined>(() => {\n    if (!peerStories) {\n      return undefined;\n    }\n\n    const {\n      orderedIds, lastReadId, byId,\n    } = peerStories;\n    const hasUnreadStories = orderedIds[orderedIds.length - 1] !== lastReadId;\n    const previewIndexId = lastViewedId && storyIdsForViewer?.includes(lastViewedId)\n      ? lastViewedId ?? (hasUnreadStories ? (lastReadId ?? -1) : -1)\n      : -1;\n    const resultId = byId[previewIndexId]?.id || storyIdsForViewer?.[0] || orderedIds[0];\n\n    return byId[resultId];\n  }, [lastViewedId, peerStories, storyIdsForViewer]);\n\n  const isLoaded = story && 'content' in story;\n\n  useEffect(() => {\n    if (story && !isLoaded) {\n      loadPeerSkippedStories({ peerId: story.peerId });\n    }\n  }, [story, isLoaded]);\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const thumbUrl = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  if (!peer || !story || 'isDeleted' in story) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className={styles.slideInner}\n      onClick={() => { openStoryViewer({ peerId: story.peerId, storyId: story.id, origin }); }}\n    >\n      {thumbUrl && (\n        <img src={thumbUrl} alt=\"\" className={styles.media} draggable={false} />\n      )}\n      {isLoaded && <MediaAreaOverlay story={story} />}\n\n      <div className={styles.content}>\n        <div className={styles.contentInner}>\n          <Avatar\n            peer={peer}\n            withStory\n            storyViewerMode=\"disabled\"\n          />\n          <div className={styles.name}>{renderText(getPeerTitle(lang, peer) || '')}</div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global, { peer }): StateProps => {\n  const {\n    storyViewer: {\n      lastViewedByPeerIds,\n      origin,\n      storyList,\n    },\n  } = selectTabState(global);\n\n  return {\n    lastViewedId: peer?.id ? lastViewedByPeerIds?.[peer.id] : undefined,\n    origin,\n    storyIdsForViewer: peer?.id ? storyList?.storyIdsByPeerId[peer.id] : undefined,\n  };\n})(StoryPreview));\n","import React, {\n  memo, useEffect, useLayoutEffect, useMemo, useRef, useSignal, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiPeerStories, ApiTypeStory } from '../../api/types';\nimport type { RealTouchEvent } from '../../util/captureEvents';\n\nimport { EDITABLE_STORY_INPUT_ID } from '../../config';\nimport { requestMutation } from '../../lib/fasterdom/fasterdom';\nimport { getStoryKey } from '../../global/helpers';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeer,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport buildStyle from '../../util/buildStyle';\nimport {\n  captureEvents,\n  IOS_SCREEN_EDGE_THRESHOLD,\n  SWIPE_DIRECTION_THRESHOLD,\n  SWIPE_DIRECTION_TOLERANCE,\n} from '../../util/captureEvents';\nimport focusEditableElement from '../../util/focusEditableElement';\nimport { clamp } from '../../util/math';\nimport { disableScrolling, enableScrolling } from '../../util/scrollLock';\nimport { IS_IOS } from '../../util/windowEnvironment';\nimport { calculateOffsetX } from './helpers/dimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useWindowSize from '../../hooks/window/useWindowSize';\nimport useSlideSizes from './hooks/useSlideSizes';\n\nimport Story from './Story';\nimport StoryPreview from './StoryPreview';\n\nimport styles from './StoryViewer.module.scss';\n\ninterface OwnProps {\n  isOpen?: boolean;\n  isDeleteModalOpen?: boolean;\n  onDelete: (story: ApiTypeStory) => void;\n  onReport: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n}\n\ninterface StateProps {\n  peerIds: string[];\n  currentPeerId?: string;\n  currentStoryId?: number;\n  byPeerId?: Record<string, ApiPeerStories>;\n  isSinglePeer?: boolean;\n  isSingleStory?: boolean;\n  isPrivate?: boolean;\n  isArchive?: boolean;\n}\n\nconst ACTIVE_SLIDE_VERTICAL_CORRECTION_REM = 1.75;\nconst SWIPE_Y_THRESHOLD = 50;\nconst SCROLL_RELEASE_DELAY = 1500;\n\nenum SwipeDirection {\n  Horizontal,\n  Vertical,\n}\n\nfunction StorySlides({\n  peerIds,\n  currentPeerId,\n  currentStoryId,\n  isOpen,\n  isSinglePeer,\n  isSingleStory,\n  isPrivate,\n  isArchive,\n  byPeerId,\n  isDeleteModalOpen,\n  onDelete,\n  onClose,\n  onReport,\n}: OwnProps & StateProps) {\n  const { stopActiveReaction } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [renderingPeerId, setRenderingPeerId] = useState(currentPeerId);\n  const [renderingStoryId, setRenderingStoryId] = useState(currentStoryId);\n  const prevPeerId = usePreviousDeprecated(currentPeerId);\n  const renderingIsArchive = useCurrentOrPrev(isArchive, true);\n  const renderingIsPrivate = useCurrentOrPrev(isPrivate, true);\n  const renderingIsSinglePeer = useCurrentOrPrev(isSinglePeer, true);\n  const renderingIsSingleStory = useCurrentOrPrev(isSingleStory, true);\n  const slideSizes = useSlideSizes();\n  const { height: windowHeight, width: windowWidth } = useWindowSize();\n  const swipeDirectionRef = useRef<SwipeDirection | undefined>(undefined);\n  const isReleasedRef = useRef(false);\n  const { isMobile } = useAppLayout();\n\n  const rendersRef = useRef<Record<string, { current: HTMLDivElement | null }>>({});\n  const [getIsAnimating, setIsAnimating] = useSignal(false);\n\n  useHistoryBack({\n    isActive: isOpen,\n    onBack: onClose,\n    shouldBeReplaced: true,\n  });\n\n  function setRef(ref: HTMLDivElement | null, peerId: string) {\n    if (!ref) {\n      return;\n    }\n    if (!rendersRef.current[peerId]) {\n      rendersRef.current[peerId] = { current: ref };\n    } else {\n      rendersRef.current[peerId].current = ref;\n    }\n  }\n\n  const renderingPeerIds = useMemo(() => {\n    if (renderingPeerId && (renderingIsSinglePeer || renderingIsSingleStory)) {\n      return [renderingPeerId];\n    }\n\n    const index = renderingPeerId ? peerIds.indexOf(renderingPeerId) : -1;\n    if (!renderingPeerId || index === -1) {\n      return [];\n    }\n\n    const start = Math.max(index - 4, 0);\n    const end = Math.min(index + 5, peerIds.length);\n\n    return peerIds.slice(start, end);\n  }, [renderingIsSingleStory, renderingIsSinglePeer, renderingPeerId, peerIds]);\n\n  const renderingPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !renderingPeerId) {\n      return -1;\n    }\n\n    return renderingPeerIds.indexOf(renderingPeerId);\n  }, [renderingPeerId, renderingPeerIds]);\n\n  const currentPeerPosition = useMemo(() => {\n    if (!renderingPeerIds.length || !currentPeerId) {\n      return -1;\n    }\n    return renderingPeerIds.indexOf(currentPeerId);\n  }, [currentPeerId, renderingPeerIds]);\n\n  useEffect(() => {\n    if (!isMobile) return;\n\n    // If animation disabled, set rendering peer id to current peer\n    setRenderingPeerId(currentPeerId);\n  }, [currentPeerId, isMobile]);\n\n  // Handling the flipping of stories from a current user\n  useEffect(() => {\n    if (renderingPeerId === currentPeerId && currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n  }, [currentPeerId, currentStoryId, renderingPeerId, renderingStoryId]);\n\n  useEffect(() => {\n    if (isMobile) return undefined;\n    if (prevPeerId && prevPeerId !== currentPeerId) {\n      setIsAnimating(true);\n    }\n\n    return () => {\n      setIsAnimating(false);\n    };\n  }, [prevPeerId, currentPeerId, setIsAnimating, isMobile]);\n\n  useEffect(() => {\n    return () => {\n      if (!currentStoryId || !currentPeerId) return;\n      stopActiveReaction({\n        containerId: getStoryKey(currentPeerId, currentStoryId),\n      });\n    };\n  }, [currentStoryId, currentPeerId]);\n\n  const slideAmount = currentPeerPosition - renderingPeerPosition;\n  const isBackward = renderingPeerPosition > currentPeerPosition;\n\n  const calculateTransformX = useLastCallback(() => {\n    return peerIds.reduce<Record<string, number>>((transformX, peerId, index) => {\n      if (peerId === renderingPeerId) {\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: isBackward,\n        });\n      } else {\n        let isMoveThroughActiveSlide = false;\n        if (!isBackward && index > 0 && peerIds[index - 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n        if (isBackward && index < peerIds.length - 1 && peerIds[index + 1] === renderingPeerId) {\n          isMoveThroughActiveSlide = true;\n        }\n\n        transformX[peerId] = calculateOffsetX({\n          scale: slideSizes.scale,\n          slideAmount,\n          isBackward,\n          isActiveSlideSize: currentPeerId === peerId && !isBackward,\n          isMoveThroughActiveSlide,\n        });\n      }\n\n      return transformX;\n    }, {});\n  });\n\n  useEffect(() => {\n    if (!containerRef.current || !isOpen) {\n      return undefined;\n    }\n\n    let offsetY = 0;\n\n    const getCurrentStoryRef = () => {\n      return renderingPeerId ? rendersRef.current[renderingPeerId]?.current : undefined;\n    };\n\n    const onRelease = (event: MouseEvent | TouchEvent | WheelEvent) => {\n      // This allows to prevent onRelease triggered by debounced wheel event\n      // after onRelease was triggered manually in onDrag\n      if (isReleasedRef.current) {\n        isReleasedRef.current = false;\n        return;\n      }\n      const current = getCurrentStoryRef();\n      if (!current) return;\n\n      if (offsetY < -SWIPE_Y_THRESHOLD) {\n        const composer = document.getElementById(EDITABLE_STORY_INPUT_ID);\n        if (composer) {\n          requestMutation(() => {\n            focusEditableElement(composer);\n          });\n        }\n        return;\n      }\n\n      if (offsetY > SWIPE_Y_THRESHOLD) {\n        onClose();\n        if (event.type === 'wheel') {\n          disableScrolling();\n          setTimeout(enableScrolling, SCROLL_RELEASE_DELAY);\n        }\n      } else {\n        requestMutation(() => {\n          current.style.setProperty('--slide-translate-y', '0px');\n        });\n      }\n    };\n\n    return captureEvents(containerRef.current, {\n      isNotPassive: true,\n      withNativeDrag: true,\n      withWheelDrag: true,\n      excludedClosestSelector: '.Composer',\n      onDrag: (event, captureEvent, {\n        dragOffsetX, dragOffsetY,\n      }) => {\n        if (isReleasedRef.current) return;\n        // Avoid conflicts with swipe-to-back gestures\n        if (IS_IOS && captureEvent.type === 'touchstart') {\n          const { pageX } = (captureEvent as RealTouchEvent).touches[0];\n          if (pageX <= IOS_SCREEN_EDGE_THRESHOLD || pageX >= windowWidth - IOS_SCREEN_EDGE_THRESHOLD) {\n            return;\n          }\n        }\n        if (event.type === 'mousemove') return;\n        const absOffsetX = Math.abs(dragOffsetX);\n        const absOffsetY = Math.abs(dragOffsetY);\n        const current = getCurrentStoryRef();\n        if (!current) return;\n        // If vertical shift is dominant we change only vertical position\n        if (swipeDirectionRef.current === SwipeDirection.Vertical\n          || Math.abs(absOffsetY) > SWIPE_DIRECTION_THRESHOLD || absOffsetY / absOffsetX > SWIPE_DIRECTION_TOLERANCE) {\n          swipeDirectionRef.current = SwipeDirection.Vertical;\n          const limit = windowHeight;\n          offsetY = clamp(dragOffsetY, -limit, limit);\n          if (offsetY > 0) {\n            requestMutation(() => {\n              current.style.setProperty('--slide-translate-y', `${offsetY * (isMobile ? 1 : -1)}px`);\n            });\n          }\n          if (event.type === 'wheel' && Math.abs(offsetY) > SWIPE_Y_THRESHOLD * 2) {\n            onRelease(event);\n            isReleasedRef.current = true;\n          }\n        }\n      },\n      onRelease,\n    });\n  }, [isOpen, onClose, windowWidth, windowHeight, isMobile, renderingPeerId]);\n\n  useLayoutEffect(() => {\n    if (isMobile) return;\n    const transformX = calculateTransformX();\n\n    Object.entries(rendersRef.current).forEach(([peerId, { current }]) => {\n      if (!current) return;\n\n      if (!getIsAnimating()) {\n        current.classList.remove(styles.slideAnimation, styles.slideAnimationToActive, styles.slideAnimationFromActive);\n        current.style.setProperty('--slide-translate-x', '0px');\n        current.style.setProperty('--slide-translate-y', '0px');\n        current.style.setProperty('--slide-translate-scale', '1');\n        current.style.setProperty('--slide-content-scale', String(slideSizes.toActiveScale));\n\n        return;\n      }\n\n      const getScale = () => {\n        if (currentPeerId === peerId) {\n          return String(slideSizes.toActiveScale);\n        }\n        if (peerId === renderingPeerId) {\n          return String(slideSizes.fromActiveScale);\n        }\n        return '1';\n      };\n\n      let offsetY = 0;\n      if (peerId === renderingPeerId) {\n        offsetY = -ACTIVE_SLIDE_VERTICAL_CORRECTION_REM * slideSizes.fromActiveScale;\n        current.classList.add(styles.slideAnimationFromActive);\n      }\n      if (peerId === currentPeerId) {\n        offsetY = ACTIVE_SLIDE_VERTICAL_CORRECTION_REM;\n        current.classList.add(styles.slideAnimationToActive);\n      }\n\n      current.classList.add(styles.slideAnimation);\n      current.style.setProperty('--slide-translate-x', `${transformX[peerId] || 0}px`);\n      current.style.setProperty('--slide-translate-y', `${offsetY}rem`);\n      current.style.setProperty('--slide-translate-scale', getScale());\n    });\n  }, [currentPeerId, getIsAnimating, renderingPeerId, slideSizes, isMobile]);\n\n  const handleTransitionEnd = useLastCallback((event: React.TransitionEvent<HTMLDivElement>) => {\n    // It is `target` that is needed here, not `currentTarget`\n    const target = event.target as HTMLDivElement | null;\n\n    if (!target || !target.classList.contains(styles.activeSlide)) return;\n\n    if (renderingPeerId !== currentPeerId) {\n      setRenderingPeerId(currentPeerId);\n      setRenderingStoryId(currentStoryId);\n    } else if (currentStoryId !== renderingStoryId) {\n      setRenderingStoryId(currentStoryId);\n    }\n    setIsAnimating(false);\n  });\n\n  if (isMobile) {\n    return (\n      <div className={styles.wrapper} ref={containerRef}>\n        <div\n          className={styles.mobileSlide}\n          ref={(ref) => setRef(ref, renderingPeerId!)}\n        >\n          <Story\n            peerId={renderingPeerId!}\n            storyId={renderingStoryId!}\n            onDelete={onDelete}\n            dimensions={slideSizes.activeSlide}\n            isPrivateStories={renderingIsPrivate}\n            isArchivedStories={renderingIsArchive}\n            isDeleteModalOpen={isDeleteModalOpen}\n            isSingleStory={isSingleStory}\n            getIsAnimating={getIsAnimating}\n            onClose={onClose}\n            onReport={onReport}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  function renderStoryPreview(peerId: string, index: number, position: number) {\n    const style = buildStyle(\n      `width: ${slideSizes.slide.width}px`,\n      `height: ${slideSizes.slide.height}px`,\n    );\n    const className = buildClassName(\n      styles.slide,\n      styles.slidePreview,\n      `slide-${position}`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={className}\n        style={style}\n      >\n        <StoryPreview\n          peer={selectPeer(getGlobal(), peerId)}\n          peerStories={byPeerId?.[peerId]}\n        />\n      </div>\n    );\n  }\n\n  function renderStory(peerId: string) {\n    const style = isMobile ? undefined : buildStyle(\n      `width: ${slideSizes.activeSlide.width}px`,\n      `--slide-media-height: ${slideSizes.activeSlide.height}px`,\n    );\n\n    return (\n      <div\n        key={peerId}\n        ref={(ref) => setRef(ref, peerId)}\n        className={buildClassName(styles.slide, styles.activeSlide)}\n        style={style}\n      >\n        <Story\n          peerId={peerId}\n          storyId={renderingStoryId!}\n          onDelete={onDelete}\n          dimensions={slideSizes.activeSlide}\n          isPrivateStories={renderingIsPrivate}\n          isArchivedStories={renderingIsArchive}\n          isDeleteModalOpen={isDeleteModalOpen}\n          isSingleStory={isSingleStory}\n          getIsAnimating={getIsAnimating}\n          onClose={onClose}\n          onReport={onReport}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div\n      className={styles.wrapper}\n      ref={containerRef}\n      style={`--story-viewer-scale: ${slideSizes.scale}`}\n      onTransitionEnd={handleTransitionEnd}\n    >\n      <div className={styles.fullSize} onClick={onClose} />\n      {renderingPeerIds.length > 1 && (\n        <div className={styles.backdropNonInteractive} style={`height: ${slideSizes.slide.height}px`} />\n      )}\n      {renderingPeerIds.map((peerId, index) => {\n        if (peerId === renderingPeerId) {\n          return renderStory(renderingPeerId);\n        }\n\n        return renderStoryPreview(peerId, index, index - renderingPeerPosition);\n      })}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    storyViewer: {\n      peerId: currentPeerId, storyId: currentStoryId, isSinglePeer, isSingleStory, isPrivate, isArchive, storyList,\n    },\n  } = selectTabState(global);\n  const { byPeerId, orderedPeerIds: { active } } = global.stories;\n\n  return {\n    byPeerId,\n    peerIds: storyList?.peerIds ?? active,\n    currentPeerId,\n    currentStoryId,\n    isSinglePeer,\n    isSingleStory,\n    isPrivate,\n    isArchive,\n  };\n}, (global) => selectIsStoryViewerOpen(global))(StorySlides));\n","import { useState } from '../lib/teact/teact';\n\nimport useLastCallback from './useLastCallback';\n\nconst THRESHOLD = 5;\n\nexport default function useScrolledState(threshold = THRESHOLD) {\n  const [isAtBeginning, setIsAtBeginning] = useState(true);\n  const [isAtEnd, setIsAtEnd] = useState(true);\n\n  const handleScroll = useLastCallback((e: React.UIEvent<HTMLElement>) => {\n    const { scrollHeight, scrollTop, clientHeight } = e.target as HTMLElement;\n\n    setIsAtBeginning(scrollTop < threshold);\n    setIsAtEnd(scrollHeight - scrollTop - clientHeight < threshold);\n  });\n\n  return { isAtBeginning, isAtEnd, handleScroll };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"views-list\":\"gpDY8bos\",\"viewsList\":\"gpDY8bos\",\"views-list-loading\":\"vuRAfQ5v\",\"viewsListLoading\":\"vuRAfQ5v\",\"info\":\"AOSUIChK\",\"centeredInfo\":\"oGLhkkS7\",\"view-reaction\":\"MLaabS6n\",\"viewReaction\":\"MLaabS6n\",\"header\":\"d3N2bktu\",\"content\":\"QmRA3HZK\",\"top-button\":\"Dkv8GAxf\",\"topButton\":\"Dkv8GAxf\",\"contact-filter\":\"YpB_9VxE\",\"contactFilter\":\"YpB_9VxE\",\"selected\":\"DoUlpdZJ\",\"sort\":\"axDpgq9G\",\"sort-button\":\"Bm5VA66f\",\"sortButton\":\"Bm5VA66f\",\"icon-sort\":\"YVQiH93R\",\"iconSort\":\"YVQiH93R\",\"icon-down\":\"NXP9aMD0\",\"iconDown\":\"NXP9aMD0\",\"search\":\"QQQqBLK6\",\"bottom-info\":\"_CSv6suH\",\"bottomInfo\":\"_CSv6suH\",\"scrolled\":\"RYQ0liYe\",\"footer\":\"dUK7rP37\",\"closeButton\":\"abPzLiCH\",\"opacity-fade-in\":\"cX8oY3zb\",\"opacityFadeIn\":\"cX8oY3zb\",\"fadeIn\":\"Sx_aeh1o\",\"blocked\":\"L82sciL8\",\"check\":\"UqGBKwjg\",\"menuBubble\":\"dRqemuTA\",\"with-colored-status\":\"GQ96fta9\",\"withColoredStatus\":\"GQ96fta9\"};","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiPeer, ApiTypeStoryView, ApiUser,\n} from '../../api/types';\nimport type { IconName } from '../../types/icons';\n\nimport { getUserFullName, isUserId } from '../../global/helpers';\nimport { selectPeer } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport ListItem, { type MenuItemContextAction } from '../ui/ListItem';\n\nimport styles from './StoryViewModal.module.scss';\n\ntype OwnProps = {\n  storyView: ApiTypeStoryView;\n};\n\ntype StateProps = {\n  peer?: ApiPeer;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\nconst BULLET = '\\u2022';\n\nconst StoryView = ({\n  storyView,\n  peer,\n  availableReactions,\n}: OwnProps & StateProps) => {\n  const {\n    openChat,\n    closeStoryViewer,\n    unblockUser,\n    blockUser,\n    deleteContact,\n    updateStoryView,\n    focusMessage,\n    openStoryViewer,\n    closeStoryViewModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleClick = useLastCallback(() => {\n    const { type } = storyView;\n\n    if (type === 'repost') {\n      closeStoryViewModal();\n      openStoryViewer({\n        peerId: storyView.peerId,\n        storyId: storyView.storyId,\n      });\n      return;\n    }\n\n    closeStoryViewer();\n\n    setTimeout(() => {\n      if (type === 'user') {\n        openChat({ id: storyView.peerId });\n      } else if (type === 'forward') {\n        focusMessage({ chatId: storyView.peerId, messageId: storyView.messageId });\n      }\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const contextActions = useMemo(() => {\n    if (!isUserId(storyView.peerId)) return undefined;\n    const { peerId, areStoriesBlocked, isUserBlocked } = storyView;\n    const user = peer as ApiUser;\n    const { isContact } = user || {};\n    const fullName = getUserFullName(user);\n\n    const actions: MenuItemContextAction[] = [];\n\n    if (!isUserBlocked) {\n      if (!areStoriesBlocked) {\n        actions.push({\n          handler: () => {\n            blockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: true });\n          },\n          title: lang('StoryHideFrom', fullName),\n          icon: 'hand-stop',\n        });\n      } else {\n        actions.push({\n          handler: () => {\n            unblockUser({ userId: peerId, isOnlyStories: true });\n            updateStoryView({ userId: peerId, areStoriesBlocked: false });\n          },\n          title: lang('StoryShowBackTo', fullName),\n          icon: 'play-story',\n        });\n      }\n    }\n\n    if (isContact) {\n      actions.push({\n        handler: () => {\n          deleteContact({ userId: peerId });\n        },\n        title: lang('DeleteContact'),\n        icon: 'delete-user',\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        handler: () => {\n          if (isUserBlocked) {\n            unblockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: false });\n          } else {\n            blockUser({ userId: peerId });\n            updateStoryView({ userId: peerId, isUserBlocked: true });\n          }\n        },\n        title: lang(isUserBlocked ? 'Unblock' : 'BlockUser'),\n        icon: isUserBlocked ? 'user' : 'delete-user',\n        destructive: !isUserBlocked,\n      });\n    }\n\n    return actions;\n  }, [lang, storyView, peer]);\n\n  const statusIcon: IconName = storyView.type === 'user' ? 'message-read'\n    : storyView.type === 'forward' ? 'forward' : 'loop';\n  const shouldColorStatus = storyView.type === 'forward' || storyView.type === 'repost';\n\n  const status = useMemo(() => {\n    const isModified = storyView.type === 'repost' && storyView.story.forwardInfo?.isModified;\n    const parts = [formatDateAtTime(lang, storyView.date * 1000)];\n    if (isModified) {\n      parts.push(lang('lng_edited'));\n    }\n\n    return parts.join(` ${BULLET} `);\n  }, [lang, storyView]);\n\n  return (\n    <ListItem\n      key={storyView.peerId}\n      className={buildClassName(\n        'chat-item-clickable small-icon',\n        styles.opacityFadeIn,\n        (storyView.isUserBlocked || storyView.areStoriesBlocked) && styles.blocked,\n      )}\n      onClick={handleClick}\n      rightElement={storyView.type === 'user' && storyView.reaction ? (\n        <ReactionStaticEmoji\n          reaction={storyView.reaction}\n          className={styles.viewReaction}\n          size={DEFAULT_REACTION_SIZE}\n          availableReactions={availableReactions}\n          withIconHeart\n        />\n      ) : undefined}\n      contextActions={contextActions}\n      withPortalForMenu\n      menuBubbleClassName={styles.menuBubble}\n    >\n      {isUserId(storyView.peerId) ? (\n        <PrivateChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          userId={storyView.peerId}\n          noStatusOrTyping\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n          forceShowSelf\n        />\n      ) : (\n        <GroupChatInfo\n          className={buildClassName(shouldColorStatus && styles.withColoredStatus)}\n          chatId={storyView.peerId}\n          status={status}\n          statusIcon={statusIcon}\n          withStory\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { storyView }) => {\n  const peer = selectPeer(global, storyView.peerId);\n\n  return {\n    peer,\n    availableReactions: global.reactions.availableReactions,\n  };\n})(StoryView));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiStory, ApiTypeStoryView } from '../../api/types';\n\nimport {\n  STORY_MIN_REACTIONS_SORT,\n  STORY_VIEWS_MIN_CONTACTS_FILTER,\n  STORY_VIEWS_MIN_SEARCH,\n} from '../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport renderText from '../common/helpers/renderText';\n\nimport useDebouncedCallback from '../../hooks/useDebouncedCallback';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport PlaceholderChatInfo from '../ui/placeholder/PlaceholderChatInfo';\nimport SearchInput from '../ui/SearchInput';\nimport StoryView from './StoryView';\n\nimport styles from './StoryViewModal.module.scss';\n\ninterface StateProps {\n  story?: ApiStory;\n  isLoading?: boolean;\n  views?: ApiTypeStoryView[];\n  nextOffset?: string;\n  viewersExpirePeriod: number;\n  isCurrentUserPremium?: boolean;\n}\n\nconst REFETCH_DEBOUNCE = 250;\n\nfunction StoryViewModal({\n  story,\n  viewersExpirePeriod,\n  views,\n  nextOffset,\n  isLoading,\n  isCurrentUserPremium,\n}: StateProps) {\n  const {\n    loadStoryViewList, closeStoryViewModal, clearStoryViews,\n  } = getActions();\n\n  const [areJustContacts, markJustContacts, unmarkJustContacts] = useFlag(false);\n  const [areReactionsFirst, markReactionsFirst, unmarkReactionsFirst] = useFlag(true);\n  const [query, setQuery] = useState('');\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(story);\n  const isExpired = Boolean(story?.date) && (story!.date + viewersExpirePeriod) < getServerTime();\n  const { viewsCount = 0, reactionsCount = 0 } = story?.views || {};\n\n  const shouldShowJustContacts = story?.isPublic && viewsCount > STORY_VIEWS_MIN_CONTACTS_FILTER;\n  const shouldShowSortByReactions = reactionsCount > STORY_MIN_REACTIONS_SORT;\n  const shouldShowSearch = viewsCount > STORY_VIEWS_MIN_SEARCH;\n  const hasHeader = shouldShowJustContacts || shouldShowSortByReactions || shouldShowSearch;\n\n  useEffect(() => {\n    if (!isOpen) {\n      setQuery('');\n      unmarkJustContacts();\n      markReactionsFirst();\n    }\n  }, [isOpen]);\n\n  const refetchViews = useDebouncedCallback(() => {\n    clearStoryViews({ isLoading: true });\n  }, [], REFETCH_DEBOUNCE, true);\n\n  useEffect(() => {\n    refetchViews();\n  }, [areJustContacts, areReactionsFirst, query, refetchViews]);\n\n  const sortedViews = useMemo(() => {\n    return views?.sort(prepareComparator(areReactionsFirst));\n  }, [areReactionsFirst, views]);\n\n  const placeholderCount = !sortedViews?.length ? Math.min(viewsCount, 8) : 1;\n\n  const notAllAvailable = Boolean(sortedViews?.length) && sortedViews!.length < viewsCount && isExpired;\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!story?.id || nextOffset === undefined) return;\n    loadStoryViewList({\n      peerId: story.peerId,\n      storyId: story.id,\n      offset: nextOffset,\n      areReactionsFirst: areReactionsFirst || undefined,\n      areJustContacts: areJustContacts || undefined,\n      query,\n    });\n  });\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const handleClose = useLastCallback(() => {\n    closeStoryViewModal();\n  });\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        fluid\n        size=\"tiny\"\n        color=\"translucent\"\n        className={buildClassName(!isMenuOpen && 'active', styles.sortButton, styles.topButton)}\n        faded={isMenuOpen}\n        onClick={onTrigger}\n        ariaLabel={lang('SortBy')}\n      >\n        <Icon name={areReactionsFirst ? 'heart-outline' : 'recent'} className={styles.iconSort} />\n        <Icon name=\"down\" className={styles.iconDown} />\n      </Button>\n    );\n  }, [areReactionsFirst, lang]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={handleClose}\n      className=\"component-theme-dark\"\n      contentClassName={styles.viewsList}\n      isSlim\n    >\n      {hasHeader && (\n        <div className={styles.header}>\n          {shouldShowJustContacts && (\n            <div className={styles.contactFilter}>\n              <Button\n                className={buildClassName(!areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={unmarkJustContacts}\n              >\n                {lang('AllViewers')}\n              </Button>\n              <Button\n                className={buildClassName(areJustContacts && styles.selected, styles.topButton)}\n                size=\"tiny\"\n                color=\"translucent-white\"\n                fluid\n                onClick={markJustContacts}\n              >\n                {lang('Contacts')}\n              </Button>\n            </div>\n          )}\n          {shouldShowSortByReactions && (\n            <DropdownMenu\n              className={styles.sort}\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"heart-outline\" onClick={markReactionsFirst}>\n                {lang('SortByReactions')}\n                {areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n              <MenuItem icon=\"recent\" onClick={unmarkReactionsFirst}>\n                {lang('SortByTime')}\n                {!areReactionsFirst && (\n                  <Icon name=\"check\" className={styles.check} />\n                )}\n              </MenuItem>\n            </DropdownMenu>\n          )}\n          {shouldShowSearch && (\n            <SearchInput className={styles.search} value={query} onChange={setQuery} />\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(styles.content, !isAtBeginning && styles.topScrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {isExpired && !isLoading && !query && Boolean(!sortedViews?.length) && (\n          <div className={buildClassName(styles.info, styles.centeredInfo)}>\n            {renderText(\n              lang(isCurrentUserPremium ? 'ServerErrorViewers' : 'ExpiredViewsStub'),\n              ['simple_markdown', 'emoji'],\n            )}\n          </div>\n        )}\n        {!isLoading && Boolean(query.length) && !sortedViews?.length && (\n          <div className={styles.info}>\n            {lang('Story.ViewList.EmptyTextSearch')}\n          </div>\n        )}\n        <InfiniteScroll\n          items={sortedViews}\n          onLoadMore={handleLoadMore}\n        >\n          {sortedViews?.map((view) => {\n            const additionalKeyId = view.type === 'forward' ? view.messageId\n              : view.type === 'repost' ? view.storyId : 'user';\n            return (\n              <StoryView key={`${view.peerId}-${view.date}-${additionalKeyId}`} storyView={view} />\n            );\n          })}\n          {isLoading && Array.from({ length: placeholderCount }).map((_, i) => (\n            <ListItem\n              // eslint-disable-next-line react/no-array-index-key\n              key={`placeholder-${i}`}\n              className=\"chat-item-clickable contact-list-item scroll-item small-icon\"\n              disabled\n            >\n              <PlaceholderChatInfo />\n            </ListItem>\n          ))}\n          {notAllAvailable && (\n            <div key=\"not-all-available\" className={buildClassName(styles.info, styles.bottomInfo)}>\n              {lang('Story.ViewList.NotFullyRecorded')}\n            </div>\n          )}\n        </InfiniteScroll>\n      </div>\n      <div className={buildClassName(styles.footer, 'dialog-buttons')}>\n        <Button\n          className={buildClassName('confirm-dialog-button', styles.close)}\n          isText\n          onClick={handleClose}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nfunction prepareComparator(areReactionsFirst?: boolean) {\n  return (a: ApiTypeStoryView, b: ApiTypeStoryView) => {\n    if (areReactionsFirst) {\n      const reactionA = a.type === 'user' && a.reaction;\n      const reactionB = b.type === 'user' && b.reaction;\n      if (reactionA && !reactionB) {\n        return -1;\n      }\n      if (!reactionA && reactionB) {\n        return 1;\n      }\n    }\n\n    return b.date - a.date;\n  };\n}\n\nexport default memo(withGlobal((global) => {\n  const { appConfig } = global;\n  const { storyViewer: { viewModal } } = selectTabState(global);\n  const {\n    storyId, views, nextOffset, isLoading,\n  } = viewModal || {};\n  const story = storyId ? selectPeerStory(global, global.currentUserId!, storyId) : undefined;\n\n  return {\n    storyId,\n    views,\n    viewersExpirePeriod: appConfig!.storyExpirePeriod + appConfig!.storyViewersExpirePeriod,\n    story: story && 'content' in story ? story : undefined,\n    nextOffset,\n    isLoading,\n    availableReactions: global.reactions.availableReactions,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n  };\n})(StoryViewModal));\n","import React, {\n  beginHeavyAnimation,\n  memo, useCallback, useEffect, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiTypeStory } from '../../api/types';\nimport type { StoryViewerOrigin } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport {\n  selectIsStoryViewerOpen,\n  selectPeerStory,\n  selectPerformanceSettingsValue,\n  selectTabState,\n} from '../../global/selectors';\nimport captureEscKeyListener from '../../util/captureEscKeyListener';\nimport { disableDirectTextInput, enableDirectTextInput } from '../../util/directInputManager';\nimport { animateClosing, animateOpening } from './helpers/ghostAnimation';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport { dispatchPriorityPlaybackEvent } from '../../hooks/usePriorityPlaybackCheck';\nimport useSlideSizes from './hooks/useSlideSizes';\nimport useStoryProps from './hooks/useStoryProps';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport ShowTransition from '../ui/ShowTransition';\nimport StealthModeModal from './StealthModeModal';\nimport StoryDeleteConfirmModal from './StoryDeleteConfirmModal';\nimport StorySettings from './StorySettings';\nimport StorySlides from './StorySlides';\nimport StoryViewModal from './StoryViewModal';\n\nimport styles from './StoryViewer.module.scss';\n\nconst ANIMATION_DURATION = 250;\n\ninterface StateProps {\n  isOpen: boolean;\n  peerId: string;\n  storyId?: number;\n  story?: ApiTypeStory;\n  origin?: StoryViewerOrigin;\n  shouldSkipHistoryAnimations?: boolean;\n  withAnimation?: boolean;\n  isPrivacyModalOpen?: boolean;\n}\n\nfunction StoryViewer({\n  isOpen,\n  peerId,\n  storyId,\n  story,\n  origin,\n  shouldSkipHistoryAnimations,\n  withAnimation,\n  isPrivacyModalOpen,\n}: StateProps) {\n  const { closeStoryViewer, closeStoryPrivacyEditor, reportStory } = getActions();\n\n  const lang = useOldLang();\n  const [storyToDelete, setStoryToDelete] = useState<ApiTypeStory | undefined>(undefined);\n  const [isDeleteModalOpen, openDeleteModal, closeDeleteModal] = useFlag(false);\n\n  const { bestImageData, thumbnail } = useStoryProps(story);\n  const slideSizes = useSlideSizes();\n  const isPrevOpen = usePreviousDeprecated(isOpen);\n  const prevBestImageData = usePreviousDeprecated(bestImageData);\n  const prevPeerId = usePreviousDeprecated(peerId);\n  const prevOrigin = usePreviousDeprecated(origin);\n  const isGhostAnimation = Boolean(withAnimation && !shouldSkipHistoryAnimations);\n\n  useEffect(() => {\n    if (!isOpen) {\n      setStoryToDelete(undefined);\n      closeDeleteModal();\n    }\n  }, [isOpen]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return undefined;\n    }\n\n    disableDirectTextInput();\n    const stopPriorityPlayback = dispatchPriorityPlaybackEvent();\n\n    return () => {\n      enableDirectTextInput();\n      stopPriorityPlayback();\n    };\n  }, [isOpen]);\n\n  const handleClose = useCallback(() => {\n    closeStoryViewer();\n  }, [closeStoryViewer]);\n\n  const handleOpenDeleteModal = useLastCallback((s: ApiTypeStory) => {\n    setStoryToDelete(s);\n    openDeleteModal();\n  });\n\n  const handleCloseDeleteModal = useLastCallback(() => {\n    closeDeleteModal();\n    setStoryToDelete(undefined);\n  });\n\n  const openMessageReport = useLastCallback(() => {\n    if (!storyId) return;\n    reportStory({ storyId, peerId });\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(() => {\n    handleClose();\n  }) : undefined), [handleClose, isOpen]);\n\n  useEffect(() => {\n    if (isGhostAnimation && !isPrevOpen && isOpen && peerId && thumbnail && origin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateOpening(peerId, origin, thumbnail, bestImageData, slideSizes.activeSlide);\n    }\n    if (isGhostAnimation && isPrevOpen && !isOpen && prevPeerId && prevBestImageData && prevOrigin !== undefined) {\n      beginHeavyAnimation(ANIMATION_DURATION + ANIMATION_END_DELAY);\n      animateClosing(prevPeerId, prevOrigin, prevBestImageData);\n    }\n  }, [\n    isGhostAnimation,\n    bestImageData,\n    prevBestImageData,\n    isOpen,\n    isPrevOpen,\n    slideSizes.activeSlide,\n    thumbnail,\n    peerId,\n    prevPeerId,\n    origin,\n    prevOrigin,\n  ]);\n\n  return (\n    <ShowTransition\n      id=\"StoryViewer\"\n      className={styles.root}\n      isOpen={isOpen}\n      shouldAnimateFirstRender\n      noCloseTransition={shouldSkipHistoryAnimations}\n    >\n      <div className={styles.backdrop} onClick={handleClose} />\n      <Button\n        className={styles.close}\n        round\n        size=\"smaller\"\n        color=\"translucent-white\"\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n\n      <StorySlides\n        isOpen={isOpen}\n        isDeleteModalOpen={isDeleteModalOpen}\n        onReport={openMessageReport}\n        onClose={handleClose}\n        onDelete={handleOpenDeleteModal}\n      />\n\n      <StoryDeleteConfirmModal\n        isOpen={isDeleteModalOpen}\n        story={storyToDelete}\n        onClose={handleCloseDeleteModal}\n      />\n      <StoryViewModal />\n      <StealthModeModal />\n      <StorySettings isOpen={isPrivacyModalOpen} onClose={closeStoryPrivacyEditor} />\n    </ShowTransition>\n  );\n}\n\nexport default memo(withGlobal((global): StateProps => {\n  const {\n    shouldSkipHistoryAnimations, storyViewer: {\n      storyId, peerId, isPrivacyModalOpen, origin,\n    },\n  } = selectTabState(global);\n  const story = peerId && storyId ? selectPeerStory(global, peerId, storyId) : undefined;\n  const withAnimation = selectPerformanceSettingsValue(global, 'mediaViewerAnimations');\n\n  return {\n    isOpen: selectIsStoryViewerOpen(global),\n    shouldSkipHistoryAnimations,\n    peerId: peerId!,\n    storyId,\n    story,\n    origin,\n    withAnimation,\n    isPrivacyModalOpen,\n  };\n})(StoryViewer));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\n\nimport { PEER_PICKER_ITEM_HEIGHT_PX } from '../../../config';\nimport {\n  getCanPostInChat, getGroupStatus, getUserStatus, isUserOnline,\n} from '../../../global/helpers';\nimport { isApiPeerChat } from '../../../global/helpers/peers';\nimport { selectPeer, selectTopics, selectUserStatus } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { REM } from '../helpers/mediaDimensions';\nimport renderText from '../helpers/renderText';\n\nimport useSelector from '../../../hooks/data/useSelector';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useInputFocusOnOpen from '../../../hooks/useInputFocusOnOpen';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport Avatar from '../Avatar';\nimport FullNameTitle from '../FullNameTitle';\nimport Icon from '../icons/Icon';\nimport TopicIcon from '../TopicIcon';\nimport PickerItem from './PickerItem';\n\nimport './ChatOrUserPicker.scss';\n\nexport type OwnProps = {\n  currentUserId?: string;\n  chatOrUserIds: string[];\n  isOpen: boolean;\n  searchPlaceholder: string;\n  search: string;\n  className?: string;\n  loadMore?: NoneToVoidFunction;\n  onSearchChange: (search: string) => void;\n  onSelectChatOrUser: (chatOrUserId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  isLowStackPriority?: boolean;\n};\n\nconst CHAT_LIST_SLIDE = 0;\nconst TOPIC_LIST_SLIDE = 1;\nconst TOPIC_ICON_SIZE = 2.75 * REM;\nconst ITEM_CLASS_NAME = 'ChatOrUserPicker-item';\nconst TOPIC_ITEM_HEIGHT_PX = 56;\n\nconst ChatOrUserPicker: FC<OwnProps> = ({\n  isOpen,\n  currentUserId,\n  chatOrUserIds,\n  search,\n  searchPlaceholder,\n  className,\n  loadMore,\n  onSearchChange,\n  onSelectChatOrUser,\n  onClose,\n  onCloseAnimationEnd,\n  isLowStackPriority,\n}) => {\n  const { loadTopics } = getActions();\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicContainerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const searchRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const topicSearchRef = useRef<HTMLInputElement>(null);\n  const [viewportIds, getMore] = useInfiniteScroll(loadMore, chatOrUserIds, Boolean(search));\n  const [forumId, setForumId] = useState<string | undefined>(undefined);\n  const [topicSearch, setTopicSearch] = useState<string>('');\n  const activeKey = forumId ? TOPIC_LIST_SLIDE : CHAT_LIST_SLIDE;\n  const viewportOffset = chatOrUserIds!.indexOf(viewportIds![0]);\n\n  const resetSearch = useLastCallback(() => {\n    onSearchChange('');\n  });\n  useInputFocusOnOpen(searchRef, isOpen && activeKey === CHAT_LIST_SLIDE, resetSearch);\n  useInputFocusOnOpen(topicSearchRef, isOpen && activeKey === TOPIC_LIST_SLIDE);\n\n  const selectTopicsById = useLastCallback((global: GlobalState) => {\n    if (!forumId) {\n      return undefined;\n    }\n\n    return selectTopics(global, forumId);\n  });\n\n  const forumTopicsById = useSelector(selectTopicsById);\n\n  const [topicIds, topics] = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const chatFullInfoById = global.chats.fullInfoById;\n\n    const chat = chatsById[forumId!];\n\n    if (!chat || !forumTopicsById) {\n      return [undefined, undefined];\n    }\n\n    const searchTitle = topicSearch.toLowerCase();\n\n    const result = forumTopicsById\n      ? Object.values(forumTopicsById).reduce((acc, topic) => {\n        if (\n          getCanPostInChat(chat, topic, undefined, chatFullInfoById[forumId!])\n          && (!searchTitle || topic.title.toLowerCase().includes(searchTitle))\n        ) {\n          acc[topic.id] = topic;\n        }\n\n        return acc;\n      }, {} as Record<number, ApiTopic>)\n      : forumTopicsById;\n\n    return [Object.keys(result).map(Number), result];\n  }, [forumId, topicSearch, forumTopicsById]);\n\n  const handleHeaderBackClick = useLastCallback(() => {\n    setForumId(undefined);\n    setTopicSearch('');\n  });\n\n  const handleSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    onSearchChange(e.currentTarget.value);\n  });\n\n  const handleTopicSearchChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTopicSearch(e.currentTarget.value);\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      const chatsById = getGlobal().chats.byId;\n\n      const chatId = viewportIds[index === -1 ? 0 : index];\n      const chat = chatsById[chatId];\n      if (chat?.isForum) {\n        if (!forumTopicsById) loadTopics({ chatId });\n        setForumId(chatId);\n      } else {\n        onSelectChatOrUser(chatId);\n      }\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleTopicKeyDown = useKeyboardListNavigation(topicContainerRef, isOpen, (index) => {\n    if (topicIds?.length) {\n      onSelectChatOrUser(forumId!, topicIds[index === -1 ? 0 : index]);\n    }\n  }, `.${ITEM_CLASS_NAME}`, true);\n\n  const handleClick = useLastCallback((chatId: string) => {\n    const chatsById = getGlobal().chats.byId;\n    const chat = chatsById?.[chatId];\n    if (chat?.isForum) {\n      if (!forumTopicsById) loadTopics({ chatId });\n      setForumId(chatId);\n      resetSearch();\n    } else {\n      onSelectChatOrUser(chatId);\n    }\n  });\n\n  const renderChatItem = useCallback((id: string, index: number) => {\n    const global = getGlobal();\n    const peer = selectPeer(global, id);\n    if (!peer) {\n      return undefined;\n    }\n\n    const isSelf = peer && !isApiPeerChat(peer) ? peer.isSelf : undefined;\n\n    function getSubtitle() {\n      if (!peer) return undefined;\n      if (peer.id === currentUserId) return [lang('SavedMessagesInfo')];\n      if (isApiPeerChat(peer)) {\n        return [getGroupStatus(lang, peer)];\n      }\n\n      const userStatus = selectUserStatus(global, peer.id);\n      return [\n        getUserStatus(lang, peer, userStatus),\n        buildClassName(isUserOnline(peer, userStatus, true) && 'online'),\n      ];\n    }\n\n    const [subtitle, subtitleClassName] = getSubtitle() || [];\n\n    return (\n      <PickerItem\n        key={id}\n        className={ITEM_CLASS_NAME}\n        title={<FullNameTitle peer={peer} isSavedMessages={isSelf} />}\n        avatarElement={(\n          <Avatar\n            peer={peer}\n            isSavedMessages={isSelf}\n            size=\"medium\"\n          />\n        )}\n        subtitle={subtitle}\n        subtitleClassName={subtitleClassName}\n        ripple\n        style={`top: ${(viewportOffset + index) * PEER_PICKER_ITEM_HEIGHT_PX}px;`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleClick(id)}\n      />\n    );\n  }, [currentUserId, lang, viewportOffset]);\n\n  function renderTopicList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Back')} onClick={handleHeaderBackClick}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <InputText\n            ref={topicSearchRef}\n            value={topicSearch}\n            onChange={handleTopicSearchChange}\n            onKeyDown={handleTopicKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        <InfiniteScroll\n          ref={topicContainerRef}\n          className=\"picker-list custom-scroll\"\n          items={topicIds}\n          withAbsolutePositioning\n          maxHeight={(topicIds?.length || 0) * TOPIC_ITEM_HEIGHT_PX}\n          onKeyDown={handleTopicKeyDown}\n        >\n          {!topicIds && <Loading />}\n          {topicIds?.map((topicId, i) => (\n            <PickerItem\n              key={`${forumId}_${topicId}`}\n              className={ITEM_CLASS_NAME}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onSelectChatOrUser(forumId!, topicId)}\n              style={`top: ${(viewportOffset + i) * TOPIC_ITEM_HEIGHT_PX}px;`}\n              avatarElement={(\n                <TopicIcon\n                  size={TOPIC_ICON_SIZE}\n                  topic={topics[topicId]}\n                  className=\"topic-icon\"\n                  letterClassName=\"topic-icon-letter\"\n                />\n              )}\n              title={renderText(topics[topicId].title)}\n            />\n          ))}\n        </InfiniteScroll>\n      </>\n    );\n  }\n\n  function renderChatList() {\n    return (\n      <>\n        <div className=\"modal-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n          <InputText\n            ref={searchRef}\n            value={search}\n            onChange={handleSearchChange}\n            onKeyDown={handleKeyDown}\n            placeholder={searchPlaceholder}\n          />\n        </div>\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            ref={containerRef}\n            className=\"picker-list custom-scroll\"\n            items={viewportIds}\n            itemSelector={`.${ITEM_CLASS_NAME}`}\n            onLoadMore={getMore}\n            withAbsolutePositioning\n            maxHeight={chatOrUserIds!.length * PEER_PICKER_ITEM_HEIGHT_PX}\n            onKeyDown={handleKeyDown}\n          >\n            {viewportIds.map(renderChatItem)}\n          </InfiniteScroll>\n        ) : viewportIds && !viewportIds.length ? (\n          <p className=\"no-results\">{lang('lng_blocked_list_not_found')}</p>\n        ) : (\n          <Loading />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName('ChatOrUserPicker', className)}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      isLowStackPriority={isLowStackPriority}\n    >\n      <Transition activeKey={activeKey} name=\"slideFade\" slideClassName=\"ChatOrUserPicker_slide\">\n        {() => {\n          return activeKey === TOPIC_LIST_SLIDE ? renderTopicList() : renderChatList();\n        }}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ChatOrUserPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChatType } from '../../api/types';\nimport type { ThreadId } from '../../types';\n\nimport { API_CHAT_TYPES } from '../../config';\nimport {\n  getCanPostInChat,\n  isDeletedUser,\n} from '../../global/helpers';\nimport { filterPeersByQuery } from '../../global/helpers/peers';\nimport {\n  filterChatIdsByType, selectChat, selectChatFullInfo, selectUser,\n} from '../../global/selectors';\nimport { unique } from '../../util/iteratees';\nimport sortChatIds from './helpers/sortChatIds';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\n\nimport ChatOrUserPicker from './pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  searchPlaceholder: string;\n  className?: string;\n  filter?: ApiChatType[];\n  loadMore?: NoneToVoidFunction;\n  onSelectRecipient: (peerId: string, threadId?: ThreadId) => void;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  isLowStackPriority?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  activeListIds?: string[];\n  archivedListIds?: string[];\n  pinnedIds?: string[];\n  contactIds?: string[];\n};\n\nconst RecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  activeListIds,\n  archivedListIds,\n  pinnedIds,\n  contactIds,\n  filter = API_CHAT_TYPES,\n  className,\n  searchPlaceholder,\n  loadMore,\n  onSelectRecipient,\n  onClose,\n  onCloseAnimationEnd,\n  isLowStackPriority,\n}) => {\n  const [search, setSearch] = useState('');\n  const ids = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    let priorityIds = pinnedIds || [];\n    if (currentUserId) {\n      priorityIds = unique([currentUserId, ...priorityIds]);\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const global = getGlobal();\n\n    const peerIds = [\n      ...(activeListIds || []),\n      ...((search && archivedListIds) || []),\n    ].filter((id) => {\n      const chat = selectChat(global, id);\n      const user = selectUser(global, id);\n      if (user && !isDeletedUser(user)) return true;\n\n      const chatFullInfo = selectChatFullInfo(global, id);\n\n      return chat && (!chatFullInfo || getCanPostInChat(chat, undefined, undefined, chatFullInfo));\n    });\n\n    const sorted = sortChatIds(\n      filterPeersByQuery({\n        ids: unique([\n          ...(currentUserId ? [currentUserId] : []),\n          ...peerIds,\n          ...(contactIds || []),\n        ]),\n        query: search,\n      }),\n      undefined,\n      priorityIds,\n      currentUserId,\n    );\n\n    return filterChatIdsByType(global, sorted, filter);\n  }, [pinnedIds, currentUserId, activeListIds, search, archivedListIds, contactIds, filter, isOpen]);\n\n  const renderingIds = useCurrentOrPrev(ids, true)!;\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      className={className}\n      chatOrUserIds={renderingIds}\n      currentUserId={currentUserId}\n      searchPlaceholder={searchPlaceholder}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMore}\n      onSelectChatOrUser={onSelectRecipient}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      isLowStackPriority={isLowStackPriority}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        listIds,\n        orderedPinnedIds,\n      },\n      currentUserId,\n    } = global;\n\n    return {\n      activeListIds: listIds.active,\n      archivedListIds: listIds.archived,\n      pinnedIds: orderedPinnedIds.active,\n      contactIds: global.contactList?.userIds,\n      currentUserId,\n    };\n  },\n)(RecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ThreadId } from '../../types';\n\nimport { getChatTitle, getUserFirstOrLastName, isUserId } from '../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  currentUserId?: string;\n  isManyMessages?: boolean;\n  isStory?: boolean;\n  isForwarding?: boolean;\n}\n\nconst ForwardRecipientPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  isManyMessages,\n  isStory,\n  isForwarding,\n}) => {\n  const {\n    openChatOrTopicWithReplyInDraft,\n    setForwardChatOrTopic,\n    exitForwardMode,\n    forwardToSavedMessages,\n    forwardStory,\n    showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingIsStory = usePreviousDeprecated(isStory, true);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    const isSelf = recipientId === currentUserId;\n    if (isStory) {\n      forwardStory({ toChatId: recipientId });\n      const global = getGlobal();\n      if (isUserId(recipientId)) {\n        showNotification({\n          message: isSelf\n            ? lang('Conversation.StoryForwardTooltip.SavedMessages.One')\n            : lang(\n              'StorySharedTo',\n              getUserFirstOrLastName(selectUser(global, recipientId)),\n            ),\n        });\n      } else {\n        const chat = selectChat(global, recipientId);\n        if (!chat) return;\n\n        showNotification({\n          message: lang('StorySharedTo', getChatTitle(lang, chat)),\n        });\n      }\n      return;\n    }\n\n    if (isSelf) {\n      const message = lang(\n        isManyMessages\n          ? 'Conversation.ForwardTooltip.SavedMessages.Many'\n          : 'Conversation.ForwardTooltip.SavedMessages.One',\n      );\n\n      forwardToSavedMessages();\n      showNotification({ message });\n    } else {\n      const chatId = recipientId;\n      const topicId = threadId ? Number(threadId) : undefined;\n      if (isForwarding) {\n        setForwardChatOrTopic({ chatId, topicId });\n      } else {\n        openChatOrTopicWithReplyInDraft({ chatId, topicId });\n      }\n    }\n  }, [currentUserId, isManyMessages, isStory, lang, isForwarding]);\n\n  const handleClose = useCallback(() => {\n    exitForwardMode();\n  }, [exitForwardMode]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      className={renderingIsStory ? 'component-theme-dark' : undefined}\n      searchPlaceholder={lang(isForwarding ? 'ForwardTo' : 'ReplyToDialog')}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { messageIds, storyId } = selectTabState(global).forwardMessages;\n  const isForwarding = (messageIds && messageIds.length > 0);\n  return {\n    currentUserId: global.currentUserId,\n    isManyMessages: (messageIds?.length || 0) > 1,\n    isStory: Boolean(storyId),\n    isForwarding,\n  };\n})(ForwardRecipientPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\nimport type { ThreadId } from '../../types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedDraft?: TabState['requestedDraft'];\n};\n\nconst DraftRecipientPicker: FC<OwnProps> = ({\n  requestedDraft,\n}) => {\n  const isOpen = Boolean(requestedDraft && !requestedDraft.chatId);\n  const {\n    openChatWithDraft,\n    resetOpenChatWithDraft,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const handleSelectRecipient = useCallback((recipientId: string, threadId?: ThreadId) => {\n    openChatWithDraft({\n      chatId: recipientId,\n      threadId,\n      text: requestedDraft!.text,\n      files: requestedDraft!.files,\n    });\n  }, [openChatWithDraft, requestedDraft]);\n\n  const handleClose = useCallback(() => {\n    resetOpenChatWithDraft();\n  }, [resetOpenChatWithDraft]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('ForwardTo')}\n      filter={requestedDraft?.filter}\n      onSelectRecipient={handleSelectRecipient}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(DraftRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RecipientPicker from '../common/RecipientPicker';\n\nexport type OwnProps = {\n  requestedAttachBotInChat?: TabState['requestedAttachBotInChat'];\n};\n\nconst AttachBotRecipientPicker: FC<OwnProps> = ({\n  requestedAttachBotInChat,\n}) => {\n  const { cancelAttachBotInChat, callAttachBot } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(requestedAttachBotInChat);\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const { bot, filter, startParam } = requestedAttachBotInChat || {};\n\n  const handlePeerRecipient = useCallback((recipientId: string) => {\n    callAttachBot({ bot: bot!, chatId: recipientId, startParam });\n    cancelAttachBotInChat();\n  }, [bot, callAttachBot, cancelAttachBotInChat, startParam]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <RecipientPicker\n      isOpen={isOpen}\n      searchPlaceholder={lang('Search')}\n      filter={filter}\n      onSelectRecipient={handlePeerRecipient}\n      onClose={cancelAttachBotInChat}\n      onCloseAnimationEnd={unmarkIsShown}\n    />\n  );\n};\n\nexport default memo(AttachBotRecipientPicker);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiContact, ApiError,\n} from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { selectCurrentMessageList, selectTabState } from '../../global/selectors';\nimport getReadableErrorText from '../../util/getReadableErrorText';\nimport renderText from '../common/helpers/renderText';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  dialogs: (ApiError | ApiContact)[];\n};\n\nconst Dialogs: FC<StateProps> = ({ dialogs, currentMessageList }) => {\n  const {\n    dismissDialog,\n    sendMessage,\n  } = getActions();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (dialogs.length > 0) {\n      openModal();\n    }\n  }, [dialogs, openModal]);\n\n  if (!dialogs.length) {\n    return undefined;\n  }\n\n  const renderContactRequest = (contactRequest: ApiContact) => {\n    const handleConfirm = () => {\n      if (!currentMessageList) {\n        return;\n      }\n\n      sendMessage({\n        contact: contactRequest,\n        messageList: currentMessageList,\n      });\n      closeModal();\n    };\n\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        className=\"confirm\"\n        title={lang('ShareYouPhoneNumberTitle')}\n        onCloseAnimationEnd={dismissDialog}\n      >\n        {lang('AreYouSureShareMyContactInfoBot')}\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleConfirm}\n          >\n            {lang('OK')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={closeModal}>{lang('Cancel')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderError = (error: ApiError) => {\n    return (\n      <Modal\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={dismissDialog}\n        className=\"error\"\n        title={getErrorHeader(error)}\n      >\n        {error.hasErrorKey ? getReadableErrorText(error)\n          : renderText(error.message!, ['simple_markdown', 'emoji', 'br'])}\n        <div className=\"dialog-buttons mt-2\">\n          <Button isText onClick={closeModal}>{lang('OK')}</Button>\n        </div>\n      </Modal>\n    );\n  };\n\n  const renderDialog = (dialog: ApiError | ApiContact) => {\n    if ('phoneNumber' in dialog) {\n      return renderContactRequest(dialog);\n    }\n\n    return renderError(dialog);\n  };\n\n  return Boolean(dialogs.length) && renderDialog(dialogs[dialogs.length - 1]);\n};\n\nfunction getErrorHeader(error: ApiError) {\n  if (error.isSlowMode) {\n    return 'Slowmode enabled';\n  }\n\n  if (!error.hasErrorKey) {\n    return 'Telegram';\n  }\n\n  return 'Something went wrong';\n}\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      dialogs: selectTabState(global).dialogs,\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(Dialogs));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiNotification } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\nimport { pick } from '../../util/iteratees';\n\nimport Notification from '../ui/Notification';\n\ntype StateProps = {\n  notifications: ApiNotification[];\n};\n\nconst Notifications: FC<StateProps> = ({ notifications }) => {\n  if (!notifications.length) {\n    return undefined;\n  }\n\n  return (\n    <div id=\"Notifications\">\n      {notifications.map((notification) => (\n        <Notification key={notification.localId} notification={notification} />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => pick(selectTabState(global), ['notifications']),\n)(Notifications));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { ensureProtocol } from '../../util/browser/url';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  url?: string;\n};\n\nconst SafeLinkModal: FC<OwnProps> = ({ url }) => {\n  const { toggleSafeLinkModal } = getActions();\n\n  const lang = useLang();\n\n  const handleOpen = useCallback(() => {\n    if (!url) {\n      return;\n    }\n\n    window.open(ensureProtocol(url), '_blank', 'noopener noreferrer');\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal, url]);\n\n  const handleDismiss = useCallback(() => {\n    toggleSafeLinkModal({ url: undefined });\n  }, [toggleSafeLinkModal]);\n\n  const renderingUrl = useCurrentOrPrev(url);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      textParts={renderText(lang('OpenUrlText', { url: renderingUrl }, { withNodes: true, withMarkdown: true }))}\n      confirmLabel={lang('OpenUrlConfirm')}\n      confirmHandler={handleOpen}\n    />\n  );\n};\n\nexport default memo(SafeLinkModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"VJDwJpsF\",\"buttons\":\"aYO2C2Hx\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { prepareMapUrl } from '../../../util/map';\nimport { IS_IOS, IS_MAC_OS } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './MapModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['mapModal'];\n};\n\nconst OpenMapModal = ({ modal }: OwnProps) => {\n  const { closeMapModal } = getActions();\n\n  const { point: geoPoint, zoom } = modal || {};\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(geoPoint);\n\n  const handleClose = useLastCallback(() => {\n    closeMapModal();\n  });\n\n  const [googleUrl, bingUrl, appleUrl, osmUrl] = useMemo(() => {\n    if (!geoPoint) {\n      return [];\n    }\n\n    const google = prepareMapUrl('google', geoPoint, zoom);\n    const bing = prepareMapUrl('bing', geoPoint, zoom);\n    const osm = prepareMapUrl('osm', geoPoint, zoom);\n    const apple = prepareMapUrl('apple', geoPoint, zoom);\n\n    return [google, bing, apple, osm];\n  }, [geoPoint, zoom]);\n\n  const openUrl = useLastCallback((url: string) => {\n    closeMapModal();\n    window.open(url, '_blank', 'noopener');\n  });\n\n  const handleGoogleClick = useLastCallback(() => {\n    openUrl(googleUrl!);\n  });\n\n  const handleBingClick = useLastCallback(() => {\n    openUrl(bingUrl!);\n  });\n\n  const handleAppleClick = useLastCallback(() => {\n    openUrl(appleUrl!);\n  });\n\n  const handleOsmClick = useLastCallback(() => {\n    openUrl(osmUrl!);\n  });\n\n  return (\n    <Modal\n      contentClassName={styles.root}\n      title={lang('OpenMapWith')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      isSlim\n    >\n      <div className={styles.buttons}>\n        {(IS_IOS || IS_MAC_OS) && (\n          <Button fluid size=\"smaller\" onClick={handleAppleClick}>\n            Apple Maps\n          </Button>\n        )}\n        <Button fluid size=\"smaller\" onClick={handleGoogleClick}>\n          Google Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleBingClick}>\n          Bing Maps\n        </Button>\n        <Button fluid size=\"smaller\" onClick={handleOsmClick}>\n          OpenStreetMap\n        </Button>\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(OpenMapModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { ensureProtocol } from '../../../util/browser/url';\nimport renderText from '../../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal?: TabState['urlAuth'];\n};\n\ntype StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst UrlAuthModal: FC<OwnProps & StateProps> = ({\n  modal, currentUser,\n}) => {\n  const { closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth } = getActions();\n  const [isLoginChecked, setLoginChecked] = useState(true);\n  const [isWriteAccessChecked, setWriteAccessChecked] = useState(true);\n  const currentAuth = useCurrentOrPrev(modal, false);\n  const { domain, botId, shouldRequestWriteAccess } = currentAuth?.request || {};\n  const bot = botId ? getGlobal().users.byId[botId] : undefined;\n\n  const lang = useOldLang();\n\n  const handleOpen = useCallback(() => {\n    if (modal?.url && isLoginChecked) {\n      const acceptAction = modal.button ? acceptBotUrlAuth : acceptLinkUrlAuth;\n      acceptAction({\n        isWriteAllowed: isWriteAccessChecked,\n      });\n    } else if (currentAuth?.url) {\n      window.open(ensureProtocol(currentAuth.url), '_blank', 'noopener');\n    }\n    closeUrlAuthModal();\n  }, [\n    modal, isLoginChecked, closeUrlAuthModal, acceptBotUrlAuth, acceptLinkUrlAuth, isWriteAccessChecked, currentAuth,\n  ]);\n\n  const handleDismiss = useCallback(() => {\n    closeUrlAuthModal();\n  }, [closeUrlAuthModal]);\n\n  const handleLoginChecked = useCallback((value: boolean) => {\n    setLoginChecked(value);\n    setWriteAccessChecked(value);\n  }, [setLoginChecked]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (domain) {\n      setLoginChecked(true);\n      setWriteAccessChecked(Boolean(shouldRequestWriteAccess));\n    }\n  }, [shouldRequestWriteAccess, domain]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(modal?.url)}\n      onClose={handleDismiss}\n      title={lang('OpenUrlTitle')}\n      confirmLabel={lang('OpenUrlTitle')}\n      confirmHandler={handleOpen}\n    >\n      {renderText(lang('OpenUrlAlert2', currentAuth?.url), ['links'])}\n      {domain && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isLoginChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkLogin', [domain, getUserFullName(currentUser)]),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={handleLoginChecked}\n        />\n      )}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAccessChecked}\n          label={(\n            <>\n              {renderText(\n                lang('Conversation.OpenBotLinkAllowMessages', getUserFullName(bot)),\n                ['simple_markdown'],\n              )}\n            </>\n          )}\n          onCheck={setWriteAccessChecked}\n          disabled={!isLoginChecked}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    return {\n      currentUser,\n    };\n  },\n)(UrlAuthModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\n\nimport type { OldLangFn } from '../../hooks/useOldLang';\n\nimport { MAX_INT_32 } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateToString, formatTime, getDayStart } from '../../util/dates/dateFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\n\nimport './CalendarModal.scss';\n\nconst MAX_SAFE_DATE = MAX_INT_32 * 1000;\nconst MIN_SAFE_DATE = 0;\n\nexport type OwnProps = {\n  selectedAt?: number;\n  minAt?: number;\n  maxAt?: number;\n  isFutureMode?: boolean;\n  isPastMode?: boolean;\n  isOpen: boolean;\n  withTimePicker?: boolean;\n  submitButtonLabel?: string;\n  secondButtonLabel?: string;\n  onClose: () => void;\n  onSubmit: (date: Date) => void;\n  onSecondButtonClick?: NoneToVoidFunction;\n};\n\nconst WEEKDAY_LETTERS = [\n  'lng_weekday1',\n  'lng_weekday2',\n  'lng_weekday3',\n  'lng_weekday4',\n  'lng_weekday5',\n  'lng_weekday6',\n  'lng_weekday7',\n];\n\nconst CalendarModal: FC<OwnProps> = ({\n  selectedAt,\n  minAt,\n  maxAt,\n  isFutureMode,\n  isPastMode,\n  isOpen,\n  withTimePicker,\n  submitButtonLabel,\n  secondButtonLabel,\n  onClose,\n  onSubmit,\n  onSecondButtonClick,\n}) => {\n  const lang = useOldLang();\n  const now = new Date();\n\n  const minDate = useMemo(() => {\n    if (isFutureMode && !minAt) return new Date();\n    return new Date(Math.max(minAt || MIN_SAFE_DATE, MIN_SAFE_DATE));\n  }, [isFutureMode, minAt]);\n  const maxDate = useMemo(() => {\n    if (isPastMode && !maxAt) return new Date();\n    return new Date(Math.min(maxAt || MAX_SAFE_DATE, MAX_SAFE_DATE));\n  }, [isPastMode, maxAt]);\n\n  const passedSelectedDate = useMemo(() => (selectedAt ? new Date(selectedAt) : new Date()), [selectedAt]);\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n  const [isTimeInputFocused, markTimeInputAsFocused] = useFlag(false);\n\n  const [selectedDate, setSelectedDate] = useState<Date>(passedSelectedDate);\n  const [currentMonthAndYear, setCurrentMonthAndYear] = useState<Date>(\n    new Date(selectedDate.getFullYear(), selectedDate.getMonth(), 1),\n  );\n  const [selectedHours, setSelectedHours] = useState<string>(\n    formatInputTime(passedSelectedDate.getHours()),\n  );\n  const [selectedMinutes, setSelectedMinutes] = useState<string>(\n    formatInputTime(passedSelectedDate.getMinutes()),\n  );\n\n  const selectedDay = formatDay(selectedDate.getFullYear(), selectedDate.getMonth(), selectedDate.getDate());\n  const currentYear = currentMonthAndYear.getFullYear();\n  const currentMonth = currentMonthAndYear.getMonth();\n\n  const isDisabled = (isFutureMode && selectedDate.getTime() < minDate.getTime())\n    || (isPastMode && selectedDate.getTime() > maxDate.getTime());\n\n  useEffect(() => {\n    if (!prevIsOpen && isOpen) {\n      setSelectedDate(passedSelectedDate);\n      setCurrentMonthAndYear(new Date(passedSelectedDate.getFullYear(), passedSelectedDate.getMonth(), 1));\n      if (withTimePicker) {\n        setSelectedHours(formatInputTime(passedSelectedDate.getHours()));\n        setSelectedMinutes(formatInputTime(passedSelectedDate.getMinutes()));\n      }\n    }\n  }, [passedSelectedDate, isOpen, prevIsOpen, withTimePicker]);\n\n  useEffect(() => {\n    if (isFutureMode && !isTimeInputFocused && selectedDate.getTime() < minDate.getTime()) {\n      setSelectedDate(minDate);\n      setSelectedHours(formatInputTime(minDate.getHours()));\n      setSelectedMinutes(formatInputTime(minDate.getMinutes()));\n    }\n  }, [isFutureMode, isTimeInputFocused, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (isPastMode && !isTimeInputFocused && selectedDate.getTime() > maxDate.getTime()) {\n      setSelectedDate(maxDate);\n      setSelectedHours(formatInputTime(maxDate.getHours()));\n      setSelectedMinutes(formatInputTime(maxDate.getMinutes()));\n    }\n  }, [isFutureMode, isPastMode, isTimeInputFocused, maxDate, minDate, selectedDate]);\n\n  useEffect(() => {\n    if (selectedAt) {\n      const newSelectedDate = new Date(selectedAt);\n      setSelectedDate(newSelectedDate);\n      setSelectedHours(formatInputTime(newSelectedDate.getHours()));\n      setSelectedMinutes(formatInputTime(newSelectedDate.getMinutes()));\n    }\n  }, [selectedAt]);\n\n  const shouldDisableNextMonth = (isPastMode && currentYear >= now.getFullYear() && currentMonth >= now.getMonth())\n    || (maxDate && currentYear >= maxDate.getFullYear() && currentMonth >= maxDate.getMonth());\n  const shouldDisablePrevMonth = isFutureMode && currentYear <= now.getFullYear() && currentMonth <= now.getMonth();\n\n  const { prevMonthGrid, currentMonthGrid, nextMonthGrid } = useMemo(() => (\n    buildCalendarGrid(currentYear, currentMonth)\n  ), [currentMonth, currentYear]);\n\n  const submitLabel = useMemo(() => {\n    return submitButtonLabel || formatSubmitLabel(lang, selectedDate);\n  }, [lang, selectedDate, submitButtonLabel]);\n\n  function handlePrevMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() - 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleNextMonth() {\n    setCurrentMonthAndYear((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setMonth(dateCopy.getMonth() + 1);\n\n      return dateCopy;\n    });\n  }\n\n  function handleDateSelect(date: number) {\n    setSelectedDate((d) => {\n      const dateCopy = new Date(d);\n      dateCopy.setDate(date);\n      dateCopy.setMonth(currentMonth);\n      dateCopy.setFullYear(currentYear);\n\n      return dateCopy;\n    });\n  }\n\n  const handleSubmit = useCallback(() => {\n    if (isFutureMode && selectedDate < minDate) {\n      onSubmit(minDate);\n    } else if (isPastMode && selectedDate > maxDate) {\n      onSubmit(maxDate);\n    } else {\n      onSubmit(selectedDate);\n    }\n  }, [isFutureMode, isPastMode, minDate, maxDate, onSubmit, selectedDate]);\n\n  const handleChangeHours = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedHours('');\n      e.target.value = '';\n      return;\n    }\n\n    const hours = Math.max(0, Math.min(Number(value), 23));\n\n    const date = new Date(selectedDate.getTime());\n    date.setHours(hours);\n    setSelectedDate(date);\n\n    const hoursStr = formatInputTime(hours);\n    setSelectedHours(hoursStr);\n    e.target.value = hoursStr;\n  }, [selectedDate]);\n\n  const handleChangeMinutes = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.replace(/[^\\d]+/g, '');\n    if (!value.length) {\n      setSelectedMinutes('');\n      e.target.value = '';\n      return;\n    }\n\n    const minutes = Math.max(0, Math.min(Number(value), 59));\n\n    const date = new Date(selectedDate.getTime());\n    date.setMinutes(minutes);\n    setSelectedDate(date);\n\n    const minutesStr = formatInputTime(minutes);\n    setSelectedMinutes(minutesStr);\n    e.target.value = minutesStr;\n  }, [selectedDate]);\n\n  function renderTimePicker() {\n    return (\n      <div className=\"timepicker\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedHours}\n          onChange={handleChangeHours}\n          onFocus={markTimeInputAsFocused}\n        />\n        :\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          inputMode=\"decimal\"\n          value={selectedMinutes}\n          onChange={handleChangeMinutes}\n          onFocus={markTimeInputAsFocused}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"CalendarModal\"\n      onEnter={handleSubmit}\n    >\n      <div className=\"container\">\n        <div className=\"month-selector\">\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4>\n            {lang(`lng_month${currentMonth + 1}`)}\n            {' '}\n            {currentYear}\n          </h4>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisablePrevMonth}\n            onClick={!shouldDisablePrevMonth ? handlePrevMonth : undefined}\n          >\n            <Icon name=\"previous\" />\n          </Button>\n\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            disabled={shouldDisableNextMonth}\n            onClick={!shouldDisableNextMonth ? handleNextMonth : undefined}\n          >\n            <Icon name=\"next\" />\n          </Button>\n        </div>\n      </div>\n\n      <div className=\"calendar-wrapper\">\n        <div className=\"calendar-grid\">\n          {WEEKDAY_LETTERS.map((day) => (\n            <div className=\"day-button faded weekday\">\n              <span>{lang(day)}</span>\n            </div>\n          ))}\n          {prevMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n          {currentMonthGrid.map((gridDate) => (\n            <div\n              role=\"button\"\n              tabIndex={0}\n              onClick={() => handleDateSelect(gridDate)}\n              className={buildClassName(\n                'day-button',\n                'div-button',\n                isDisabledDay(\n                  currentYear, currentMonth, gridDate, minDate, maxDate,\n                )\n                  ? 'disabled'\n                  : `${gridDate ? 'clickable' : ''}`,\n                selectedDay === formatDay(currentYear, currentMonth, gridDate) && 'selected',\n              )}\n            >\n              {Boolean(gridDate) && (\n                <span>{gridDate}</span>\n              )}\n            </div>\n          ))}\n          {nextMonthGrid.map((gridDate) => (\n            <div className=\"day-button disabled\"><span>{gridDate}</span></div>\n          ))}\n        </div>\n      </div>\n\n      {withTimePicker && renderTimePicker()}\n\n      <div className=\"footer\">\n        <div className=\"footer\">\n          <Button\n            onClick={handleSubmit}\n            disabled={isDisabled}\n          >\n            {submitLabel}\n          </Button>\n          {secondButtonLabel && (\n            <Button onClick={onSecondButtonClick} isText>\n              {secondButtonLabel}\n            </Button>\n          )}\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nfunction buildCalendarGrid(year: number, month: number) {\n  const prevMonthGrid: number[] = [];\n  const currentMonthGrid: number[] = [];\n  const nextMonthGrid: number[] = [];\n\n  const date = new Date();\n  date.setDate(1);\n  date.setMonth(month);\n  date.setFullYear(year);\n  const firstDay = date.getDay() || 7;\n  const totalDaysInPrevMonth = new Date(year, month, 0).getDate();\n\n  for (let i = 1; i < firstDay; i++) {\n    prevMonthGrid.push(totalDaysInPrevMonth - firstDay + i + 1);\n  }\n\n  while (date.getMonth() === month) {\n    const gridDate = date.getDate();\n    currentMonthGrid.push(gridDate);\n    date.setDate(gridDate + 1);\n  }\n\n  const lastRowDaysCount = (currentMonthGrid.length + prevMonthGrid.length) % 7;\n  if (lastRowDaysCount > 0) {\n    for (let i = 1; i <= 7 - lastRowDaysCount; i++) {\n      nextMonthGrid.push(i);\n    }\n  }\n\n  return { prevMonthGrid, currentMonthGrid, nextMonthGrid };\n}\n\nfunction isDisabledDay(year: number, month: number, day: number, minDate?: Date, maxDate?: Date) {\n  const selectedDay = new Date(year, month, day);\n  const fixedMinDate = minDate && getDayStart(minDate);\n  const fixedMaxDate = maxDate && getDayStart(maxDate);\n\n  if (fixedMaxDate && selectedDay > fixedMaxDate) {\n    return true;\n  } else if (fixedMinDate && selectedDay < fixedMinDate) {\n    return true;\n  }\n\n  return false;\n}\n\nfunction formatInputTime(value: string | number) {\n  return String(value).padStart(2, '0');\n}\n\nfunction formatDay(year: number, month: number, day: number) {\n  return `${year}-${month + 1}-${day}`;\n}\n\nfunction formatSubmitLabel(lang: OldLangFn, date: Date) {\n  const day = formatDateToString(date, lang.code);\n  const today = formatDateToString(new Date(), lang.code);\n\n  if (day === today) {\n    return lang('Conversation.ScheduleMessage.SendToday', formatTime(lang, date));\n  }\n\n  return lang('Conversation.ScheduleMessage.SendOn', [day, formatTime(lang, date)]);\n}\n\nexport default memo(CalendarModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CalendarModal from '../common/CalendarModal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  selectedAt?: number;\n};\n\nconst HistoryCalendar: FC<OwnProps & StateProps> = ({\n  isOpen, selectedAt,\n}) => {\n  const { searchMessagesByDate, closeHistoryCalendar } = getActions();\n\n  const handleJumpToDate = useCallback((date: Date) => {\n    searchMessagesByDate({ timestamp: date.getTime() / 1000 });\n    closeHistoryCalendar();\n  }, [closeHistoryCalendar, searchMessagesByDate]);\n\n  const lang = useOldLang();\n\n  return (\n    <CalendarModal\n      isOpen={isOpen}\n      selectedAt={selectedAt}\n      isPastMode\n      submitButtonLabel={lang('JumpToDate')}\n      onClose={closeHistoryCalendar}\n      onSubmit={handleJumpToDate}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return { selectedAt: selectTabState(global).historyCalendarSelectedAt };\n  },\n)(HistoryCalendar));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiCountryCode, ApiUser, ApiUserStatus } from '../../api/types';\n\nimport { getUserStatus } from '../../global/helpers';\nimport { selectUser, selectUserStatus } from '../../global/selectors';\nimport { formatPhoneNumberWithCode } from '../../util/phoneNumber';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport renderText from '../common/helpers/renderText';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useFlag from '../../hooks/useFlag';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Modal from '../ui/Modal';\n\nimport './NewContactModal.scss';\n\nconst ANIMATION_DURATION = 200;\n\nexport type OwnProps = {\n  isOpen: boolean;\n  userId?: string;\n  isByPhoneNumber?: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  userStatus?: ApiUserStatus;\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst NewContactModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  userId,\n  isByPhoneNumber,\n  user,\n  userStatus,\n  phoneCodeList,\n}) => {\n  const { updateContact, importContact, closeNewContactDialog } = getActions();\n\n  const lang = useOldLang();\n  const renderingUser = useCurrentOrPrev(user);\n  const renderingIsByPhoneNumber = useCurrentOrPrev(isByPhoneNumber);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n  const [firstName, setFirstName] = useState<string>(renderingUser?.firstName ?? '');\n  const [lastName, setLastName] = useState<string>(renderingUser?.lastName ?? '');\n  const [phone, setPhone] = useState<string>(renderingUser?.phoneNumber ?? '');\n  const [shouldSharePhoneNumber, setShouldSharePhoneNumber] = useState<boolean>(true);\n  const canBeSubmitted = Boolean(firstName && (!isByPhoneNumber || phone));\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n      setFirstName(renderingUser?.firstName ?? '');\n      setLastName(renderingUser?.lastName ?? '');\n      setPhone(renderingUser?.phoneNumber ?? '');\n      setShouldSharePhoneNumber(true);\n    }\n  }, [isOpen, markIsShown, renderingUser?.firstName, renderingUser?.lastName, renderingUser?.phoneNumber]);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV && isShown) {\n      setTimeout(() => { inputRef.current?.focus(); }, ANIMATION_DURATION);\n    }\n  }, [isShown]);\n\n  const handleFirstNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n  }, []);\n\n  const handlePhoneChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setPhone(formatPhoneNumberWithCode(phoneCodeList, e.target.value));\n  }, [phoneCodeList]);\n\n  const handleLastNameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n  }, []);\n\n  const handleClose = useCallback(() => {\n    closeNewContactDialog();\n    setFirstName('');\n    setLastName('');\n    setPhone('');\n  }, [closeNewContactDialog]);\n\n  const handleSubmit = useCallback(() => {\n    if (isByPhoneNumber || !userId) {\n      importContact({\n        firstName,\n        lastName,\n        phoneNumber: phone,\n      });\n    } else {\n      updateContact({\n        userId,\n        firstName,\n        lastName,\n        shouldSharePhoneNumber,\n      });\n    }\n  }, [firstName, importContact, isByPhoneNumber, lastName, phone, shouldSharePhoneNumber, updateContact, userId]);\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  function renderAddContact() {\n    return (\n      <>\n        <div className=\"NewContactModal__profile\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Avatar\n            size=\"jumbo\"\n            peer={renderingUser}\n            text={`${firstName} ${lastName}`}\n          />\n          <div className=\"NewContactModal__profile-info\">\n            <p className=\"NewContactModal__phone-number\">\n              {renderingUser?.phoneNumber\n                ? formatPhoneNumberWithCode(phoneCodeList, renderingUser.phoneNumber)\n                : lang('MobileHidden')}\n            </p>\n            <span className=\"NewContactModal__user-status\" dir=\"auto\">\n              {getUserStatus(lang, renderingUser!, userStatus)}\n            </span>\n          </div>\n        </div>\n        <InputText\n          ref={inputRef}\n          value={firstName}\n          label={lang('FirstName')}\n          tabIndex={0}\n          onChange={handleFirstNameChange}\n        />\n        <InputText\n          value={lastName}\n          label={lang('LastName')}\n          tabIndex={0}\n          onChange={handleLastNameChange}\n        />\n        <p className=\"NewContactModal__help-text\">\n          {renderText(\n            lang('NewContact.Phone.Hidden.Text', renderingUser?.firstName || ''),\n            ['emoji', 'simple_markdown'],\n          )}\n        </p>\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldSharePhoneNumber}\n          tabIndex={0}\n          onCheck={setShouldSharePhoneNumber}\n          label={lang('lng_new_contact_share')}\n        />\n        <p className=\"NewContactModal__help-text NewContactModal__help-text__negative\">\n          {renderText(lang('AddContact.SharedContactExceptionInfo', renderingUser?.firstName))}\n        </p>\n      </>\n    );\n  }\n\n  function renderCreateContact() {\n    return (\n      <div className=\"NewContactModal__new-contact\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Avatar size=\"jumbo\" text={`${firstName} ${lastName}`} />\n        <div className=\"NewContactModal__new-contact-fieldset\">\n          <InputText\n            ref={inputRef}\n            value={phone}\n            inputMode=\"tel\"\n            label={lang('lng_contact_phone')}\n            tabIndex={0}\n            onChange={handlePhoneChange}\n          />\n          <InputText\n            value={firstName}\n            label={lang('FirstName')}\n            tabIndex={0}\n            onChange={handleFirstNameChange}\n          />\n          <InputText\n            value={lastName}\n            label={lang('LastName')}\n            tabIndex={0}\n            onChange={handleLastNameChange}\n          />\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className=\"NewContactModal\"\n      title={lang('NewContact')}\n      isOpen={isOpen}\n      onClose={handleClose}\n      onCloseAnimationEnd={unmarkIsShown}\n    >\n      {renderingUser && renderAddContact()}\n      {renderingIsByPhoneNumber && renderCreateContact()}\n      <div className=\"dialog-buttons\">\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          disabled={!canBeSubmitted}\n          onClick={handleSubmit}\n        >\n          {lang('Done')}\n        </Button>\n        <Button\n          isText\n          className=\"confirm-dialog-button\"\n          onClick={handleClose}\n        >\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = userId ? selectUser(global, userId) : undefined;\n    return {\n      user,\n      userStatus: userId ? selectUserStatus(global, userId) : undefined,\n      phoneCodeList: global.countryList.phoneCodes,\n    };\n  },\n)(NewContactModal));\n","import type { RefObject } from 'react';\nimport {\n  useEffect, useSignal, useState,\n} from '../lib/teact/teact';\n\nimport type { Point, Size } from '../types';\n\nimport { RESIZE_HANDLE_SELECTOR } from '../config';\nimport buildStyle from '../util/buildStyle';\nimport { captureEvents } from '../util/captureEvents';\nimport useFlag from './useFlag';\nimport useLastCallback from './useLastCallback';\n\nexport enum ResizeHandleType {\n  Top,\n  Bottom,\n  Left,\n  Right,\n  TopLeft,\n  TopRight,\n  BottomLeft,\n  BottomRight,\n}\n\ntype ResizeHandleSelectorType = 'top' | 'bottom' | 'left'\n| 'right' | 'topLeft' | 'topRight' | 'bottomLeft' | 'bottomRight';\n\nconst resizeHandleSelectorsMap: Record<ResizeHandleSelectorType, ResizeHandleType> = {\n  top: ResizeHandleType.Top,\n  bottom: ResizeHandleType.Bottom,\n  left: ResizeHandleType.Left,\n  right: ResizeHandleType.Right,\n  topLeft: ResizeHandleType.TopLeft,\n  topRight: ResizeHandleType.TopRight,\n  bottomLeft: ResizeHandleType.BottomLeft,\n  bottomRight: ResizeHandleType.BottomRight,\n};\n\nconst resizeHandleSelectors = Object.keys(resizeHandleSelectorsMap) as ResizeHandleSelectorType[];\n\nlet resizeTimeout: number | undefined;\nconst FULLSCREEN_POSITION = { x: 0, y: 0 };\n\nexport default function useDraggable(\n  ref: RefObject<HTMLElement>,\n  dragHandleElementRef: RefObject<HTMLElement>,\n  isDragEnabled: boolean = true,\n  originalSize: Size,\n  isFullscreen: boolean = false,\n  minimumSize: Size = { width: 0, height: 0 },\n  cachedPosition?: Point,\n) {\n  const [elementCurrentPosition, setElementCurrentPosition] = useState<Point | undefined>(cachedPosition);\n  const [elementCurrentSize, setElementCurrentSize] = useState<Size | undefined>(undefined);\n\n  const [getElementPositionOnStartTransform, setElementPositionOnStartTransform] = useSignal({ x: 0, y: 0 });\n  const [getElementSizeOnStartTransform, setElementSizeOnStartTransform] = useSignal({ width: 0, height: 0 });\n  const [getTransformStartPoint, setTransformStartPoint] = useSignal({ x: 0, y: 0 });\n\n  const elementPositionOnStartTransform = getElementPositionOnStartTransform();\n  const transformStartPoint = getTransformStartPoint();\n\n  const element = ref.current;\n  const dragHandleElement = dragHandleElementRef.current;\n\n  const [isInitiated, setIsInitiated] = useFlag(false);\n  const [wasElementShown, setWasElementShown] = useFlag(false);\n  const [isDragging, startDragging, stopDragging] = useFlag(false);\n  const [isResizing, startResizing, stopResizing] = useFlag(false);\n  const [isWindowsResizing, startWindowResizing, stopWindowResizing] = useFlag(false);\n\n  const [hitResizeHandle, setHitResizeHandle] = useState<ResizeHandleType | undefined>(undefined);\n\n  function getVisibleArea() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight,\n    };\n  }\n\n  const updateCurrentPosition = useLastCallback((position: Point) => {\n    if (!isFullscreen) setElementCurrentPosition({ x: position.x, y: position.y });\n  });\n\n  const getActualPosition = useLastCallback(() => {\n    return isFullscreen ? FULLSCREEN_POSITION : elementCurrentPosition;\n  });\n\n  const getCenteredPosition = useLastCallback(() => {\n    if (!elementCurrentSize) return undefined;\n    const { width, height } = elementCurrentSize;\n\n    const visibleArea = getVisibleArea();\n    const viewportWidth = visibleArea.width;\n    const viewportHeight = visibleArea.height;\n\n    const centeredX = (viewportWidth - width) / 2;\n    const centeredY = (viewportHeight - height) / 2;\n\n    return { x: centeredX, y: centeredY };\n  });\n\n  useEffect(() => {\n    if (element) setWasElementShown();\n  }, [element]);\n\n  useEffect(() => {\n    if (!isInitiated && elementCurrentSize) {\n      const centeredPosition = getCenteredPosition();\n      if (!centeredPosition) return;\n\n      updateCurrentPosition(centeredPosition);\n      setIsInitiated();\n    }\n  }, [elementCurrentSize, isInitiated, element]);\n\n  const handleStartDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (targetElement.closest('.no-drag') || !element) {\n      return;\n    }\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const { left, top } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startDragging();\n  });\n\n  function getResizeHandleFromTarget(targetElement: HTMLElement) {\n    const closest = (selector: string) => targetElement.closest(selector);\n\n    if (!closest(RESIZE_HANDLE_SELECTOR)) return undefined;\n    for (const selector of resizeHandleSelectors) {\n      if (closest(`.${selector}`)) { return resizeHandleSelectorsMap[selector]; }\n    }\n    return undefined;\n  }\n\n  const handleStartResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (event instanceof MouseEvent && event.button !== 0) {\n      return;\n    }\n\n    const targetElement = event.target as HTMLElement;\n    if (!element || !targetElement) {\n      return;\n    }\n    const resizeHandle = getResizeHandleFromTarget(targetElement);\n\n    if (resizeHandle === undefined) return;\n    setHitResizeHandle(resizeHandle);\n\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const {\n      left, right, top, bottom,\n    } = element.getBoundingClientRect();\n    setElementPositionOnStartTransform({ x: left, y: top });\n    setElementSizeOnStartTransform({ width: right - left, height: bottom - top });\n    setTransformStartPoint({ x: pageX, y: pageY });\n\n    startResizing();\n  });\n\n  const handleDragRelease = useLastCallback(() => {\n    stopDragging();\n  });\n\n  const handleResizeRelease = useLastCallback(() => {\n    stopResizing();\n  });\n\n  useEffect(() => {\n    if (!isDragEnabled) {\n      stopDragging();\n    }\n  }, [isDragEnabled]);\n\n  const ensurePositionInVisibleArea = (x: number, y: number) => {\n    const visibleArea = getVisibleArea();\n\n    const visibleAreaWidth = visibleArea.width;\n    const visibleAreaHeight = visibleArea.height;\n\n    const componentWidth = elementCurrentSize!.width;\n    const componentHeight = elementCurrentSize!.height;\n\n    let newX = x;\n    let newY = y;\n\n    if (newX < 0) newX = 0;\n    if (newY < 0) newY = 0;\n    if (newX + componentWidth > visibleAreaWidth) newX = visibleAreaWidth - componentWidth;\n    if (newY + componentHeight > visibleAreaHeight) newY = visibleAreaHeight - componentHeight;\n\n    return { x: newX, y: newY };\n  };\n\n  const adjustPositionWithinBounds = useLastCallback(() => {\n    if (isFullscreen) return;\n    const position = !wasElementShown && !cachedPosition ? getCenteredPosition() : elementCurrentPosition;\n    if (!elementCurrentSize || !position) return;\n    const newPosition = ensurePositionInVisibleArea(position.x, position.y);\n    updateCurrentPosition(newPosition);\n  });\n\n  const ensureSizeInVisibleArea = useLastCallback((sizeForCheck: Size) => {\n    const newSize = sizeForCheck;\n\n    const visibleArea = getVisibleArea();\n\n    const originalWidth = originalSize.width;\n    const originalHeight = originalSize.height;\n    newSize.width = Math.min(visibleArea.width, Math.max(originalWidth, newSize.width));\n    newSize.height = Math.min(visibleArea.height, Math.max(originalHeight, newSize.height));\n\n    return newSize;\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    const newSize = ensureSizeInVisibleArea({ width: originalSize.width, height: originalSize.height });\n    if (newSize) setElementCurrentSize(newSize);\n  }, [originalSize, isResizing]);\n\n  const adjustSizeWithinBounds = useLastCallback(() => {\n    if (!elementCurrentSize || isResizing) return;\n    const newSize = ensureSizeInVisibleArea(elementCurrentSize);\n    if (newSize) setElementCurrentSize(newSize);\n  });\n\n  useEffect(() => {\n    if (isResizing) return;\n    adjustPositionWithinBounds();\n  }, [elementCurrentSize, isResizing]);\n\n  useEffect(() => {\n    const handleWindowResize = () => {\n      startWindowResizing();\n      adjustSizeWithinBounds();\n      adjustPositionWithinBounds();\n      if (resizeTimeout) {\n        clearTimeout(resizeTimeout);\n        resizeTimeout = undefined;\n      }\n      resizeTimeout = window.setTimeout(() => {\n        resizeTimeout = undefined;\n        stopWindowResizing();\n      }, 250);\n    };\n\n    window.addEventListener('resize', handleWindowResize);\n\n    return () => {\n      clearTimeout(resizeTimeout);\n      resizeTimeout = undefined;\n      window.removeEventListener('resize', handleWindowResize);\n    };\n  }, [adjustPositionWithinBounds]);\n\n  const handleDrag = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isDragging || !element) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n\n    const offsetX = pageX - transformStartPoint.x;\n    const offsetY = pageY - transformStartPoint.y;\n\n    const newX = elementPositionOnStartTransform.x + offsetX;\n    const newY = elementPositionOnStartTransform.y + offsetY;\n\n    if (elementCurrentSize) setElementCurrentPosition(ensurePositionInVisibleArea(newX, newY));\n  });\n\n  const handleResize = useLastCallback((event: MouseEvent | TouchEvent) => {\n    if (!isResizing || !element || hitResizeHandle === undefined) return;\n    const { pageX, pageY } = ('touches' in event) ? event.touches[0] : event;\n    const sizeOnStartTransform = getElementSizeOnStartTransform();\n\n    const pageVisibleX = Math.min(Math.max(0, pageX), getVisibleArea().width);\n    const pageVisibleY = Math.min(Math.max(0, pageY), getVisibleArea().height);\n\n    const offsetX = pageVisibleX - transformStartPoint.x;\n    const offsetY = pageVisibleY - transformStartPoint.y;\n\n    const maxX = elementPositionOnStartTransform.x + sizeOnStartTransform.width - minimumSize.width;\n    const maxY = elementPositionOnStartTransform.y + sizeOnStartTransform.height - minimumSize.height;\n\n    const originalBounds = {\n      x: elementPositionOnStartTransform.x,\n      y: elementPositionOnStartTransform.y,\n      width: sizeOnStartTransform.width,\n      height: sizeOnStartTransform.height,\n    };\n\n    const newBounds = { ...originalBounds };\n\n    if (hitResizeHandle === ResizeHandleType.Left\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width - offsetX, minimumSize.width);\n      newBounds.x = Math.min(newBounds.x + offsetX, maxX);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Right\n    || hitResizeHandle === ResizeHandleType.TopRight\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.width = Math.max(sizeOnStartTransform.width + offsetX, minimumSize.width);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Top\n    || hitResizeHandle === ResizeHandleType.TopLeft\n    || hitResizeHandle === ResizeHandleType.TopRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height - offsetY, minimumSize.height);\n      newBounds.y = Math.min(newBounds.y + offsetY, maxY);\n    }\n\n    if (hitResizeHandle === ResizeHandleType.Bottom\n    || hitResizeHandle === ResizeHandleType.BottomLeft\n    || hitResizeHandle === ResizeHandleType.BottomRight\n    ) {\n      newBounds.height = Math.max(sizeOnStartTransform.height + offsetY, minimumSize.height);\n    }\n\n    setElementCurrentSize({ width: newBounds.width, height: newBounds.height });\n    setElementCurrentPosition({ x: newBounds.x, y: newBounds.y });\n  });\n\n  useEffect(() => {\n    let cleanup: NoneToVoidFunction | undefined;\n    if (dragHandleElement && isDragEnabled) {\n      cleanup = captureEvents(dragHandleElement, {\n        onCapture: handleStartDrag,\n        onDrag: handleDrag,\n        onRelease: handleDragRelease,\n        onClick: handleDragRelease,\n        onDoubleClick: handleDragRelease,\n      });\n    }\n    return cleanup;\n  }, [isDragEnabled, dragHandleElement]);\n\n  useEffect(() => {\n    const cleanups: NoneToVoidFunction[] = [];\n    if (element && isDragEnabled) {\n      for (const selector of resizeHandleSelectors) {\n        const resizeHandler = element.querySelector(`.resizeHandle.${selector}`) as HTMLElement;\n\n        if (resizeHandler) {\n          const cleanup = captureEvents(resizeHandler, {\n            onCapture: handleStartResize,\n            onDrag: handleResize,\n            onRelease: handleResizeRelease,\n            onClick: handleResizeRelease,\n            onDoubleClick: handleResizeRelease,\n          });\n\n          if (cleanup) {\n            cleanups.push(cleanup);\n          }\n        }\n      }\n    }\n\n    return () => {\n      cleanups.forEach((cleanup) => cleanup());\n    };\n  }, [isDragEnabled, element]);\n\n  const cursorStyle = isDragging ? 'cursor: grabbing !important; ' : '';\n\n  const actualPosition = getActualPosition();\n\n  if (!isInitiated || !elementCurrentSize || !actualPosition) {\n    return {\n      isDragging: false,\n      style: cursorStyle,\n    };\n  }\n\n  const style = buildStyle(\n    `left: ${actualPosition.x}px;`,\n    `top: ${actualPosition.y}px;`,\n    !isFullscreen && `max-width: ${elementCurrentSize.width}px;`,\n    !isFullscreen && `max-height: ${elementCurrentSize.height}px;`,\n    'position: fixed;',\n    (isDragging || isResizing || isWindowsResizing) && 'transition: none !important;',\n    cursorStyle,\n  );\n\n  return {\n    position: elementCurrentPosition,\n    size: elementCurrentSize,\n    isDragging,\n    isResizing,\n    style,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"kUZmBlnN\",\"window-state-button\":\"Rax9j_TK\",\"windowStateButton\":\"Rax9j_TK\",\"button\":\"SMRJmUuE\",\"avatars\":\"GP17QhNN\",\"state-icon\":\"sdbTXCxq\",\"stateIcon\":\"sdbTXCxq\",\"icon\":\"P0P4gW6a\",\"title\":\"TZFjRaG4\"};","import React, {\n  memo, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { WebApp } from '../../../types/webapp';\n\nimport { selectActiveWebApp, selectTabState, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { unique } from '../../../util/iteratees';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport styles from './MinimizedWebAppModal.module.scss';\n\ntype StateProps = {\n  activeTabBot?: ApiUser;\n  isMinimizedState?: boolean;\n  openedWebApps?: Record<string, WebApp>;\n};\n\nconst MinimizedWebAppModal = ({\n  activeTabBot, isMinimizedState, openedWebApps,\n}: StateProps) => {\n  const {\n    changeWebAppModalState,\n    closeWebAppModal,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const openedWebAppsValues = useMemo(() => {\n    return openedWebApps && Object.values(openedWebApps);\n  }, [openedWebApps]);\n\n  const openedTabsCount = openedWebAppsValues?.length;\n\n  const peers = useMemo(() => {\n    if (!openedTabsCount) return [];\n\n    const global = getGlobal();\n    const activeTabBotId = activeTabBot?.id;\n    const openedApps = unique([activeTabBotId, ...openedWebAppsValues.map((app) => app.botId)]);\n    const bots = openedApps.map((id) => id && selectUser(global, id)).filter(Boolean).slice(0, 3);\n    return bots;\n  }, [openedTabsCount, activeTabBot, openedWebAppsValues]);\n\n  const handleCloseClick = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleExpandClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  });\n\n  if (!isMinimizedState) return undefined;\n\n  function renderTitle() {\n    const activeTabName = peers.length > 0 && peers[0]?.firstName;\n    const title = openedTabsCount && activeTabName && openedTabsCount > 1\n      ? `${lang('MiniAppsMoreTabs',\n        {\n          botName: activeTabName,\n          count: openedTabsCount - 1,\n        },\n        {\n          pluralValue: openedTabsCount - 1,\n        })}`\n      : activeTabName;\n\n    return (\n      <div className={styles.title}>\n        {title}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      ref={ref}\n      className={buildClassName(\n        styles.root,\n      )}\n    >\n      <Button\n        className={styles.button}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        ariaLabel={oldLang('Close')}\n        onClick={handleCloseClick}\n      >\n        <Icon className={styles.icon} name=\"close\" />\n      </Button>\n      <AvatarList className={styles.avatars} size=\"mini\" peers={peers} />\n      {renderTitle()}\n      <Button\n        className={buildClassName(\n          styles.windowStateButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleExpandClick}\n      >\n        <Icon className={styles.stateIcon} name=\"expand-modal\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const webApps = tabState.webApps;\n\n    const { botId } = selectActiveWebApp(global) || {};\n    const { modalState, openedWebApps } = webApps || {};\n    const isMinimizedState = modalState === 'minimized';\n    const activeTabBot = botId ? selectUser(global, botId) : undefined;\n\n    return {\n      activeTabBot,\n      isMinimizedState,\n      openedWebApps,\n    };\n  },\n)(MinimizedWebAppModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"RFg0Ey2I\",\"user-count-badge\":\"UZtJ6ZXb\",\"userCountBadge\":\"UZtJ6ZXb\",\"user-badge-icon\":\"pTiZFhsG\",\"userBadgeIcon\":\"pTiZFhsG\",\"name\":\"TzA5nqCC\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  selectUser,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatIntegerCompact } from '../../../util/textFormat';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport PeerBadge from '../../common/PeerBadge';\n\nimport styles from './WebAppGridItem.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  chatId: string;\n  isPopularApp?: boolean;\n};\n\nexport type StateProps = {\n  user?: ApiUser;\n};\n\nfunction WebAppGridItem({ user, isPopularApp }: OwnProps & StateProps) {\n  const {\n    requestMainWebView,\n  } = getActions();\n\n  const handleClick = useLastCallback(() => {\n    if (!user) {\n      return;\n    }\n    const botId = user?.id;\n    if (!botId) {\n      return;\n    }\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId,\n      peerId: botId,\n      theme,\n    });\n  });\n\n  if (!user) return undefined;\n\n  // eslint-disable-next-line no-null/no-null\n\n  const title = user?.firstName;\n  const activeUserCount = user?.botActiveUsers;\n  const badgeText = activeUserCount && isPopularApp ? formatIntegerCompact(activeUserCount) : undefined;\n\n  return (\n    <div\n      className={styles.container}\n      onClick={handleClick}\n    >\n      <PeerBadge\n        className={buildClassName(styles.avatarContainer, isPopularApp && 'PopularAppGridItem')}\n        textClassName={styles.name}\n        badgeClassName={styles.userCountBadge}\n        badgeIconClassName={styles.userBadgeIcon}\n        peer={user}\n        text={title}\n        badgeText={badgeText}\n        badgeIcon=\"user-filled\"\n      />\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const user = selectUser(global, chatId);\n\n    return {\n      user,\n    };\n  },\n)(WebAppGridItem));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"BJV09FsC\",\"search\":\"bdi8G7GR\",\"section-title\":\"ex3kxgWX\",\"sectionTitle\":\"ex3kxgWX\",\"section-content\":\"uIZzLhEh\",\"sectionContent\":\"uIZzLhEh\",\"showMoreLink\":\"h_Zs9ypA\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback,\n  useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport WebAppGridItem from './WebAppGridItem';\n\nimport styles from './MoreAppsTabContent.module.scss';\n\nconst POPULAR_APPS_SLICE = 30;\n\nexport type OwnProps = {\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\nconst LESS_GRID_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MoreAppsTabContent: FC<OwnProps & StateProps> = ({\n  foundIds,\n  recentBotIds,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n  const {\n    searchPopularBotApps,\n  } = getActions();\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n\n    return filterPeersByQuery({ ids: foundIds, query: searchQuery, type: 'user' });\n  }, [foundIds, searchQuery]);\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleSearchInputReset = useCallback(() => {\n    setSearchQuery('');\n  }, []);\n\n  return (\n    <InfiniteScroll\n      className={buildClassName(styles.root, 'custom-scroll')}\n      items={filteredFoundIds}\n      onLoadMore={handleLoadMore}\n      itemSelector=\".PopularAppGridItem\"\n      noFastList\n      preloadBackwards={POPULAR_APPS_SLICE}\n    >\n      <SearchInput\n        className={styles.search}\n        value={searchQuery}\n        onChange={setSearchQuery}\n        onReset={handleSearchInputReset}\n        placeholder={lang('SearchApps')}\n      />\n      {recentBotIds && !searchQuery && (\n        <div className={styles.section}>\n          <div className={styles.sectionTitle}>\n            <span>{oldLang('SearchAppsMine')}</span>\n            <span className={styles.showMoreLink} onClick={handleToggleShowMoreMine}>\n              {oldLang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n            </span>\n          </div>\n          <div className={styles.sectionContent}>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_GRID_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <WebAppGridItem\n                  chatId={id}\n                />\n              );\n            })}\n          </div>\n        </div>\n      )}\n      <div className={styles.section}>\n        <div className={styles.sectionTitle}>\n          {searchQuery ? lang('Apps') : lang('PopularApps')}\n        </div>\n        <div className={styles.sectionContent}>\n          {filteredFoundIds && filteredFoundIds.map((id) => {\n            return (\n              <WebAppGridItem\n                chatId={id}\n                isPopularApp={!searchQuery}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(MoreAppsTabContent));\n","/* eslint-disable @typescript-eslint/naming-convention */\nimport { useCallback, useEffect, useRef } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { WebApp, WebAppInboundEvent, WebAppOutboundEvent } from '../../../../types/webapp';\n\nimport { getWebAppKey } from '../../../../global/helpers';\nimport { extractCurrentThemeParams } from '../../../../util/themeStyle';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nconst SCROLLBAR_STYLE = `* {\n  scrollbar-width: thin;\n  scrollbar-color: %SCROLLBAR_COLOR% transparent;\n}\n\n*::-webkit-scrollbar {\n  width: 6px;\n  height: 6px;\n  background-color: transparent;\n}\n\n*::-webkit-scrollbar-thumb {\n  border-radius: 6px;\n  background-color: %SCROLLBAR_COLOR%;\n}\n\n*::-webkit-scrollbar-corner {\n  background-color: transparent;\n}`;\n\nconst RELOAD_TIMEOUT = 500;\nconst FULLSCREEN_BUTTONS_AREA_HEIGHT = 3.675 * REM;\n\nconst useWebAppFrame = (\n  ref: React.RefObject<HTMLIFrameElement>,\n  isOpen: boolean,\n  isFullscreen: boolean,\n  isSimpleView: boolean,\n  onEvent: (event: WebAppInboundEvent) => void,\n  webApp?: WebApp,\n  onLoad?: () => void,\n) => {\n  const {\n    showNotification,\n    setWebAppPaymentSlug,\n    openInvoice,\n    closeWebApp,\n    openSuggestedStatusModal,\n    updateWebApp,\n  } = getActions();\n\n  const isReloadSupported = useRef<boolean>(false);\n  const reloadTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const ignoreEventsRef = useRef<boolean>(false);\n  const lastFrameSizeRef = useRef<{ width: number; height: number; isResizing?: boolean }>();\n  const windowSize = useWindowSize();\n\n  useEffect(() => {\n    if (!ref.current || !isOpen) return undefined;\n\n    const handleLoad = () => {\n      onLoad?.();\n    };\n\n    const frame = ref.current;\n    frame.addEventListener('load', handleLoad);\n    return () => {\n      frame.removeEventListener('load', handleLoad);\n    };\n  }, [onLoad, ref, isOpen]);\n\n  const sendEvent = useCallback((event: WebAppOutboundEvent) => {\n    if (!ref.current?.contentWindow) return;\n    ref.current.contentWindow.postMessage(JSON.stringify(event), '*');\n  }, [ref]);\n\n  const sendFullScreenChanged = useCallback((value: boolean) => {\n    sendEvent({\n      eventType: 'fullscreen_changed',\n      eventData: {\n        is_fullscreen: value,\n      },\n    });\n  }, [sendEvent]);\n\n  const forceReloadFrame = useLastCallback((url: string) => {\n    if (!ref.current) return;\n    const frame = ref.current;\n    frame.src = 'about:blank';\n    frame.addEventListener('load', () => {\n      frame.src = url;\n    }, { once: true });\n  });\n\n  const reloadFrame = useCallback((url: string) => {\n    if (isReloadSupported.current) {\n      sendEvent({\n        eventType: 'reload_iframe',\n      });\n      reloadTimeout.current = setTimeout(() => {\n        forceReloadFrame(url);\n      }, RELOAD_TIMEOUT);\n      return;\n    }\n\n    forceReloadFrame(url);\n  }, [sendEvent]);\n\n  const sendViewport = useCallback((isNonStable?: boolean) => {\n    if (!ref.current) {\n      return;\n    }\n    const { width, height } = ref.current.getBoundingClientRect();\n    sendEvent({\n      eventType: 'viewport_changed',\n      eventData: {\n        width,\n        height,\n        is_expanded: true,\n        is_state_stable: !isNonStable,\n      },\n    });\n  }, [sendEvent, ref]);\n\n  const sendSafeArea = useCallback(() => {\n    if (!ref.current) {\n      return;\n    }\n    sendEvent({\n      eventType: 'safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: 0,\n        bottom: 0,\n      },\n    });\n\n    sendEvent({\n      eventType: 'content_safe_area_changed',\n      eventData: {\n        left: 0,\n        right: 0,\n        top: isFullscreen ? FULLSCREEN_BUTTONS_AREA_HEIGHT : 0,\n        bottom: 0,\n      },\n    });\n  }, [sendEvent, isFullscreen, ref]);\n\n  const sendTheme = useCallback(() => {\n    sendEvent({\n      eventType: 'theme_changed',\n      eventData: {\n        theme_params: extractCurrentThemeParams(),\n      },\n    });\n  }, [sendEvent]);\n\n  const sendCustomStyle = useCallback((style: string) => {\n    sendEvent({\n      eventType: 'set_custom_style',\n      eventData: style,\n    });\n  }, [sendEvent]);\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    if (ignoreEventsRef.current) {\n      return;\n    }\n    const contentWindow = ref.current?.contentWindow;\n    const sourceWindow = event.source as Window;\n\n    if (contentWindow !== sourceWindow) {\n      return;\n    }\n\n    try {\n      const data = JSON.parse(event.data) as WebAppInboundEvent;\n      const { eventType, eventData } = data;\n      // Handle some app requests here to simplify hook usage\n      if (eventType === 'web_app_ready') {\n        onLoad?.();\n      }\n\n      if (eventType === 'web_app_close') {\n        if (webApp) {\n          const key = getWebAppKey(webApp);\n          closeWebApp({ key, skipClosingConfirmation: true });\n        }\n      }\n\n      if (eventType === 'web_app_request_viewport') {\n        sendViewport(windowSize.isResizing);\n      }\n\n      if (eventType === 'web_app_request_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_content_safe_area') {\n        sendSafeArea();\n      }\n\n      if (eventType === 'web_app_request_theme') {\n        sendTheme();\n      }\n\n      if (eventType === 'iframe_ready') {\n        const scrollbarColor = getComputedStyle(document.body).getPropertyValue('--color-scrollbar');\n        sendCustomStyle(SCROLLBAR_STYLE.replace(/%SCROLLBAR_COLOR%/g, scrollbarColor));\n        isReloadSupported.current = Boolean(eventData.reload_supported);\n      }\n\n      if (eventType === 'iframe_will_reload') {\n        clearTimeout(reloadTimeout.current);\n      }\n\n      if (eventType === 'web_app_data_send') {\n        if (!isSimpleView) return; // Allowed only in simple view\n        ignoreEventsRef.current = true;\n      }\n\n      // Clipboard access temporarily disabled to address security concerns\n      if (eventType === 'web_app_read_text_from_clipboard') {\n        sendEvent({\n          eventType: 'clipboard_text_received',\n          eventData: {\n            req_id: eventData.req_id,\n            // eslint-disable-next-line no-null/no-null\n            data: null,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_open_scan_qr_popup') {\n        showNotification({\n          message: 'Scanning QR code is not supported in this client yet',\n        });\n      }\n\n      if (eventType === 'web_app_open_invoice') {\n        setWebAppPaymentSlug({\n          slug: eventData.slug,\n        });\n        openInvoice({\n          type: 'slug',\n          slug: eventData.slug,\n        });\n      }\n\n      if (eventType === 'web_app_open_link') {\n        const linkUrl = eventData.url;\n        window.open(linkUrl, '_blank', 'noreferrer');\n      }\n\n      if (eventType === 'web_app_biometry_get_info') {\n        sendEvent({\n          eventType: 'biometry_info_received',\n          eventData: {\n            available: false,\n          },\n        });\n      }\n\n      if (eventType === 'web_app_set_emoji_status') {\n        const { custom_emoji_id, duration } = eventData;\n\n        if (!custom_emoji_id || typeof custom_emoji_id !== 'string') {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'SUGGESTED_EMOJI_INVALID',\n            },\n          });\n          return;\n        }\n\n        if (duration) {\n          try {\n            BigInt(duration);\n          } catch (e) {\n            sendEvent({\n              eventType: 'emoji_status_failed',\n              eventData: {\n                error: 'DURATION_INVALID',\n              },\n            });\n            return;\n          }\n        }\n\n        if (!webApp) {\n          sendEvent({\n            eventType: 'emoji_status_failed',\n            eventData: {\n              error: 'UNKNOWN_ERROR',\n            },\n          });\n          return;\n        }\n\n        openSuggestedStatusModal({\n          webAppKey: getWebAppKey(webApp),\n          customEmojiId: custom_emoji_id,\n          duration: Number(duration),\n          botId: webApp.botId,\n        });\n      }\n\n      onEvent(data);\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [\n    isSimpleView, sendEvent, onEvent, sendCustomStyle, webApp,\n    sendTheme, sendViewport, sendSafeArea, onLoad, windowSize.isResizing,\n    ref,\n  ]);\n\n  useEffect(() => {\n    const { width, height, isResizing } = windowSize;\n    if (lastFrameSizeRef.current && lastFrameSizeRef.current.width === width\n      && lastFrameSizeRef.current.height === height && !lastFrameSizeRef.current.isResizing) return;\n    lastFrameSizeRef.current = { width, height, isResizing };\n    sendViewport(isResizing);\n  }, [sendViewport, sendSafeArea, windowSize]);\n\n  useEffect(() => {\n    if (!webApp?.plannedEvents?.length) return;\n    const events = webApp.plannedEvents;\n    events.forEach((event) => {\n      sendEvent(event);\n    });\n\n    updateWebApp({\n      key: getWebAppKey(webApp),\n      update: {\n        plannedEvents: [],\n      },\n    });\n  }, [sendEvent, webApp]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage, ref]);\n\n  useEffect(() => {\n    if (isOpen && ref.current?.contentWindow) {\n      sendViewport();\n      sendSafeArea();\n      ignoreEventsRef.current = false;\n    } else {\n      lastFrameSizeRef.current = undefined;\n    }\n  }, [isOpen, isFullscreen, sendViewport, sendSafeArea, ref]);\n\n  return {\n    sendEvent, sendFullScreenChanged, reloadFrame, sendViewport, sendSafeArea, sendTheme,\n  };\n};\n\nexport default useWebAppFrame;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LeeJZdwH\",\"multi-tab\":\"ESsGT5OD\",\"multiTab\":\"ESsGT5OD\",\"loadingPlaceholder\":\"jEAibDyh\",\"placeholderPath\":\"Gx1BIECZ\",\"fadeOpacityBreath\":\"N5Blieah\",\"defaultPlaceholderGrid\":\"Ig_t1R7i\",\"placeholderSquare\":\"ablUg8HU\",\"hide\":\"Wrl63uWL\",\"frame\":\"OmY14FFl\",\"with-button\":\"liDRl1xT\",\"withButton\":\"liDRl1xT\",\"hidden\":\"vOFiAq3l\",\"secondary-button\":\"ypxiUCFQ\",\"secondaryButton\":\"ypxiUCFQ\",\"main-button\":\"U_ggDKn1\",\"mainButton\":\"U_ggDKn1\",\"visible\":\"KwI4XdkC\",\"buttons-container\":\"mR_hsBdT\",\"buttonsContainer\":\"mR_hsBdT\",\"one-row\":\"YfQO314y\",\"oneRow\":\"YfQO314y\",\"two-rows\":\"gUldkEoy\",\"twoRows\":\"gUldkEoy\",\"left-to-right\":\"ntESqwQ_\",\"leftToRight\":\"ntESqwQ_\",\"right-to-left\":\"q6IUFEL0\",\"rightToLeft\":\"q6IUFEL0\",\"top-to-bottom\":\"gb4iHJ9H\",\"topToBottom\":\"gb4iHJ9H\",\"bottom-to-top\":\"R_bh3GF8\",\"bottomToTop\":\"R_bh3GF8\",\"hide-horizontal\":\"oYaRA7u4\",\"hideHorizontal\":\"oYaRA7u4\",\"secondary-button-spinner\":\"NYV0yA2J\",\"secondaryButtonSpinner\":\"NYV0yA2J\",\"main-button-spinner\":\"oq6HKJur\",\"mainButtonSpinner\":\"oq6HKJur\",\"web-app-popup\":\"YEOURXza\",\"webAppPopup\":\"YEOURXza\",\"without-title\":\"gvljUzY9\",\"withoutTitle\":\"gvljUzY9\",\"closeIcon\":\"BvNtfigU\",\"state-back\":\"rC2wkMIk\",\"stateBack\":\"rC2wkMIk\",\"backIconContainer\":\"JXsuZ01s\",\"moreIcon\":\"T58ozRyW\",\"headerPanel\":\"eYrhewMy\",\"icon\":\"a0AI_he5\",\"headerSplitButton\":\"Tl4_05AQ\",\"headerButton\":\"MvCwTbk_\",\"left\":\"emOpAMBm\",\"right\":\"z4C5VD5o\",\"buttonCaptionContainer\":\"dpZR3YT7\",\"backButtonCaption\":\"dWDprnWa\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachBot, ApiBotAppSettings, ApiUser,\n} from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { BotAppPermissions, ThemeKey } from '../../../types';\nimport type {\n  PopupOptions,\n  WebApp,\n  WebAppInboundEvent,\n  WebAppModalStateType,\n  WebAppOutboundEvent,\n} from '../../../types/webapp';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { convertToApiChatType } from '../../../global/helpers';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectBotAppPermissions,\n  selectTabState,\n  selectTheme,\n  selectUser,\n  selectUserFullInfo,\n  selectWebApp,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport download from '../../../util/download';\nimport { extractCurrentThemeParams, validateHexColor } from '../../../util/themeStyle';\nimport { getGeolocationStatus, IS_GEOLOCATION_SUPPORTED } from '../../../util/windowEnvironment';\nimport { callApi } from '../../../api/gramjs';\nimport renderText from '../../common/helpers/renderText';\n\nimport { getIsWebAppsFullscreenSupported } from '../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\nimport useFullscreen, { checkIfFullscreen } from '../../../hooks/window/useFullscreen';\nimport usePopupLimit from './hooks/usePopupLimit';\nimport useWebAppFrame from './hooks/useWebAppFrame';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Modal from '../../ui/Modal';\nimport Spinner from '../../ui/Spinner';\nimport Transition from '../../ui/Transition';\n\nimport styles from './WebAppModalTabContent.module.scss';\n\ntype WebAppButton = {\n  isVisible: boolean;\n  isActive: boolean;\n  text: string;\n  color: string;\n  textColor: string;\n  isProgressVisible: boolean;\n  position?: 'left' | 'right' | 'top' | 'bottom';\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n  webApp?: WebApp;\n  registerSendEventCallback: (callback: (event: WebAppOutboundEvent) => void) => void;\n  registerReloadFrameCallback: (callback: (url: string) => void) => void;\n  onContextMenuButtonClick: (e: React.MouseEvent) => void;\n  isTransforming?: boolean;\n  isMultiTabSupported? : boolean;\n  modalHeight: number;\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n  botAppSettings?: ApiBotAppSettings;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  isPaymentModalOpen?: boolean;\n  paymentStatus?: TabState['payment']['status'];\n  isPremium?: boolean;\n  modalState?: WebAppModalStateType;\n  botAppPermissions?: BotAppPermissions;\n};\n\nconst NBSP = '\\u00A0';\n\nconst MAIN_BUTTON_ANIMATION_TIME = 250;\nconst ANIMATION_WAIT = 400;\nconst COLLAPSING_WAIT = 350;\nconst POPUP_SEQUENTIAL_LIMIT = 3;\nconst POPUP_RESET_DELAY = 2000; // 2s\nconst APP_NAME_DISPLAY_DURATION = 3800;\nconst SANDBOX_ATTRIBUTES = [\n  'allow-scripts',\n  'allow-same-origin',\n  'allow-popups',\n  'allow-forms',\n  'allow-modals',\n  'allow-storage-access-by-user-activation',\n].join(' ');\n\nconst DEFAULT_BUTTON_TEXT: Record<string, string> = {\n  ok: 'OK',\n  cancel: 'Cancel',\n  close: 'Close',\n};\n\nconst WebAppModalTabContent: FC<OwnProps & StateProps> = ({\n  modal,\n  webApp,\n  bot,\n  theme,\n  isPaymentModalOpen,\n  paymentStatus,\n  registerSendEventCallback,\n  registerReloadFrameCallback,\n  isTransforming,\n  modalState,\n  isMultiTabSupported,\n  onContextMenuButtonClick,\n  botAppPermissions,\n  botAppSettings,\n  modalHeight,\n}) => {\n  const {\n    closeActiveWebApp,\n    sendWebViewData,\n    toggleAttachBot,\n    openTelegramLink,\n    setWebAppPaymentSlug,\n    switchBotInline,\n    sharePhoneWithBot,\n    updateWebApp,\n    resetPaymentStatus,\n    openChatWithInfo,\n    showNotification,\n    openEmojiStatusAccessModal,\n    openLocationAccessModal,\n    changeWebAppModalState,\n    closeWebAppModal,\n    openPreparedInlineMessageModal,\n  } = getActions();\n  const [mainButton, setMainButton] = useState<WebAppButton | undefined>();\n  const [secondaryButton, setSecondaryButton] = useState<WebAppButton | undefined>();\n\n  const [isLoaded, markLoaded, markUnloaded] = useFlag(false);\n\n  const [popupParameters, setPopupParameters] = useState<PopupOptions | undefined>();\n  const [isRequestingPhone, setIsRequestingPhone] = useState(false);\n  const [isRequestingWriteAccess, setIsRequestingWriteAccess] = useState(false);\n  const [requestedFileDownload, setRequestedFileDownload] = useState<{ url: string; fileName: string } | undefined>();\n  const [bottomBarColor, setBottomBarColor] = useState<string | undefined>();\n  const {\n    unlockPopupsAt, handlePopupOpened, handlePopupClosed,\n  } = usePopupLimit(POPUP_SEQUENTIAL_LIMIT, POPUP_RESET_DELAY);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonRef = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const headerButtonCaptionRef = useRef<HTMLDivElement>(null);\n\n  const isFullscreen = modalState === 'fullScreen';\n  const isMinimizedState = modalState === 'minimized';\n\n  const exitFullScreenCallback = useLastCallback(() => {\n    setTimeout(() => { changeWebAppModalState({ state: 'maximized' }); }, COLLAPSING_WAIT);\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const fullscreenElementRef = useRef<HTMLElement | null>(null);\n\n  useEffect(() => {\n    fullscreenElementRef.current = document.querySelector('#portals') as HTMLElement;\n  }, []);\n\n  const [, setFullscreen, exitFullscreen] = useFullscreen(fullscreenElementRef, exitFullScreenCallback);\n\n  const activeWebApp = modal?.activeWebAppKey ? modal.openedWebApps[modal.activeWebAppKey] : undefined;\n  const activeWebAppName = activeWebApp?.appName;\n  const {\n    url, buttonText, isBackButtonVisible,\n  } = webApp || {};\n\n  const {\n    placeholderPath,\n  } = botAppSettings || {};\n\n  const isCloseModalOpen = Boolean(webApp?.isCloseModalOpen);\n  const isRemoveModalOpen = Boolean(webApp?.isRemoveModalOpen);\n\n  const webAppKey = webApp && getWebAppKey(webApp);\n  const activeWebAppKey = activeWebApp && getWebAppKey(activeWebApp);\n\n  const isActive = (activeWebApp && webApp) && activeWebAppKey === webAppKey;\n\n  const isAvailable = IS_GEOLOCATION_SUPPORTED;\n  const isAccessRequested = botAppPermissions?.geolocation !== undefined;\n  const isAccessGranted = Boolean(botAppPermissions?.geolocation);\n\n  const updateCurrentWebApp = useLastCallback((updatedPartialWebApp: Partial<WebApp>) => {\n    if (!webAppKey) return;\n    updateWebApp({ key: webAppKey, update: updatedPartialWebApp });\n  });\n\n  const themeParams = useMemo(() => {\n    return extractCurrentThemeParams();\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [theme]);\n\n  useEffect(() => {\n    setBottomBarColor(themeParams.secondary_bg_color);\n  }, [themeParams]);\n\n  const themeBackgroundColor = themeParams.bg_color;\n  const [backgroundColorFromEvent, setBackgroundColorFromEvent] = useState<string | undefined>();\n  const backgroundColorFromSettings = theme === 'light' ? botAppSettings?.backgroundColor\n    : botAppSettings?.backgroundDarkColor;\n\n  useEffect(() => {\n    const color = backgroundColorFromEvent || backgroundColorFromSettings || themeBackgroundColor;\n\n    updateCurrentWebApp({ backgroundColor: color });\n  }, [themeBackgroundColor, backgroundColorFromEvent, backgroundColorFromSettings]);\n\n  const themeHeaderColor = themeParams.bg_color;\n  const [headerColorFromEvent, setHeaderColorFromEvent] = useState<string | undefined>();\n  const headerColorFromSettings = theme === 'light' ? botAppSettings?.headerColor\n    : botAppSettings?.headerDarkColor;\n\n  useEffect(() => {\n    const color = headerColorFromEvent || headerColorFromSettings || themeHeaderColor;\n\n    updateCurrentWebApp({ headerColor: color });\n  }, [themeHeaderColor, headerColorFromEvent, headerColorFromSettings]);\n\n  // eslint-disable-next-line no-null/no-null\n  const frameRef = useRef<HTMLIFrameElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isOpen = modal?.isModalOpen || false;\n  const isSimple = Boolean(buttonText);\n\n  const {\n    reloadFrame, sendEvent, sendFullScreenChanged, sendViewport, sendSafeArea, sendTheme,\n  } = useWebAppFrame(frameRef, isOpen, isFullscreen, isSimple, handleEvent, webApp, markLoaded);\n\n  useEffect(() => {\n    if (isActive) registerSendEventCallback(sendEvent);\n  }, [sendEvent, registerSendEventCallback, isActive]);\n\n  useEffect(() => {\n    if (isActive) registerReloadFrameCallback(reloadFrame);\n  }, [reloadFrame, registerReloadFrameCallback, isActive]);\n\n  const isMainButtonVisible = isLoaded && mainButton?.isVisible && mainButton.text.trim().length > 0;\n  const isSecondaryButtonVisible = isLoaded && secondaryButton?.isVisible && secondaryButton.text.trim().length > 0;\n\n  const handleHideCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ isCloseModalOpen: false });\n  });\n  const handleConfirmCloseModal = useLastCallback(() => {\n    updateCurrentWebApp({ shouldConfirmClosing: false, isCloseModalOpen: false });\n    setTimeout(() => {\n      closeActiveWebApp();\n    }, ANIMATION_WAIT);\n  });\n\n  const handleHideRemoveModal = useLastCallback(() => {\n    updateCurrentWebApp({ isRemoveModalOpen: false });\n  });\n\n  const handleMainButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'main_button_pressed',\n    });\n  });\n\n  const handleSecondaryButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'secondary_button_pressed',\n    });\n  });\n\n  const handleAppPopupClose = useLastCallback((buttonId?: string) => {\n    setPopupParameters(undefined);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'popup_closed',\n      eventData: {\n        button_id: buttonId,\n      },\n    });\n  });\n\n  const handleAppPopupModalClose = useLastCallback(() => {\n    handleAppPopupClose();\n  });\n\n  const sendThemeCallback = useLastCallback(() => {\n    sendTheme();\n  });\n\n  // Notify view that theme changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendThemeCallback();\n    }, ANIMATION_WAIT);\n  }, [theme]);\n\n  const setFullscreenCallback = useLastCallback(() => {\n    if (!checkIfFullscreen() && isActive) {\n      setFullscreen?.();\n    }\n  });\n\n  const exitIfFullscreenCallback = useLastCallback(() => {\n    if (checkIfFullscreen() && isActive) {\n      exitFullscreen?.();\n    }\n  });\n\n  const sendFullScreenChangedCallback = useLastCallback(\n    (value: boolean) => { if (isActive) sendFullScreenChanged(value); },\n  );\n\n  useEffect(() => {\n    if (isFullscreen) {\n      setFullscreenCallback();\n      sendFullScreenChangedCallback(true);\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChangedCallback(false);\n    }\n  }, [isFullscreen]);\n\n  const visibilityChangedCallBack = useLastCallback((visibility: boolean) => {\n    sendEvent({\n      eventType: 'visibility_changed',\n      eventData: {\n        is_visible: visibility,\n      },\n    });\n  });\n\n  useEffect(() => {\n    if (isLoaded) {\n      visibilityChangedCallBack(Boolean(isActive));\n    }\n  }, [isActive, isLoaded]);\n\n  useEffectWithPrevDeps(([prevModalState]) => {\n    if (modalState === 'minimized') {\n      visibilityChangedCallBack(false);\n    }\n    if (modalState && prevModalState === 'minimized') {\n      visibilityChangedCallBack(true);\n    }\n  }, [modalState]);\n\n  useSyncEffect(([prevIsPaymentModalOpen]) => {\n    if (isPaymentModalOpen === prevIsPaymentModalOpen) return;\n    if (webApp?.slug && !isPaymentModalOpen && paymentStatus) {\n      sendEvent({\n        eventType: 'invoice_closed',\n        eventData: {\n          slug: webApp.slug,\n          status: paymentStatus,\n        },\n      });\n      setWebAppPaymentSlug({\n        slug: undefined,\n      });\n      resetPaymentStatus();\n    }\n  }, [isPaymentModalOpen, paymentStatus, sendEvent, webApp?.slug]);\n\n  const handleRemoveAttachBot = useLastCallback(() => {\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: false,\n    });\n    closeActiveWebApp();\n  });\n\n  const handleRejectPhone = useLastCallback(() => {\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleAcceptPhone = useLastCallback(() => {\n    sharePhoneWithBot({ botId: bot!.id });\n    setIsRequestingPhone(false);\n    handlePopupClosed();\n    sendEvent({\n      eventType: 'phone_requested',\n      eventData: {\n        status: 'sent',\n      },\n    });\n  });\n\n  const handleRejectFileDownload = useLastCallback((shouldCloseActive?: boolean) => {\n    if (shouldCloseActive) {\n      setRequestedFileDownload(undefined);\n      handlePopupClosed();\n    }\n\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n  });\n\n  const handleRejectWriteAccess = useLastCallback(() => {\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'cancelled',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  const handleAcceptWriteAccess = useLastCallback(async () => {\n    if (!bot) return;\n    const result = await callApi('allowBotSendMessages', { bot });\n    if (!result) {\n      handleRejectWriteAccess();\n      return;\n    }\n\n    sendEvent({\n      eventType: 'write_access_requested',\n      eventData: {\n        status: 'allowed',\n      },\n    });\n    setIsRequestingWriteAccess(false);\n    handlePopupClosed();\n  });\n\n  async function handleRequestWriteAccess() {\n    if (!bot) return;\n    const canWrite = await callApi('fetchBotCanSendMessage', {\n      bot,\n    });\n\n    if (canWrite) {\n      sendEvent({\n        eventType: 'write_access_requested',\n        eventData: {\n          status: 'allowed',\n        },\n      });\n    }\n    setIsRequestingWriteAccess(!canWrite);\n  }\n\n  async function handleCheckDownloadFile(fileUrl: string, fileName: string) {\n    const canDownload = await callApi('checkBotDownloadFileParams', {\n      bot: bot!,\n      url: fileUrl,\n      fileName,\n    });\n\n    if (!canDownload) {\n      sendEvent({\n        eventType: 'file_download_requested',\n        eventData: {\n          status: 'cancelled',\n        },\n      });\n      return;\n    }\n\n    setRequestedFileDownload({ url: fileUrl, fileName });\n    handlePopupOpened();\n  }\n\n  const handleDownloadFile = useLastCallback(() => {\n    if (!requestedFileDownload) return;\n    setRequestedFileDownload(undefined);\n    handlePopupClosed();\n\n    download(requestedFileDownload.url, requestedFileDownload.fileName);\n    sendEvent({\n      eventType: 'file_download_requested',\n      eventData: {\n        status: 'downloading',\n      },\n    });\n  });\n\n  async function handleInvokeCustomMethod(requestId: string, method: string, parameters: string) {\n    const result = await callApi('invokeWebViewCustomMethod', {\n      bot: bot!,\n      customMethod: method,\n      parameters,\n    });\n\n    sendEvent({\n      eventType: 'custom_method_invoked',\n      eventData: {\n        req_id: requestId,\n        ...result,\n      },\n    });\n  }\n\n  useEffect(() => {\n    if (!isOpen) {\n      setPopupParameters(undefined);\n      setIsRequestingPhone(false);\n      setIsRequestingWriteAccess(false);\n      setMainButton(undefined);\n      setSecondaryButton(undefined);\n      updateCurrentWebApp({\n        isSettingsButtonVisible: false,\n        shouldConfirmClosing: false,\n        isBackButtonVisible: false,\n        isCloseModalOpen: false,\n        isRemoveModalOpen: false,\n      });\n      markUnloaded();\n    }\n  }, [isOpen]);\n\n  const handleOpenChat = useLastCallback(() => {\n    openChatWithInfo({ id: bot!.id });\n  });\n\n  function handleEvent(event: WebAppInboundEvent) {\n    const { eventType, eventData } = event;\n\n    if (eventType === 'web_app_request_fullscreen') {\n      if (getIsWebAppsFullscreenSupported()) {\n        changeWebAppModalState({ state: 'fullScreen' });\n      } else {\n        sendEvent({\n          eventType: 'fullscreen_failed',\n          eventData: {\n            error: 'UNSUPPORTED',\n          },\n        });\n      }\n    }\n\n    if (eventType === 'web_app_exit_fullscreen') {\n      exitIfFullscreenCallback();\n    }\n\n    if (eventType === 'web_app_open_tg_link') {\n      const linkUrl = TME_LINK_PREFIX + eventData.path_full;\n      openTelegramLink({ url: linkUrl, shouldIgnoreCache: eventData.force_request });\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_setup_back_button') {\n      updateCurrentWebApp({ isBackButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_setup_settings_button') {\n      updateCurrentWebApp({ isSettingsButtonVisible: eventData.is_visible });\n    }\n\n    if (eventType === 'web_app_set_background_color') {\n      setBackgroundColorFromEvent(validateHexColor(eventData.color) ? eventData.color : undefined);\n    }\n\n    if (eventType === 'web_app_set_header_color') {\n      const key = eventData.color_key;\n      setHeaderColorFromEvent(eventData.color || (key ? themeParams[key] : undefined));\n    }\n\n    if (eventType === 'web_app_set_bottom_bar_color') {\n      setBottomBarColor(eventData.color);\n    }\n\n    if (eventType === 'web_app_data_send') {\n      closeActiveWebApp();\n      sendWebViewData({\n        bot: bot!,\n        buttonText: buttonText!,\n        data: eventData.data,\n      });\n    }\n\n    if (eventType === 'web_app_setup_main_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setMainButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n      });\n    }\n\n    if (eventType === 'web_app_setup_secondary_button') {\n      const color = eventData.color;\n      const textColor = eventData.text_color;\n      setSecondaryButton({\n        isVisible: eventData.is_visible && Boolean(eventData.text?.trim().length),\n        isActive: eventData.is_active,\n        text: eventData.text,\n        color,\n        textColor,\n        isProgressVisible: eventData.is_progress_visible,\n        position: eventData.position,\n      });\n    }\n\n    if (eventType === 'web_app_setup_closing_behavior') {\n      updateCurrentWebApp({ shouldConfirmClosing: true });\n    }\n\n    if (eventType === 'web_app_open_popup') {\n      if (popupParameters || !eventData.message.trim().length || !eventData.buttons?.length\n        || eventData.buttons.length > 3 || isRequestingPhone || isRequestingWriteAccess\n        || unlockPopupsAt > Date.now()) {\n        handleAppPopupClose(undefined);\n        return;\n      }\n\n      setPopupParameters(eventData);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_switch_inline_query') {\n      const filter = eventData.chat_types?.map(convertToApiChatType).filter(Boolean);\n      const isSamePeer = !filter?.length;\n\n      switchBotInline({\n        botId: bot!.id,\n        query: eventData.query,\n        filter,\n        isSamePeer,\n      });\n\n      closeActiveWebApp();\n    }\n\n    if (eventType === 'web_app_request_phone') {\n      if (popupParameters || isRequestingWriteAccess || unlockPopupsAt > Date.now()) {\n        handleRejectPhone();\n        return;\n      }\n\n      setIsRequestingPhone(true);\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_request_write_access') {\n      if (popupParameters || isRequestingPhone || unlockPopupsAt > Date.now()) {\n        handleRejectWriteAccess();\n        return;\n      }\n\n      handleRequestWriteAccess();\n      handlePopupOpened();\n    }\n\n    if (eventType === 'web_app_invoke_custom_method') {\n      const { method, params, req_id: requestId } = eventData;\n      handleInvokeCustomMethod(requestId, method, JSON.stringify(params));\n    }\n\n    if (eventType === 'web_app_request_file_download') {\n      if (requestedFileDownload || unlockPopupsAt > Date.now()) {\n        handleRejectFileDownload();\n        return;\n      }\n      handleCheckDownloadFile(eventData.url, eventData.file_name);\n    }\n\n    if (eventType === 'web_app_send_prepared_message') {\n      if (!bot || !webAppKey) return;\n      const { id } = eventData;\n      openPreparedInlineMessageModal({ botId: bot.id, messageId: id, webAppKey });\n    }\n\n    if (eventType === 'web_app_request_emoji_status_access') {\n      if (!bot) return;\n      openEmojiStatusAccessModal({ bot, webAppKey });\n    }\n\n    if (eventType === 'web_app_check_location') {\n      const handleGeolocationCheck = () => {\n        sendEvent({\n          eventType: 'location_checked',\n          eventData: {\n            available: isAvailable,\n            access_requested: isAccessRequested,\n            access_granted: isAccessGranted,\n          },\n        });\n      };\n\n      handleGeolocationCheck();\n    }\n\n    if (eventType === 'web_app_request_location') {\n      const handleRequestLocation = async () => {\n        const geolocationData = await getGeolocationStatus();\n        const { accessRequested, accessGranted, geolocation } = geolocationData;\n\n        if (!accessGranted || !accessRequested) {\n          sendEvent({\n            eventType: 'location_requested',\n            eventData: {\n              available: false,\n            },\n          });\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n          return;\n        }\n\n        if (isAvailable) {\n          if (isAccessRequested) {\n            sendEvent({\n              eventType: 'location_requested',\n              eventData: {\n                available: botAppPermissions?.geolocation!,\n                latitude: geolocation?.latitude,\n                longitude: geolocation?.longitude,\n                altitude: geolocation?.altitude,\n                course: geolocation?.heading,\n                speed: geolocation?.speed,\n                horizontal_accuracy: geolocation?.accuracy,\n                vertical_accuracy: geolocation?.altitudeAccuracy,\n              },\n            });\n          } else {\n            openLocationAccessModal({ bot, webAppKey });\n          }\n        } else {\n          showNotification({ message: oldLang('PermissionNoLocationPosition') });\n          handleAppPopupClose(undefined);\n        }\n      };\n\n      handleRequestLocation();\n    }\n\n    if (eventType === 'web_app_open_location_settings') {\n      handleOpenChat();\n    }\n  }\n\n  const mainButtonCurrentColor = useCurrentOrPrev(mainButton?.color, true);\n  const mainButtonCurrentTextColor = useCurrentOrPrev(mainButton?.textColor, true);\n  const mainButtonCurrentIsActive = useCurrentOrPrev(mainButton && Boolean(mainButton.isActive), true);\n  const mainButtonCurrentText = useCurrentOrPrev(mainButton?.text, true);\n\n  const secondaryButtonCurrentPosition = useCurrentOrPrev(secondaryButton?.position, true);\n  const secondaryButtonCurrentColor = useCurrentOrPrev(secondaryButton?.color, true);\n  const secondaryButtonCurrentTextColor = useCurrentOrPrev(secondaryButton?.textColor, true);\n  const secondaryButtonCurrentIsActive = useCurrentOrPrev(secondaryButton && Boolean(secondaryButton.isActive), true);\n  const secondaryButtonCurrentText = useCurrentOrPrev(secondaryButton?.text, true);\n\n  const [shouldDecreaseWebFrameSize, setShouldDecreaseWebFrameSize] = useState(false);\n  const [shouldHideMainButton, setShouldHideMainButton] = useState(true);\n  const [shouldHideSecondaryButton, setShouldHideSecondaryButton] = useState(true);\n  const [shouldShowMainButton, setShouldShowMainButton] = useState(false);\n  const [shouldShowSecondaryButton, setShouldShowSecondaryButton] = useState(false);\n\n  const [shouldShowAppNameInFullscreen, setShouldShowAppNameInFullscreen] = useState(false);\n\n  const [backButtonTextWidth, setBackButtonTextWidth] = useState(0);\n\n  // Notify view that height changed\n  useSyncEffect(() => {\n    setTimeout(() => {\n      sendViewport();\n      sendSafeArea();\n    }, isTransforming ? 0 : ANIMATION_WAIT);\n  }, [shouldShowSecondaryButton, shouldHideSecondaryButton,\n    shouldShowMainButton, shouldShowMainButton,\n    secondaryButton?.position, sendViewport, isTransforming, modalHeight,\n    sendSafeArea]);\n\n  const isVerticalLayout = secondaryButtonCurrentPosition === 'top' || secondaryButtonCurrentPosition === 'bottom';\n  const isHorizontalLayout = !isVerticalLayout;\n\n  const rowsCount = (isVerticalLayout && shouldShowMainButton && shouldShowSecondaryButton) ? 2\n    : shouldShowMainButton || shouldShowSecondaryButton ? 1 : 0;\n\n  const hideDirection = (isHorizontalLayout\n    && (!shouldHideMainButton && !shouldHideSecondaryButton)) ? 'horizontal' : 'vertical';\n\n  const mainButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const mainButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonChangeTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const secondaryButtonFastTimeout = useRef<ReturnType<typeof setTimeout>>();\n  const appNameDisplayTimeout = useRef<ReturnType<typeof setTimeout>>();\n\n  useEffect(() => {\n    if (isFullscreen && isOpen && Boolean(activeWebAppName)) {\n      setShouldShowAppNameInFullscreen(true);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n\n      appNameDisplayTimeout.current = setTimeout(() => {\n        setShouldShowAppNameInFullscreen(false);\n        appNameDisplayTimeout.current = undefined;\n      }, APP_NAME_DISPLAY_DURATION);\n    } else {\n      setShouldShowAppNameInFullscreen(false);\n\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n        appNameDisplayTimeout.current = undefined;\n      }\n    }\n\n    return () => {\n      if (appNameDisplayTimeout.current) {\n        clearTimeout(appNameDisplayTimeout.current);\n      }\n    };\n  }, [isFullscreen, isOpen, activeWebAppName]);\n\n  useEffect(() => {\n    if (mainButtonChangeTimeout.current) clearTimeout(mainButtonChangeTimeout.current);\n    if (mainButtonFastTimeout.current) clearTimeout(mainButtonFastTimeout.current);\n\n    if (isMainButtonVisible) {\n      mainButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowMainButton(true);\n      }, 35);\n      setShouldHideMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isMainButtonVisible) {\n      setShouldShowMainButton(false);\n      mainButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideMainButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isMainButtonVisible]);\n\n  useEffect(() => {\n    if (secondaryButtonChangeTimeout.current) clearTimeout(secondaryButtonChangeTimeout.current);\n    if (secondaryButtonFastTimeout.current) clearTimeout(secondaryButtonFastTimeout.current);\n\n    if (isSecondaryButtonVisible) {\n      secondaryButtonFastTimeout.current = setTimeout(() => {\n        setShouldShowSecondaryButton(true);\n      }, 35);\n      setShouldHideSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldDecreaseWebFrameSize(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n\n    if (!isSecondaryButtonVisible) {\n      setShouldShowSecondaryButton(false);\n      secondaryButtonChangeTimeout.current = setTimeout(() => {\n        setShouldHideSecondaryButton(true);\n      }, MAIN_BUTTON_ANIMATION_TIME);\n    }\n  }, [isSecondaryButtonVisible]);\n\n  useEffect(() => {\n    if (!shouldShowSecondaryButton && !shouldShowMainButton) {\n      setShouldDecreaseWebFrameSize(false);\n    }\n  }, [setShouldDecreaseWebFrameSize, shouldShowSecondaryButton, shouldShowMainButton]);\n\n  const frameStyle = isTransforming ? 'pointer-events: none;' : '';\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      exitIfFullscreenCallback();\n      sendFullScreenChanged(false);\n      changeWebAppModalState({ state: 'maximized' });\n      closeWebAppModal();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    exitIfFullscreenCallback();\n  });\n\n  const handleShowContextMenu = useLastCallback((e: React.MouseEvent) => {\n    onContextMenuButtonClick(e);\n  });\n\n  const backIconClass = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n  const backButtonCaption = shouldShowAppNameInFullscreen ? activeWebAppName\n    : oldLang(isBackButtonVisible ? 'Back' : 'Close');\n\n  const hasHeaderElement = headerButtonCaptionRef?.current;\n\n  useEffect(() => {\n    const width = headerButtonCaptionRef?.current?.clientWidth || 0;\n    setBackButtonTextWidth(width);\n  }, [backButtonCaption, hasHeaderElement]);\n\n  function getBackButtonActiveKey() {\n    if (shouldShowAppNameInFullscreen) return 0;\n    return isBackButtonVisible ? 1 : 2;\n  }\n\n  function renderFullscreenBackButtonCaption() {\n    return (\n      <span\n        className={styles.buttonCaptionContainer}\n        style={\n          `width: ${backButtonTextWidth}px;`\n        }\n      >\n        <Transition\n          activeKey={getBackButtonActiveKey()}\n          name=\"slideFade\"\n        >\n          <div\n            ref={headerButtonCaptionRef}\n            className={styles.backButtonCaption}\n          >\n            {backButtonCaption}\n          </div>\n        </Transition>\n      </span>\n    );\n  }\n\n  function renderFullscreenHeaderPanel() {\n    return (\n      <div className={styles.headerPanel}>\n        <div ref={headerButtonRef} className={styles.headerButton} onClick={handleBackClick}>\n          <div className={styles.backIconContainer}>\n            <div className={backIconClass} />\n          </div>\n          {renderFullscreenBackButtonCaption()}\n        </div>\n        <div className={styles.headerSplitButton}>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.left,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-label={lang('WebAppCollapse')}\n            onClick={handleCollapseClick}\n          >\n            <Icon\n              name=\"down\"\n              className={styles.icon}\n            />\n          </div>\n          <div\n            className={buildClassName(\n              styles.headerButton,\n              styles.right,\n            )}\n            tabIndex={0}\n            role=\"button\"\n            aria-haspopup=\"menu\"\n            aria-label={lang('AriaMoreButton')}\n            onClick={handleShowContextMenu}\n          >\n            <Icon\n              name=\"more\"\n              className={buildClassName(\n                styles.icon,\n                styles.moreIcon,\n              )}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function renderDefaultPlaceholder() {\n    const className = buildClassName(styles.loadingPlaceholder, styles.defaultPlaceholderGrid, isLoaded && styles.hide);\n    return (\n      <div className={className}>\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n        <div className={styles.placeholderSquare} />\n      </div>\n    );\n  }\n\n  function renderPlaceholder() {\n    if (!placeholderPath) {\n      return renderDefaultPlaceholder();\n    }\n    return (\n      <svg\n        className={buildClassName(styles.loadingPlaceholder, isLoaded && styles.hide)}\n        viewBox=\"0 0 512 512\"\n      >\n        <path className={styles.placeholderPath} d={placeholderPath} />\n      </svg>\n    );\n  }\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(\n        styles.root,\n        !isActive && styles.hidden,\n        isMultiTabSupported && styles.multiTab,\n      )}\n    >\n      {isFullscreen && getIsWebAppsFullscreenSupported() && renderFullscreenHeaderPanel()}\n      {!isMinimizedState && renderPlaceholder()}\n      <iframe\n        className={buildClassName(\n          styles.frame,\n          shouldDecreaseWebFrameSize && styles.withButton,\n          !isLoaded && styles.hide,\n        )}\n        style={frameStyle}\n        src={url}\n        title={`${bot?.firstName} Web App`}\n        sandbox={SANDBOX_ATTRIBUTES}\n        allow=\"camera; microphone; geolocation;\"\n        allowFullScreen\n        ref={frameRef}\n      />\n      {!isMinimizedState && (\n        <div\n          style={`background-color: ${bottomBarColor};`}\n          className={buildClassName(\n            styles.buttonsContainer,\n            secondaryButtonCurrentPosition === 'left' && styles.leftToRight,\n            secondaryButtonCurrentPosition === 'right' && styles.rightToLeft,\n            secondaryButtonCurrentPosition === 'top' && styles.topToBottom,\n            secondaryButtonCurrentPosition === 'bottom' && styles.bottomToTop,\n            hideDirection === 'horizontal' && styles.hideHorizontal,\n            rowsCount === 1 && styles.oneRow,\n            rowsCount === 2 && styles.twoRows,\n          )}\n        >\n          <Button\n            className={buildClassName(\n              styles.secondaryButton,\n              shouldShowSecondaryButton && !shouldHideSecondaryButton && styles.visible,\n              shouldHideSecondaryButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${secondaryButtonCurrentColor}; color: ${secondaryButtonCurrentTextColor}`}\n            disabled={!secondaryButtonCurrentIsActive && !secondaryButton?.isProgressVisible}\n            nonInteractive={secondaryButton?.isProgressVisible}\n            onClick={handleSecondaryButtonClick}\n            size=\"smaller\"\n          >\n            {!secondaryButton?.isProgressVisible && secondaryButtonCurrentText}\n            {secondaryButton?.isProgressVisible\n              && <Spinner className={styles.mainButtonSpinner} color=\"blue\" />}\n          </Button>\n          <Button\n            className={buildClassName(\n              styles.mainButton,\n              shouldShowMainButton && !shouldHideMainButton && styles.visible,\n              shouldHideMainButton && styles.hidden,\n            )}\n            fluid\n            style={`background-color: ${mainButtonCurrentColor}; color: ${mainButtonCurrentTextColor}`}\n            disabled={!mainButtonCurrentIsActive && !mainButton?.isProgressVisible}\n            nonInteractive={mainButton?.isProgressVisible}\n            onClick={handleMainButtonClick}\n            size=\"smaller\"\n          >\n            {!mainButton?.isProgressVisible && mainButtonCurrentText}\n            {mainButton?.isProgressVisible && <Spinner className={styles.mainButtonSpinner} color=\"white\" />}\n          </Button>\n        </div>\n      ) }\n      {popupParameters && (\n        <Modal\n          isOpen={Boolean(popupParameters)}\n          title={popupParameters.title || NBSP}\n          onClose={handleAppPopupModalClose}\n          hasCloseButton\n          className={\n            buildClassName(styles.webAppPopup, !popupParameters.title?.trim().length && styles.withoutTitle)\n          }\n        >\n          {popupParameters.message}\n          <div className=\"dialog-buttons mt-2\">\n            {popupParameters.buttons.map((button) => (\n              <Button\n                key={button.id || button.type}\n                className=\"confirm-dialog-button\"\n                color={button.type === 'destructive' ? 'danger' : 'primary'}\n                isText\n                size=\"smaller\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleAppPopupClose(button.id)}\n              >\n                {button.text || oldLang(DEFAULT_BUTTON_TEXT[button.type])}\n              </Button>\n            ))}\n          </div>\n        </Modal>\n      )}\n\n      <ConfirmDialog\n        isOpen={isRequestingPhone}\n        onClose={handleRejectPhone}\n        title={oldLang('ShareYouPhoneNumberTitle')}\n        text={oldLang('AreYouSureShareMyContactInfoBot')}\n        confirmHandler={handleAcceptPhone}\n        confirmLabel={oldLang('ContactShare')}\n      />\n      <ConfirmDialog\n        isOpen={isRequestingWriteAccess}\n        onClose={handleRejectWriteAccess}\n        title={oldLang('lng_bot_allow_write_title')}\n        text={oldLang('lng_bot_allow_write')}\n        confirmHandler={handleAcceptWriteAccess}\n        confirmLabel={oldLang('lng_bot_allow_write_confirm')}\n      />\n      <ConfirmDialog\n        isOpen={Boolean(requestedFileDownload)}\n        title={oldLang('BotDownloadFileTitle')}\n        textParts={lang('BotDownloadFileDescription', {\n          bot: bot?.firstName,\n          filename: requestedFileDownload?.fileName,\n        }, {\n          withNodes: true,\n          withMarkdown: true,\n        })}\n        confirmLabel={oldLang('BotDownloadFileButton')}\n        onClose={handleRejectFileDownload}\n        confirmHandler={handleDownloadFile}\n      />\n\n      <ConfirmDialog\n        isOpen={isCloseModalOpen}\n        onClose={handleHideCloseModal}\n        title={oldLang('lng_bot_close_warning_title')}\n        text={oldLang('lng_bot_close_warning')}\n        confirmHandler={handleConfirmCloseModal}\n        confirmIsDestructive\n        confirmLabel={oldLang('lng_bot_close_warning_sure')}\n      />\n      <ConfirmDialog\n        isOpen={isRemoveModalOpen}\n        onClose={handleHideRemoveModal}\n        title={oldLang('BotRemoveFromMenuTitle')}\n        textParts={renderText(oldLang('BotRemoveFromMenu', bot?.firstName), ['simple_markdown'])}\n        confirmHandler={handleRemoveAttachBot}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n    const modalState = modal?.modalState;\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const userFullInfo = activeBotId ? selectUserFullInfo(global, activeBotId) : undefined;\n    const botAppSettings = userFullInfo?.botInfo?.appSettings;\n    const currentUser = global.currentUserId ? selectUser(global, global.currentUserId) : undefined;\n    const theme = selectTheme(global);\n    const { isPaymentModalOpen, status: regularPaymentStatus } = selectTabState(global).payment;\n    const { status: starsPaymentStatus, inputInvoice: starsInputInvoice } = selectTabState(global).starsPayment;\n    const botAppPermissions = bot ? selectBotAppPermissions(global, bot.id) : undefined;\n\n    const paymentStatus = starsPaymentStatus || regularPaymentStatus;\n\n    return {\n      attachBot,\n      bot,\n      currentUser,\n      theme,\n      isPaymentModalOpen: isPaymentModalOpen || Boolean(starsInputInvoice),\n      paymentStatus,\n      modalState,\n      botAppPermissions,\n      botAppSettings,\n    };\n  },\n)(WebAppModalTabContent));\n","import { useRef, useState } from '../../../../lib/teact/teact';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport default function usePopupLimit(sequentialLimit: number, resetAfter: number) {\n  const [unlockPopupsAt, setUnlockPopupsAt] = useState(0);\n  const sequentialCalls = useRef(0);\n  const lastClosedDate = useRef(0);\n\n  const handlePopupOpened = useLastCallback(() => {\n    const now = Date.now();\n\n    if (now - lastClosedDate.current > resetAfter) {\n      sequentialCalls.current = 0;\n    }\n\n    sequentialCalls.current += 1;\n\n    if (sequentialCalls.current >= sequentialLimit) {\n      setUnlockPopupsAt(now + resetAfter);\n    }\n  });\n\n  const handlePopupClosed = useLastCallback(() => {\n    if (unlockPopupsAt < Date.now()) { // Prevent confused user from extending lock time\n      lastClosedDate.current = Date.now();\n    }\n  });\n\n  return {\n    unlockPopupsAt,\n    handlePopupOpened,\n    handlePopupClosed,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"XWfkIDLY\",\"multi-tab\":\"gBVR7Hec\",\"multiTab\":\"gBVR7Hec\",\"close-icon\":\"RuJ3d9N6\",\"closeIcon\":\"RuJ3d9N6\",\"minimized\":\"dJ1Ld_PX\",\"fullScreen\":\"ciSTWz16\",\"tabs\":\"X18WbDa5\",\"tool-bar\":\"qK4q0Sat\",\"toolBar\":\"qK4q0Sat\",\"tab-button-wrapper\":\"oHX2d8Or\",\"tabButtonWrapper\":\"oHX2d8Or\",\"tab-button\":\"O4NxErFX\",\"tabButton\":\"O4NxErFX\",\"tab-right-mask\":\"dgdyQDsZ\",\"tabRightMask\":\"dgdyQDsZ\",\"tab-close-button\":\"xGefqS93\",\"tabCloseButton\":\"xGefqS93\",\"tab-button-curve-path\":\"bOuMHiVw\",\"tabButtonCurvePath\":\"bOuMHiVw\",\"tab-button-left-curve\":\"f7EicoVH\",\"tabButtonLeftCurve\":\"f7EicoVH\",\"tab-button-right-curve\":\"s6pBIYMI\",\"tabButtonRightCurve\":\"s6pBIYMI\",\"more-apps-tab-icon\":\"Obu3ui67\",\"moreAppsTabIcon\":\"Obu3ui67\",\"avatar-container\":\"z39ojrWc\",\"avatarContainer\":\"z39ojrWc\",\"web-app-tab-more-menu\":\"txS0KiU0\",\"webAppTabMoreMenu\":\"txS0KiU0\",\"more-button\":\"kKPD09tc\",\"moreButton\":\"kKPD09tc\",\"tab-more-button\":\"gkji2_RB\",\"tabMoreButton\":\"gkji2_RB\",\"more-apps-button\":\"cEuW1_hJ\",\"moreAppsButton\":\"cEuW1_hJ\",\"window-state-button\":\"XpHR_yo0\",\"windowStateButton\":\"XpHR_yo0\",\"header-button\":\"GE5AkJOU\",\"headerButton\":\"GE5AkJOU\",\"fullscreenButton\":\"otlJULGy\",\"tab-close-icon\":\"DoeOewUR\",\"tabCloseIcon\":\"DoeOewUR\",\"state-icon\":\"YRMGpqUS\",\"stateIcon\":\"YRMGpqUS\",\"icon\":\"b13oE9uA\",\"tab-avatar\":\"tI6TE6HP\",\"tabAvatar\":\"tI6TE6HP\",\"state-back\":\"IWA50OWU\",\"stateBack\":\"IWA50OWU\",\"loading-spinner\":\"ZvO65ZK4\",\"loadingSpinner\":\"ZvO65ZK4\",\"hide\":\"_90e04Jo\",\"frame\":\"zA1w1IOq\",\"with-button\":\"XsPaFD9G\",\"withButton\":\"XsPaFD9G\",\"main-button\":\"Os96PEjQ\",\"mainButton\":\"Os96PEjQ\",\"visible\":\"C8aMayAw\",\"hidden\":\"GllU9an9\",\"main-button-spinner\":\"nYSFrf_X\",\"mainButtonSpinner\":\"nYSFrf_X\",\"web-app-popup\":\"cTVKrIjM\",\"webAppPopup\":\"cTVKrIjM\",\"without-title\":\"d0DG1SkF\",\"withoutTitle\":\"d0DG1SkF\"};","import { type MouseEvent as ReactMouseEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef,\n  useSignal, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiAttachBot, ApiChat, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { Point, Size, ThemeKey } from '../../../types';\nimport type { WebApp, WebAppOutboundEvent } from '../../../types/webapp';\n\nimport { RESIZE_HANDLE_CLASS_NAME } from '../../../config';\nimport { getWebAppKey } from '../../../global/helpers/bots';\nimport {\n  selectCurrentChat, selectTheme, selectUser,\n  selectWebApp,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport { getColorLuma } from '../../../util/colors';\nimport { hexToRgb } from '../../../util/switchTheme';\nimport windowSize from '../../../util/windowSize';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDraggable from '../../../hooks/useDraggable';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport MinimizedWebAppModal from './MinimizedWebAppModal';\nimport MoreAppsTabContent from './MoreAppsTabContent';\nimport WebAppModalTabContent from './WebAppModalTabContent';\n\nimport styles from './WebAppModal.module.scss';\n\ntype WebAppModalTab = {\n  bot?: ApiUser;\n  webApp: WebApp;\n  isOpen: boolean;\n};\n\nexport type OwnProps = {\n  modal?: TabState['webApps'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  bot?: ApiUser;\n  attachBot?: ApiAttachBot;\n  theme?: ThemeKey;\n  cachedSize?: Size;\n  cachedPosition?: Point;\n};\n\nconst PROLONG_INTERVAL = 45000; // 45s\nconst LUMA_THRESHOLD = 128;\n\nconst MINIMIZED_STATE_SIZE = { width: 300, height: 40 };\nconst DEFAULT_MAXIMIZED_STATE_SIZE = { width: 420, height: 730 };\nconst MAXIMIZED_STATE_MINIMUM_SIZE = { width: 300, height: 300 };\n\nconst WebAppModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n  bot,\n  attachBot,\n  theme,\n  cachedSize,\n  cachedPosition,\n}) => {\n  const {\n    closeActiveWebApp,\n    closeWebAppModal,\n    prolongWebView,\n    toggleAttachBot,\n    openChat,\n    changeWebAppModalState,\n    openWebAppTab,\n    updateWebApp,\n    openMoreAppsTab,\n    closeMoreAppsTab,\n    updateMiniAppCachedPosition,\n    updateMiniAppCachedSize,\n  } = getActions();\n\n  const [getMaximizedStateSize, setMaximizedStateSize] = useSignal(cachedSize || DEFAULT_MAXIMIZED_STATE_SIZE);\n\n  function getSize() {\n    if (modal?.modalState === 'fullScreen') return windowSize.get();\n    if (modal?.modalState === 'maximized') return getMaximizedStateSize();\n    return MINIMIZED_STATE_SIZE;\n  }\n  function getMinimumSize() {\n    if (modal?.modalState === 'maximized') return MAXIMIZED_STATE_MINIMUM_SIZE;\n    return undefined;\n  }\n\n  const {\n    openedWebApps, activeWebAppKey, openedOrderedKeys, sessionKeys, isMoreAppsTabActive,\n  } = modal || {};\n  const activeWebApp = activeWebAppKey ? openedWebApps?.[activeWebAppKey] : undefined;\n  const {\n    isBackButtonVisible, headerColor, backgroundColor, isSettingsButtonVisible,\n  } = activeWebApp || {};\n\n  const tabs = useMemo(() => {\n    return openedOrderedKeys?.map((key) => {\n      const webApp = openedWebApps![key];\n      return {\n        bot: getGlobal().users.byId[webApp.botId],\n        webApp,\n        isOpen: Boolean(activeWebApp && (key === getWebAppKey(activeWebApp))),\n      };\n    });\n  }, [openedOrderedKeys, openedWebApps, activeWebApp]);\n\n  const { isMobile } = useAppLayout();\n  const isOpen = modal?.isModalOpen || false;\n  const isMaximizedState = modal?.modalState === 'maximized';\n  const isMinimizedState = modal?.modalState === 'minimized';\n  const isFullScreen = modal?.modalState === 'fullScreen';\n\n  const supportMultiTabMode = !isMobile;\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  const getTriggerElement = useLastCallback(() => ref.current!);\n\n  const getRootElement = useLastCallback(\n    () => ref.current!,\n  );\n\n  const getMenuElement = useLastCallback(\n    () => menuRef.current!,\n  );\n\n  const {\n    isContextMenuOpen,\n    contextMenuAnchor,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const [isDraggingEnabled, setIsDraggingEnabled] = useState(false);\n\n  const headerElement = headerRef.current;\n  const containerElement = ref.current;\n\n  useEffect(() => {\n    setIsDraggingEnabled(Boolean(supportMultiTabMode && headerElement && containerElement && !isFullScreen));\n  }, [supportMultiTabMode, headerElement, containerElement, isFullScreen]);\n\n  useEffect(() => {\n    changeWebAppModalState({ state: 'maximized' });\n  }, [supportMultiTabMode]);\n\n  const {\n    isDragging,\n    isResizing,\n    style: draggableStyle,\n    size,\n    position,\n  } = useDraggable(\n    ref,\n    headerRef,\n    isDraggingEnabled,\n    getSize(),\n    isFullScreen,\n    getMinimumSize(),\n    cachedPosition,\n  );\n\n  const x = position?.x;\n  const y = position?.y;\n  useEffect(() => {\n    if (!isDragging && x !== undefined && y !== undefined) {\n      updateMiniAppCachedPosition({ position: { x, y } });\n    }\n  }, [isDragging, x, y]);\n\n  useEffect(() => {\n    if (!isDragging && size && isMaximizedState) { updateMiniAppCachedSize({ size }); }\n  }, [isDragging, isMaximizedState, size]);\n\n  const currentSize = size || getSize();\n\n  const currentWidth = currentSize.width;\n  const currentHeight = currentSize.height;\n\n  useEffect(() => {\n    if (isResizing) {\n      setMaximizedStateSize({ width: currentWidth, height: currentHeight });\n    }\n  }, [currentHeight, currentWidth, isResizing, setMaximizedStateSize]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const {\n    queryId,\n  } = activeWebApp || {};\n\n  const openTabsCount = openedWebApps ? Object.values(openedWebApps).length : 0;\n\n  useInterval(() => {\n    if (!openedWebApps) return;\n    Object.keys(openedWebApps).forEach((key) => {\n      const webApp = openedWebApps[key];\n      if (webApp.queryId) {\n        prolongWebView({\n          botId: webApp.botId,\n          queryId: webApp.queryId,\n          peerId: webApp.peerId || chat!.id,\n          replyInfo: webApp.replyInfo,\n        });\n      }\n    });\n  }, queryId ? PROLONG_INTERVAL : undefined, true);\n\n  // eslint-disable-next-line no-null/no-null\n  const sendEventCallback = useRef<((event: WebAppOutboundEvent) => void) | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const reloadFrameCallback = useRef<((url: string) => void) | null>(null);\n\n  const registerSendEventCallback = useLastCallback((callback: (event: WebAppOutboundEvent) => void) => {\n    sendEventCallback.current = callback;\n  });\n\n  const sendEvent = useLastCallback((event: WebAppOutboundEvent) => {\n    if (sendEventCallback.current) {\n      sendEventCallback.current(event);\n    }\n  });\n\n  const registerReloadFrameCallback = useLastCallback((callback: (url: string) => void) => {\n    reloadFrameCallback.current = callback;\n  });\n\n  const reloadFrame = useLastCallback((url: string) => {\n    if (reloadFrameCallback.current) {\n      reloadFrameCallback.current(url);\n    }\n  });\n\n  const handleSettingsButtonClick = useLastCallback(() => {\n    sendEvent({\n      eventType: 'settings_button_pressed',\n    });\n  });\n\n  const handleRefreshClick = useLastCallback(() => {\n    reloadFrame(activeWebApp!.url);\n  });\n\n  const handleModalClose = useLastCallback(() => {\n    closeWebAppModal();\n  });\n\n  const handleCloseMoreAppsTab = useLastCallback(() => {\n    closeMoreAppsTab();\n  });\n\n  const handleTabClose = useLastCallback(() => {\n    if (openTabsCount > 1) {\n      closeActiveWebApp();\n    } else {\n      closeWebAppModal();\n    }\n  });\n\n  const handleToggleClick = useLastCallback(() => {\n    if (attachBot) {\n      const key = getWebAppKey(activeWebApp!);\n      updateWebApp({\n        key,\n        update: {\n          isRemoveModalOpen: true,\n        },\n      });\n      return;\n    }\n\n    toggleAttachBot({\n      botId: bot!.id,\n      isEnabled: true,\n    });\n  });\n\n  const handleBackClick = useLastCallback(() => {\n    if (isBackButtonVisible) {\n      sendEvent({\n        eventType: 'back_button_pressed',\n      });\n    } else {\n      handleModalClose();\n    }\n  });\n\n  const handleCollapseClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'minimized' });\n  });\n\n  const handleFullscreenClick = useLastCallback(() => {\n    changeWebAppModalState({ state: 'fullScreen' });\n  });\n\n  const handleOpenMoreAppsTabClick = useLastCallback(() => {\n    openMoreAppsTab();\n  });\n\n  const handleTabClick = useLastCallback((tab: WebAppModalTab) => {\n    openWebAppTab({ webApp: tab.webApp });\n  });\n\n  const openBotChat = useLastCallback(() => {\n    openChat({\n      id: bot!.id,\n    });\n  });\n\n  const MoreMenuButton:\n  FC<{ onTrigger: (e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        className={\n          buildClassName(\n            supportMultiTabMode ? styles.tabMoreButton : styles.moreButton,\n            isMenuOpen && 'active',\n          )\n        }\n        round\n        ripple={!isMobile}\n        size={supportMultiTabMode ? 'tiny' : 'smaller'}\n        color=\"translucent\"\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile, supportMultiTabMode]);\n\n  function renderMenuItems() {\n    return (\n      <>\n        {chat && bot && chat.id !== bot.id && (\n          <MenuItem icon=\"bots\" onClick={openBotChat}>{oldLang('BotWebViewOpenBot')}</MenuItem>\n        )}\n        <MenuItem icon=\"reload\" onClick={handleRefreshClick}>{oldLang('WebApp.ReloadPage')}</MenuItem>\n        {isSettingsButtonVisible && (\n          <MenuItem icon=\"settings\" onClick={handleSettingsButtonClick}>\n            {oldLang('Settings')}\n          </MenuItem>\n        )}\n        {bot?.isAttachBot && (\n          <MenuItem\n            icon={attachBot ? 'stop' : 'install'}\n            onClick={handleToggleClick}\n            destructive={Boolean(attachBot)}\n          >\n            {oldLang(attachBot ? 'WebApp.RemoveBot' : 'WebApp.AddToAttachmentAdd')}\n          </MenuItem>\n        )}\n      </>\n    );\n  }\n\n  function renderMoreMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        ref={menuRef}\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        getTriggerElement={getTriggerElement}\n        getMenuElement={getMenuElement}\n        getRootElement={getRootElement}\n        autoClose\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n      >\n        {renderMenuItems()}\n      </Menu>\n    );\n  }\n\n  function renderDropdownMoreMenu() {\n    return (\n      <DropdownMenu\n        className={buildClassName(\n          supportMultiTabMode ? styles.webAppTabMoreMenu : 'web-app-more-menu',\n          'with-menu-transitions',\n        )}\n        trigger={MoreMenuButton}\n        positionX={supportMultiTabMode ? 'left' : 'right'}\n      >\n        {renderMenuItems()}\n      </DropdownMenu>\n    );\n  }\n\n  const backButtonClassName = buildClassName(\n    styles.closeIcon,\n    isBackButtonVisible && styles.stateBack,\n  );\n\n  const headerTextVar = useMemo(() => {\n    if (isMoreAppsTabActive) return 'color-text';\n    if (!headerColor) return undefined;\n    const { r, g, b } = hexToRgb(headerColor);\n    const luma = getColorLuma([r, g, b]);\n    const adaptedLuma = theme === 'dark' ? 255 - luma : luma;\n    return adaptedLuma > LUMA_THRESHOLD ? 'color-text' : 'color-background';\n  }, [headerColor, theme, isMoreAppsTabActive]);\n\n  function renderTabCurveBorder(className: string) {\n    return (\n      <svg\n        className={className}\n        width=\"16\"\n        height=\"16\"\n        viewBox=\"0 0 16 16\"\n        fill=\"none\"\n      >\n        <path\n          className={styles.tabButtonCurvePath}\n          fill-rule=\"evenodd\"\n          clip-rule=\"evenodd\"\n          d=\"M16 16V0C16 12 12 16 0 16H16Z\"\n        />\n      </svg>\n    );\n  }\n\n  function renderActiveTab() {\n    const style = buildStyle(\n      headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n      headerColor && `--active-tab-background: ${headerColor}`,\n    );\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n        style={style}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.avatarContainer}>\n            <Avatar\n              size=\"mini\"\n              peer={bot}\n            />\n            <MoreMenuButton onTrigger={handleContextMenu} isOpen={isContextMenuOpen} />\n          </div>\n          {attachBot?.shortName ?? bot?.firstName}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleTabClose}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsTab() {\n    return (\n      <div\n        className={styles.tabButtonWrapper}\n      >\n        {renderTabCurveBorder(styles.tabButtonLeftCurve)}\n        <div\n          className={styles.tabButton}\n        >\n          <div className={styles.moreAppsTabIcon}>\n            <Icon className={styles.icon} name=\"add\" />\n          </div>\n          {lang('OpenApp')}\n          <div className={styles.tabRightMask} />\n          <Button\n            className={styles.tabCloseButton}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            ariaLabel={oldLang('Close')}\n            onClick={handleCloseMoreAppsTab}\n          >\n            <Icon className={styles.tabCloseIcon} name=\"close\" />\n          </Button>\n        </div>\n        {renderTabCurveBorder(styles.tabButtonRightCurve)}\n      </div>\n    );\n  }\n\n  function renderMoreAppsButton() {\n    return (\n      <Button\n        className={buildClassName(\n          styles.moreAppsButton,\n          'no-drag',\n        )}\n        round\n        color=\"translucent\"\n        size=\"tiny\"\n        onClick={handleOpenMoreAppsTabClick}\n      >\n        <Icon className={styles.icon} name=\"add\" />\n      </Button>\n    );\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  useHorizontalScroll(containerRef, !isOpen || isMinimizedState || !(containerRef.current));\n\n  function renderTabs() {\n    return (\n      <div\n        className={styles.tabs}\n        ref={containerRef}\n      >\n        {tabs?.map((tab) => (\n          tab.isOpen ? (\n            renderActiveTab()\n          ) : (\n            <Avatar\n              className={styles.tabAvatar}\n              size=\"mini\"\n              peer={tab.bot}\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleTabClick(tab)}\n            />\n          )\n        ))}\n        {isMoreAppsTabActive && renderMoreAppsTab()}\n      </div>\n    );\n  }\n\n  function renderHeader() {\n    return (\n      <div\n        ref={headerRef}\n      >\n        {!supportMultiTabMode\n          ? renderSinglePageModeHeader()\n          : (isMaximizedState ? renderMultiTabHeader() : <MinimizedWebAppModal />)}\n      </div>\n    );\n  }\n\n  function renderMultiTabHeader() {\n    return (\n      <div\n        className={buildClassName(\n          'modal-header',\n          'multiTab',\n        )}\n        style={buildStyle(\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          className={styles.headerButton}\n          round\n          color=\"translucent\"\n          size=\"tiny\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        {renderTabs()}\n        {renderMoreMenu()}\n\n        <div className={styles.toolBar}>\n          {!isMoreAppsTabActive && renderMoreAppsButton()}\n\n          {!isMoreAppsTabActive && (\n            <Button\n              className={buildClassName(\n                styles.windowStateButton,\n                styles.fullscreenButton,\n                'no-drag',\n              )}\n              round\n              color=\"translucent\"\n              size=\"tiny\"\n              onClick={handleFullscreenClick}\n            >\n              <Icon className={styles.stateIcon} name=\"expand-modal\" />\n            </Button>\n          )}\n\n          <Button\n            className={buildClassName(\n              styles.windowStateButton,\n              'no-drag',\n            )}\n            round\n            color=\"translucent\"\n            size=\"tiny\"\n            onClick={handleCollapseClick}\n          >\n            <Icon className={styles.stateIcon} name=\"collapse-modal\" />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  function renderSinglePageModeHeader() {\n    return (\n      <div\n        className=\"modal-header\"\n        style={buildStyle(\n          headerColor && `background-color: ${headerColor}`,\n          headerTextVar && `--color-header-text: var(--${headerTextVar})`,\n        )}\n      >\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={oldLang(isBackButtonVisible ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <div className={backButtonClassName} />\n        </Button>\n        <div className=\"modal-title\">{attachBot?.shortName ?? bot?.firstName}</div>\n        {!isMoreAppsTabActive && renderDropdownMoreMenu()}\n      </div>\n    );\n  }\n\n  function buildResizeHandleClass(handleClassName: string) {\n    return buildClassName(RESIZE_HANDLE_CLASS_NAME, handleClassName);\n  }\n\n  function renderResizeHandles() {\n    return (\n      <>\n        <div className={buildResizeHandleClass('top')} />\n        <div className={buildResizeHandleClass('bottom')} />\n        <div className={buildResizeHandleClass('left')} />\n        <div className={buildResizeHandleClass('right')} />\n        <div className={buildResizeHandleClass('topLeft')} />\n        <div className={buildResizeHandleClass('topRight')} />\n        <div className={buildResizeHandleClass('bottomLeft')} />\n        <div className={buildResizeHandleClass('bottomRight')} />\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      dialogRef={ref}\n      className={buildClassName(\n        styles.root,\n        supportMultiTabMode && styles.multiTab,\n        isMinimizedState && styles.minimized,\n        isFullScreen && styles.fullScreen,\n      )}\n      dialogStyle={supportMultiTabMode ? draggableStyle : undefined}\n      dialogContent={isDraggingEnabled ? renderResizeHandles() : undefined}\n      isOpen={isOpen}\n      isLowStackPriority\n      onClose={handleModalClose}\n      header={renderHeader()}\n      style={`background-color: ${backgroundColor || 'var(--color-background)'}`}\n      noBackdrop\n      noBackdropClose\n    >\n      {isFullScreen && renderMoreMenu()}\n      {openedWebApps && sessionKeys?.map((key) => (\n        <WebAppModalTabContent\n          key={key}\n          modal={modal}\n          registerSendEventCallback={registerSendEventCallback}\n          registerReloadFrameCallback={registerReloadFrameCallback}\n          webApp={openedWebApps[key]}\n          isTransforming={isDragging || isResizing}\n          onContextMenuButtonClick={handleContextMenu}\n          isMultiTabSupported={supportMultiTabMode}\n          modalHeight={currentHeight}\n        />\n      ))}\n      { isMoreAppsTabActive && (<MoreAppsTabContent />)}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const activeWebApp = modal?.activeWebAppKey ? selectWebApp(global, modal.activeWebAppKey) : undefined;\n    const { botId: activeBotId } = activeWebApp || {};\n\n    const attachBot = activeBotId ? global.attachMenu.bots[activeBotId] : undefined;\n    const bot = activeBotId ? selectUser(global, activeBotId) : undefined;\n    const chat = selectCurrentChat(global);\n    const theme = selectTheme(global);\n    const cachedPosition = global.settings.miniAppsCachedPosition;\n    const cachedSize = global.settings.miniAppsCachedSize;\n\n    return {\n      attachBot,\n      bot,\n      chat,\n      theme,\n      cachedPosition,\n      cachedSize,\n    };\n  },\n)(WebAppModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport renderText from '../common/helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  bot?: ApiUser;\n  type?: 'game' | 'webApp' | 'botApp';\n  shouldRequestWriteAccess?: boolean;\n};\n\nconst BotTrustModal: FC<OwnProps> = ({ bot, type, shouldRequestWriteAccess }) => {\n  const { cancelBotTrustRequest, markBotTrusted } = getActions();\n\n  const [isWriteAllowed, setIsWriteAllowed] = useState(shouldRequestWriteAccess || false);\n\n  const lang = useOldLang();\n\n  const handleBotTrustAccept = useCallback(() => {\n    markBotTrusted({ botId: bot!.id, isWriteAllowed });\n  }, [markBotTrusted, isWriteAllowed, bot]);\n\n  const handleBotTrustDecline = useCallback(() => {\n    cancelBotTrustRequest();\n  }, []);\n\n  const title = type === 'game' ? lang('AppName') : lang('BotOpenPageTitle');\n  const text = useMemo(() => {\n    switch (type) {\n      case 'game':\n        return lang('BotPermissionGameAlert', getUserFullName(bot));\n      case 'webApp':\n        return lang('BotOpenPageMessage', getUserFullName(bot));\n      case 'botApp':\n      default:\n        return lang('BotWebViewStartPermission');\n    }\n  }, [bot, type, lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={handleBotTrustDecline}\n      title={title}\n      confirmHandler={handleBotTrustAccept}\n    >\n      {renderText(text, ['simple_markdown'])}\n      {shouldRequestWriteAccess && (\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={isWriteAllowed}\n          label={renderText(\n            lang('WebApp.AddToAttachmentAllowMessages', bot?.firstName),\n            ['simple_markdown'],\n          )}\n          onCheck={setIsWriteAllowed}\n        />\n      )}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(BotTrustModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { MINI_APP_TOS_URL } from '../../../config';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  modal: TabState['requestedAttachBotInstall'];\n};\n\nconst AttachBotInstallModal: FC<OwnProps> = ({\n  modal,\n}) => {\n  const { confirmAttachBotInstall, cancelAttachBotInstall } = getActions();\n  const bot = modal?.bot;\n\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n\n  const lang = useOldLang();\n\n  const handleConfirm = useCallback(() => {\n    confirmAttachBotInstall({\n      isWriteAllowed: Boolean(bot?.shouldRequestWriteAccess),\n    });\n  }, [confirmAttachBotInstall, bot]);\n\n  // Reset on re-open\n  useEffect(() => {\n    if (bot) {\n      setIsTosAccepted(false);\n    }\n  }, [bot]);\n\n  const tosLabel = useMemo(() => {\n    const base = lang('lng_mini_apps_disclaimer_button');\n    const split = base.split('{link}');\n    const linkText = lang('lng_mini_apps_disclaimer_link');\n    return [\n      split[0],\n      <a href={MINI_APP_TOS_URL} target=\"_blank\" rel=\"noopener noreferrer\">{linkText}</a>,\n      split[1],\n    ];\n  }, [lang]);\n\n  return (\n    <ConfirmDialog\n      isOpen={Boolean(bot)}\n      onClose={cancelAttachBotInstall}\n      title={lang('lng_mini_apps_disclaimer_title')}\n      confirmHandler={handleConfirm}\n      isConfirmDisabled={!isTosAccepted}\n    >\n      {renderText(lang('lng_mini_apps_disclaimer_text', bot?.shortName), ['simple_markdown'])}\n      <Checkbox\n        className=\"dialog-checkbox\"\n        checked={isTosAccepted}\n        label={tosLabel}\n        onCheck={setIsTosAccepted}\n      />\n      {renderText(lang('WebBot.Account.Desclaimer.Desc', bot?.shortName), ['simple_markdown'])}\n    </ConfirmDialog>\n  );\n};\n\nexport default memo(AttachBotInstallModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nexport type OwnProps = {\n  folder?: ApiChatFolder;\n};\n\nconst DeleteFolderDialog: FC<OwnProps> = ({\n  folder,\n}) => {\n  const { closeDeleteChatFolderModal, deleteChatFolder, openDeleteChatFolderModal } = getActions();\n  const lang = useOldLang();\n\n  const isOpen = Boolean(folder);\n\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n  const isMyChatlist = renderingFolder?.hasMyInvites;\n\n  const handleDeleteFolderMessage = useCallback(() => {\n    closeDeleteChatFolderModal();\n    if (isMyChatlist) {\n      openDeleteChatFolderModal({ folderId: renderingFolder!.id, isConfirmedForChatlist: true });\n    } else {\n      deleteChatFolder({ id: renderingFolder!.id });\n    }\n  }, [isMyChatlist, renderingFolder]);\n\n  return (\n    <ConfirmDialog\n      isOpen={isOpen}\n      onClose={closeDeleteChatFolderModal}\n      text={isMyChatlist ? lang('FilterDeleteAlertLinks') : lang('FilterDeleteAlert')}\n      confirmLabel={lang('Delete')}\n      confirmHandler={handleDeleteFolderMessage}\n      confirmIsDestructive\n    />\n  );\n};\n\nexport default memo(DeleteFolderDialog);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wn7D2H1e\",\"text\":\"IQ1U2TrZ\",\"header\":\"F6qqXRvD\",\"description\":\"ILLaH6qQ\",\"icon\":\"DzGwbpu5\",\"font-icon\":\"Pa9h5mh3\",\"fontIcon\":\"Pa9h5mh3\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport { hexToRgb, lerpRgb } from '../../../util/switchTheme';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\n\nimport styles from './PremiumFeatureItem.module.scss';\n\ntype OwnProps<T> = {\n  title: string;\n  text: string;\n  index: number;\n  count: number;\n  section: T;\n  onClick?: (section: T) => void;\n} & ({\n  icon: IconName;\n  isFontIcon: true;\n} | {\n  icon: string;\n  isFontIcon?: false;\n});\n\nconst COLORS = [\n  '#F2862D', '#EB7B4D', '#E46D72', '#DD6091', '#CC5FBA', '#B464E7',\n  '#9873FF', '#768DFF', '#55A5FC', '#52B0C9', '#4FBC93', '#4CC663',\n].map(hexToRgb);\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst PremiumFeatureItem = <T,>({\n  icon,\n  isFontIcon,\n  title,\n  text,\n  index,\n  count,\n  section,\n  onClick,\n}: OwnProps<T>) => {\n  const newIndex = (index / count) * COLORS.length;\n  const colorA = COLORS[Math.floor(newIndex)];\n  const colorB = COLORS[Math.ceil(newIndex)] ?? colorA;\n  const { r, g, b } = lerpRgb(colorA, colorB, 0.5);\n\n  const handleClick = useLastCallback(() => {\n    onClick?.(section);\n  });\n\n  return (\n    <ListItem buttonClassName={styles.root} onClick={handleClick} inactive={!onClick}>\n      {isFontIcon ? (\n        <Icon name={icon} className={styles.fontIcon} style={`--item-color: rgb(${r},${g},${b})`} />\n      ) : (\n        <img src={icon} className={styles.icon} alt=\"\" style={`--item-color: rgb(${r},${g},${b})`} draggable={false} />\n      )}\n      <div className={styles.text}>\n        <div className={styles.title}>{renderText(title, ['br'])}</div>\n        <div className={styles.description}>{text}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(PremiumFeatureItem);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"HmY1pYD9\",\"arrow\":\"cqNhvdib\",\"right\":\"hIgQCprt\",\"arrow-hidden\":\"wDzTWXzO\",\"arrowHidden\":\"wDzTWXzO\",\"dot\":\"Ac0pMX9w\",\"medium\":\"yDo_8Y7X\",\"small\":\"bhODNwmU\",\"invisible\":\"O9pyrgj0\",\"active\":\"NYDxCNdz\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport Button from '../ui/Button';\nimport Icon from './icons/Icon';\n\nimport styles from './SliderDots.module.scss';\n\ntype OwnProps = {\n  length: number;\n  active: number;\n  onSelectSlide: (index: number) => void;\n};\n\nconst SliderDots: FC<OwnProps> = ({\n  length,\n  active,\n  onSelectSlide,\n}) => {\n  const startFrom = Math.max(0, Math.min(length - 8, active - 4));\n  const isPreLastBatch = startFrom === length - 8 - 1;\n  const isLastBatch = startFrom === length - 8;\n  const isFirstBatch = startFrom === 0;\n  const isPreFirstBatch = startFrom === 1;\n  const shownDotsCount = Math.min(length, 8);\n\n  const handleGoForward = useCallback(() => {\n    onSelectSlide(active + 1);\n  }, [active, onSelectSlide]);\n\n  const handleGoBack = useCallback(() => {\n    onSelectSlide(active - 1);\n  }, [active, onSelectSlide]);\n\n  const count = Math.min(8, length);\n\n  return (\n    <div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === 0 && styles.arrowHidden)}\n          color=\"translucent\"\n          disabled={active === 0}\n          round\n          onClick={handleGoBack}\n        >\n          <Icon name=\"previous\" />\n        </Button>\n      )}\n      <div className={styles.root} style={`--start-from: ${startFrom}; --length: ${length}; --count: ${count};`}>\n        {Array(length).fill(undefined).map((_, i) => {\n          const index = i;\n          const isLast = (i === startFrom + shownDotsCount - 1 && !isLastBatch && !isPreLastBatch);\n          const isPreLast = (i === startFrom + shownDotsCount - 2 && !isPreLastBatch && !isLastBatch)\n            || (i === startFrom + shownDotsCount - 1 && isPreLastBatch);\n          const isFirst = (i === startFrom) && !isFirstBatch && !isPreFirstBatch;\n          const isPreFirst = ((i === startFrom + 1) && !isFirstBatch && !isPreFirstBatch)\n            || (i === startFrom && isPreFirstBatch);\n          const isInvisible = i < startFrom || i >= startFrom + shownDotsCount;\n          return (\n            <div\n              onClick={() => onSelectSlide(i)}\n              className={buildClassName(\n                styles.dot,\n                index === active && styles.active,\n                (isPreLast || isPreFirst) && styles.medium,\n                (isLast || isFirst || isInvisible) && styles.small,\n                isInvisible && styles.invisible,\n              )}\n            />\n          );\n        })}\n      </div>\n      {!IS_TOUCH_ENV && (\n        <Button\n          className={buildClassName(styles.arrow, active === length - 1 && styles.arrowHidden, styles.right)}\n          color=\"translucent\"\n          round\n          disabled={active === length - 1}\n          onClick={handleGoForward}\n        >\n          <Icon name=\"next\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SliderDots);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"u84X0r2z\",\"floating-badge\":\"hPi4fICJ\",\"floatingBadge\":\"hPi4fICJ\",\"floating-badge-triangle\":\"jufjjcX9\",\"floatingBadgeTriangle\":\"jufjjcX9\",\"floating-badge-icon\":\"XkiOXdMP\",\"floatingBadgeIcon\":\"XkiOXdMP\",\"text\":\"YaiSoFKE\",\"floating-badge-value\":\"iC3LJrvy\",\"floatingBadgeValue\":\"iC3LJrvy\",\"left-text\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"leftText\":\"OejVAPj6 YaiSoFKE YaiSoFKE\",\"right-text\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"rightText\":\"COQdFBQk YaiSoFKE YaiSoFKE\",\"right-value\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"rightValue\":\"BEq3jFlz YaiSoFKE YaiSoFKE\",\"left-value\":\"RJosx238 YaiSoFKE\",\"leftValue\":\"RJosx238 YaiSoFKE\",\"line\":\"Hy5kWx0p\",\"left\":\"scGr4JS9\",\"right\":\"nPaUalQf\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { IconName } from '../../../../types/icons';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\n\nimport styles from './PremiumLimitsCompare.module.scss';\n\ntype OwnProps = {\n  floatingBadgeIcon?: IconName;\n  leftValue?: string;\n  rightValue?: string;\n  className?: string;\n  rightStyle?: string;\n};\n\nconst PremiumLimitsCompare: FC<OwnProps> = ({\n  leftValue,\n  rightValue,\n  className,\n  floatingBadgeIcon,\n  rightStyle,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <div className={buildClassName(styles.root, className)}>\n      {floatingBadgeIcon && (\n        <div className={styles.floatingBadge}>\n          <Icon name={floatingBadgeIcon} className={styles.floatingBadgeIcon} />\n          <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>{leftValue}</div>\n          <div className={styles.floatingBadgeTriangle}>\n            <svg width=\"26\" height=\"9\" viewBox=\"0 0 26 9\" fill=\"none\">\n              <path d=\"M0 0H26H24.4853C22.894 0 21.3679 0.632141 20.2426 1.75736L14.4142 7.58579C13.6332 8.36684 12.3668 8.36683 11.5858 7.58579L5.75736 1.75736C4.63214 0.632139 3.10602 0 1.51472 0H0Z\" fill=\"#7E85FF\" />\n            </svg>\n          </div>\n        </div>\n      )}\n      <div className={buildClassName(styles.line, styles.left)}>\n        <div className={styles.leftText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitFree')}</div>\n        {!floatingBadgeIcon && <div className={styles.leftValue}>{leftValue}</div>}\n      </div>\n      <div className={buildClassName(styles.line, styles.right)} style={rightStyle}>\n        <div className={styles.rightText} dir={lang.isRtl ? 'rtl' : undefined}>{lang('LimitPremium')}</div>\n        <div className={styles.rightValue}>{rightValue}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitsCompare);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../../lib/teact/teact';\n\nimport { lerp } from '../../../../util/math';\n\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitPreview.module.scss';\n\ntype OwnProps = {\n  title: string;\n  description: string;\n  leftValue?: string;\n  rightValue?: string;\n  colorStepProgress: number;\n};\n\nconst COLOR_START = [91, 160, 255];\nconst COLOR_END = [197, 100, 243];\n\nconst PremiumLimitPreview: FC<OwnProps> = ({\n  title,\n  description,\n  leftValue,\n  rightValue,\n  colorStepProgress,\n}) => {\n  const color = useMemo(() => {\n    return COLOR_START.map((start, i) => lerp(start, COLOR_END[i], colorStepProgress));\n  }, [colorStepProgress]);\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.title}>{title}</div>\n      <div className={styles.description}>{description}</div>\n      <PremiumLimitsCompare\n        leftValue={leftValue}\n        rightValue={rightValue}\n        rightStyle={`background: rgb(${color.join(',')})`}\n      />\n    </div>\n  );\n};\n\nexport default memo(PremiumLimitPreview);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"ZXp65Wgy\",\"title\":\"W1xG3pjS\",\"description\":\"b_CBXIkT\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"O1fqNCy0\",\"sticker\":\"ogaoEAcn\",\"effect-sticker\":\"Stdz4UIW ogaoEAcn\",\"effectSticker\":\"Stdz4UIW ogaoEAcn\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\nimport type { GlobalState } from '../../../../global/types';\n\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\n\nimport AnimatedSticker from '../../../common/AnimatedSticker';\n\nimport styles from './PremiumFeaturePreviewStickers.module.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  stickers: GlobalState['stickers']['premium']['stickers'];\n};\n\nconst EMOJI_SIZE_MULTIPLIER = 0.6;\nconst EFFECT_SIZE_MULTIPLIER = 0.8;\nconst MAX_EMOJIS = 15;\nconst ENDED_DELAY = 150;\n\nconst AnimatedCircleSticker: FC<{\n  size: number;\n  realIndex: number;\n  sticker: ApiSticker;\n  index: number;\n  maxLength: number;\n  onClick: (index: number) => void;\n  onEnded: (index: number) => void;\n  canPlay: boolean;\n}> = ({\n  size, realIndex, canPlay,\n  sticker, index, maxLength, onClick, onEnded,\n}) => {\n  const mediaData = useMedia(`sticker${sticker.id}`);\n  const mediaDataAround = useMedia(`sticker${sticker.id}?size=f`);\n\n  const isActivated = index === 0;\n  const [isAnimated, animate, inanimate] = useFlag(isActivated);\n\n  const circleSize = size - size * EMOJI_SIZE_MULTIPLIER;\n  const width = circleSize * 3;\n  const height = circleSize * 3.2;\n\n  const a = index / maxLength;\n\n  const angle = a * (Math.PI * 2);\n  const scale = isActivated ? 1 : 0.66;\n\n  const x = Math.cos(angle) * width - circleSize * 2.8;\n  const y = Math.sin(angle) * height;\n\n  const handleClick = useLastCallback(() => {\n    onClick(realIndex);\n  });\n\n  const handleEnded = useLastCallback(() => {\n    inanimate();\n    onEnded(realIndex);\n  });\n\n  useEffect(() => {\n    if (isActivated) {\n      animate();\n    }\n  }, [isActivated, animate]);\n\n  return (\n    <>\n      {isActivated && (\n        <AnimatedSticker\n          className={styles.effectSticker}\n          tgsUrl={mediaDataAround}\n          play={canPlay}\n          isLowPriority\n          noLoop\n          size={EFFECT_SIZE_MULTIPLIER * size}\n          style={`--x: calc(${x}px - 10%); --y: ${y}px;`}\n        />\n      )}\n      <AnimatedSticker\n        className={styles.sticker}\n        tgsUrl={mediaData}\n        play={canPlay && isAnimated}\n        noLoop\n        size={EMOJI_SIZE_MULTIPLIER * size}\n        style={`--x: ${x}px; --y: ${y}px; --opacity: ${scale}`}\n        onClick={handleClick}\n        onEnded={handleEnded}\n      />\n    </>\n  );\n};\n\nconst PremiumFeaturePreviewStickers: FC<OwnProps & StateProps> = ({\n  stickers, isActive,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [offset, setOffset] = useState(0);\n  const [size, setSize] = useState(0);\n\n  const renderedStickers = stickers?.slice(0, MAX_EMOJIS);\n\n  const handleClick = useLastCallback((i: number) => {\n    setOffset(-i);\n  });\n\n  const handleEnded = useLastCallback((i: number) => {\n    const displayIndex = cycleRestrict(renderedStickers.length, i + offset);\n    if (displayIndex !== 0) return;\n\n    setTimeout(() => {\n      setOffset((current) => {\n        return cycleRestrict(renderedStickers.length, current + 1);\n      });\n    }, ENDED_DELAY);\n  });\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    setSize(container.closest('.modal-dialog')!.clientWidth);\n  }, []);\n\n  return (\n    <div\n      className={styles.root}\n      ref={containerRef}\n    >\n      {Boolean(size) && renderedStickers?.map((sticker, i) => {\n        return (\n          <AnimatedCircleSticker\n            size={size}\n            sticker={sticker}\n            realIndex={i}\n            index={(i + offset + renderedStickers.length) % renderedStickers.length}\n            maxLength={renderedStickers.length}\n            onClick={handleClick}\n            onEnded={handleEnded}\n            canPlay={isActive}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      stickers: global.stickers.premium.stickers,\n    };\n  },\n)(PremiumFeaturePreviewStickers));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"mFElmm7a\",\"header\":\"Jjbochk6\",\"circle\":\"ChteQ9C3\",\"title\":\"d2ayix6L\",\"features\":\"ensyCeMe\",\"mobile\":\"DFbZJafh\",\"scrolled\":\"iN1T0a2Y\"};","import React, { memo, useLayoutEffect, useRef } from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiUser } from '../../../../api/types';\nimport type { IconName } from '../../../../types/icons';\n\nimport { selectUser } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useOldLang from '../../../../hooks/useOldLang';\nimport useScrolledState from '../../../../hooks/useScrolledState';\nimport useDevicePixelRatio from '../../../../hooks/window/useDevicePixelRatio';\n\nimport Avatar, { AVATAR_SIZES } from '../../../common/Avatar';\nimport { drawGradientCircle } from '../../../common/AvatarStoryCircle';\nimport PremiumFeatureItem from '../PremiumFeatureItem';\n\nimport styles from './PremiumFeaturePreviewStories.module.scss';\n\ntype StateProps = {\n  currentUser: ApiUser;\n};\n\nconst STORY_FEATURE_TITLES = {\n  stories_order: 'PremiumStoriesPriority',\n  stories_stealth: 'PremiumStoriesStealth',\n  stories_views: 'PremiumStoriesViews',\n  stories_timer: 'lng_premium_stories_subtitle_expiration',\n  stories_save: 'PremiumStoriesSaveToGallery',\n  stories_caption: 'lng_premium_stories_subtitle_caption',\n  stories_link: 'lng_premium_stories_subtitle_links',\n};\n\nconst STORY_FEATURE_DESCRIPTIONS = {\n  stories_order: 'PremiumStoriesPriorityDescription',\n  stories_stealth: 'PremiumStoriesStealthDescription',\n  stories_views: 'PremiumStoriesViewsDescription',\n  stories_timer: 'PremiumStoriesExpirationDescription',\n  stories_save: 'PremiumStoriesSaveToGalleryDescription',\n  stories_caption: 'PremiumStoriesCaptionDescription',\n  stories_link: 'PremiumStoriesFormattingDescription',\n};\n\nconst STORY_FEATURE_ICONS: Record<string, IconName> = {\n  stories_order: 'story-priority',\n  stories_stealth: 'eye-crossed-outline',\n  stories_views: 'eye-outline',\n  stories_timer: 'timer',\n  stories_save: 'arrow-down-circle',\n  stories_caption: 'story-caption',\n  stories_link: 'link-badge',\n};\n\nconst STORY_FEATURE_ORDER = Object.keys(STORY_FEATURE_TITLES) as (keyof typeof STORY_FEATURE_TITLES)[];\n\nconst CIRCLE_SIZE = AVATAR_SIZES.giant + 0.25 * REM;\nconst CIRCLE_SEGMENTS = 8;\nconst CIRCLE_READ_SEGMENTS = 0;\n\nconst PremiumFeaturePreviewVideo = ({\n  currentUser,\n}: StateProps) => {\n  // eslint-disable-next-line no-null/no-null\n  const circleRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const dpr = useDevicePixelRatio();\n\n  useLayoutEffect(() => {\n    if (!circleRef.current) {\n      return;\n    }\n\n    drawGradientCircle({\n      canvas: circleRef.current,\n      size: CIRCLE_SIZE * dpr,\n      segmentsCount: CIRCLE_SEGMENTS,\n      color: 'purple',\n      readSegmentsCount: CIRCLE_READ_SEGMENTS,\n      readSegmentColor: 'transparent',\n      dpr,\n    });\n  }, [dpr]);\n\n  const { handleScroll, isAtBeginning } = useScrolledState();\n\n  const maxSize = CIRCLE_SIZE;\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.header}>\n        <Avatar forPremiumPromo peer={currentUser} size=\"giant\" />\n        <canvas className={styles.circle} ref={circleRef} style={`max-width: ${maxSize}px; max-height: ${maxSize}px`} />\n      </div>\n      <div className={styles.title}>{lang('UpgradedStories')}</div>\n      <div\n        className={buildClassName(styles.features, !isAtBeginning && styles.scrolled, 'custom-scroll')}\n        onScroll={handleScroll}\n      >\n        {STORY_FEATURE_ORDER.map((section, index) => {\n          return (\n            <PremiumFeatureItem\n              key={section}\n              title={lang(STORY_FEATURE_TITLES[section])}\n              text={lang(STORY_FEATURE_DESCRIPTIONS[section])}\n              icon={STORY_FEATURE_ICONS[section]}\n              isFontIcon\n              index={index}\n              count={STORY_FEATURE_ORDER.length}\n              section={section}\n            />\n          );\n        })}\n        <div className={styles.mobile}>{lang('lng_premium_stories_about_mobile')}</div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      currentUser: selectUser(global, global.currentUserId!)!,\n    };\n  },\n)(PremiumFeaturePreviewVideo));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ot0dA1yZ\",\"wrapper\":\"yxSAGAc1\",\"down\":\"Jcy6cDoc\",\"frame\":\"Vn81yTTJ\",\"video\":\"rrVJClLL\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiThumbnail } from '../../../../api/types';\n\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useCanvasBlur from '../../../../hooks/useCanvasBlur';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport OptimizedVideo from '../../../ui/OptimizedVideo';\n\nimport styles from './PremiumFeaturePreviewVideo.module.scss';\n\nimport DeviceFrame from '../../../../assets/premium/DeviceFrame.svg';\n\ntype OwnProps = {\n  videoId: string;\n  isReverseAnimation: boolean;\n  isDown: boolean;\n  videoThumbnail: ApiThumbnail;\n  index: number;\n  isActive: boolean;\n};\n\nconst PremiumFeaturePreviewVideo: FC<OwnProps> = ({\n  videoId,\n  isReverseAnimation,\n  isDown,\n  videoThumbnail,\n  index,\n  isActive,\n}) => {\n  const mediaData = useMedia(`document${videoId}`);\n  const thumbnailRef = useCanvasBlur(videoThumbnail.dataUri);\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n\n  return (\n    <div className={styles.root}>\n      <div\n        className={buildClassName(\n          styles.wrapper,\n          isReverseAnimation && styles.reverse,\n          isDown && styles.down,\n        )}\n        id={`premium_feature_preview_video_${index}`}\n      >\n        <img src={DeviceFrame} alt=\"\" className={styles.frame} draggable={false} />\n        <canvas ref={thumbnailRef} className={styles.video} />\n        <OptimizedVideo\n          canPlay={isActive}\n          className={buildClassName(styles.video, transitionClassNames)}\n          src={mediaData}\n          disablePictureInPicture\n          playsInline\n          muted\n          loop\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeaturePreviewVideo);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oyUTEj8I\",\"button\":\"EPfM7AgT\",\"button-content\":\"GysZk2mF\",\"buttonContent\":\"GysZk2mF\",\"back-button\":\"njYoMrKM\",\"backButton\":\"njYoMrKM\",\"white-back-button\":\"SB4pczOo\",\"whiteBackButton\":\"SB4pczOo\",\"content\":\"sJubG84j\",\"frame\":\"a7IoUtQG\",\"slide\":\"gubS9KP1\",\"limits\":\"U7ePgVBR\",\"stories\":\"J1M6fEdo\",\"limits-content\":\"n_rowVPI\",\"limitsContent\":\"n_rowVPI\",\"header\":\"mz2Hmd83\",\"no-header-border\":\"AgmNOqi7\",\"noHeaderBorder\":\"AgmNOqi7\",\"preview\":\"dIVBSdWi\",\"title\":\"iZLwcL8v\",\"description\":\"A7YHY8qF\",\"footer\":\"yN2611rA\",\"no-footer-border\":\"rCHMABcD\",\"noFooterBorder\":\"rCHMABcD\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { toggleExtraClass } from '../../../lib/teact/teact-dom';\n\nimport type {\n  ApiLimitTypeForPromo,\n  ApiPremiumPromo,\n  ApiPremiumSection,\n  ApiPremiumSubscriptionOption,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_BOTTOM_VIDEOS, PREMIUM_FEATURE_SECTIONS, PREMIUM_LIMITS_ORDER } from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport SliderDots from '../../common/SliderDots';\nimport Button from '../../ui/Button';\nimport PremiumLimitPreview from './common/PremiumLimitPreview';\nimport PremiumFeaturePreviewStickers from './previews/PremiumFeaturePreviewStickers';\nimport PremiumFeaturePreviewStories from './previews/PremiumFeaturePreviewStories';\nimport PremiumFeaturePreviewVideo from './previews/PremiumFeaturePreviewVideo';\n\nimport styles from './PremiumFeatureModal.module.scss';\n\nexport const PREMIUM_FEATURE_TITLES: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimits',\n  infinite_reactions: 'PremiumPreviewReactions2',\n  premium_stickers: 'PremiumPreviewStickers',\n  animated_emoji: 'PremiumPreviewEmoji',\n  no_ads: 'PremiumPreviewNoAds',\n  voice_to_text: 'PremiumPreviewVoiceToText',\n  profile_badge: 'PremiumPreviewProfileBadge',\n  faster_download: 'PremiumPreviewDownloadSpeed',\n  more_upload: 'PremiumPreviewUploads',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagement',\n  animated_userpics: 'PremiumPreviewAnimatedProfiles',\n  emoji_status: 'PremiumPreviewEmojiStatus',\n  translations: 'PremiumPreviewTranslations',\n  stories: 'PremiumPreviewStories',\n  saved_tags: 'PremiumPreviewTags2',\n  last_seen: 'PremiumPreviewLastSeen',\n  message_privacy: 'PremiumPreviewMessagePrivacy',\n  effects: 'Premium.MessageEffects',\n};\n\nexport const PREMIUM_FEATURE_DESCRIPTIONS: Record<ApiPremiumSection, string> = {\n  double_limits: 'PremiumPreviewLimitsDescription',\n  infinite_reactions: 'PremiumPreviewReactions2Description',\n  premium_stickers: 'PremiumPreviewStickersDescription',\n  no_ads: 'PremiumPreviewNoAdsDescription',\n  animated_emoji: 'PremiumPreviewEmojiDescription',\n  voice_to_text: 'PremiumPreviewVoiceToTextDescription',\n  profile_badge: 'PremiumPreviewProfileBadgeDescription',\n  faster_download: 'PremiumPreviewDownloadSpeedDescription',\n  more_upload: 'PremiumPreviewUploadsDescription',\n  advanced_chat_management: 'PremiumPreviewAdvancedChatManagementDescription',\n  animated_userpics: 'PremiumPreviewAnimatedProfilesDescription',\n  emoji_status: 'PremiumPreviewEmojiStatusDescription',\n  translations: 'PremiumPreviewTranslationsDescription',\n  stories: 'PremiumPreviewStoriesDescription',\n  saved_tags: 'PremiumPreviewTagsDescription2',\n  last_seen: 'PremiumPreviewLastSeenDescription',\n  message_privacy: 'PremiumPreviewMessagePrivacyDescription',\n  effects: 'Premium.MessageEffectsInfo',\n};\n\nconst LIMITS_TITLES: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitTitle',\n  dialogFolderPinned: 'PinChatsLimitTitle',\n  channelsPublic: 'PublicLinksLimitTitle',\n  savedGifs: 'SavedGifsLimitTitle',\n  stickersFaved: 'FavoriteStickersLimitTitle',\n  aboutLength: 'BioLimitTitle',\n  captionLength: 'CaptionsLimitTitle',\n  dialogFilters: 'FoldersLimitTitle',\n  dialogFiltersChats: 'ChatPerFolderLimitTitle',\n  recommendedChannels: 'SimilarChannelsLimitTitle',\n};\n\nconst LIMITS_DESCRIPTIONS: Record<ApiLimitTypeForPromo, string> = {\n  channels: 'GroupsAndChannelsLimitSubtitle',\n  dialogFolderPinned: 'PinChatsLimitSubtitle',\n  channelsPublic: 'PublicLinksLimitSubtitle',\n  savedGifs: 'SavedGifsLimitSubtitle',\n  stickersFaved: 'FavoriteStickersLimitSubtitle',\n  aboutLength: 'BioLimitSubtitle',\n  captionLength: 'CaptionsLimitSubtitle',\n  dialogFilters: 'FoldersLimitSubtitle',\n  dialogFiltersChats: 'ChatPerFolderLimitSubtitle',\n  recommendedChannels: 'SimilarChannelsLimitSubtitle',\n};\n\nconst BORDER_THRESHOLD = 20;\n\ntype OwnProps = {\n  initialSection: ApiPremiumSection;\n  promo: ApiPremiumPromo;\n  isPremium?: boolean;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumPromoOrder?: ApiPremiumSection[];\n  subscriptionOption?: ApiPremiumSubscriptionOption;\n  onBack: VoidFunction;\n  onClickSubscribe: (startParam?: string) => void;\n};\n\nconst PremiumFeatureModal: FC<OwnProps> = ({\n  promo,\n  initialSection,\n  isPremium,\n  limits,\n  premiumPromoOrder,\n  subscriptionOption,\n  onBack,\n  onClickSubscribe,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  // eslint-disable-next-line no-null/no-null\n  const scrollContainerRef = useRef<HTMLDivElement>(null);\n  const [currentSlideIndex, setCurrentSlideIndex] = useState(PREMIUM_FEATURE_SECTIONS.indexOf(initialSection));\n  const [reverseAnimationSlideIndex, setReverseAnimationSlideIndex] = useState(0);\n  const [isScrolling, startScrolling, stopScrolling] = useFlag();\n\n  const [isScrolledToTop, setIsScrolledToTop] = useState(true);\n  const [isScrolledToBottom, setIsScrolledToBottom] = useState(false);\n\n  const prevInitialSection = usePreviousDeprecated(initialSection);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  const subscriptionButtonText = useMemo(() => {\n    if (!subscriptionOption) return undefined;\n\n    const { amount, months, currency } = subscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n\n    return isPremium\n      ? lang('OK')\n      : lang('SubscribeToPremium', { price: formatCurrency(lang, perMonthPrice, currency) }, { withNodes: true });\n  }, [isPremium, lang, subscriptionOption]);\n\n  const handleClick = useLastCallback(() => {\n    onClickSubscribe(initialSection);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const target = e.currentTarget;\n    const { clientWidth, scrollLeft: scrollLeftOriginal } = target;\n\n    const scrollLeft = Math.round(scrollLeftOriginal);\n\n    const left = scrollLeft % (clientWidth);\n    const progress = left / (clientWidth);\n\n    const reverseIndex = Math.ceil((scrollLeft + 1) / clientWidth);\n\n    setReverseAnimationSlideIndex(reverseIndex);\n\n    const prevElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex - 1}`);\n    const reverseElement = target.querySelector<HTMLDivElement>(`#premium_feature_preview_video_${reverseIndex}`);\n\n    requestMutation(() => {\n      target.style.setProperty('--scroll-progress', progress.toString());\n      target.style.setProperty('--abs-scroll-progress', Math.abs(progress).toString());\n\n      if (prevElement) toggleExtraClass(prevElement, 'reverse', false);\n      if (reverseElement) toggleExtraClass(reverseElement, 'reverse', true);\n    });\n\n    if (isScrolling) return;\n    const slide = Math.round(scrollLeft / clientWidth);\n    setCurrentSlideIndex(slide);\n  }\n\n  function handleLimitsScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop, clientHeight, scrollHeight } = e.currentTarget;\n    setIsScrolledToTop(scrollTop <= BORDER_THRESHOLD);\n    setIsScrolledToBottom(scrollTop >= scrollHeight - clientHeight - BORDER_THRESHOLD);\n  }\n\n  useEffect(() => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer || (prevInitialSection === initialSection)) return;\n\n    const index = filteredSections.indexOf(initialSection);\n    setCurrentSlideIndex(index);\n    startScrolling();\n    animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 0)\n      .then(stopScrolling);\n  }, [currentSlideIndex, filteredSections, initialSection, prevInitialSection]);\n\n  const handleSelectSlide = useLastCallback(async (index: number) => {\n    const scrollContainer = scrollContainerRef.current;\n    if (!scrollContainer) return;\n\n    setCurrentSlideIndex(index);\n\n    startScrolling();\n    await animateHorizontalScroll(scrollContainer, scrollContainer.clientWidth * index, 800);\n    stopScrolling();\n  });\n\n  return (\n    <div className={styles.root}>\n      <Button\n        round\n        size=\"smaller\"\n        className={buildClassName(styles.backButton, currentSlideIndex !== 0 && styles.whiteBackButton)}\n        color={currentSlideIndex === 0 ? 'translucent' : 'translucent-white'}\n        onClick={onBack}\n        ariaLabel={oldLang('Back')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n\n      <div className={styles.preview} />\n\n      <div className={buildClassName(styles.content, 'no-scrollbar')} onScroll={handleScroll} ref={scrollContainerRef}>\n\n        {filteredSections.map((section, index) => {\n          if (section === 'double_limits') {\n            return (\n              <div className={buildClassName(styles.slide, styles.limits)}>\n                <h2 className={buildClassName(styles.header, isScrolledToTop && styles.noHeaderBorder)}>\n                  {oldLang(PREMIUM_FEATURE_TITLES.double_limits)}\n                </h2>\n                <div className={buildClassName(styles.limitsContent, 'custom-scroll')} onScroll={handleLimitsScroll}>\n                  {PREMIUM_LIMITS_ORDER.map((limit, i) => {\n                    const defaultLimit = limits?.[limit][0].toString();\n                    const premiumLimit = limits?.[limit][1].toString();\n                    return (\n                      <PremiumLimitPreview\n                        title={oldLang(LIMITS_TITLES[limit])}\n                        description={oldLang(LIMITS_DESCRIPTIONS[limit], premiumLimit)}\n                        leftValue={defaultLimit}\n                        rightValue={premiumLimit}\n                        colorStepProgress={i / (PREMIUM_LIMITS_ORDER.length - 1)}\n                      />\n                    );\n                  })}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'premium_stickers') {\n            return (\n              <div className={styles.slide}>\n                <div className={styles.frame}>\n                  <PremiumFeaturePreviewStickers isActive={currentSlideIndex === index} />\n                </div>\n                <h1 className={styles.title}>\n                  {oldLang(PREMIUM_FEATURE_TITLES.premium_stickers)}\n                </h1>\n                <div className={styles.description}>\n                  {renderText(oldLang(PREMIUM_FEATURE_DESCRIPTIONS.premium_stickers), ['br'])}\n                </div>\n              </div>\n            );\n          }\n\n          if (section === 'stories') {\n            return (\n              <div className={buildClassName(styles.slide, styles.stories)}>\n                <PremiumFeaturePreviewStories />\n              </div>\n            );\n          }\n\n          const i = promo.videoSections.indexOf(section);\n          if (i === -1) return undefined;\n          return (\n            <div className={styles.slide}>\n              <div className={styles.frame}>\n                <PremiumFeaturePreviewVideo\n                  isActive={currentSlideIndex === index}\n                  videoId={promo.videos[i].id!}\n                  videoThumbnail={promo.videos[i].thumbnail!}\n                  isDown={PREMIUM_BOTTOM_VIDEOS.includes(section)}\n                  index={index}\n                  isReverseAnimation={index === reverseAnimationSlideIndex}\n                />\n              </div>\n              <h1 className={styles.title}>\n                {oldLang(PREMIUM_FEATURE_TITLES[promo.videoSections[i]!])}\n              </h1>\n              <div className={styles.description}>\n                {renderText(oldLang(PREMIUM_FEATURE_DESCRIPTIONS[promo.videoSections[i]!]), ['br'])}\n              </div>\n            </div>\n          );\n        })}\n\n      </div>\n\n      <div\n        className={buildClassName(\n          styles.footer,\n          (isScrolledToBottom || currentSlideIndex !== 0) && styles.noFooterBorder,\n        )}\n      >\n        <SliderDots\n          length={PREMIUM_FEATURE_SECTIONS.length}\n          active={currentSlideIndex}\n          onSelectSlide={handleSelectSlide}\n        />\n        {subscriptionButtonText && (\n          <Button\n            className={buildClassName(styles.button)}\n            isShiny={!isPremium}\n            withPremiumGradient={!isPremium}\n            onClick={isPremium ? onBack : handleClick}\n          >\n            {subscriptionButtonText}\n          </Button>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(PremiumFeatureModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiPremiumGiftCodeOption, ApiPremiumSubscriptionOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport styles from './PremiumSubscriptionOption.module.scss';\n\ntype OwnProps = {\n  option: ApiPremiumSubscriptionOption | ApiPremiumGiftCodeOption;\n  isGiveaway?: boolean;\n  checked?: boolean;\n  fullMonthlyAmount?: number;\n  className?: string;\n  onChange: (month: number) => void;\n};\n\nconst PremiumSubscriptionOption: FC<OwnProps> = ({\n  option, checked, fullMonthlyAmount,\n  onChange, className, isGiveaway,\n}) => {\n  const oldLang = useOldLang();\n\n  const {\n    months, amount, currency,\n  } = option;\n  const users = 'users' in option ? option.users : undefined;\n  const perMonth = Math.floor(amount / months);\n  const isUserCountPlural = users ? users > 1 : undefined;\n\n  const discount = useMemo(() => {\n    return fullMonthlyAmount && fullMonthlyAmount > perMonth\n      ? Math.ceil(100 - perMonth / (fullMonthlyAmount / 100))\n      : undefined;\n  }, [fullMonthlyAmount, perMonth]);\n\n  const handleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(months);\n    }\n  }, [months, onChange]);\n\n  return (\n    <label\n      className={buildClassName(\n        isGiveaway ? styles.giveawayWrapper : styles.wrapper,\n        (checked && !isGiveaway) && styles.active,\n        className,\n      )}\n      dir={oldLang.isRtl ? 'rtl' : undefined}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"subscription_option\"\n        value={months}\n        checked={checked}\n        onChange={handleChange}\n      />\n      <div className={styles.content}>\n        <div className={styles.month}>\n          {Boolean(discount) && (\n            <span\n              className={buildClassName(styles.giveawayDiscount, styles.discount)}\n              title={oldLang('GiftDiscount')}\n            > &minus;{discount}%\n            </span>\n          )}\n          {oldLang('Months', months)}\n        </div>\n        <div className={styles.perMonth}>\n          {(isGiveaway || isUserCountPlural) ? `${formatCurrencyAsString(amount, currency, oldLang.code)} x ${users!}`\n            : oldLang('PricePerMonth', formatCurrencyAsString(perMonth, currency, oldLang.code))}\n        </div>\n        <div className={styles.amount}>\n          {formatCurrencyAsString(amount, currency, oldLang.code)}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(PremiumSubscriptionOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"qZA6S2kc\",\"giveawayWrapper\":\"PkseWxFK\",\"active\":\"EJOQwnRj\",\"input\":\"WOEkhx6R\",\"content\":\"BHUCScsU\",\"month\":\"DfYCMUkL\",\"perMonth\":\"poxOXJ2o\",\"amount\":\"IGMrERf_\",\"discount\":\"uqDlP3Zt\",\"giveawayDiscount\":\"ublijP0j\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sfbpMFHM\",\"transition\":\"ELNkgPve\",\"button\":\"c1tMxuFH\",\"main\":\"ZpOIPrhp\",\"logo\":\"mlMezt6b\",\"status-emoji\":\"mQwvY9LA\",\"statusEmoji\":\"mQwvY9LA\",\"header-text\":\"y71v6ECL\",\"headerText\":\"y71v6ECL\",\"description\":\"cUcKXV3j\",\"list\":\"c3Ee2oSo\",\"no-button\":\"yWEHoJOL\",\"noButton\":\"yWEHoJOL\",\"header\":\"Bc_F0RKb\",\"hidden-header\":\"ltXo0Xi7\",\"hiddenHeader\":\"ltXo0Xi7\",\"close-button\":\"XyN3eWog\",\"closeButton\":\"XyN3eWog\",\"premium-header-text\":\"xysPdANX\",\"premiumHeaderText\":\"xysPdANX\",\"footer-text\":\"yKm9hKQP\",\"footerText\":\"yKm9hKQP\",\"primary-footer-text\":\"l1WlNpmu\",\"primaryFooterText\":\"l1WlNpmu\",\"footer\":\"nCnlO9UZ\",\"stickerSetText\":\"xw_GbDj7\",\"stickerSetLink\":\"FLzl2ng5\",\"stickerSetLinkIcon\":\"Y0jTcadE\",\"subscriptionOptions\":\"xZC_Oajr\",\"subscriptionOption\":\"gygsbDbE\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiPremiumPromo, ApiPremiumSection, ApiPremiumSubscriptionOption, ApiSticker, ApiStickerSet, ApiUser,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\n\nimport { PREMIUM_FEATURE_SECTIONS, TME_LINK_PREFIX } from '../../../config';\nimport { getUserFullName } from '../../../global/helpers';\nimport {\n  selectIsCurrentUserPremium, selectStickerSet,\n  selectTabState, selectUser,\n} from '../../../global/selectors';\nimport { selectPremiumLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Transition from '../../ui/Transition';\nimport PremiumFeatureItem from './PremiumFeatureItem';\nimport PremiumFeatureModal, {\n  PREMIUM_FEATURE_DESCRIPTIONS,\n  PREMIUM_FEATURE_TITLES,\n} from './PremiumFeatureModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './PremiumMainModal.module.scss';\n\nimport PremiumAds from '../../../assets/premium/PremiumAds.svg';\nimport PremiumBadge from '../../../assets/premium/PremiumBadge.svg';\nimport PremiumChats from '../../../assets/premium/PremiumChats.svg';\nimport PremiumEffects from '../../../assets/premium/PremiumEffects.svg';\nimport PremiumEmoji from '../../../assets/premium/PremiumEmoji.svg';\nimport PremiumFile from '../../../assets/premium/PremiumFile.svg';\nimport PremiumLastSeen from '../../../assets/premium/PremiumLastSeen.svg';\nimport PremiumLimits from '../../../assets/premium/PremiumLimits.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\nimport PremiumMessagePrivacy from '../../../assets/premium/PremiumMessagePrivacy.svg';\nimport PremiumReactions from '../../../assets/premium/PremiumReactions.svg';\nimport PremiumSpeed from '../../../assets/premium/PremiumSpeed.svg';\nimport PremiumStatus from '../../../assets/premium/PremiumStatus.svg';\nimport PremiumStickers from '../../../assets/premium/PremiumStickers.svg';\nimport PremiumTags from '../../../assets/premium/PremiumTags.svg';\nimport PremiumTranslate from '../../../assets/premium/PremiumTranslate.svg';\nimport PremiumVideo from '../../../assets/premium/PremiumVideo.svg';\nimport PremiumVoice from '../../../assets/premium/PremiumVoice.svg';\n\nconst LIMIT_ACCOUNTS = 4;\nconst STATUS_EMOJI_SIZE = 8 * REM;\n\nconst PREMIUM_FEATURE_COLOR_ICONS: Record<ApiPremiumSection, string> = {\n  stories: PremiumStatus,\n  double_limits: PremiumLimits,\n  infinite_reactions: PremiumReactions,\n  premium_stickers: PremiumStickers,\n  animated_emoji: PremiumEmoji,\n  no_ads: PremiumAds,\n  voice_to_text: PremiumVoice,\n  profile_badge: PremiumBadge,\n  faster_download: PremiumSpeed,\n  more_upload: PremiumFile,\n  advanced_chat_management: PremiumChats,\n  animated_userpics: PremiumVideo,\n  emoji_status: PremiumStatus,\n  translations: PremiumTranslate,\n  saved_tags: PremiumTags,\n  last_seen: PremiumLastSeen,\n  message_privacy: PremiumMessagePrivacy,\n  effects: PremiumEffects,\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  promo?: ApiPremiumPromo;\n  fromUser?: ApiUser;\n  fromUserStatusEmoji?: ApiSticker;\n  fromUserStatusSet?: ApiStickerSet;\n  toUser?: ApiUser;\n  initialSection?: ApiPremiumSection;\n  isPremium?: boolean;\n  isSuccess?: boolean;\n  isGift?: boolean;\n  monthsAmount?: number;\n  limitChannels: number;\n  limitPins: number;\n  limitLinks: number;\n  limitFolders: number;\n  limits?: NonNullable<GlobalState['appConfig']>['limits'];\n  premiumSlug?: string;\n  premiumBotUsername?: string;\n  premiumPromoOrder?: ApiPremiumSection[];\n};\n\nconst PremiumMainModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  currentUserId,\n  fromUser,\n  fromUserStatusEmoji,\n  fromUserStatusSet,\n  promo,\n  initialSection,\n  isPremium,\n  limitChannels,\n  limitLinks,\n  limitFolders,\n  limitPins,\n  limits,\n  premiumSlug,\n  premiumBotUsername,\n  isSuccess,\n  isGift,\n  toUser,\n  monthsAmount,\n  premiumPromoOrder,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closePremiumModal, openInvoice, requestConfetti, openTelegramLink, loadStickers, openStickerSet,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [currentSection, setCurrentSection] = useState<ApiPremiumSection | undefined>(initialSection);\n  const [selectedSubscriptionOption, setSubscriptionOption] = useState<ApiPremiumSubscriptionOption>();\n\n  useEffect(() => {\n    if (!isOpen) {\n      setHeaderHidden(true);\n      setCurrentSection(undefined);\n    }\n  }, [isOpen]);\n\n  const handleOpenSection = useLastCallback((section: ApiPremiumSection) => {\n    setCurrentSection(section);\n  });\n\n  const handleResetSection = useLastCallback(() => {\n    setCurrentSection(undefined);\n  });\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleClickWithStartParam = useLastCallback((startParam?: string) => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n\n    if (premiumSlug) {\n      openInvoice({\n        type: 'slug',\n        slug: premiumSlug,\n      });\n    } else if (premiumBotUsername) {\n      openTelegramLink({\n        url: `${TME_LINK_PREFIX}${premiumBotUsername}?start=${startParam || 'promo'}`,\n      });\n      closePremiumModal();\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (selectedSubscriptionOption) {\n      handleClickWithStartParam(String(selectedSubscriptionOption.months));\n    } else {\n      handleClickWithStartParam();\n    }\n  });\n\n  const handleChangeSubscriptionOption = useLastCallback((months: number) => {\n    const foundOption = promo?.options.find((option) => option.months === months);\n    setSubscriptionOption(foundOption);\n  });\n\n  const showConfetti = useLastCallback(() => {\n    const dialog = dialogRef.current;\n    if (!dialog) return;\n    if (isOpen) {\n      const {\n        top, left, width, height,\n      } = dialog.querySelector('.modal-content')!.getBoundingClientRect();\n      requestConfetti({\n        top,\n        left,\n        width,\n        height,\n        withStars: true,\n      });\n    }\n  });\n\n  useEffect(() => {\n    if (isSuccess) {\n      showConfetti();\n    }\n  }, [isSuccess, showConfetti]);\n\n  useSyncEffect(([prevIsPremium]) => {\n    if (prevIsPremium === isPremium) return;\n\n    showConfetti();\n  }, [isPremium, showConfetti]);\n\n  const filteredSections = useMemo(() => {\n    if (!premiumPromoOrder) return PREMIUM_FEATURE_SECTIONS;\n    return premiumPromoOrder.filter((section) => PREMIUM_FEATURE_SECTIONS.includes(section));\n  }, [premiumPromoOrder]);\n\n  useEffect(() => {\n    if (!fromUserStatusEmoji || fromUserStatusSet) return;\n    loadStickers({\n      stickerSetInfo: fromUserStatusEmoji.stickerSetInfo,\n    });\n  }, [loadStickers, fromUserStatusEmoji, fromUserStatusSet]);\n\n  useEffect(() => {\n    const [defaultOption] = promo?.options ?? [];\n    setSubscriptionOption(defaultOption);\n  }, [promo]);\n\n  const handleOpenStatusSet = useLastCallback(() => {\n    if (!fromUserStatusSet) return;\n\n    openStickerSet({\n      stickerSetInfo: fromUserStatusSet,\n    });\n  });\n\n  const fullMonthlyAmount = useMemo(() => {\n    const monthOption = promo?.options.find((option) => option.months === 1);\n    if (!monthOption) {\n      return undefined;\n    }\n    return Number(monthOption.amount);\n  }, [promo]);\n\n  const subscribeButtonText = useMemo(() => {\n    if (!selectedSubscriptionOption) {\n      return undefined;\n    }\n    const { amount, months, currency } = selectedSubscriptionOption;\n    const perMonthPrice = Math.floor(amount / months);\n    return formatCurrency(\n      lang,\n      perMonthPrice,\n      currency,\n    );\n  }, [selectedSubscriptionOption, lang]);\n\n  if (!promo || (fromUserStatusEmoji && !fromUserStatusSet)) return undefined;\n\n  function getHeaderText() {\n    if (isGift) {\n      return renderText(\n        fromUser?.id === currentUserId\n          ? oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogTitle', [getUserFullName(toUser), monthsAmount])\n          : oldLang('TelegramPremiumUserGiftedPremiumDialogTitle', [getUserFullName(fromUser), monthsAmount]),\n        ['simple_markdown', 'emoji'],\n      );\n    }\n\n    if (fromUserStatusSet && fromUser) {\n      const template = oldLang('lng_premium_emoji_status_title').replace('{user}', getUserFullName(fromUser)!);\n      const [first, second] = template.split('{link}');\n\n      const emoji = fromUserStatusSet.thumbCustomEmojiId ? (\n        <CustomEmoji className={styles.stickerSetLinkIcon} documentId={fromUserStatusSet.thumbCustomEmojiId} />\n      ) : undefined;\n      const link = (\n        <span className={styles.stickerSetLink} onClick={handleOpenStatusSet}>\n          {emoji}{renderText(fromUserStatusSet.title)}\n        </span>\n      );\n      return [renderText(first), link, renderText(second)];\n    }\n\n    return renderText(\n      fromUser\n        ? oldLang('TelegramPremiumUserDialogTitle', getUserFullName(fromUser))\n        : oldLang(isPremium ? 'TelegramPremiumSubscribedTitle' : 'TelegramPremium'),\n      ['simple_markdown', 'emoji'],\n    );\n  }\n\n  function getHeaderDescription() {\n    if (isGift) {\n      return fromUser?.id === currentUserId\n        ? oldLang('TelegramPremiumUserGiftedPremiumOutboundDialogSubtitle', getUserFullName(toUser))\n        : oldLang('TelegramPremiumUserGiftedPremiumDialogSubtitle');\n    }\n\n    if (fromUserStatusSet) {\n      return oldLang('TelegramPremiumUserStatusDialogSubtitle');\n    }\n\n    return fromUser\n      ? oldLang('TelegramPremiumUserDialogSubtitle')\n      : oldLang(isPremium ? 'TelegramPremiumSubscribedSubtitle' : 'TelegramPremiumSubtitle');\n  }\n\n  function renderFooterText() {\n    if (!promo || (isGift && fromUser?.id === currentUserId)) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.footerText} dir={oldLang.isRtl ? 'rtl' : undefined}>\n        {renderTextWithEntities({\n          text: promo.statusText,\n          entities: promo.statusEntities,\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.subscriptionOptions}>\n        {promo?.options\n          .map((option) => (\n            <PremiumSubscriptionOption\n              className={styles.subscriptionOption}\n              key={option.amount}\n              option={option}\n              onChange={handleChangeSubscriptionOption}\n              fullMonthlyAmount={fullMonthlyAmount}\n              checked={selectedSubscriptionOption?.months === option.months}\n            />\n          ))}\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={closePremiumModal}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n    >\n      <Transition name=\"slide\" activeKey={currentSection ? 1 : 0} className={styles.transition}>\n        {!currentSection ? (\n          <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n            <Button\n              round\n              size=\"smaller\"\n              className={styles.closeButton}\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => closePremiumModal()}\n              ariaLabel={oldLang('Close')}\n            >\n              <Icon name=\"close\" />\n            </Button>\n            {(fromUserStatusEmoji && !isGift) ? (\n              <CustomEmoji\n                className={styles.statusEmoji}\n                onClick={handleOpenStatusSet}\n                documentId={fromUserStatusEmoji.id}\n                isBig\n                size={STATUS_EMOJI_SIZE}\n              />\n            ) : (\n              <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n            )}\n            <h2 className={buildClassName(styles.headerText, fromUserStatusSet && styles.stickerSetText)}>\n              {getHeaderText()}\n            </h2>\n            <div className={styles.description}>\n              {renderText(getHeaderDescription(), ['simple_markdown', 'emoji'])}\n            </div>\n            {!isPremium && !isGift && renderSubscriptionOptions()}\n            <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n              <h2 className={styles.premiumHeaderText}>\n                {oldLang('TelegramPremium')}\n              </h2>\n            </div>\n            <div className={buildClassName(styles.list, isPremium && styles.noButton)}>\n              {filteredSections.map((section, index) => {\n                return (\n                  <PremiumFeatureItem\n                    key={section}\n                    title={oldLang(PREMIUM_FEATURE_TITLES[section])}\n                    text={section === 'double_limits'\n                      ? oldLang(PREMIUM_FEATURE_DESCRIPTIONS[section],\n                        [limitChannels, limitFolders, limitPins, limitLinks, LIMIT_ACCOUNTS])\n                      : oldLang(PREMIUM_FEATURE_DESCRIPTIONS[section])}\n                    icon={PREMIUM_FEATURE_COLOR_ICONS[section]}\n                    index={index}\n                    count={filteredSections.length}\n                    section={section}\n                    onClick={handleOpenSection}\n                  />\n                );\n              })}\n              <div\n                className={buildClassName(styles.footerText, styles.primaryFooterText)}\n                dir={oldLang.isRtl ? 'rtl' : undefined}\n              >\n                <p>\n                  {renderText(oldLang('AboutPremiumDescription'), ['simple_markdown'])}\n                </p>\n                <p>\n                  {renderText(oldLang('AboutPremiumDescription2'), ['simple_markdown'])}\n                </p>\n              </div>\n              {renderFooterText()}\n            </div>\n            {!isPremium && selectedSubscriptionOption && (\n              <div className={styles.footer}>\n                <Button className={styles.button} isShiny withPremiumGradient onClick={handleClick}>\n                  {oldLang('SubscribeToPremium', subscribeButtonText)}\n                </Button>\n              </div>\n            )}\n          </div>\n        ) : (\n          <PremiumFeatureModal\n            initialSection={currentSection}\n            onBack={handleResetSection}\n            promo={promo}\n            onClickSubscribe={handleClickWithStartParam}\n            isPremium={isPremium}\n            limits={limits}\n            premiumPromoOrder={premiumPromoOrder}\n            subscriptionOption={selectedSubscriptionOption}\n          />\n        )}\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    premiumModal,\n  } = selectTabState(global);\n\n  const fromUser = premiumModal?.fromUserId ? selectUser(global, premiumModal.fromUserId) : undefined;\n  const fromUserStatusEmoji = fromUser?.emojiStatus ? global.customEmojis.byId[fromUser.emojiStatus.documentId]\n    : undefined;\n  const fromUserStatusSet = fromUserStatusEmoji ? selectStickerSet(global, fromUserStatusEmoji.stickerSetInfo)\n    : undefined;\n\n  return {\n    currentUserId: global.currentUserId,\n    promo: premiumModal?.promo,\n    isSuccess: premiumModal?.isSuccess,\n    isGift: premiumModal?.isGift,\n    monthsAmount: premiumModal?.monthsAmount,\n    fromUser,\n    fromUserStatusEmoji,\n    fromUserStatusSet,\n    toUser: premiumModal?.toUserId ? selectUser(global, premiumModal.toUserId) : undefined,\n    initialSection: premiumModal?.initialSection,\n    isPremium: selectIsCurrentUserPremium(global),\n    limitChannels: selectPremiumLimit(global, 'channels'),\n    limitFolders: selectPremiumLimit(global, 'dialogFilters'),\n    limitPins: selectPremiumLimit(global, 'dialogFolderPinned'),\n    limitLinks: selectPremiumLimit(global, 'channelsPublic'),\n    limits: global.appConfig?.limits,\n    premiumSlug: global.appConfig?.premiumInvoiceSlug,\n    premiumBotUsername: global.appConfig?.premiumBotUsername,\n    premiumPromoOrder: global.appConfig?.premiumPromoOrder,\n  };\n})(PremiumMainModal));\n","import type { TeactNode } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\n\nimport { requestMeasure } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport Loading from '../../ui/Loading';\nimport Radio from '../../ui/Radio';\nimport Icon from '../icons/Icon';\nimport PickerItem from './PickerItem';\n\nimport styles from './PickerStyles.module.scss';\n\nexport type ItemPickerOption = {\n  label: TeactNode;\n  subLabel?: string;\n  disabled?: boolean;\n  isLoading?: boolean;\n  value: string;\n};\n\ntype SingleModeProps = {\n  allowMultiple?: false;\n  itemInputType?: 'radio';\n  selectedValue?: string;\n  selectedValues?: never; // Help TS to throw an error if this is passed\n  onSelectedValueChange?: (value: string) => void;\n};\n\ntype MultipleModeProps = {\n  allowMultiple: true;\n  itemInputType: 'checkbox';\n  selectedValue?: never;\n  selectedValues: string[];\n  lockedSelectedValues?: string[];\n  lockedUnselectedValues?: string[];\n  onSelectedValuesChange?: (values: string[]) => void;\n};\n\ntype OwnProps = {\n  className?: string;\n  isSearchable?: boolean;\n  searchInputId?: string;\n  items: ItemPickerOption[];\n  itemClassName?: string;\n  filterValue?: string;\n  filterPlaceholder?: string;\n  notFoundText?: string;\n  isLoading?: boolean;\n  noScrollRestore?: boolean;\n  isViewOnly?: boolean;\n  withDefaultPadding?: boolean;\n  forceRenderAllItems?: boolean;\n  onFilterChange?: (value: string) => void;\n  onDisabledClick?: (value: string, isSelected: boolean) => void;\n  onLoadMore?: () => void;\n} & (SingleModeProps | MultipleModeProps);\n\n// Focus slows down animation, also it breaks transition layout in Chrome\nconst FOCUS_DELAY_MS = 500;\n\nconst ITEM_CLASS_NAME = 'ItemPickerItem';\n\nconst ItemPicker = ({\n  className,\n  isSearchable,\n  searchInputId,\n  items,\n  filterValue,\n  notFoundText,\n  isLoading,\n  noScrollRestore,\n  filterPlaceholder,\n  isViewOnly,\n  itemInputType,\n  itemClassName,\n  withDefaultPadding,\n  forceRenderAllItems,\n  onFilterChange,\n  onDisabledClick,\n  onLoadMore,\n  ...optionalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const allowMultiple = optionalProps.allowMultiple;\n  const lockedSelectedValues = allowMultiple ? optionalProps.lockedSelectedValues : undefined;\n  const lockedUnselectedValues = allowMultiple ? optionalProps.lockedUnselectedValues : undefined;\n\n  useEffect(() => {\n    if (!isSearchable) return undefined;\n    const timeoutId = window.setTimeout(() => {\n      requestMeasure(() => {\n        inputRef.current?.focus();\n      });\n    }, FOCUS_DELAY_MS);\n\n    return () => {\n      window.clearTimeout(timeoutId);\n    };\n  }, [isSearchable]);\n\n  const selectedValues = useMemo(() => {\n    if (allowMultiple) {\n      return optionalProps.selectedValues;\n    }\n\n    return optionalProps.selectedValue ? [optionalProps.selectedValue] : MEMO_EMPTY_ARRAY;\n  }, [allowMultiple, optionalProps.selectedValue, optionalProps.selectedValues]);\n\n  const lockedSelectedValuesSet = useMemo(() => new Set(lockedSelectedValues), [lockedSelectedValues]);\n  const lockedUnselectedValuesSet = useMemo(() => new Set(lockedUnselectedValues), [lockedUnselectedValues]);\n\n  const sortedItemValuesList = useMemo(() => {\n    if (filterValue) {\n      return items.map((item) => item.value);\n    }\n\n    const lockedSelectedBucket: ItemPickerOption[] = [];\n    const unlockedBucket: ItemPickerOption[] = [];\n    const lockedUnselectableBucket: ItemPickerOption[] = [];\n\n    items.forEach((item) => {\n      if (lockedSelectedValuesSet.has(item.value)) {\n        lockedSelectedBucket.push(item);\n      } else if (lockedUnselectedValuesSet.has(item.value)) {\n        lockedUnselectableBucket.push(item);\n      } else {\n        unlockedBucket.push(item);\n      }\n    });\n\n    return lockedSelectedBucket.concat(unlockedBucket, lockedUnselectableBucket).map((item) => item.value);\n  }, [filterValue, items, lockedSelectedValuesSet, lockedUnselectedValuesSet]);\n\n  const handleItemClick = useLastCallback((value: string) => {\n    if (allowMultiple) {\n      const newSelectedValues = selectedValues.slice();\n      const index = newSelectedValues.indexOf(value);\n      if (index >= 0) {\n        newSelectedValues.splice(index, 1);\n      } else {\n        newSelectedValues.push(value);\n      }\n\n      optionalProps.onSelectedValuesChange?.(newSelectedValues);\n      return;\n    }\n\n    optionalProps.onSelectedValueChange?.(value);\n  });\n\n  const [viewportValuesList, getMore] = useInfiniteScroll(\n    onLoadMore, sortedItemValuesList, Boolean(forceRenderAllItems || filterValue),\n  );\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    onFilterChange?.(value);\n  });\n\n  const renderItem = useCallback((value: string) => {\n    const item = items.find((itemOption) => itemOption.value === value);\n    if (!item) return undefined;\n\n    const { label, subLabel, isLoading: isItemLoading } = item;\n    const isAlwaysUnselected = lockedUnselectedValuesSet.has(value);\n    const isAlwaysSelected = lockedSelectedValuesSet.has(value);\n    const isLocked = isAlwaysUnselected || isAlwaysSelected;\n    const isChecked = selectedValues.includes(value);\n\n    function getInputElement() {\n      if (isLocked) return <Icon name=\"lock-badge\" />;\n      if (itemInputType === 'radio') {\n        return <Radio checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      if (itemInputType === 'checkbox') {\n        return <Checkbox checked={isChecked} disabled={isLocked} isLoading={isItemLoading} onlyInput />;\n      }\n      return undefined;\n    }\n\n    return (\n      <PickerItem\n        key={value}\n        className={buildClassName(ITEM_CLASS_NAME, itemClassName)}\n        title={label}\n        subtitle={subLabel}\n        disabled={isLocked}\n        inactive={isViewOnly}\n        ripple\n        inputElement={getInputElement()}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleItemClick(value)}\n        // eslint-disable-next-line react/jsx-no-bind\n        onDisabledClick={onDisabledClick && (() => onDisabledClick(value, isAlwaysSelected))}\n      />\n    );\n  }, [\n    items, lockedUnselectedValuesSet, lockedSelectedValuesSet, selectedValues, isViewOnly, onDisabledClick,\n    itemInputType, itemClassName,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.container, className)}>\n      {isSearchable && (\n        <div className={buildClassName(styles.header, 'custom-scroll')} dir={lang.isRtl ? 'rtl' : undefined}>\n          <InputText\n            id={searchInputId}\n            ref={inputRef}\n            value={filterValue}\n            onChange={handleFilterChange}\n            placeholder={filterPlaceholder || lang('Search')}\n          />\n        </div>\n      )}\n\n      {viewportValuesList?.length ? (\n        <InfiniteScroll\n          className={buildClassName(styles.pickerList, withDefaultPadding && styles.padded, 'custom-scroll')}\n          items={viewportValuesList}\n          itemSelector={`.${ITEM_CLASS_NAME}`}\n          onLoadMore={getMore}\n          noScrollRestore={noScrollRestore}\n        >\n          {viewportValuesList.map((value) => renderItem(value))}\n        </InfiniteScroll>\n      ) : !isLoading && viewportValuesList && !viewportValuesList.length ? (\n        <p className={styles.noResults}>{notFoundText || lang('SearchEmptyViewTitle')}</p>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ItemPicker);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"wzzA3MFh\",\"pickerSelector\":\"xhujrq9i\",\"pickerTitle\":\"YuRK4e7S\",\"picker\":\"YF9nLkCK\",\"footer\":\"ATCZ2Q5G\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiCountry } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport ItemPicker from './pickers/ItemPicker';\n\nimport styles from './CountryPickerModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onSubmit: (value: string[]) => void;\n  countryList: ApiCountry[];\n  selectionLimit?: number | undefined;\n};\n\nconst CountryPickerModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onSubmit,\n  countryList,\n  selectionLimit,\n}) => {\n  const { showNotification } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[]>([]);\n  const prevSelectedCountryIds = usePreviousDeprecated(selectedCountryIds);\n  const noPickerScrollRestore = prevSelectedCountryIds === selectedCountryIds;\n\n  const displayedIds = useMemo(() => {\n    if (!countryList) {\n      return [];\n    }\n\n    return countryList.filter((country) => !country.isHidden && country.iso2 !== 'FT')\n      .map(({\n        iso2, defaultName,\n      }) => ({\n        value: iso2,\n        label: defaultName,\n      }));\n  }, [countryList]);\n\n  const handleSelectedIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (selectionLimit && newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningCountries', selectionLimit),\n      });\n      return;\n    }\n    setSelectedCountryIds(newSelectedIds);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    onSubmit(selectedCountryIds);\n    onClose();\n  });\n\n  return (\n    <Modal\n      className={styles.root}\n      isOpen={isOpen}\n      onClose={onClose}\n      onEnter={handleSubmit}\n    >\n      <div className={styles.container}>\n        <div className={styles.pickerSelector}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            onClick={onClose}\n          >\n            <Icon name=\"close\" />\n          </Button>\n\n          <h4 className={styles.pickerTitle}>\n            {lang('BoostingSelectCountry')}\n          </h4>\n        </div>\n      </div>\n\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedIds}\n          selectedValues={selectedCountryIds}\n          onSelectedValuesChange={handleSelectedIdsChange}\n          noScrollRestore={noPickerScrollRestore}\n          allowMultiple\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <div className={styles.footer}>\n        <Button\n          size=\"smaller\"\n          onClick={handleSubmit}\n        >\n          {lang('SelectCountries.OK')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(CountryPickerModal);\n","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport {\n  isChatChannel, isChatPublic, isChatSuperGroup,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\nconst GiveawayChannelPickerModal = ({\n  isOpen,\n  giveawayChatId,\n  selectionLimit,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [pendingChannelId, setPendingChannelId] = useState<string | undefined>(undefined);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const channelIds = useMemo(() => {\n    const global = getGlobal();\n    const chatsById = global.chats.byId;\n    const { active, archived } = global.chats.listIds;\n    const ids = (active || []).concat(archived || []);\n\n    return unique(ids).map((id) => chatsById[id])\n      .filter((chat) => (\n        chat && (\n          isChatChannel(chat) || isChatSuperGroup(chat)\n        ) && chat.id !== giveawayChatId\n      )).map((chat) => chat.id);\n  }, [giveawayChatId]);\n\n  const displayedChannelIds = useMemo(() => {\n    const foundChannelIds = channelIds ? filterPeersByQuery({ ids: channelIds, query: searchQuery, type: 'chat' }) : [];\n\n    return sortChatIds(foundChannelIds,\n      false,\n      selectedIds);\n  }, [channelIds, searchQuery, selectedIds]);\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    const chatsById = getGlobal().chats.byId;\n    const newlyAddedIds = newSelectedIds.filter((id) => !selectedIds.includes(id));\n    const privateLinkChannelId = newlyAddedIds.find((id) => {\n      const chat = chatsById[id];\n      return chat && !isChatPublic(chat);\n    });\n\n    if (selectedIds?.length >= selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningChannelsPlural', selectionLimit),\n      });\n      return;\n    }\n\n    if (privateLinkChannelId) {\n      setPendingChannelId(privateLinkChannelId);\n      openConfirmModal();\n    } else {\n      setSelectedIds(newSelectedIds);\n    }\n  });\n\n  const confirmPrivateLinkChannelSelection = useLastCallback(() => {\n    if (pendingChannelId) {\n      setSelectedIds(unique([...selectedIds, pendingChannelId]));\n    }\n    closeConfirmModal();\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('RequestPeer.ChooseChannelTitle')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedChannelIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedChannelIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n      <ConfirmDialog\n        title={lang('BoostingGiveawayPrivateChannel')}\n        text={lang('BoostingGiveawayPrivateChannelWarning')}\n        confirmLabel={lang('Add')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmPrivateLinkChannelSelection}\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(GiveawayChannelPickerModal);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './GiveawayTypeOption.module.scss';\n\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\n\ntype OwnProps = {\n  option: ApiGiveawayType;\n  name: string;\n  text: string;\n  img: string;\n  checked?: boolean;\n  isLink: boolean;\n  className?: string;\n  onChange: (value: ApiGiveawayType) => void;\n  onClickAction?: () => void;\n  userNames?: string;\n  selectedMemberIds?: string[];\n};\n\nconst GiveawayTypeOption: FC<OwnProps> = ({\n  option, checked,\n  name, text, img,\n  isLink, onChange, onClickAction, className,\n  userNames, selectedMemberIds,\n}) => {\n  const lang = useOldLang();\n\n  let displayText: string | undefined = lang(text);\n  if (isLink && selectedMemberIds?.length) {\n    displayText = selectedMemberIds.length > 2 ? `${selectedMemberIds.length}` : userNames;\n  }\n\n  const handleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.checked) {\n      onChange(option);\n    }\n  });\n\n  const handleClick = useLastCallback(() => {\n    onClickAction?.();\n  });\n\n  return (\n    <label\n      className={buildClassName(styles.wrapper, className)}\n      dir={lang.isRtl ? 'rtl' : undefined}\n      role=\"button\"\n      tabIndex={0}\n    >\n      <input\n        className={styles.input}\n        type=\"radio\"\n        name=\"giveaway_option\"\n        value={option}\n        checked={checked}\n        onChange={handleChange}\n        onClick={(e) => e.stopPropagation()}\n      />\n      <div className={styles.content}>\n        <img className={styles.optionImg} src={img} alt=\"\" draggable={false} />\n        <div className={styles.giveaway}>\n          <h3 className={styles.title}>\n            {lang(`${name}`)}\n          </h3>\n          {isLink ? (\n            <div className={styles.link} onClick={handleClick}>\n              <span>{displayText}</span>\n              <Icon name=\"next\" />\n            </div>\n          ) : (\n            <span className={styles.contentText}>{displayText}</span>\n          )}\n        </div>\n      </div>\n    </label>\n  );\n};\n\nexport default memo(GiveawayTypeOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"w3OGYFKn\",\"input\":\"xy4AclZa\",\"content\":\"TTgSI7Xh\",\"notChecked\":\"JDcXsByU\",\"giveaway\":\"sEt7TF59\",\"title\":\"u4NzVBBi\",\"link\":\"y7XfPOoG\",\"optionImg\":\"lGhZJbMF\",\"contentText\":\"kt2ZKZ6j\"};","import React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember } from '../../../api/types';\n\nimport {\n  isUserBot,\n  sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport PickerModal from '../../common/pickers/PickerModal';\n\ntype OwnProps = {\n  isOpen?: boolean;\n  // eslint-disable-next-line react/no-unused-prop-types\n  giveawayChatId?: string;\n  selectionLimit: number;\n  initialSelectedIds: string[];\n  onSelectedIdsConfirmed: (newSelectedIds: string[]) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  members?: ApiChatMember[];\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst GiveawayUserPickerModal = ({\n  isOpen,\n  selectionLimit,\n  members,\n  adminMembersById,\n  initialSelectedIds,\n  onSelectedIdsConfirmed,\n  onClose,\n}: OwnProps & StateProps) => {\n  const { showNotification } = getActions();\n  const lang = useOldLang();\n\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [selectedIds, setSelectedIds] = useState<string[]>(initialSelectedIds);\n\n  useEffect(() => {\n    setSelectedIds(initialSelectedIds);\n  }, [initialSelectedIds]);\n\n  const memberIds = useMemo(() => {\n    const global = getGlobal();\n    const { byId, statusesById } = global.users;\n    if (!members?.length) {\n      return [];\n    }\n\n    const adminIdsSet = adminMembersById && new Set(Object.keys(adminMembersById));\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      byId,\n      statusesById,\n    );\n\n    return adminIdsSet ? userIds.filter((userId) => !adminIdsSet.has(userId)) : userIds;\n  }, [adminMembersById, members]);\n\n  const displayedMemberIds = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    const filteredUserIds = memberIds\n      ? filterPeersByQuery({ ids: memberIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(unique(filteredUserIds).filter((userId) => {\n      const user = usersById[userId];\n      if (!user) {\n        return true;\n      }\n\n      return !isUserBot(user);\n    }));\n  }, [memberIds, searchQuery]);\n\n  const handleSelectedMemberIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    if (newSelectedIds.length > selectionLimit) {\n      showNotification({\n        message: lang('BoostingSelectUpToWarningUsers', selectionLimit),\n      });\n      return;\n    }\n    setSelectedIds(newSelectedIds);\n  });\n\n  const handleModalConfirm = useLastCallback(() => {\n    onSelectedIdsConfirmed(selectedIds);\n    onClose();\n  });\n\n  return (\n    <PickerModal\n      isOpen={isOpen}\n      onClose={onClose}\n      title={lang('BoostingAwardSpecificUsers')}\n      hasCloseButton\n      shouldAdaptToSearch\n      withFixedHeight\n      confirmButtonText={lang('Save')}\n      onConfirm={handleModalConfirm}\n      onEnter={handleModalConfirm}\n    >\n      <PeerPicker\n        itemIds={displayedMemberIds}\n        selectedIds={selectedIds}\n        filterValue={searchQuery}\n        filterPlaceholder={lang('Search')}\n        onSelectedIdsChange={handleSelectedMemberIdsChange}\n        onFilterChange={setSearchQuery}\n        isSearchable\n        withDefaultPadding\n        withStatus\n        allowMultiple\n        itemInputType=\"checkbox\"\n      />\n    </PickerModal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { giveawayChatId }): StateProps => {\n  const chatFullInfo = giveawayChatId ? selectChatFullInfo(global, giveawayChatId) : undefined;\n  if (!chatFullInfo) {\n    return {};\n  }\n\n  return {\n    members: chatFullInfo.members,\n    adminMembersById: chatFullInfo.adminMembersById,\n  };\n})(GiveawayUserPickerModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"P0kLOw15\",\"button\":\"ILuhBsJG\",\"main\":\"SqiN63Ef\",\"logo\":\"Me2hCsMs\",\"header-text\":\"UVDnB0Wq\",\"headerText\":\"UVDnB0Wq\",\"description\":\"v5yGzV6v\",\"header\":\"U6XNIToQ\",\"hidden-header\":\"tDZc21ZC\",\"hiddenHeader\":\"tDZc21ZC\",\"close-button\":\"OX6_HqAd\",\"closeButton\":\"OX6_HqAd\",\"premium-header-text\":\"v6hiGpEn\",\"premiumHeaderText\":\"v6hiGpEn\",\"primary-footer-text\":\"YGbiSd3e\",\"primaryFooterText\":\"YGbiSd3e\",\"section\":\"rZRDMqUL\",\"types\":\"sQ5PkKEs\",\"footer\":\"hD_AEzjd\",\"options\":\"JjDLNrKG\",\"giveawayTitle\":\"p5Hn4Q6E\",\"subscription\":\"rniPcuiP\",\"starSubscription\":\"bzRAETfR\",\"subscriptionOption\":\"ggZrgZnv\",\"status\":\"q1y2qUTn\",\"info\":\"IsT38nlq\",\"titleInfo\":\"nmsfBLut\",\"month\":\"TsGuei3B\",\"quantity\":\"G9H3tm6D\",\"floatingBadge\":\"xKl2UeV8\",\"floatingBadgeColor\":\"HLx3wTBD\",\"floatingBadgeButtonColor\":\"JLH0MExt\",\"floatingBadgeIcon\":\"Ftr7zf2v\",\"floatingBadgeValue\":\"Ce0Ob2tg\",\"subscriptionFooter\":\"rDFQAfTt\",\"premiumFeatures\":\"eNQ_nrKr\",\"dateButton\":\"GeKqKRgP\",\"title\":\"LZ3vPzak\",\"checkboxSection\":\"Z9QJQ6IS\",\"prizesSection\":\"eQVP0Nx8\",\"prizesInput\":\"qMYNwiUZ\",\"subLabelClassName\":\"txXJxVFu\",\"prepaidImg\":\"ldn4mh2T\",\"addButton\":\"sOXvh85b\",\"addChannel\":\"aGbyR60s\",\"removeChannel\":\"UZdErfVI\",\"starOptions\":\"cLhNkYPB\",\"transition\":\"vEI2Wewt\"};","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiCountry,\n  ApiPremiumGiftCodeOption,\n  ApiPrepaidGiveaway,\n  ApiPrepaidStarsGiveaway,\n  ApiStarGiveawayOption,\n  ApiTypePrepaidGiveaway,\n  ApiUser,\n} from '../../../api/types';\n\nimport {\n  GIVEAWAY_BOOST_PER_PREMIUM,\n  GIVEAWAY_MAX_ADDITIONAL_CHANNELS,\n  GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  GIVEAWAY_MAX_ADDITIONAL_USERS,\n  STARS_CURRENCY_CODE,\n} from '../../../config';\nimport { getUserFullName, isChatChannel } from '../../../global/helpers';\nimport {\n  selectChat,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { unique } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport CountryPickerModal from '../../common/CountryPickerModal';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport Icon from '../../common/icons/Icon';\nimport StarTopupOptionList from '../../modals/stars/StarTopupOptionList';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport InputText from '../../ui/InputText';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSliderWithMarks from '../../ui/RangeSliderWithMarks';\nimport Switcher from '../../ui/Switcher';\nimport GiveawayChannelPickerModal from './GiveawayChannelPickerModal';\nimport GiveawayTypeOption from './GiveawayTypeOption';\nimport GiveawayUserPickerModal from './GiveawayUserPickerModal';\nimport PremiumSubscriptionOption from './PremiumSubscriptionOption';\n\nimport styles from './GiveawayModal.module.scss';\n\nimport GiftBlueRound from '../../../assets/premium/GiftBlueRound.svg';\nimport GiftGreenRound from '../../../assets/premium/GiftGreenRound.svg';\nimport GiftRedRound from '../../../assets/premium/GiftRedRound.svg';\nimport GiftStar from '../../../assets/premium/GiftStar.svg';\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  userIds?: string[];\n};\n\ntype StateProps = {\n  chatId?: string;\n  gifts?: ApiPremiumGiftCodeOption[];\n  isOpen?: boolean;\n  fromUser?: ApiUser;\n  selectedMemberList?: string[] | undefined;\n  selectedChannelList?: string[] | undefined;\n  giveawayBoostPerPremiumLimit?: number;\n  userSelectionLimit?: number;\n  countryList: ApiCountry[];\n  prepaidGiveaway?: ApiTypePrepaidGiveaway;\n  countrySelectionLimit: number | undefined;\n  isChannel?: boolean;\n  isStarsGiftEnabled?: boolean;\n  starsGiftOptions?: ApiStarGiveawayOption[] | undefined;\n};\n\ntype GiveawayAction = 'createPremiumGiveaway' | 'createStarsGiveaway';\ntype ApiGiveawayType = 'premium_giveaway' | 'stars_giveaway';\ntype SubscribersType = 'all' | 'new';\n\ninterface TypeOption {\n  name: string;\n  text: string;\n  value: ApiGiveawayType;\n  img: string;\n  actions?: GiveawayAction;\n  isLink: boolean;\n  onClickAction?: () => void;\n}\n\nconst DEFAULT_CUSTOM_EXPIRE_DATE = 86400 * 3 * 1000; // 3 days\nconst MAX_ADDITIONAL_CHANNELS = 9;\nconst DEFAULT_BOOST_COUNT = 5;\n\nconst GIVEAWAY_IMG_LIST: { [key: number]: string } = {\n  3: GiftGreenRound,\n  6: GiftBlueRound,\n  12: GiftRedRound,\n};\n\nconst GiveawayModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  gifts,\n  isOpen,\n  isChannel,\n  selectedMemberList,\n  selectedChannelList,\n  giveawayBoostPerPremiumLimit = GIVEAWAY_BOOST_PER_PREMIUM,\n  countryList,\n  prepaidGiveaway,\n  countrySelectionLimit = GIVEAWAY_MAX_ADDITIONAL_COUNTRIES,\n  userSelectionLimit = GIVEAWAY_MAX_ADDITIONAL_USERS,\n  isStarsGiftEnabled,\n  starsGiftOptions,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const dialogRef = useRef<HTMLDivElement>(null);\n  const {\n    closeGiveawayModal, openInvoice, openPremiumModal,\n    launchPrepaidGiveaway, launchPrepaidStarsGiveaway,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isCountryPickerModalOpen, openCountryPickerModal, closeCountryPickerModal] = useFlag();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const [isUserPickerModalOpen, openUserPickerModal, closeUserPickerModal] = useFlag();\n  const [isChannelPickerModalOpen, openChannelPickerModal, closeChannelPickerModal] = useFlag();\n\n  const TYPE_OPTIONS: TypeOption[] = [{\n    name: 'Premium.Title',\n    text: 'BoostingWinnersRandomly',\n    value: 'premium_giveaway',\n    img: GiftBlueRound,\n    actions: 'createPremiumGiveaway',\n    isLink: true,\n    onClickAction: () => {\n      openUserPickerModal();\n    },\n  }];\n\n  if (isStarsGiftEnabled) {\n    TYPE_OPTIONS.push({\n      name: 'TelegramStars',\n      text: 'BoostingWinnersRandomly',\n      value: 'stars_giveaway',\n      img: GiftStar,\n      actions: 'createStarsGiveaway',\n      isLink: false,\n    });\n  }\n\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [isHeaderHidden, setHeaderHidden] = useState(true);\n  const [selectedRandomUserCount, setSelectedRandomUserCount] = useState<number>(DEFAULT_BOOST_COUNT);\n  const [selectedGiveawayOption, setGiveawayOption] = useState<ApiGiveawayType>(TYPE_OPTIONS[0].value);\n  const [selectedStarOption, setSelectedStarOption] = useState<ApiStarGiveawayOption | undefined>();\n  const [selectedSubscriberOption, setSelectedSubscriberOption] = useState<SubscribersType>('all');\n  const [selectedMonthOption, setSelectedMonthOption] = useState<number | undefined>();\n  const [selectedUserIds, setSelectedUserIds] = useState<string[]>([]);\n  const [selectedChannelIds, setSelectedChannelIds] = useState<string[]>([]);\n  const [selectedCountryIds, setSelectedCountryIds] = useState<string[] | undefined>([]);\n  const [shouldShowWinners, setShouldShowWinners] = useState<boolean>(false);\n  const [shouldShowPrizes, setShouldShowPrizes] = useState<boolean>(false);\n  const [prizeDescription, setPrizeDescription] = useState<string | undefined>(undefined);\n  const [dataPrepaidGiveaway, setDataPrepaidGiveaway] = useState<ApiPrepaidGiveaway | undefined>(undefined);\n  const [\n    dataStarsPrepaidGiveaway, setDataStarsPrepaidGiveaway,\n  ] = useState<ApiPrepaidStarsGiveaway | undefined>(undefined);\n\n  const isPremiumGiveaway = selectedGiveawayOption === 'premium_giveaway';\n  const isStarsGiveaway = selectedGiveawayOption === 'stars_giveaway';\n  const selectedUserCount = isPremiumGiveaway\n  && !selectedUserIds.length ? selectedRandomUserCount : selectedUserIds.length;\n  const boostQuantity = selectedUserCount * giveawayBoostPerPremiumLimit;\n  const boostStarsQuantity = selectedStarOption?.yearlyBoosts;\n\n  const SUBSCRIBER_OPTIONS = useMemo(() => [\n    {\n      value: 'all',\n      label: lang(isChannel ? 'BoostingAllSubscribers' : 'BoostingAllMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n    {\n      value: 'new',\n      label: lang(isChannel ? 'BoostingNewSubscribers' : 'BoostingNewMembers'),\n      subLabel: selectedCountryIds && selectedCountryIds.length > 0\n        ? lang('Giveaway.ReceiverType.Countries', selectedCountryIds.length)\n        : lang('BoostingFromAllCountries'),\n    },\n  ], [isChannel, lang, selectedCountryIds]);\n\n  const monthQuantity = lang('Months', selectedMonthOption);\n  const isStarsPrepaidGiveaway = prepaidGiveaway?.type === 'starsGiveaway';\n  const isPremiumPrepaidGiveaway = prepaidGiveaway?.type === 'giveaway';\n\n  const selectedGift = useMemo(() => {\n    return gifts?.find((gift) => gift.months === selectedMonthOption && gift.users === selectedUserCount);\n  }, [gifts, selectedMonthOption, selectedUserCount]);\n\n  const selectedStarsGift = useMemo(() => {\n    return starsGiftOptions?.find((gift) => {\n      return isStarsPrepaidGiveaway && gift.stars === (dataStarsPrepaidGiveaway?.stars);\n    });\n  }, [dataStarsPrepaidGiveaway, starsGiftOptions, isStarsPrepaidGiveaway]);\n\n  const filteredGifts = useMemo(() => {\n    return gifts?.filter((gift) => gift.users === selectedUserCount && gift.currency !== STARS_CURRENCY_CODE);\n  }, [gifts, selectedUserCount]);\n\n  const fullMonthlyAmount = useMemo(() => {\n    const basicGift = filteredGifts?.reduce((acc, gift) => {\n      return gift.amount < acc.amount ? gift : acc;\n    }, filteredGifts[0]);\n\n    return basicGift && Math.floor(basicGift.amount / basicGift.months);\n  }, [filteredGifts]);\n\n  const userCountOptions = useMemo(() => {\n    return unique((gifts?.filter((gift) => gift.currency !== STARS_CURRENCY_CODE)\n      ?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [gifts]);\n\n  const winnerCountOptions = useMemo(() => {\n    return unique((selectedStarOption?.winners?.map((winner) => winner.users) || [])).sort((a, b) => a - b);\n  }, [selectedStarOption]);\n\n  useEffect(() => {\n    if (isOpen && gifts?.length && !isStarsPrepaidGiveaway) {\n      setSelectedMonthOption(gifts?.[0].months);\n    }\n  }, [isOpen, gifts, isStarsPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && starsGiftOptions?.length && !isPremiumPrepaidGiveaway) {\n      setSelectedStarOption(starsGiftOptions?.[0]);\n    }\n  }, [isOpen, starsGiftOptions, isPremiumPrepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isStarsPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataStarsPrepaidGiveaway(prepaidGiveaway);\n    }\n  }, [isOpen, isStarsPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (isOpen && isPremiumPrepaidGiveaway) {\n      setSelectedRandomUserCount(prepaidGiveaway.quantity);\n      setDataPrepaidGiveaway(prepaidGiveaway);\n      setSelectedMonthOption(prepaidGiveaway.months);\n    }\n  }, [isOpen, isPremiumPrepaidGiveaway, prepaidGiveaway]);\n\n  useEffect(() => {\n    if (selectedMemberList) {\n      setSelectedUserIds(selectedMemberList);\n    }\n  }, [selectedMemberList]);\n\n  useEffect(() => {\n    if (selectedChannelList) {\n      setSelectedChannelIds(selectedChannelList);\n    }\n  }, [selectedChannelList]);\n\n  const handlePremiumClick = useLastCallback(() => {\n    openPremiumModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    setDataStarsPrepaidGiveaway(undefined);\n    setDataPrepaidGiveaway(undefined);\n    setSelectedStarOption(undefined);\n    setSelectedMonthOption(undefined);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n    closeGiveawayModal();\n  });\n\n  const handleClick = useLastCallback(() => {\n    if (isPremiumGiveaway) {\n      if (selectedUserIds?.length) {\n        openInvoice({\n          type: 'giftcode',\n          boostChannelId: chatId!,\n          userIds: selectedUserIds,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      } else {\n        openInvoice({\n          type: 'giveaway',\n          chatId: chatId!,\n          additionalChannelIds: selectedChannelIds,\n          isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n          countries: selectedCountryIds,\n          areWinnersVisible: shouldShowWinners,\n          prizeDescription,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n          option: selectedGift!,\n        });\n      }\n    } else {\n      openInvoice({\n        type: 'starsgiveaway',\n        chatId: chatId!,\n        additionalChannelIds: selectedChannelIds,\n        isOnlyForNewSubscribers: selectedSubscriberOption === 'new',\n        countries: selectedCountryIds,\n        areWinnersVisible: shouldShowWinners,\n        prizeDescription,\n        untilDate: customExpireDate / 1000,\n        currency: selectedStarOption!.currency,\n        amount: selectedStarOption!.amount,\n        stars: selectedStarOption!.stars,\n        users: selectedRandomUserCount,\n      });\n    }\n\n    handleClose();\n  });\n\n  const confirmLaunchPrepaidGiveaway = useLastCallback(() => {\n    if (isStarsPrepaidGiveaway) {\n      launchPrepaidStarsGiveaway({\n        chatId: chatId!,\n        giveawayId: dataStarsPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          stars: dataStarsPrepaidGiveaway!.stars,\n          currency: selectedStarsGift!.currency,\n          amount: selectedStarsGift!.amount,\n          users: dataStarsPrepaidGiveaway!.quantity,\n        },\n      });\n    } else {\n      launchPrepaidGiveaway({\n        chatId: chatId!,\n        giveawayId: dataPrepaidGiveaway!.id,\n        paymentPurpose: {\n          additionalChannelIds: selectedChannelIds,\n          countries: selectedCountryIds,\n          prizeDescription,\n          areWinnersVisible: shouldShowWinners,\n          untilDate: customExpireDate / 1000,\n          currency: selectedGift!.currency,\n          amount: selectedGift!.amount,\n        },\n      });\n    }\n\n    closeConfirmModal();\n    handleClose();\n  });\n\n  const handleRandomUserCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handleWinnerCountChange = useLastCallback((newValue) => {\n    setSelectedRandomUserCount(newValue);\n  });\n\n  const handlePrizeDescriptionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setPrizeDescription(e.target.value);\n  });\n\n  const userNames = useMemo(() => {\n    const usersById = getGlobal().users.byId;\n    return selectedUserIds?.map((userId) => getUserFullName(usersById[userId])).join(', ');\n  }, [selectedUserIds]);\n\n  function handleScroll(e: React.UIEvent<HTMLDivElement>) {\n    const { scrollTop } = e.currentTarget;\n\n    setHeaderHidden(scrollTop <= 150);\n  }\n\n  const handleChangeSubscriberOption = useLastCallback((value) => {\n    setSelectedSubscriberOption(value);\n  });\n\n  const handleChangeTypeOption = useLastCallback((value: ApiGiveawayType) => {\n    setGiveawayOption(value);\n    setSelectedUserIds([]);\n    setSelectedRandomUserCount(DEFAULT_BOOST_COUNT);\n  });\n\n  const handleExpireDateChange = useLastCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  });\n\n  const handleSetCountriesListChange = useLastCallback((value: string[]) => {\n    setSelectedCountryIds(value);\n  });\n\n  const handleSelectedUserIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedUserIds(newSelectedIds);\n    if (!newSelectedIds.length) {\n      setGiveawayOption('premium_giveaway');\n    }\n  });\n\n  const handleSelectedChannelIdsChange = useLastCallback((newSelectedIds: string[]) => {\n    setSelectedChannelIds(newSelectedIds);\n  });\n\n  const handleShouldShowWinnersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowWinners(e.target.checked);\n  });\n\n  const handleShouldShowPrizesChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setShouldShowPrizes(e.target.checked);\n  });\n\n  const onClickActionHandler = useLastCallback(() => {\n    openCountryPickerModal();\n  });\n\n  const handleStarClick = useLastCallback((option) => {\n    setSelectedStarOption(option);\n  });\n\n  function renderTypeOptions() {\n    return (\n      <div className={styles.options}>\n        {TYPE_OPTIONS.map((option) => {\n          return (\n            <GiveawayTypeOption\n              key={option.name}\n              name={option.name}\n              text={option.text}\n              option={option.value}\n              img={option.img}\n              onChange={handleChangeTypeOption}\n              checked={selectedGiveawayOption === option.value}\n              isLink={option.isLink}\n              userNames={userNames}\n              selectedMemberIds={selectedUserIds}\n              onClickAction={option.onClickAction}\n            />\n          );\n        })}\n      </div>\n    );\n  }\n\n  function renderSubscribersOptions() {\n    return (\n      <div className={styles.options}>\n        <RadioGroup\n          name=\"subscribers\"\n          options={SUBSCRIBER_OPTIONS}\n          selected={selectedSubscriberOption}\n          onChange={handleChangeSubscriberOption}\n          onClickAction={onClickActionHandler}\n          subLabelClassName={styles.subLabelClassName}\n          isLink\n        />\n      </div>\n    );\n  }\n\n  function renderSubscriptionOptions() {\n    return (\n      <div className={styles.options}>\n        {filteredGifts?.map((gift) => (\n          <PremiumSubscriptionOption\n            isGiveaway\n            key={gift.months}\n            option={gift}\n            fullMonthlyAmount={fullMonthlyAmount!}\n            checked={gift.months === selectedMonthOption}\n            onChange={setSelectedMonthOption}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderPremiumFeaturesLink() {\n    const info = lang('GiftPremiumListFeaturesAndTerms');\n    const parts = info.match(/([^*]*)\\*([^*]+)\\*(.*)/);\n\n    if (!parts || parts.length < 4) {\n      return undefined;\n    }\n\n    return (\n      <p className={styles.premiumFeatures}>\n        {parts[1]}\n        <Link isPrimary onClick={handlePremiumClick}>{parts[2]}</Link>\n        {parts[3]}\n      </p>\n    );\n  }\n\n  function deleteParticipantsHandler(id: string) {\n    const filteredChannelIds = selectedChannelIds.filter((channelId) => channelId !== id);\n    setSelectedChannelIds(filteredChannelIds);\n  }\n\n  function renderStarOptionList() {\n    return (\n      <StarTopupOptionList\n        className={styles.starOptions}\n        options={starsGiftOptions}\n        selectedStarCount={selectedRandomUserCount}\n        selectedStarOption={selectedStarOption}\n        onClick={handleStarClick}\n      />\n    );\n  }\n\n  function renderGiveawayOptionList() {\n    return (\n      <>\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingChannelsGroupsIncludedGiveaway')}\n          </h2>\n\n          <ListItem\n            inactive\n            className=\"chat-item-clickable contact-list-item\"\n          >\n            <GroupChatInfo\n              chatId={chatId!}\n              status={lang(isChannel ? 'BoostingChannelWillReceiveBoost'\n                : 'BoostingGroupWillReceiveBoost', boostQuantity || boostStarsQuantity, 'i')}\n            />\n          </ListItem>\n\n          {selectedChannelIds?.map((channelId) => {\n            return (\n              <ListItem\n                ripple\n                key={channelId}\n                className=\"chat-item-clickable contact-list-item\"\n                /* eslint-disable-next-line react/jsx-no-bind */\n                onClick={() => deleteParticipantsHandler(channelId)}\n                rightElement={(<Icon name=\"close\" className={styles.removeChannel} />)}\n              >\n                <GroupChatInfo\n                  chatId={channelId.toString()}\n                />\n              </ListItem>\n            );\n          })}\n\n          {selectedChannelIds.length < MAX_ADDITIONAL_CHANNELS && (\n            <ListItem\n              icon=\"add\"\n              ripple\n              onClick={openChannelPickerModal}\n              className={styles.addButton}\n              iconClassName={styles.addChannel}\n            >\n              {lang('BoostingAddChannelOrGroup')}\n            </ListItem>\n          )}\n        </div>\n\n        <div className={styles.section}>\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingEligibleUsers')}\n          </h2>\n\n          {renderSubscribersOptions()}\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang(isChannel ? 'BoostGift.LimitSubscribersInfo' : 'lng_giveaway_users_about_group'))}\n        </div>\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayAdditionalPrizes')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowPrizes}\n              onChange={handleShouldShowPrizesChange}\n            />\n          </div>\n\n          {shouldShowPrizes && (\n            <div className={styles.prizesSection}>\n              <h2 className={styles.title}>\n                {selectedRandomUserCount}\n              </h2>\n              <InputText\n                className={styles.prizesInput}\n                value={prizeDescription}\n                onChange={handlePrizeDescriptionChange}\n                label={lang('BoostingGiveawayEnterYourPrize')}\n              />\n            </div>\n          )}\n        </div>\n\n        {shouldShowPrizes ? (\n          !isStarsGiveaway && !isStarsPrepaidGiveaway ? (\n            <div className={styles.subscription}>\n              {prizeDescription?.length ? renderText(lang('BoostingGiveawayAdditionPrizeCountNameHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, prizeDescription, monthQuantity]\n                  : [selectedUserCount, prizeDescription, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown']) : renderText(lang('BoostingGiveawayAdditionPrizeCountHint',\n                dataPrepaidGiveaway\n                  ? [dataPrepaidGiveaway.quantity, monthQuantity]\n                  : [selectedUserCount, monthQuantity],\n                undefined,\n                selectedMonthOption), ['simple_markdown'])}\n            </div>\n          ) : undefined\n        ) : (\n          <div className={styles.subscription}>\n            {renderText(lang('BoostingGiveawayAdditionPrizeHint'))}\n          </div>\n        )}\n\n        <div className={styles.section}>\n          <div className={styles.checkboxSection}>\n            <h2 className={styles.title}>\n              {lang('BoostingGiveawayShowWinners')}\n            </h2>\n\n            <Switcher\n              label={lang('BoostingGiveawayAdditionalPrizes')}\n              checked={shouldShowWinners}\n              onChange={handleShouldShowWinnersChange}\n            />\n          </div>\n        </div>\n\n        <div className={styles.subscription}>\n          {renderText(lang('BoostingGiveawayShowWinnersHint'))}\n        </div>\n\n        <div className={buildClassName(styles.section,\n          (dataPrepaidGiveaway || dataStarsPrepaidGiveaway || isStarsGiveaway) && styles.subscriptionFooter)}\n        >\n          <h2 className={styles.giveawayTitle}>\n            {lang('BoostingDateWhenGiveawayEnds')}\n          </h2>\n\n          <Button\n            ariaLabel={lang('BoostGift.DateEnds')}\n            className={buildClassName(styles.dateButton, 'expire-limit')}\n            isText\n            onClick={openCalendar}\n          >\n            <h3 className={styles.title}>\n              {lang('BoostGift.DateEnds')}\n            </h3>\n            {formatDateTimeToString(customExpireDate, lang.code)}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      className={styles.root}\n      onClose={handleClose}\n      isOpen={isOpen}\n      dialogRef={dialogRef}\n      onEnter={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')} onScroll={handleScroll}>\n        <Button\n          round\n          size=\"smaller\"\n          className={styles.closeButton}\n          color=\"translucent\"\n          onClick={handleClose}\n          ariaLabel={lang('Close')}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <img className={styles.logo} src={PremiumLogo} alt=\"\" draggable={false} />\n        <h2 className={styles.headerText}>\n          {renderText(lang('BoostingBoostsViaGifts'))}\n        </h2>\n        <div className={styles.description}>\n          {renderText(lang(isChannel ? 'BoostingGetMoreBoost' : 'BoostingGetMoreBoostsGroup'))}\n        </div>\n        <div className={buildClassName(styles.header, isHeaderHidden && styles.hiddenHeader)}>\n          <h2 className={styles.premiumHeaderText}>\n            {lang('BoostingBoostsViaGifts')}\n          </h2>\n        </div>\n        {(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? (\n          <div className={styles.status}>\n            <div>\n              {dataStarsPrepaidGiveaway ? (\n                <img className={styles.prepaidImg} src={GiftStar} alt=\"\" />\n              ) : (\n                <img className={styles.prepaidImg} src={GIVEAWAY_IMG_LIST[dataPrepaidGiveaway!.months]} alt=\"\" />\n              )}\n            </div>\n            <div className={styles.info}>\n              <h3 className={styles.title}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Title', dataStarsPrepaidGiveaway?.stars)\n                  : lang('BoostingTelegramPremiumCountPlural', dataPrepaidGiveaway!.quantity)}\n              </h3>\n              <p className={styles.month}>\n                {dataStarsPrepaidGiveaway ? lang('Giveaway.Stars.Prepaid.Desc', dataStarsPrepaidGiveaway?.quantity)\n                  : lang('PrepaidGiveawayMonths', dataPrepaidGiveaway?.months)}\n              </p>\n            </div>\n            <div className={styles.quantity}>\n              <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                  {dataStarsPrepaidGiveaway ? dataStarsPrepaidGiveaway?.boosts\n                    : dataPrepaidGiveaway!.quantity * (giveawayBoostPerPremiumLimit ?? GIVEAWAY_BOOST_PER_PREMIUM)}\n                </div>\n              </div>\n            </div>\n          </div>\n        ) : (\n          <div className={buildClassName(styles.section, styles.types)}>\n            {renderTypeOptions()}\n          </div>\n        )}\n\n        {isPremiumGiveaway && !selectedUserIds?.length && (\n          <>\n            {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingQuantityPrizes')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedUserCount}\n                    marks={userCountOptions}\n                    onChange={handleRandomUserCountChange}\n                  />\n                </div>\n\n                <div className={styles.subscription}>\n                  {renderText(lang('BoostingChooseHowMany'))}\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {isStarsGiveaway && (\n          <>\n            {!dataStarsPrepaidGiveaway && !dataPrepaidGiveaway && (\n              <>\n                <div className={styles.section}>\n                  <div className={styles.quantity}>\n                    <h2 className={styles.giveawayTitle}>\n                      {lang('BoostingStarsOptions')}\n                    </h2>\n                    <div className={buildClassName(styles.floatingBadge, styles.floatingBadgeColor)}>\n                      <Icon name=\"boost\" className={styles.floatingBadgeIcon} />\n                      <div className={styles.floatingBadgeValue} dir={lang.isRtl ? 'rtl' : undefined}>\n                        {boostStarsQuantity}\n                      </div>\n                    </div>\n                  </div>\n\n                  {renderStarOptionList()}\n                </div>\n\n                <div className={buildClassName(styles.subscription, styles.starSubscription)}>\n                  {renderText(lang('BoostGift.Stars.Info'))}\n                </div>\n\n                <div className={styles.section}>\n                  <h2 className={styles.giveawayTitle}>\n                    {lang('BoostingStarsQuantityPrizes')}\n                  </h2>\n\n                  <RangeSliderWithMarks\n                    rangeCount={selectedRandomUserCount}\n                    marks={winnerCountOptions}\n                    onChange={handleWinnerCountChange}\n                  />\n\n                  <div className={styles.subscription}>\n                    {renderText(lang('BoostingStarsQuantityPrizesInfo'))}\n                  </div>\n                </div>\n              </>\n            )}\n\n            {renderGiveawayOptionList()}\n          </>\n        )}\n\n        {!dataPrepaidGiveaway && !dataStarsPrepaidGiveaway && isPremiumGiveaway && (\n          <>\n            <div className={styles.section}>\n              <h2 className={styles.giveawayTitle}>\n                {lang('BoostingDurationOfPremium')}\n              </h2>\n\n              {renderSubscriptionOptions()}\n            </div>\n\n            <div className={buildClassName(styles.subscription, styles.subscriptionFooter)}>\n              {renderPremiumFeaturesLink()}\n            </div>\n          </>\n        )}\n\n        {selectedGiveawayOption && (\n          <div className={styles.footer}>\n            <Button\n              className={styles.button}\n              onClick={(dataPrepaidGiveaway || dataStarsPrepaidGiveaway) ? openConfirmModal : handleClick}\n            >\n              {lang('BoostingStartGiveaway')}\n            </Button>\n          </div>\n        )}\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n      <CountryPickerModal\n        isOpen={isCountryPickerModalOpen}\n        onClose={closeCountryPickerModal}\n        countryList={countryList}\n        onSubmit={handleSetCountriesListChange}\n        selectionLimit={countrySelectionLimit}\n      />\n      <GiveawayUserPickerModal\n        isOpen={isUserPickerModalOpen}\n        onClose={closeUserPickerModal}\n        onSelectedIdsConfirmed={handleSelectedUserIdsChange}\n        initialSelectedIds={selectedUserIds}\n        selectionLimit={userSelectionLimit}\n        giveawayChatId={chatId}\n      />\n      <GiveawayChannelPickerModal\n        isOpen={isChannelPickerModalOpen}\n        onClose={closeChannelPickerModal}\n        initialSelectedIds={selectedChannelIds}\n        onSelectedIdsConfirmed={handleSelectedChannelIdsChange}\n        selectionLimit={GIVEAWAY_MAX_ADDITIONAL_CHANNELS}\n        giveawayChatId={chatId}\n      />\n      <ConfirmDialog\n        title={lang('BoostingStartGiveawayConfirmTitle')}\n        text={lang('BoostingStartGiveawayConfirmText')}\n        confirmLabel={lang('Start')}\n        isOpen={isConfirmModalOpen}\n        onClose={closeConfirmModal}\n        confirmHandler={confirmLaunchPrepaidGiveaway}\n      />\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const {\n    giveawayModal,\n  } = selectTabState(global);\n  const chatId = giveawayModal?.chatId;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const isChannel = chat && isChatChannel(chat);\n\n  return {\n    chatId,\n    gifts: giveawayModal?.gifts,\n    selectedMemberList: giveawayModal?.selectedMemberIds,\n    selectedChannelList: giveawayModal?.selectedChannelIds,\n    giveawayBoostPerPremiumLimit: global.appConfig?.giveawayBoostsPerPremium,\n    isStarsGiftEnabled: global.appConfig?.isStarsGiftEnabled,\n    userSelectionLimit: global.appConfig?.giveawayAddPeersMax,\n    countrySelectionLimit: global.appConfig?.giveawayCountriesMax,\n    countryList: global.countryList.general,\n    prepaidGiveaway: giveawayModal?.prepaidGiveaway,\n    isChannel,\n    starsGiftOptions: giveawayModal?.starOptions,\n  };\n})(GiveawayModal));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiLimitTypeWithModal } from '../../../../api/types';\nimport type { OldLangFn } from '../../../../hooks/useOldLang';\nimport type { IconName } from '../../../../types/icons';\n\nimport { MAX_UPLOAD_FILEPART_SIZE } from '../../../../config';\nimport { selectIsCurrentUserPremium, selectIsPremiumPurchaseBlocked } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { formatFileSize } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useFlag from '../../../../hooks/useFlag';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Modal from '../../../ui/Modal';\nimport PremiumLimitsCompare from './PremiumLimitsCompare';\n\nimport styles from './PremiumLimitReachedModal.module.scss';\n\nconst LIMIT_DESCRIPTION: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFolders',\n  uploadMaxFileparts: 'LimitReachedFileSize',\n  dialogFilters: 'LimitReachedFolders',\n  dialogFolderPinned: 'LimitReachedPinDialogs',\n  channelsPublic: 'LimitReachedPublicLinks',\n  channels: 'LimitReachedCommunities',\n  chatlistInvites: 'LimitReachedFolderLinks',\n  chatlistJoined: 'LimitReachedSharedFolders',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogs',\n};\n\nconst LIMIT_DESCRIPTION_BLOCKED: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersLocked',\n  uploadMaxFileparts: 'LimitReachedFileSizeLocked',\n  dialogFilters: 'LimitReachedFoldersLocked',\n  dialogFolderPinned: 'LimitReachedPinDialogsLocked',\n  channelsPublic: 'LimitReachedPublicLinksLocked',\n  channels: 'LimitReachedCommunitiesLocked',\n  chatlistInvites: 'LimitReachedFolderLinksLocked',\n  chatlistJoined: 'LimitReachedSharedFoldersLocked',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsLocked',\n};\n\nconst LIMIT_DESCRIPTION_PREMIUM: Record<ApiLimitTypeWithModal, string> = {\n  dialogFiltersChats: 'LimitReachedChatInFoldersPremium',\n  uploadMaxFileparts: 'LimitReachedFileSizePremium',\n  dialogFilters: 'LimitReachedFoldersPremium',\n  dialogFolderPinned: 'LimitReachedPinDialogsPremium',\n  channelsPublic: 'LimitReachedPublicLinksPremium',\n  channels: 'LimitReachedCommunitiesPremium',\n  chatlistInvites: 'LimitReachedFolderLinksPremium',\n  chatlistJoined: 'LimitReachedSharedFoldersPremium',\n  savedDialogsPinned: 'LimitReachedPinSavedDialogsPremium',\n};\n\nconst LIMIT_ICON: Record<ApiLimitTypeWithModal, IconName> = {\n  dialogFiltersChats: 'chat-badge',\n  uploadMaxFileparts: 'file-badge',\n  dialogFilters: 'folder-badge',\n  dialogFolderPinned: 'pin-badge',\n  channelsPublic: 'link-badge',\n  channels: 'chats-badge',\n  chatlistInvites: 'link-badge',\n  chatlistJoined: 'folder-badge',\n  savedDialogsPinned: 'pin-badge',\n};\n\nconst LIMIT_VALUE_FORMATTER: Partial<Record<ApiLimitTypeWithModal, (...args: any[]) => string>> = {\n  uploadMaxFileparts: (lang: OldLangFn, value: number) => {\n    // The real size is not exactly 4gb, so we need to round it\n    if (value === 8000) return lang('FileSize.GB', '4');\n    if (value === 4000) return lang('FileSize.GB', '2');\n    return formatFileSize(lang, value * MAX_UPLOAD_FILEPART_SIZE);\n  },\n};\n\nfunction getLimiterDescription({\n  lang,\n  limitType,\n  isPremium,\n  canBuyPremium,\n  defaultValue,\n  premiumValue,\n  valueFormatter,\n}: {\n  lang: OldLangFn;\n  limitType?: ApiLimitTypeWithModal;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n  defaultValue?: number;\n  premiumValue?: number;\n  valueFormatter?: (...args: any[]) => string;\n}) {\n  if (!limitType) {\n    return undefined;\n  }\n\n  const defaultValueFormatted = valueFormatter ? valueFormatter(lang, defaultValue) : defaultValue;\n  const premiumValueFormatted = valueFormatter ? valueFormatter(lang, premiumValue) : premiumValue;\n\n  if (isPremium) {\n    return lang(LIMIT_DESCRIPTION_PREMIUM[limitType], premiumValueFormatted);\n  }\n\n  return canBuyPremium\n    ? lang(LIMIT_DESCRIPTION[limitType],\n      limitType === 'channelsPublic' ? premiumValueFormatted : [defaultValueFormatted, premiumValueFormatted])\n    : lang(LIMIT_DESCRIPTION_BLOCKED[limitType], defaultValueFormatted);\n}\n\nexport type OwnProps = {\n  limit?: ApiLimitTypeWithModal;\n};\n\ntype StateProps = {\n  defaultValue?: number;\n  premiumValue?: number;\n  isPremium?: boolean;\n  canBuyPremium?: boolean;\n};\n\nconst PremiumLimitReachedModal: FC<OwnProps & StateProps> = ({\n  defaultValue,\n  premiumValue,\n  limit,\n  isPremium,\n  canBuyPremium,\n}) => {\n  const { closeLimitReachedModal, openPremiumModal } = getActions();\n  const lang = useOldLang();\n\n  const [isClosing, startClosing, stopClosing] = useFlag();\n\n  const handleClick = useCallback(() => {\n    openPremiumModal();\n    startClosing();\n  }, [openPremiumModal, startClosing]);\n\n  useEffect(() => {\n    if (!limit && isClosing) stopClosing();\n  }, [isClosing, limit, stopClosing]);\n\n  const title = lang('LimitReached');\n  const valueFormatter = limit && LIMIT_VALUE_FORMATTER[limit];\n  const description = getLimiterDescription({\n    lang,\n    limitType: limit,\n    isPremium,\n    canBuyPremium,\n    defaultValue,\n    premiumValue,\n    valueFormatter,\n  });\n  const icon = limit && LIMIT_ICON[limit];\n  const canUpgrade = canBuyPremium && !isPremium;\n\n  return (\n    <Modal\n      onClose={startClosing}\n      onCloseAnimationEnd={closeLimitReachedModal}\n      isOpen={Boolean(limit) && !isClosing}\n      title={title}\n      className={styles.root}\n    >\n      {!canUpgrade && (\n        <div className={styles.limitBadge}>\n          <i className={buildClassName(styles.limitIcon, icon, 'icon')} />\n          <div className={styles.limitValue}>{valueFormatter?.(\n            lang, isPremium ? premiumValue : defaultValue,\n          ) || (isPremium ? premiumValue : defaultValue)}\n          </div>\n        </div>\n      )}\n\n      {canUpgrade && (\n        <PremiumLimitsCompare\n          className={styles.limitCompare}\n          leftValue={valueFormatter?.(lang, defaultValue) || defaultValue?.toString()}\n          rightValue={valueFormatter?.(lang, premiumValue) || premiumValue?.toString()}\n          floatingBadgeIcon={icon}\n        />\n      )}\n\n      <div>\n        {renderText(description || '', ['simple_markdown', 'br'])}\n      </div>\n\n      <div className={styles.dialogButtons}>\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={startClosing}\n          color=\"primary\"\n        >\n          {lang(canUpgrade ? 'Cancel' : 'OK')}\n        </Button>\n        {canUpgrade\n      && (\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleClick}\n          color=\"primary\"\n        >\n          {lang('IncreaseLimit')}\n          <Icon name=\"double-badge\" className={styles.x2} />\n        </Button>\n      )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { limit }): StateProps => {\n    const { limits } = global.appConfig || {};\n    const isPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      defaultValue: limit ? limits?.[limit][0] : undefined,\n      premiumValue: limit ? limits?.[limit][1] : undefined,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isPremium,\n    };\n  },\n)(PremiumLimitReachedModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QAs_iFxO\",\"limit-compare\":\"k0O6Rnjh\",\"limitCompare\":\"k0O6Rnjh\",\"limit-badge\":\"Q5d_7bB4\",\"limitBadge\":\"Q5d_7bB4\",\"limit-value\":\"ArEy3hhB\",\"limitValue\":\"ArEy3hhB\",\"limit-icon\":\"rbnU7JVX\",\"limitIcon\":\"rbnU7JVX\",\"dialog-buttons\":\"RVM_RSap\",\"dialogButtons\":\"RVM_RSap\",\"x2\":\"esB1OhAF\",\"button-icon\":\"ydpxmYS3\",\"buttonIcon\":\"ydpxmYS3\"};","import type { RefObject } from 'react';\nimport { useRef, useState } from '../../../lib/teact/teact';\n\nimport { ANIMATION_END_DELAY } from '../../../config';\nimport animateScroll from '../../../util/animateScroll';\nimport { REM } from '../helpers/mediaDimensions';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nconst STICKER_INTERSECTION_THROTTLE = 200;\nconst STICKER_INTERSECTION_MARGIN = 100;\nconst SLIDE_TRANSITION_DURATION = 350 + ANIMATION_END_DELAY;\nconst SCROLL_MAX_DISTANCE_WHEN_CLOSE = 200;\nconst SCROLL_MAX_DISTANCE_WHEN_FAR = 80;\nconst FOCUS_MARGIN = 0.5 * REM;\n\nexport function useStickerPickerObservers(\n  containerRef: RefObject<HTMLDivElement>,\n  headerRef: RefObject<HTMLDivElement>,\n  idPrefix: string,\n  isHidden?: boolean,\n) {\n  const stickerSetIntersectionsRef = useRef<boolean[]>([]);\n\n  const [activeSetIndex, setActiveSetIndex] = useState<number>(0);\n\n  const {\n    observe: observeIntersectionForSet,\n    freeze: freezeForSet,\n    unfreeze: unfreezeForSet,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n  }, (entries) => {\n    const stickerSetIntersections = stickerSetIntersectionsRef.current;\n\n    entries.forEach((entry) => {\n      const index = Number(entry.target.id.replace(`${idPrefix}-`, ''));\n      stickerSetIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = stickerSetIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveSetIndex(minIntersectingIndex);\n  });\n\n  const {\n    observe: observeIntersectionForShowingItems,\n    freeze: freezeForShowingItems,\n    unfreeze: unfreezeForShowingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForPlayingItems,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: STICKER_INTERSECTION_THROTTLE,\n    margin: STICKER_INTERSECTION_MARGIN,\n  });\n\n  const {\n    observe: observeIntersectionForCovers,\n  } = useIntersectionObserver({\n    rootRef: headerRef,\n  });\n\n  useSyncEffect(() => {\n    if (isHidden) {\n      freezeForSet();\n      freezeForShowingItems();\n    } else {\n      setTimeout(() => {\n        unfreezeForShowingItems();\n        unfreezeForSet();\n      }, SLIDE_TRANSITION_DURATION);\n    }\n  }, [freezeForSet, freezeForShowingItems, isHidden, unfreezeForSet, unfreezeForShowingItems]);\n\n  const selectStickerSet = useLastCallback((index: number) => {\n    setActiveSetIndex((currentIndex) => {\n      const stickerSetEl = document.getElementById(`${idPrefix}-${index}`)!;\n      const isClose = Math.abs(currentIndex - index) === 1;\n\n      animateScroll({\n        container: containerRef.current!,\n        element: stickerSetEl,\n        position: 'start',\n        margin: FOCUS_MARGIN,\n        maxDistance: isClose ? SCROLL_MAX_DISTANCE_WHEN_CLOSE : SCROLL_MAX_DISTANCE_WHEN_FAR,\n      });\n\n      return index;\n    });\n  });\n\n  return {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForShowingItems,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"m6XpTzQX\",\"video\":\"OZHqKbDL\",\"image\":\"enA6c8gc\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiStickerSet } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_PICKER_HEADER } from '../../../config';\nimport { getStickerMediaHash } from '../../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getFirstLetters } from '../../../util/textFormat';\nimport { IS_WEBM_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useColorFilter from '../../../hooks/stickers/useColorFilter';\nimport useDynamicColorListener from '../../../hooks/stickers/useDynamicColorListener';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport { useIsIntersecting } from '../../../hooks/useIntersectionObserver';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useCustomEmoji from '../../common/hooks/useCustomEmoji';\n\nimport AnimatedSticker from '../../common/AnimatedSticker';\nimport CustomEmoji from '../../common/CustomEmoji';\nimport OptimizedVideo from '../../ui/OptimizedVideo';\n\nimport styles from './StickerSetCover.module.scss';\n\ntype OwnProps = {\n  stickerSet: ApiStickerSet;\n  size?: number;\n  noPlay?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n};\n\nconst StickerSetCover: FC<OwnProps> = ({\n  stickerSet,\n  size = STICKER_SIZE_PICKER_HEADER,\n  noPlay,\n  forcePlayback,\n  observeIntersection,\n  sharedCanvasRef,\n}) => {\n  const { loadStickers } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    hasThumbnail, hasVideoThumb, hasAnimatedThumb, hasStaticThumb, thumbCustomEmojiId,\n  } = stickerSet;\n\n  const { customEmoji } = useCustomEmoji(thumbCustomEmojiId);\n  const hasCustomColor = customEmoji?.shouldUseTextColor;\n  const customColor = useDynamicColorListener(containerRef, undefined, !hasCustomColor);\n  const colorFilter = useColorFilter(customColor);\n\n  const isIntersecting = useIsIntersecting(containerRef, observeIntersection);\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const shouldFallbackToSticker = !hasThumbnail\n    || (hasVideoThumb && !IS_WEBM_SUPPORTED && !hasAnimatedThumb && !hasStaticThumb);\n  const firstStickerHash = shouldFallbackToSticker && stickerSet.stickers?.[0]\n    && getStickerMediaHash(stickerSet.stickers[0], 'preview');\n  const firstStickerMediaData = useMedia(firstStickerHash, !isIntersecting);\n\n  const mediaHash = ((hasThumbnail && !firstStickerHash) || hasAnimatedThumb) && `stickerSet${stickerSet.id}`;\n  const mediaData = useMedia(mediaHash, !isIntersecting);\n  const isReady = thumbCustomEmojiId || mediaData || firstStickerMediaData;\n  const transitionClassNames = useMediaTransitionDeprecated(isReady);\n\n  const coords = useCoordsInSharedCanvas(containerRef, sharedCanvasRef);\n\n  useEffect(() => {\n    if (isIntersecting && !stickerSet.stickers?.length) {\n      loadStickers({\n        stickerSetInfo: stickerSet,\n      });\n    }\n  }, [isIntersecting, loadStickers, stickerSet]);\n\n  return (\n    <div\n      ref={containerRef}\n      className={buildClassName(styles.root, 'sticker-set-cover')}\n      style={`--_size: ${size}px`}\n    >\n      {isReady ? (\n        thumbCustomEmojiId ? (\n          <CustomEmoji\n            documentId={thumbCustomEmojiId}\n            size={size}\n            observeIntersectionForPlaying={observeIntersection}\n            noPlay={noPlay}\n          />\n        ) : hasAnimatedThumb ? (\n          <AnimatedSticker\n            className={transitionClassNames}\n            tgsUrl={mediaData}\n            size={size}\n            play={shouldPlay}\n            isLowPriority={!selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet)}\n            sharedCanvas={sharedCanvasRef?.current || undefined}\n            sharedCanvasCoords={coords}\n            forceAlways={forcePlayback}\n          />\n        ) : (hasVideoThumb && !shouldFallbackToSticker) ? (\n          <OptimizedVideo\n            className={buildClassName(styles.video, transitionClassNames)}\n            src={mediaData}\n            canPlay={shouldPlay}\n            style={colorFilter}\n            isPriority={forcePlayback}\n            loop\n            disablePictureInPicture\n          />\n        ) : (\n          <img\n            src={mediaData || firstStickerMediaData}\n            style={colorFilter}\n            className={buildClassName(styles.image, transitionClassNames)}\n            alt=\"\"\n            draggable={false}\n          />\n        )\n      ) : (\n        getFirstLetters(stickerSet.title, 2)\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerSetCover);\n","import type { MouseEvent as ReactMouseEvent, ReactNode } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiBotInlineMediaResult, ApiSticker } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../util/buildClassName';\nimport { getServerTime } from '../../util/serverTime';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useDynamicColorListener from '../../hooks/stickers/useDynamicColorListener';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport Icon from './icons/Icon';\nimport Sparkles from './Sparkles';\nimport StickerView from './StickerView';\n\nimport './StickerButton.scss';\n\ntype OwnProps<T> = {\n  sticker: ApiSticker;\n  size: number;\n  noPlay?: boolean;\n  title?: string;\n  className?: string;\n  noContextMenu?: boolean;\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  canViewSet?: boolean;\n  isSelected?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldIgnorePremium?: boolean;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  withTranslucentThumb?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection: ObserveFn;\n  observeIntersectionForShowing?: ObserveFn;\n  noShowPremium?: boolean;\n  onClick?: (arg: OwnProps<T>['clickArg'], isSilent?: boolean, shouldSchedule?: boolean) => void;\n  clickArg: T;\n  onFaveClick?: (sticker: ApiSticker) => void;\n  onUnfaveClick?: (sticker: ApiSticker) => void;\n  onRemoveRecentClick?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  isEffectEmoji?: boolean;\n  withSparkles?: boolean;\n};\n\nconst contentForStatusMenuContext = [\n  { title: 'SetTimeoutFor.Hours', value: 1, arg: 3600 },\n  { title: 'SetTimeoutFor.Hours', value: 2, arg: 7200 },\n  { title: 'SetTimeoutFor.Hours', value: 8, arg: 28800 },\n  { title: 'SetTimeoutFor.Days', value: 1, arg: 86400 },\n  { title: 'SetTimeoutFor.Days', value: 2, arg: 172800 },\n];\n\nconst StickerButton = <T extends number | ApiSticker | ApiBotInlineMediaResult | undefined = undefined>({\n  sticker,\n  size,\n  noPlay,\n  title,\n  className,\n  noContextMenu,\n  isSavedMessages,\n  isStatusPicker,\n  canViewSet,\n  observeIntersection,\n  observeIntersectionForShowing,\n  isSelected,\n  isCurrentUserPremium,\n  shouldIgnorePremium,\n  noShowPremium,\n  sharedCanvasRef,\n  withTranslucentThumb,\n  forcePlayback,\n  onClick,\n  clickArg,\n  onFaveClick,\n  onUnfaveClick,\n  onRemoveRecentClick,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  isEffectEmoji,\n  withSparkles,\n}: OwnProps<T>) => {\n  const { openStickerSet, openPremiumModal, setEmojiStatus } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const lang = useOldLang();\n  const hasCustomColor = sticker.shouldUseTextColor;\n  const customColor = useDynamicColorListener(ref, undefined, !hasCustomColor);\n\n  const {\n    id, stickerSetInfo,\n  } = sticker;\n\n  const isPremium = (!sticker.isFree && isEffectEmoji) || sticker.hasEffect;\n  const isCustomEmoji = sticker.isCustomEmoji || isEffectEmoji;\n  const isLocked = !isCurrentUserPremium && isPremium && !shouldIgnorePremium;\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const shouldLoad = isIntersecting;\n  const shouldPlay = isIntersecting && !noPlay;\n\n  const isIntesectingForShowing = useIsIntersecting(ref, observeIntersectionForShowing);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n  const shouldRenderContextMenu = Boolean(!noContextMenu && contextMenuAnchor);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => {\n    return isStatusPicker ? menuRef.current : ref.current!.querySelector('.sticker-context-menu .bubble');\n  });\n  const getLayout = useLastCallback(() => ({ withPortal: isStatusPicker, shouldAvoidNegativePosition: true }));\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenuOpen?.();\n    } else {\n      onContextMenuClose?.();\n    }\n  }, [isContextMenuOpen, onContextMenuClose, onContextMenuOpen]);\n\n  useEffect(() => {\n    if (!isIntersecting) handleContextMenuClose();\n  }, [handleContextMenuClose, isIntersecting]);\n\n  const handleClick = () => {\n    if (isContextMenuOpen) return;\n    if (isLocked) {\n      if (isEffectEmoji) {\n        openPremiumModal({ initialSection: 'effects' });\n      } else {\n        openPremiumModal({ initialSection: 'premium_stickers' });\n      }\n      return;\n    }\n    onClick?.(clickArg);\n  };\n\n  const handleMouseDown = (e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  };\n\n  const handleRemoveClick = useLastCallback((e: ReactMouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n    e.preventDefault();\n\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextRemoveRecent = useLastCallback(() => {\n    onRemoveRecentClick!(sticker);\n  });\n\n  const handleContextUnfave = useLastCallback(() => {\n    onUnfaveClick!(sticker);\n  });\n\n  const handleContextFave = useLastCallback(() => {\n    onFaveClick!(sticker);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick?.(clickArg, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick?.(clickArg, undefined, true);\n  });\n\n  const handleOpenSet = useLastCallback(() => {\n    openStickerSet({ stickerSetInfo });\n  });\n\n  const handleEmojiStatusExpiresClick = useLastCallback((e: React.SyntheticEvent, duration = 0) => {\n    e.preventDefault();\n    e.stopPropagation();\n\n    handleContextMenuClose();\n    onContextMenuClick?.();\n    setEmojiStatus({\n      emojiStatus: { type: 'regular', documentId: sticker.id, until: getServerTime() + duration },\n    });\n  });\n\n  const shouldShowCloseButton = !IS_TOUCH_ENV && onRemoveRecentClick;\n\n  const fullClassName = buildClassName(\n    'StickerButton',\n    onClick && 'interactive',\n    isSelected && 'selected',\n    isCustomEmoji && 'custom-emoji',\n    isEffectEmoji && 'effect-emoji',\n    className,\n  );\n\n  const contextMenuItems = useMemo(() => {\n    if (!shouldRenderContextMenu || noContextMenu || (isCustomEmoji && !isStatusPicker)) return [];\n\n    const items: ReactNode[] = [];\n\n    if (isCustomEmoji) {\n      contentForStatusMenuContext.forEach((item) => {\n        items.push(\n          <MenuItem onClick={handleEmojiStatusExpiresClick} clickArg={item.arg}>\n            {lang(item.title, item.value, 'i')}\n          </MenuItem>,\n        );\n      });\n\n      return items;\n    }\n\n    if (onUnfaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextUnfave}>\n          {lang('Stickers.RemoveFromFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (onFaveClick) {\n      items.push(\n        <MenuItem icon=\"favorite\" onClick={handleContextFave}>\n          {lang('Stickers.AddToFavorites')}\n        </MenuItem>,\n      );\n    }\n\n    if (!isLocked && onClick) {\n      if (!isSavedMessages) {\n        items.push(<MenuItem onClick={handleSendQuiet} icon=\"muted\">{lang('SendWithoutSound')}</MenuItem>);\n      }\n      items.push(\n        <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n          {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n        </MenuItem>,\n      );\n    }\n\n    if (canViewSet) {\n      items.push(\n        <MenuItem onClick={handleOpenSet} icon=\"stickers\">\n          {lang('ViewPackPreview')}\n        </MenuItem>,\n      );\n    }\n    if (onRemoveRecentClick) {\n      items.push(\n        <MenuItem icon=\"delete\" onClick={handleContextRemoveRecent}>\n          {lang('DeleteFromRecent')}\n        </MenuItem>,\n      );\n    }\n    return items;\n  }, [\n    shouldRenderContextMenu, noContextMenu, isCustomEmoji, isStatusPicker, onUnfaveClick, onFaveClick, isLocked,\n    onClick, canViewSet, onRemoveRecentClick, handleEmojiStatusExpiresClick, lang, handleContextUnfave,\n    handleContextFave, isSavedMessages, handleSendScheduled, handleSendQuiet, handleOpenSet, handleContextRemoveRecent,\n  ]);\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      title={title || (sticker?.emoji)}\n      data-sticker-id={id}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {withSparkles && <Sparkles preset=\"button\" /> }\n      {isIntesectingForShowing && (\n        <StickerView\n          containerRef={ref}\n          sticker={sticker}\n          isSmall\n          size={size}\n          shouldLoop\n          shouldPreloadPreview\n          noLoad={!shouldLoad}\n          noPlay={!shouldPlay}\n          noVideoOnMobile\n          withSharedAnimation\n          sharedCanvasRef={sharedCanvasRef}\n          withTranslucentThumb={withTranslucentThumb}\n          customColor={customColor}\n          forceAlways={forcePlayback}\n        />\n      )}\n      {!noShowPremium && isLocked && (\n        <div\n          className=\"sticker-locked\"\n        >\n          <Icon name=\"lock-badge\" />\n        </div>\n      )}\n      {!noShowPremium && isPremium && !isLocked && (\n        <div className=\"sticker-premium\">\n          <Icon name=\"star\" />\n        </div>\n      )}\n      {shouldShowCloseButton && (\n        <Button\n          className=\"sticker-remove-button\"\n          color=\"dark\"\n          round\n          noFastClick\n          onClick={handleRemoveClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      {Boolean(contextMenuItems.length) && (\n        <Menu\n          ref={menuRef}\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          getLayout={getLayout}\n          className=\"sticker-context-menu\"\n          autoClose\n          withPortal={isStatusPicker}\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {contextMenuItems}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StickerButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport { BASE_URL, IS_PACKAGED_ELECTRON } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { handleEmojiLoad, LOADED_EMOJIS } from '../../../util/emoji/emoji';\nimport { IS_EMOJI_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport './EmojiButton.scss';\n\ntype OwnProps = {\n  emoji: Emoji;\n  focus?: boolean;\n  onClick: (emoji: string, name: string) => void;\n};\n\nconst EmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick(emoji.native, emoji.id);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  const src = `${IS_PACKAGED_ELECTRON ? BASE_URL : '.'}/img-apple-64/${emoji.image}.png`;\n  const isLoaded = LOADED_EMOJIS.has(src);\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={`:${emoji.names[0]}:`}\n    >\n      {IS_EMOJI_SUPPORTED ? emoji.native : (\n        <img\n          src={src}\n          className={!isLoaded ? 'opacity-transition shown' : undefined}\n          alt={emoji.native}\n          loading=\"lazy\"\n          data-path={src}\n          onLoad={!isLoaded ? handleEmojiLoad : undefined}\n          draggable={false}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(EmojiButton);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"AVrrYEbM\",\"selected\":\"QkdO_lz1\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { ApiAvailableReaction, ApiReactionWithPaid } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER } from '../../../config';\nimport { getDocumentMediaHash, isSameReaction } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../helpers/animatedAssets';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCoordsInSharedCanvas from '../../../hooks/useCoordsInSharedCanvas';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\n\nimport AnimatedIconWithPreview from '../AnimatedIconWithPreview';\nimport CustomEmoji from '../CustomEmoji';\n\nimport styles from './ReactionEmoji.module.scss';\n\ntype OwnProps = {\n  reaction: ApiReactionWithPaid;\n  availableReactions?: ApiAvailableReaction[];\n  className?: string;\n  isSelected?: boolean;\n  loadAndPlay?: boolean;\n  observeIntersection?: ObserveFn;\n  sharedCanvasRef?: React.RefObject<HTMLCanvasElement>;\n  sharedCanvasHqRef?: React.RefObject<HTMLCanvasElement>;\n  forcePlayback?: boolean;\n  onClick: (reaction: ApiReactionWithPaid) => void;\n  onContextMenu?: (reaction: ApiReactionWithPaid) => void;\n};\n\nconst ReactionEmoji: FC<OwnProps> = ({\n  reaction,\n  availableReactions,\n  isSelected,\n  loadAndPlay,\n  observeIntersection,\n  sharedCanvasRef,\n  sharedCanvasHqRef,\n  forcePlayback,\n  onClick,\n  onContextMenu,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  const isCustom = reaction.type === 'custom';\n  const availableReaction = useMemo(() => (\n    availableReactions?.find((available) => isSameReaction(available.reaction, reaction))\n  ), [availableReactions, reaction]);\n  const thumbDataUri = availableReaction?.staticIcon?.thumbnail?.dataUri;\n  const animationId = availableReaction?.selectAnimation?.id;\n  const coords = useCoordsInSharedCanvas(ref, sharedCanvasRef);\n  const mediaData = useMedia(\n    availableReaction?.selectAnimation ? getDocumentMediaHash(availableReaction.selectAnimation, 'full') : undefined,\n    !animationId,\n  );\n\n  const {\n    isContextMenuOpen,\n    handleBeforeContextMenu,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(ref, reaction.type !== 'paid', undefined, undefined, undefined, true);\n\n  useEffect(() => {\n    if (isContextMenuOpen) {\n      onContextMenu?.(reaction);\n\n      handleContextMenuClose();\n      handleContextMenuHide();\n    }\n  }, [handleContextMenuClose, onContextMenu, handleContextMenuHide, isContextMenuOpen, reaction]);\n\n  const tgsUrl = reaction.type === 'paid' ? LOCAL_TGS_URLS.StarReaction : mediaData;\n  const handleClick = useLastCallback(() => {\n    onClick(reaction);\n  });\n\n  const transitionClassNames = useMediaTransitionDeprecated(mediaData);\n  const fullClassName = buildClassName(\n    styles.root,\n    isSelected && styles.selected,\n    !isCustom && 'sticker-reaction',\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onClick={handleClick}\n      title={availableReaction?.title}\n      data-sticker-id={isCustom ? reaction.documentId : undefined}\n      onMouseDown={handleBeforeContextMenu}\n      onContextMenu={handleContextMenu}\n    >\n      {isCustom ? (\n        <CustomEmoji\n          ref={ref}\n          documentId={reaction.documentId}\n          size={EMOJI_SIZE_PICKER}\n          noPlay={!loadAndPlay}\n          observeIntersectionForPlaying={observeIntersection}\n          sharedCanvasRef={sharedCanvasRef}\n          sharedCanvasHqRef={sharedCanvasHqRef}\n          withTranslucentThumb\n          forceAlways={forcePlayback}\n        />\n      ) : (\n        <AnimatedIconWithPreview\n          tgsUrl={tgsUrl}\n          thumbDataUri={thumbDataUri}\n          play={loadAndPlay}\n          noLoop={false}\n          size={EMOJI_SIZE_PICKER}\n          isLowPriority\n          className={transitionClassNames}\n          sharedCanvas={sharedCanvasRef!.current || undefined}\n          sharedCanvasCoords={coords}\n          forceAlways={forcePlayback}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ReactionEmoji);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction, ApiEmojiStatusType, ApiReactionWithPaid, ApiSticker,\n} from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  DEFAULT_STATUS_ICON_ID,\n  DEFAULT_TOPIC_ICON_STICKER_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  EMOJI_SIZE_PICKER,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  STICKER_SIZE_PICKER,\n} from '../../config';\nimport { getReactionKey } from '../../global/helpers';\nimport { selectIsAlwaysHighPriorityEmoji, selectIsSetPremium } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMediaTransitionDeprecated from '../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../hooks/useOldLang';\nimport useResizeObserver from '../../hooks/useResizeObserver';\nimport useWindowSize from '../../hooks/window/useWindowSize';\n\nimport EmojiButton from '../middle/composer/EmojiButton';\nimport Button from '../ui/Button';\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Icon from './icons/Icon';\nimport ReactionEmoji from './reactions/ReactionEmoji';\nimport StickerButton from './StickerButton';\n\nimport grey from '../../assets/icons/forumTopic/grey.svg';\n\ntype OwnProps = {\n  stickerSet: StickerSetOrReactionsSetOrRecent;\n  loadAndPlay: boolean;\n  index: number;\n  idPrefix: string;\n  isNearActive: boolean;\n  favoriteStickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldHideHeader?: boolean;\n  selectedReactionIds?: string[];\n  withDefaultTopicIcon?: boolean;\n  withDefaultStatusIcon?: boolean;\n  isChatEmojiSet?: boolean;\n  isChatStickerSet?: boolean;\n  isTranslucent?: boolean;\n  noContextMenus?: boolean;\n  forcePlayback?: boolean;\n  observeIntersection?: ObserveFn;\n  observeIntersectionForPlayingItems: ObserveFn;\n  observeIntersectionForShowingItems: ObserveFn;\n  availableReactions?: ApiAvailableReaction[];\n  onStickerSelect?: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onStickerUnfave?: (sticker: ApiSticker) => void;\n  onStickerFave?: (sticker: ApiSticker) => void;\n  onStickerRemoveRecent?: (sticker: ApiSticker) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n  recentEmojis?: string[];\n  allEmojis?: AllEmojis;\n  onEmojiSelect?: (emoji: string, name: string) => void;\n};\n\ntype StateProps = {\n  collectibleStatuses?: ApiEmojiStatusType[];\n};\n\nconst ITEMS_PER_ROW_FALLBACK = 8;\nconst ITEMS_MOBILE_PER_ROW_FALLBACK = 7;\nconst ITEMS_MINI_MOBILE_PER_ROW_FALLBACK = 6;\nconst MOBILE_WIDTH_THRESHOLD_PX = 440;\nconst MINI_MOBILE_WIDTH_THRESHOLD_PX = 362;\n\nconst StickerSet: FC<OwnProps & StateProps> = ({\n  stickerSet,\n  loadAndPlay,\n  index,\n  idPrefix,\n  isNearActive,\n  favoriteStickers,\n  availableReactions,\n  isSavedMessages,\n  isStatusPicker,\n  isReactionPicker,\n  isCurrentUserPremium,\n  shouldHideHeader,\n  withDefaultTopicIcon,\n  selectedReactionIds,\n  withDefaultStatusIcon,\n  isChatEmojiSet,\n  isChatStickerSet,\n  isTranslucent,\n  noContextMenus,\n  forcePlayback,\n  observeIntersection,\n  observeIntersectionForPlayingItems,\n  observeIntersectionForShowingItems,\n  onReactionSelect,\n  onReactionContext,\n  onStickerSelect,\n  onStickerUnfave,\n  onStickerFave,\n  onStickerRemoveRecent,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  collectibleStatuses,\n  recentEmojis,\n  allEmojis,\n  onEmojiSelect,\n}) => {\n  const {\n    clearRecentStickers,\n    clearRecentCustomEmoji,\n    clearRecentReactions,\n    openPremiumModal,\n    toggleStickerSet,\n    loadStickers,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const { width: windowWidth } = useWindowSize();\n  const [isConfirmModalOpen, openConfirmModal, closeConfirmModal] = useFlag();\n  const { isMobile } = useAppLayout();\n\n  const [itemsPerRow, setItemsPerRow] = useState(getItemsPerRowFallback(windowWidth));\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection ?? observeIntersectionForShowingItems);\n  const transitionClassNames = useMediaTransitionDeprecated(isIntersecting);\n\n  // `isNearActive` is set in advance during animation, but it is not reliable for short sets\n  const shouldRender = isNearActive || isIntersecting;\n\n  const stickerMarginPx = isMobile ? 8 : 4;\n  const emojiMarginPx = isMobile ? 8 : 10;\n  const emojiVerticalMarginPx = isMobile ? 8 : 4;\n  const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID;\n  const isStatusCollectible = stickerSet.id === COLLECTIBLE_STATUS_SET_ID;\n  const isFavorite = stickerSet.id === FAVORITE_SYMBOL_SET_ID;\n  const isPopular = stickerSet.id === POPULAR_SYMBOL_SET_ID;\n  const isEmoji = stickerSet.isEmoji;\n  const isPremiumSet = !isRecent && selectIsSetPremium(stickerSet);\n\n  const handleClearRecent = useLastCallback(() => {\n    if (isReactionPicker) {\n      clearRecentReactions();\n    } else if (isEmoji) {\n      clearRecentCustomEmoji();\n    } else {\n      clearRecentStickers();\n    }\n    closeConfirmModal();\n  });\n\n  const handleAddClick = useLastCallback(() => {\n    if (isPremiumSet && !isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'animated_emoji',\n      });\n    } else {\n      toggleStickerSet({\n        stickerSetId: stickerSet.id,\n      });\n    }\n  });\n\n  const handleDefaultTopicIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_TOPIC_ICON_STICKER_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const handleDefaultStatusIconClick = useLastCallback(() => {\n    onStickerSelect?.({\n      mediaType: 'sticker',\n      id: DEFAULT_STATUS_ICON_ID,\n      isLottie: false,\n      isVideo: false,\n      stickerSetInfo: {\n        shortName: 'dummy',\n      },\n    } satisfies ApiSticker);\n  });\n\n  const itemSize = isEmoji ? EMOJI_SIZE_PICKER : STICKER_SIZE_PICKER;\n  const margin = isEmoji ? emojiMarginPx : stickerMarginPx;\n  const verticalMargin = isEmoji ? emojiVerticalMarginPx : stickerMarginPx;\n\n  const calculateItemsPerRow = useLastCallback((width: number) => {\n    if (!width) {\n      return getItemsPerRowFallback(windowWidth);\n    }\n\n    return Math.floor((width + margin) / (itemSize + margin));\n  });\n\n  const handleResize = useLastCallback((entry: ResizeObserverEntry) => {\n    setItemsPerRow(calculateItemsPerRow(entry.contentRect.width));\n  });\n\n  useResizeObserver(ref, handleResize);\n\n  useEffect(() => {\n    if (!ref.current) return;\n    setItemsPerRow(calculateItemsPerRow(ref.current.clientWidth));\n  }, [calculateItemsPerRow]);\n\n  useEffect(() => {\n    if (shouldRender && !stickerSet.stickers?.length && !stickerSet.reactions?.length && stickerSet.accessHash) {\n      loadStickers({\n        stickerSetInfo: {\n          id: stickerSet.id,\n          accessHash: stickerSet.accessHash,\n        },\n      });\n    }\n  }, [shouldRender, loadStickers, stickerSet]);\n\n  const isLocked = !isSavedMessages && !isCurrentUserPremium && isPremiumSet && !isChatEmojiSet;\n\n  const isInstalled = stickerSet.installedDate && !stickerSet.isArchived;\n\n  const canCut = !isInstalled && stickerSet.id !== RECENT_SYMBOL_SET_ID\n    && stickerSet.id !== POPULAR_SYMBOL_SET_ID && stickerSet.id !== EFFECT_EMOJIS_SET_ID\n    && stickerSet.id !== EFFECT_STICKERS_SET_ID && !isChatEmojiSet && !isChatStickerSet;\n\n  const [isCut, , expand] = useFlag(canCut);\n  const itemsBeforeCutout = itemsPerRow * 3 - 1;\n  const totalItemsCount = (withDefaultTopicIcon || withDefaultStatusIcon) ? stickerSet.count + 1 : stickerSet.count;\n\n  const itemHeight = itemSize + verticalMargin;\n  const heightWhenCut = Math.ceil(Math.min(itemsBeforeCutout, totalItemsCount) / itemsPerRow)\n    * itemHeight - verticalMargin;\n  const height = isCut ? heightWhenCut : Math.ceil(totalItemsCount / itemsPerRow) * itemHeight - verticalMargin;\n\n  const favoriteStickerIdsSet = useMemo(() => (\n    favoriteStickers ? new Set(favoriteStickers.map(({ id }) => id)) : undefined\n  ), [favoriteStickers]);\n  const collectibleEmojiIdsSet = useMemo(() => (\n    collectibleStatuses ? new Set(collectibleStatuses.map(({ documentId }) => documentId)) : undefined\n  ), [collectibleStatuses]);\n  const withAddSetButton = !shouldHideHeader && !isRecent && !isStatusCollectible\n   && isEmoji && !isPopular && !isChatEmojiSet\n    && (!isInstalled || (!isCurrentUserPremium && !isSavedMessages));\n  const addSetButtonText = useMemo(() => {\n    if (isLocked) {\n      if (isInstalled) return lang('lng_emoji_premium_restore');\n      return lang('Unlock');\n    }\n\n    return lang('Add');\n  }, [isLocked, lang, isInstalled]);\n\n  return (\n    <div\n      ref={ref}\n      key={stickerSet.id}\n      id={`${idPrefix}-${index}`}\n      className={\n        buildClassName('symbol-set', isLocked && 'symbol-set-locked')\n      }\n    >\n      {!shouldHideHeader && (\n        <div className=\"symbol-set-header\">\n          <p className={buildClassName('symbol-set-title', withAddSetButton && 'symbol-set-title-external')}>\n            {isLocked && <Icon name=\"lock-badge\" className=\"symbol-set-locked-icon\" />}\n            <span className=\"symbol-set-name\">{stickerSet.title}</span>\n            {(isChatEmojiSet || isChatStickerSet) && (\n              <span className=\"symbol-set-chat\">{lang(isChatEmojiSet ? 'GroupEmoji' : 'GroupStickers')}</span>\n            )}\n            {withAddSetButton && Boolean(stickerSet.stickers) && (\n              <span className=\"symbol-set-amount\">\n                {lang(isEmoji ? 'EmojiCount' : 'Stickers', stickerSet.stickers.length, 'i')}\n              </span>\n            )}\n          </p>\n          {isRecent && (\n            <Icon className=\"symbol-set-remove\" name=\"close\" onClick={openConfirmModal} />\n          )}\n          {withAddSetButton && (\n            <Button\n              className=\"symbol-set-add-button\"\n              withPremiumGradient={isPremiumSet && !isCurrentUserPremium}\n              onClick={handleAddClick}\n              pill\n              size=\"tiny\"\n              fluid\n            >\n              {addSetButtonText}\n            </Button>\n          )}\n        </div>\n      )}\n      <div\n        className={buildClassName(\n          'symbol-set-container shared-canvas-container',\n          transitionClassNames,\n          stickerSet.id === EFFECT_EMOJIS_SET_ID && 'effect-emojis',\n        )}\n        style={`height: ${height}px;`}\n      >\n        <canvas\n          ref={sharedCanvasRef}\n          className=\"shared-canvas\"\n          style={canCut ? `height: ${heightWhenCut}px;` : undefined}\n        />\n        {(isRecent || isFavorite || canCut) && <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />}\n        {withDefaultTopicIcon && (\n          <Button\n            className=\"StickerButton custom-emoji\"\n            color=\"translucent\"\n            onClick={handleDefaultTopicIconClick}\n            key=\"default-topic-icon\"\n          >\n            <img src={grey} alt=\"Reset\" className=\"sticker-media\" draggable={false} />\n          </Button>\n        )}\n        {withDefaultStatusIcon && (\n          <Button\n            className=\"StickerButton custom-emoji status-default\"\n            color=\"translucent\"\n            onClick={handleDefaultStatusIconClick}\n            key=\"default-status-icon\"\n          >\n            <Icon name=\"star\" />\n          </Button>\n        )}\n        {shouldRender && stickerSet.reactions?.map((reaction) => {\n          const reactionId = getReactionKey(reaction);\n          const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n          return (\n            <ReactionEmoji\n              key={`${stickerSet.id}_${reactionId}`}\n              reaction={reaction}\n              isSelected={isSelected}\n              loadAndPlay={loadAndPlay}\n              availableReactions={availableReactions}\n              observeIntersection={observeIntersectionForPlayingItems}\n              onClick={onReactionSelect!}\n              onContextMenu={onReactionContext}\n              sharedCanvasRef={sharedCanvasRef}\n              sharedCanvasHqRef={sharedCanvasHqRef}\n              forcePlayback={forcePlayback}\n            />\n          );\n        })}\n        {shouldRender && recentEmojis?.map((name) => {\n          if (!allEmojis || !onEmojiSelect) { return undefined; }\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n        {shouldRender && stickerSet.stickers?.slice(0, isCut ? itemsBeforeCutout : stickerSet.stickers.length)\n          .map((sticker, i) => {\n            const isHqEmoji = (isRecent || isFavorite)\n              && selectIsAlwaysHighPriorityEmoji(getGlobal(), sticker.stickerSetInfo);\n            const canvasRef = (canCut && i >= itemsBeforeCutout) || isHqEmoji\n              ? sharedCanvasHqRef\n              : sharedCanvasRef;\n            const reactionId = sticker.isCustomEmoji ? sticker.id : sticker.emoji;\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            const withSparkles = sticker.id === COLLECTIBLE_STATUS_SET_ID\n            || collectibleEmojiIdsSet?.has(sticker.id);\n\n            return (\n              <StickerButton\n                key={sticker.id}\n                sticker={sticker}\n                size={itemSize}\n                observeIntersection={observeIntersectionForPlayingItems}\n                observeIntersectionForShowing={observeIntersectionForShowingItems}\n                noPlay={!loadAndPlay}\n                isSavedMessages={isSavedMessages}\n                isStatusPicker={isStatusPicker}\n                canViewSet\n                noContextMenu={noContextMenus}\n                isCurrentUserPremium={isCurrentUserPremium}\n                shouldIgnorePremium={isChatEmojiSet}\n                sharedCanvasRef={canvasRef}\n                withTranslucentThumb={isTranslucent}\n                onClick={onStickerSelect}\n                clickArg={sticker}\n                isSelected={isSelected}\n                onUnfaveClick={isFavorite && favoriteStickerIdsSet?.has(sticker.id) ? onStickerUnfave : undefined}\n                onFaveClick={!favoriteStickerIdsSet?.has(sticker.id) ? onStickerFave : undefined}\n                onRemoveRecentClick={isRecent ? onStickerRemoveRecent : undefined}\n                onContextMenuOpen={onContextMenuOpen}\n                onContextMenuClose={onContextMenuClose}\n                onContextMenuClick={onContextMenuClick}\n                forcePlayback={forcePlayback}\n                isEffectEmoji={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n                noShowPremium={isCurrentUserPremium\n                  && (stickerSet.id === EFFECT_STICKERS_SET_ID || stickerSet.id === EFFECT_EMOJIS_SET_ID)}\n                withSparkles={withSparkles}\n              />\n            );\n          })}\n        {isCut && totalItemsCount > itemsBeforeCutout && (\n          <Button\n            className=\"StickerButton custom-emoji set-expand\"\n            round\n            color=\"translucent\"\n            onClick={expand}\n            key=\"more\"\n          >\n            +{totalItemsCount - itemsBeforeCutout}\n          </Button>\n        )}\n      </div>\n\n      {isRecent && (\n        <ConfirmDialog\n          text={lang(isReactionPicker ? 'ClearRecentReactionsAlertMessage' : 'ClearRecentStickersAlertMessage')}\n          isOpen={isConfirmModalOpen}\n          onClose={closeConfirmModal}\n          confirmHandler={handleClearRecent}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return { collectibleStatuses };\n  },\n)(StickerSet));\n\nfunction getItemsPerRowFallback(windowWidth: number): number {\n  return windowWidth > MOBILE_WIDTH_THRESHOLD_PX\n    ? ITEMS_PER_ROW_FALLBACK\n    : (windowWidth < MINI_MOBILE_WIDTH_THRESHOLD_PX\n      ? ITEMS_MINI_MOBILE_PER_ROW_FALLBACK\n      : ITEMS_MOBILE_PER_ROW_FALLBACK);\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"lq8BD6Hc\",\"main\":\"p7c8y0LH\",\"hasHeader\":\"zTGriBHY\",\"main_customEmoji\":\"U0BL1VvK\",\"mainCustomEmoji\":\"U0BL1VvK\",\"header\":\"Qn3lBUNs\",\"headerWithBorder\":\"HMspKpNp\",\"stickerCover\":\"YKO0Obwy\",\"activated\":\"y02WwQk6\",\"pickerDisabled\":\"BZfaP1GD\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiEmojiStatusType,\n  ApiReaction, ApiReactionWithPaid, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport buildClassName from '../../util/buildClassName';\nimport { pickTruthy, unique, uniqueByField } from '../../util/iteratees';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './CustomEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  collectibleStatuses?: ApiEmojiStatusType[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  isWithPaidReaction?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\nconst CustomEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  collectibleStatuses,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  isWithPaidReaction,\n  onCustomEmojiSelect,\n  onReactionSelect,\n  onReactionContext,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const collectibleStatusEmojis = useMemo(() => {\n    const collectibleStatusEmojiIds = collectibleStatuses?.map((status) => status.documentId);\n    return customEmojisById && collectibleStatusEmojiIds?.map((id) => customEmojisById[id]).filter(Boolean);\n  }, [customEmojisById, collectibleStatuses]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const canLoadAndPlay = usePrevDuringAnimation(loadAndPlay || undefined, SLIDE_TRANSITION_DURATION);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice: ApiReactionWithPaid[] = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (isWithPaidReaction) {\n        topReactionsSlice.unshift({ type: 'paid' });\n      }\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = uniqueByField(defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []), 'id');\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n          isEmoji: true,\n        });\n      }\n      if (collectibleStatusEmojis?.length) {\n        defaultSets.push({\n          id: COLLECTIBLE_STATUS_SET_ID,\n          accessHash: '',\n          count: collectibleStatusEmojis.length,\n          stickers: collectibleStatusEmojis,\n          title: lang('CollectibleStatusesCategory'),\n          isEmoji: true,\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: oldLang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: recentCustomEmojis.length,\n        isEmoji: true,\n      });\n    }\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  }, [\n    addedCustomEmojiIds, isReactionPicker, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis,\n    customEmojiFeaturedIds, stickerSetsById, topReactions, availableReactions, oldLang, recentReactions,\n    defaultStatusIconsId, defaultTopicIconsId, isSavedMessages, defaultTagReactions, chatEmojiSetId,\n    isWithPaidReaction, collectibleStatusEmojis, lang,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !canLoadAndPlay}\n              forcePlayback\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n            />\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !canLoadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{oldLang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && canLoadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={onReactionSelect}\n              onReactionContext={onReactionContext}\n              onStickerSelect={handleEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return {\n      customEmojisById,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      collectibleStatuses: isStatusPicker ? collectibleStatuses : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      isWithPaidReaction: isReactionPicker && chatFullInfo?.isPaidReactionAvailable,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(CustomEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Qk9PEGRE\",\"activated\":\"WYeuJNQx\"};","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"hRzvfaRb\"};","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport { selectIsContextMenuTranslucent } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './StatusPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  statusButtonRef: RefObject<HTMLButtonElement>;\n  onEmojiStatusSelect: (emojiStatus: ApiSticker) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst StatusPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  statusButtonRef,\n  areFeaturedStickersLoaded,\n  isTranslucent,\n  onEmojiStatusSelect,\n  onClose,\n}) => {\n  const { loadFeaturedEmojiStickers } = getActions();\n\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown, markContextMenuShown, unmarkContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = statusButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, statusButtonRef]);\n\n  useEffect(() => {\n    if (isOpen && !areFeaturedStickersLoaded) {\n      loadFeaturedEmojiStickers();\n    }\n  }, [areFeaturedStickersLoaded, isOpen, loadFeaturedEmojiStickers]);\n\n  const handleEmojiSelect = useCallback((sticker: ApiSticker) => {\n    onEmojiStatusSelect(sticker);\n    onClose();\n  }, [onClose, onEmojiStatusSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        noCompact\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <CustomEmojiPicker\n          idPrefix=\"status-emoji-set-\"\n          loadAndPlay={isOpen}\n          isHidden={!isOpen}\n          isStatusPicker\n          isTranslucent={isTranslucent}\n          onContextMenuOpen={markContextMenuShown}\n          onContextMenuClose={unmarkContextMenuShown}\n          onCustomEmojiSelect={handleEmojiSelect}\n          onContextMenuClick={onClose}\n        />\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    areFeaturedStickersLoaded: Boolean(global.customEmojis.featuredIds?.length),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n  };\n})(StatusPickerMenu));\n","import type { RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport { FILTER_EMOTICON_ICONS } from '../../../config';\n\nimport useFlag from '../../../hooks/useFlag';\n\nimport Icon from '../../common/icons/Icon';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\n\nimport styles from './FolderIconPickerMenu.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  iconButtonRef: RefObject<HTMLButtonElement>;\n  onIconSelect: (icon: IconName) => void;\n  onClose: () => void;\n};\n\ninterface StateProps {\n  areFeaturedStickersLoaded?: boolean;\n  isTranslucent?: boolean;\n}\n\nconst FolderIconPickerMenu: FC<OwnProps & StateProps> = ({\n  isOpen,\n  iconButtonRef,\n  onIconSelect,\n  onClose,\n}) => {\n  const transformOriginX = useRef<number>();\n  const [isContextMenuShown] = useFlag();\n  useEffect(() => {\n    transformOriginX.current = iconButtonRef.current!.getBoundingClientRect().right;\n  }, [isOpen, iconButtonRef]);\n\n  const handleIconSelect = useCallback((icon: IconName) => {\n    onIconSelect(icon);\n    onClose();\n  }, [onClose, onIconSelect]);\n\n  return (\n    <Portal>\n      <Menu\n        isOpen={isOpen}\n        positionX=\"right\"\n        bubbleClassName={styles.menuContent}\n        onClose={onClose}\n        transformOriginX={transformOriginX.current}\n        noCloseOnBackdrop={isContextMenuShown}\n      >\n        <div id=\"folder-icon-picker-menu\">\n          {Object.entries(FILTER_EMOTICON_ICONS).map(([, iconName]) => (\n            // eslint-disable-next-line react/jsx-no-bind\n            <Icon name={iconName} onClick={() => handleIconSelect(iconName)} />\n          ))}\n        </div>\n      </Menu>\n    </Portal>\n  );\n};\n\nexport default memo(FolderIconPickerMenu);\n","// extracted by mini-css-extract-plugin\nexport default {\"menuContent\":\"iM6Fu_JN\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"C9sWDINB\",\"topEmoji\":\"gdG3oY21\",\"description\":\"p7S4AH8A\",\"title\":\"KVpsce1g\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SuggestedStatusModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['suggestedStatusModal'];\n};\n\ntype StateProps = {\n  bot?: ApiUser;\n  currentUser?: ApiUser;\n};\n\nconst CUSTOM_EMOJI_SIZE = 6 * REM;\n\nconst SuggestedStatusModal = ({ modal, currentUser, bot }: OwnProps & StateProps) => {\n  const { setEmojiStatus, closeSuggestedStatusModal, sendWebAppEvent } = getActions();\n\n  const lang = useLang();\n\n  const isOpen = Boolean(modal);\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !renderingModal) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: renderingModal.customEmojiId,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, renderingModal]);\n\n  const description = useMemo(() => {\n    if (!renderingModal || !bot) return undefined;\n\n    const botName = getUserFullName(bot);\n\n    if (renderingModal.duration) {\n      return lang('BotSuggestedStatusFor', {\n        bot: botName,\n        duration: formatShortDuration(lang, renderingModal.duration),\n      }, {\n        withNodes: true,\n        withMarkdown: true,\n      });\n    }\n\n    return lang('BotSuggestedStatus', { bot: botName }, { withNodes: true, withMarkdown: true });\n  }, [bot, lang, renderingModal]);\n\n  const handleClose = useLastCallback(() => {\n    const webAppKey = renderingModal?.webAppKey;\n\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'emoji_status_failed',\n          eventData: {\n            error: 'USER_DECLINED',\n          },\n        },\n      });\n    }\n\n    closeSuggestedStatusModal();\n  });\n\n  const handleSetStatus = useLastCallback(() => {\n    if (!renderingModal) return;\n\n    const expires = renderingModal.duration ? getServerTime() + renderingModal.duration : undefined;\n\n    setEmojiStatus({\n      referrerWebAppKey: renderingModal.webAppKey,\n      emojiStatus: { type: 'regular', documentId: renderingModal.customEmojiId, until: expires },\n    });\n    closeSuggestedStatusModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      isSlim\n      onClose={handleClose}\n    >\n      {renderingModal && (\n        <CustomEmoji\n          className={styles.topEmoji}\n          documentId={renderingModal.customEmojiId}\n          size={CUSTOM_EMOJI_SIZE}\n          loopLimit={1}\n          forceAlways\n        />\n      )}\n      <div>\n        <h3 className={styles.title}>{lang('BotSuggestedStatusTitle')}</h3>\n        <p className={styles.description}>{description}</p>\n      </div>\n      {mockPeerWithStatus && (\n        <PeerChip\n          mockPeer={mockPeerWithStatus}\n          withEmojiStatus\n        />\n      )}\n      <Button size=\"smaller\" onClick={handleSetStatus}>\n        {lang('GeneralConfirm')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const bot = modal?.botId ? selectUser(global, modal.botId) : undefined;\n\n    return {\n      currentUser,\n      bot,\n    };\n  },\n)(SuggestedStatusModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"pUyNTysT\",\"modal\":\"IK2mBqbm\",\"loading\":\"zjXCH3pT\",\"description\":\"j6xEoljc\",\"bold\":\"hAA6B1lc\",\"chip\":\"smWR78pO\",\"replaceModal\":\"GIFAjZPY\",\"replaceModalContent\":\"Jxyz9TaL\",\"avatarContainer\":\"OKp6HS1U\",\"arrow\":\"WSJdWV7L\",\"boostedWrapper\":\"NU9itcIm\",\"boostedMark\":\"upXvhNRY\"};","import React, { memo, useEffect, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiMyBoost } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getChatTitle, isChatAdmin, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatShortDuration } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { getBoostProgressInfo } from '../../common/helpers/boostInfo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PremiumProgress from '../../common/PremiumProgress';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Loading from '../../ui/Loading';\nimport Modal from '../../ui/Modal';\n\nimport styles from './BoostModal.module.scss';\n\ntype LoadedParams = {\n  boost?: ApiMyBoost;\n  leftText: string;\n  rightText?: string;\n  value: string;\n  progress: number;\n  descriptionText: string;\n  isBoosted?: boolean;\n  canBoostMore?: boolean;\n};\n\ntype BoostInfo = ({\n  isStatusLoaded: false;\n  title: string;\n} & Undefined<LoadedParams>) | ({\n  isStatusLoaded: true;\n  title: string;\n} & LoadedParams);\n\nexport type OwnProps = {\n  modal: TabState['boostModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  prevBoostedChat?: ApiChat;\n  isCurrentUserPremium?: boolean;\n};\n\nconst BoostModal = ({\n  modal,\n  chat,\n  chatFullInfo,\n  prevBoostedChat,\n  isCurrentUserPremium,\n}: OwnProps & StateProps) => {\n  const {\n    applyBoost,\n    closeBoostModal,\n    requestConfetti,\n    openPremiumModal,\n    loadFullChat,\n  } = getActions();\n\n  const [isReplaceModalOpen, openReplaceModal, closeReplaceModal] = useFlag();\n  const [isWaitDialogOpen, openWaitDialog, closeWaitDialog] = useFlag();\n  const [isPremiumDialogOpen, openPremiumDialog, closePremiumDialog] = useFlag();\n\n  const isChannel = chat && isChatChannel(chat);\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (chat && !chatFullInfo) {\n      loadFullChat({ chatId: chat.id });\n    }\n  }, [chat, chatFullInfo]);\n\n  const chatTitle = useMemo(() => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, chat);\n  }, [chat, oldLang]);\n\n  const boostedChatTitle = useMemo(() => {\n    if (!prevBoostedChat) {\n      return undefined;\n    }\n\n    return getChatTitle(oldLang, prevBoostedChat);\n  }, [prevBoostedChat, oldLang]);\n\n  const {\n    isStatusLoaded,\n    isBoosted,\n    boost,\n    title,\n    leftText,\n    rightText,\n    value,\n    progress,\n    descriptionText,\n    canBoostMore,\n  }: BoostInfo = useMemo(() => {\n    if (!modal?.boostStatus || !chat) {\n      return {\n        isStatusLoaded: false,\n        title: oldLang('Loading'),\n      };\n    }\n\n    const {\n      hasMyBoost,\n    } = modal.boostStatus;\n\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, chat.id);\n    const areBoostsInDifferentChannels = modal?.myBoosts && !areAllBoostsInChannel(modal.myBoosts, chat.id);\n\n    const {\n      boosts,\n      currentLevel,\n      hasNextLevel,\n      levelProgress,\n      remainingBoosts,\n      isMaxLevel,\n    } = getBoostProgressInfo(modal.boostStatus, true);\n\n    const hasBoost = hasMyBoost;\n\n    const left = oldLang('BoostsLevel', currentLevel);\n    const right = hasNextLevel ? oldLang('BoostsLevel', currentLevel + 1) : undefined;\n\n    const moreBoosts = oldLang('ChannelBoost.MoreBoosts', remainingBoosts);\n\n    const modalTitle = isChannel ? oldLang('BoostChannel') : oldLang('BoostGroup');\n\n    const boostsLeftToUnrestrict = (chatFullInfo?.boostsToUnrestrict || 0) - (chatFullInfo?.boostsApplied || 0);\n\n    let description: string | undefined;\n    if (isMaxLevel) {\n      description = oldLang('BoostsMaxLevelReached');\n    } else if (boostsLeftToUnrestrict > 0 && !isChatAdmin(chat)) {\n      const boostTimes = oldLang('GroupBoost.BoostToUnrestrict.Times', boostsLeftToUnrestrict);\n      description = oldLang('GroupBoost.BoostToUnrestrict', [boostTimes, chatTitle]);\n    } else {\n      description = oldLang('ChannelBoost.MoreBoostsNeeded.Text', [chatTitle, moreBoosts]);\n    }\n\n    return {\n      isStatusLoaded: true,\n      title: modalTitle,\n      leftText: left,\n      rightText: right,\n      value: boosts.toString(),\n      progress: levelProgress,\n      remainingBoosts,\n      descriptionText: description,\n      boost: firstBoost,\n      isBoosted: hasBoost,\n      canBoostMore: areBoostsInDifferentChannels && !isMaxLevel,\n    };\n  }, [chat, chatTitle, modal, oldLang, chatFullInfo, isChannel]);\n\n  const isBoostDisabled = !modal?.myBoosts?.length && isCurrentUserPremium;\n  const isReplacingBoost = boost?.chatId && boost.chatId !== modal?.chatId;\n\n  const handleApplyBoost = useLastCallback(() => {\n    closeReplaceModal();\n    applyBoost({ chatId: chat!.id, slots: [boost!.slot] });\n    requestConfetti({});\n  });\n\n  const handleProceedPremium = useLastCallback(() => {\n    openPremiumModal();\n    closePremiumDialog();\n    closeBoostModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (!boost) {\n      if (!isCurrentUserPremium) {\n        openPremiumDialog();\n        return;\n      }\n\n      closeBoostModal();\n      return;\n    }\n\n    if (!canBoostMore) {\n      closeBoostModal();\n      return;\n    }\n\n    if (boost.cooldownUntil) {\n      openWaitDialog();\n      return;\n    }\n\n    if (isReplacingBoost) {\n      openReplaceModal();\n      return;\n    }\n\n    handleApplyBoost();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeBoostModal();\n  });\n\n  function renderContent() {\n    if (!isStatusLoaded) {\n      return <Loading className={styles.loading} />;\n    }\n\n    return (\n      <>\n        <PremiumProgress\n          leftText={leftText}\n          rightText={rightText}\n          progress={progress}\n          floatingBadgeText={value}\n          floatingBadgeIcon=\"boost\"\n        />\n        {isBoosted && (\n          <div className={buildClassName(styles.description, styles.bold)}>\n            {oldLang('ChannelBoost.YouBoostedChannelText', chatTitle)}\n          </div>\n        )}\n        <div className={styles.description}>\n          {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n        </div>\n        <div className=\"dialog-buttons\">\n          <Button isText className=\"confirm-dialog-button\" disabled={isBoostDisabled} onClick={handleButtonClick}>\n            {canBoostMore ? (\n              <>\n                <Icon name=\"boost\" />\n                {oldLang(isChannel ? 'ChannelBoost.BoostChannel' : 'GroupBoost.BoostGroup')}\n              </>\n            ) : oldLang('OK')}\n          </Button>\n          <Button isText className=\"confirm-dialog-button\" onClick={handleCloseClick}>\n            {oldLang('Cancel')}\n          </Button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      className={styles.modal}\n      contentClassName={styles.content}\n      onClose={closeBoostModal}\n    >\n      {renderContent()}\n      {isReplacingBoost && boostedChatTitle && (\n        <Modal\n          isOpen={isReplaceModalOpen}\n          className={styles.replaceModal}\n          contentClassName={styles.replaceModalContent}\n          onClose={closeReplaceModal}\n        >\n          <div className={styles.avatarContainer}>\n            <div className={styles.boostedWrapper}>\n              <Avatar peer={prevBoostedChat} size=\"large\" />\n              <Icon name=\"boostcircle\" className={styles.boostedMark} />\n            </div>\n            <Icon name=\"next\" className={styles.arrow} />\n            <Avatar peer={chat} size=\"large\" />\n          </div>\n          <div>\n            {renderText(\n              oldLang('ChannelBoost.ReplaceBoost', [boostedChatTitle, chatTitle]), ['simple_markdown', 'emoji'],\n            )}\n          </div>\n          <div className=\"dialog-buttons\">\n            <Button isText className=\"confirm-dialog-button\" onClick={handleApplyBoost}>\n              {oldLang('Replace')}\n            </Button>\n            <Button isText className=\"confirm-dialog-button\" onClick={closeReplaceModal}>\n              {oldLang('Cancel')}\n            </Button>\n          </div>\n        </Modal>\n      )}\n      {Boolean(boost?.cooldownUntil) && (\n        <ConfirmDialog\n          isOpen={isWaitDialogOpen}\n          isOnlyConfirm\n          confirmLabel={oldLang('OK')}\n          title={oldLang('ChannelBoost.Error.BoostTooOftenTitle')}\n          onClose={closeWaitDialog}\n          confirmHandler={closeWaitDialog}\n        >\n          {renderText(\n            oldLang(\n              'ChannelBoost.Error.BoostTooOftenText',\n              formatShortDuration(lang, boost!.cooldownUntil - getServerTime()),\n            ),\n            ['simple_markdown', 'emoji'],\n          )}\n        </ConfirmDialog>\n      )}\n      {!isCurrentUserPremium && (\n        <ConfirmDialog\n          isOpen={isPremiumDialogOpen}\n          confirmLabel={oldLang('Common.Yes')}\n          title={oldLang('PremiumNeeded')}\n          onClose={closePremiumDialog}\n          confirmHandler={handleProceedPremium}\n        >\n          {renderText(oldLang('PremiumNeededForBoosting'), ['simple_markdown', 'emoji'])}\n        </ConfirmDialog>\n      )}\n    </Modal>\n  );\n};\n\nfunction getFirstAvailableBoost(myBoosts: ApiMyBoost[], chatId?: string) {\n  return myBoosts.find((boost) => !boost.chatId)\n    || myBoosts.filter((b) => chatId && b.chatId !== chatId)\n      .sort((a, b) => a.date - b.date)[0];\n}\n\nfunction areAllBoostsInChannel(myBoosts: ApiMyBoost[], chatId: string) {\n  return myBoosts.every((boost) => boost.chatId === chatId);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal && selectChat(global, modal?.chatId);\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const firstBoost = modal?.myBoosts && getFirstAvailableBoost(modal.myBoosts, modal.chatId);\n    const boostedChat = firstBoost?.chatId ? selectChat(global, firstBoost?.chatId) : undefined;\n\n    return {\n      chat,\n      chatFullInfo,\n      prevBoostedChat: boostedChat,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(BoostModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"clickable\":\"IzcASdzD\",\"centered\":\"xVLGjLub\",\"logo\":\"Mtx4SWww\"};","import React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { TME_LINK_PREFIX } from '../../../config';\nimport { selectChatMessage, selectSender } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport TableInfoModal, { type TableData } from '../common/TableInfoModal';\n\nimport styles from './GiftCodeModal.module.scss';\n\nimport PremiumLogo from '../../../assets/premium/PremiumLogo.svg';\n\nexport type OwnProps = {\n  modal: TabState['giftCodeModal'];\n};\n\nexport type StateProps = {\n  currentUserId?: string;\n  messageSender?: ApiPeer;\n};\n\nconst GIFTCODE_PATH = 'giftcode';\n\nconst GiftCodeModal = ({\n  currentUserId,\n  modal,\n  messageSender,\n}: OwnProps & StateProps) => {\n  const {\n    closeGiftCodeModal, applyGiftCode, focusMessage,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const canUse = (!modal?.info.toId || modal?.info.toId === currentUserId) && !modal?.info.usedAt;\n\n  const handleOpenGiveaway = useLastCallback(() => {\n    if (!modal || !modal.info.giveawayMessageId) return;\n    focusMessage({\n      chatId: modal.info.fromId!,\n      messageId: modal.info.giveawayMessageId,\n    });\n    closeGiftCodeModal();\n  });\n\n  const handleButtonClick = useLastCallback(() => {\n    if (canUse) {\n      applyGiftCode({ slug: modal!.slug });\n      return;\n    }\n    closeGiftCodeModal();\n  });\n\n  const modalData = useMemo(() => {\n    if (!modal) return undefined;\n    const { slug, info } = modal;\n\n    const fromId = info.fromId || messageSender?.id;\n\n    const header = (\n      <>\n        <img src={PremiumLogo} alt=\"\" className={styles.logo} />\n        <p className={styles.centered}>{renderText(lang('lng_gift_link_about'), ['simple_markdown'])}</p>\n        <LinkField title=\"BoostingGiftLink\" link={`${TME_LINK_PREFIX}/${GIFTCODE_PATH}/${slug}`} />\n      </>\n    );\n\n    const tableData = [\n      [lang('BoostingFrom'), fromId ? { chatId: fromId } : lang('BoostingNoRecipient')],\n      [lang('BoostingTo'), info.toId ? { chatId: info.toId } : lang('BoostingNoRecipient')],\n      [lang('BoostingGift'), lang('BoostingTelegramPremiumFor', lang('Months', info.months, 'i'))],\n      [lang('BoostingReason'), (\n        <span className={buildClassName(info.giveawayMessageId && styles.clickable)} onClick={handleOpenGiveaway}>\n          {info.isFromGiveaway && !info.toId ? lang('BoostingIncompleteGiveaway')\n            : lang(info.isFromGiveaway ? 'BoostingGiveaway' : 'BoostingYouWereSelected')}\n        </span>\n      )],\n      [lang('BoostingDate'), formatDateTimeToString(info.date * 1000, lang.code, true)],\n    ] satisfies TableData;\n\n    const footer = (\n      <span className={styles.centered}>\n        {renderText(\n          info.usedAt ? lang('BoostingUsedLinkDate', formatDateTimeToString(info.usedAt * 1000, lang.code, true))\n            : lang('BoostingSendLinkToAnyone'),\n          ['simple_markdown'],\n        )}\n      </span>\n    );\n\n    return {\n      header,\n      tableData,\n      footer,\n    };\n  }, [lang, messageSender?.id, modal]);\n\n  if (!modalData) return undefined;\n\n  return (\n    <TableInfoModal\n      isOpen={isOpen}\n      title={lang('lng_gift_link_title')}\n      tableData={modalData.tableData}\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={canUse ? lang('BoostingUseLink') : lang('Close')}\n      onButtonClick={handleButtonClick}\n      onClose={closeGiftCodeModal}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { message } = modal || {};\n    const chatMessage = message && selectChatMessage(global, message.chatId, message.messageId);\n    const sender = chatMessage && selectSender(global, chatMessage);\n\n    return {\n      currentUserId: global.currentUserId,\n      messageSender: sender,\n    };\n  },\n)(GiftCodeModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"description\":\"dl10exNi\",\"picker-wrapper\":\"gxWY5c6x\",\"pickerWrapper\":\"gxWY5c6x\",\"picker-header\":\"h8N7eyob\",\"pickerHeader\":\"h8N7eyob\",\"picker-header-info\":\"Rth2Qu07\",\"pickerHeaderInfo\":\"Rth2Qu07\",\"selection-toggle\":\"B6eAugx8\",\"selectionToggle\":\"B6eAugx8\",\"foldersWrapper\":\"mwcvgD2S\",\"folders\":\"LKavx8ww\",\"folder\":\"qglLx5Dn\",\"button-text\":\"bgaRuEMs\",\"buttonText\":\"bgaRuEMs\",\"button-badge\":\"rTe14Z22\",\"buttonBadge\":\"rTe14Z22\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder, ApiChatlistInviteAlready } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteAlready;\n  folder: ApiChatFolder;\n};\n\nconst ChatlistAlready: FC<OwnProps> = ({ invite, folder }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.missingPeerIds);\n\n  const hasChatsToAdd = Boolean(invite.missingPeerIds.length);\n  const isNew = invite.alreadyPeerIds.length === 0;\n  const newChatsCount = hasChatsToAdd ? invite.missingPeerIds.length : 0;\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const descriptionText = isNew ? lang('FolderLinkSubtitleNew')\n    : newChatsCount ? lang('FolderLinkSubtitleAdd', {\n      chats: lang('FolderLinkSubtitleAddCount', { count: newChatsCount }, { pluralValue: newChatsCount }),\n      title: renderTextWithEntities({\n        text: folder.title.text,\n        entities: folder.title.entities,\n        noCustomEmojiPlayback: folder.noTitleAnimations,\n      }),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    }) : lang('FolderLinkSubtitleAlready');\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    if (!selectedPeerIds.length) return;\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.missingPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : invite.missingPeerIds);\n  }, [invite.missingPeerIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {renderText(descriptionText, ['simple_markdown', 'emoji'])}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        {Boolean(invite.missingPeerIds.length) && (\n          <>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {oldLang('FolderLinkHeaderChatsJoin', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === invite.missingPeerIds.length\n                  ? oldLang('DeselectAll') : oldLang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={invite.missingPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </>\n        )}\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderAlready')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.alreadyPeerIds}\n          lockedSelectedIds={invite.alreadyPeerIds}\n          selectedIds={invite.alreadyPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && oldLang('OK')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {oldLang('FolderLinkButtonJoinPlural', selectedPeerIds.length, 'i')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistAlready);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  folder: ApiChatFolder;\n  suggestedPeerIds?: string[];\n};\n\nconst ChatlistDelete: FC<OwnProps> = ({\n  folder,\n  suggestedPeerIds = MEMO_EMPTY_ARRAY,\n}) => {\n  const { closeChatlistModal, leaveChatlist } = getActions();\n\n  const lang = useOldLang();\n\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>([]);\n\n  const badgeText = selectedPeerIds.length ? selectedPeerIds.length.toString() : undefined;\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === suggestedPeerIds.length;\n    setSelectedPeerIds(areAllSelected ? [] : suggestedPeerIds);\n  }, [suggestedPeerIds, selectedPeerIds.length]);\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n    leaveChatlist({ folderId: folder.id, peerIds: selectedPeerIds });\n  }, [folder.id, selectedPeerIds]);\n\n  return (\n    <div className={styles.content}>\n      {Boolean(suggestedPeerIds?.length) && (\n        <>\n          <div className={styles.description}>\n            {renderText(lang('FolderLinkSubtitleRemove'), ['simple_markdown', 'emoji'])}\n          </div>\n          <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n            <div className={styles.pickerHeader}>\n              <div className={styles.pickerHeaderInfo}>\n                {lang('FolderLinkHeaderChatsQuit', selectedPeerIds.length, 'i')}\n              </div>\n              <div\n                className={styles.selectionToggle}\n                role=\"button\"\n                tabIndex={0}\n                onClick={handleSelectionToggle}\n              >\n                {selectedPeerIds.length === suggestedPeerIds.length ? lang('DeselectAll') : lang('SelectAll')}\n              </div>\n            </div>\n            <PeerPicker\n              itemIds={suggestedPeerIds}\n              onSelectedIdsChange={setSelectedPeerIds}\n              selectedIds={selectedPeerIds}\n              allowMultiple\n              withStatus\n              itemInputType=\"checkbox\"\n            />\n          </div>\n        </>\n      )}\n      <Button\n        size=\"smaller\"\n        onClick={handleButtonClick}\n      >\n        <div className={styles.buttonText}>\n          {!selectedPeerIds.length && lang('FolderLinkButtonRemove')}\n          {Boolean(selectedPeerIds.length) && (\n            <>\n              {lang('FolderLinkButtonRemoveChats')}\n              <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n            </>\n          )}\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistDelete);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiChatlistInviteNew } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Badge from '../../ui/Badge';\nimport Button from '../../ui/Button';\n\nimport styles from './ChatlistModal.module.scss';\n\ntype OwnProps = {\n  invite: ApiChatlistInviteNew;\n};\n\nconst ChatlistNew: FC<OwnProps> = ({ invite }) => {\n  const { closeChatlistModal, joinChatlistInvite } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n  const [selectedPeerIds, setSelectedPeerIds] = useState<string[]>(invite.peerIds);\n\n  const joinedIds = useMemo(() => {\n    const chatsById = getGlobal().chats.byId;\n    return invite.peerIds.filter((id) => !chatsById[id].isNotJoined);\n  }, [invite.peerIds]);\n\n  const selectedCount = selectedPeerIds.length - joinedIds.length;\n\n  const badgeText = selectedCount ? selectedCount.toString() : undefined;\n\n  const handleButtonClick = useCallback(() => {\n    closeChatlistModal();\n\n    joinChatlistInvite({\n      invite,\n      peerIds: selectedPeerIds,\n    });\n  }, [invite, selectedPeerIds]);\n\n  const handleSelectionToggle = useCallback(() => {\n    const areAllSelected = selectedPeerIds.length === invite.peerIds.length;\n    setSelectedPeerIds(areAllSelected ? joinedIds : invite.peerIds);\n  }, [invite.peerIds, joinedIds, selectedPeerIds.length]);\n\n  return (\n    <div className={styles.content}>\n      <div className={styles.description}>\n        {lang('FolderLinkSubtitleNew')}\n      </div>\n      <div className={buildClassName(styles.pickerWrapper, 'custom-scroll')}>\n        <div className={styles.pickerHeader}>\n          <div className={styles.pickerHeaderInfo}>\n            {oldLang('FolderLinkHeaderChatsJoin', selectedCount, 'i')}\n          </div>\n          <div\n            className={styles.selectionToggle}\n            role=\"button\"\n            tabIndex={0}\n            onClick={handleSelectionToggle}\n          >\n            {selectedPeerIds.length === invite.peerIds.length ? oldLang('DeselectAll') : oldLang('SelectAll')}\n          </div>\n        </div>\n        <PeerPicker\n          itemIds={invite.peerIds}\n          lockedSelectedIds={joinedIds}\n          onSelectedIdsChange={setSelectedPeerIds}\n          selectedIds={selectedPeerIds}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n      <Button\n        onClick={handleButtonClick}\n        size=\"smaller\"\n        disabled={!selectedPeerIds.length}\n      >\n        <div className={styles.buttonText}>\n          {lang('FolderLinkAddFolder')}\n          <Badge className={styles.buttonBadge} text={badgeText} isAlternateColor />\n        </div>\n      </Button>\n    </div>\n  );\n};\n\nexport default memo(ChatlistNew);\n","import type { FC, TeactNode } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatFolder } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { selectChatFolder } from '../../../global/selectors';\nimport { renderTextWithEntities } from '../../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Modal from '../../ui/Modal';\nimport Tab from '../../ui/Tab';\nimport ChatlistAlready from './ChatlistAlready';\nimport ChatlistDelete from './ChatlistDelete';\nimport ChatlistNew from './ChatlistNew';\n\nimport styles from './ChatlistModal.module.scss';\n\nexport type OwnProps = {\n  modal?: TabState['chatlistModal'];\n};\n\ntype StateProps = {\n  folder?: ApiChatFolder;\n};\n\nconst ChatlistInviteModal: FC<OwnProps & StateProps> = ({\n  modal,\n  folder,\n}) => {\n  const { closeChatlistModal } = getActions();\n\n  const lang = useOldLang();\n\n  const isOpen = Boolean(modal);\n  const renderingInfo = usePreviousDeprecated(modal) || modal;\n  const renderingFolder = usePreviousDeprecated(folder) || folder;\n\n  const title = useMemo(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return invite.missingPeerIds.length ? lang('FolderLinkTitleAddChats') : lang('FolderLinkTitleAlready');\n      }\n      return lang('FolderLinkTitleAdd');\n    }\n    if (renderingInfo.removal) {\n      return lang('FolderLinkTitleRemove');\n    }\n\n    return undefined;\n  }, [lang, renderingInfo]);\n\n  const renderingFolderTitle = useMemo(() => {\n    if (renderingFolder) {\n      return renderTextWithEntities({\n        text: renderingFolder.title.text,\n        entities: renderingFolder.title.entities,\n        noCustomEmojiPlayback: renderingFolder.noTitleAnimations,\n      });\n    }\n    if (renderingInfo?.invite && 'title' in renderingInfo.invite) {\n      return renderTextWithEntities({\n        text: renderingInfo.invite.title.text,\n        entities: renderingInfo.invite.title.entities,\n        noCustomEmojiPlayback: renderingInfo.invite.noTitleAnimations,\n      });\n    }\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  const folderTabNumber = useMemo(() => {\n    if (!renderingInfo?.invite) return undefined;\n    if ('missingPeerIds' in renderingInfo.invite) return renderingInfo.invite.missingPeerIds.length;\n    return undefined;\n  }, [renderingInfo]);\n\n  function renderFolders(folderTitle: TeactNode) {\n    return (\n      <div className={styles.foldersWrapper}>\n        <div className={styles.folders}>\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewLeft')} />\n          <Tab\n            className={styles.folder}\n            isActive\n            badgeCount={folderTabNumber}\n            isBadgeActive\n            title={folderTitle}\n          />\n          <Tab className={styles.folder} title={lang('FolderLinkPreviewRight')} />\n        </div>\n      </div>\n    );\n  }\n\n  const renderContent = useCallback(() => {\n    if (!renderingInfo) return undefined;\n    if (renderingInfo.invite) {\n      const invite = renderingInfo.invite;\n      if ('alreadyPeerIds' in invite) {\n        return <ChatlistAlready invite={invite} folder={renderingFolder!} />;\n      }\n\n      return <ChatlistNew invite={invite} />;\n    }\n\n    if (renderingInfo.removal) {\n      return <ChatlistDelete folder={renderingFolder!} suggestedPeerIds={renderingInfo.removal.suggestedPeerIds} />;\n    }\n\n    return undefined;\n  }, [renderingFolder, renderingInfo]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      title={title}\n      onClose={closeChatlistModal}\n      isSlim\n      hasCloseButton\n    >\n      {renderingFolderTitle && renderFolders(renderingFolderTitle)}\n      {renderContent()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const { invite, removal } = modal || {};\n    const folderId = removal?.folderId || (invite && 'folderId' in invite ? invite.folderId : undefined);\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n\n    return {\n      folder,\n    };\n  },\n)(ChatlistInviteModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MZ0RCecx\",\"title\":\"ar8XeydN\",\"participantCount\":\"un00TXYY\",\"participants\":\"YvkZ6c2D\",\"participant\":\"DHJSBDeE\",\"buttons\":\"KFtrPtNr\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { getCustomPeerFromInvite, getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePrevious from '../../../hooks/usePrevious';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport PeerBadge from '../../common/PeerBadge';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './ChatInviteModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['chatInviteModal'];\n};\n\nconst ChatInviteModal = ({ modal }: OwnProps) => {\n  const { acceptChatInvite, closeChatInviteModal, showNotification } = getActions();\n  // eslint-disable-next-line no-null/no-null\n  const participantsRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const prevModal = usePrevious(modal);\n  const { hash, inviteInfo } = modal || prevModal || {};\n  const {\n    about, isBroadcast, participantIds, participantsCount, photo, isRequestNeeded,\n  } = inviteInfo || {};\n\n  const handleClose = useLastCallback(() => {\n    closeChatInviteModal();\n  });\n\n  const handleAccept = useLastCallback(() => {\n    acceptChatInvite({ hash: hash! });\n\n    showNotification({\n      message: isBroadcast ? lang('RequestToJoinChannelSentDescription') : lang('RequestToJoinGroupSentDescription'),\n    });\n\n    handleClose();\n  });\n\n  const acceptLangKey = isBroadcast ? 'ProfileJoinChannel' : 'JoinGroup';\n  const requestToJoinLangKey = isBroadcast ? 'MemberRequests.RequestToJoinChannel'\n    : 'MemberRequests.RequestToJoinGroup';\n\n  const customPeer = useMemo(() => {\n    if (!inviteInfo) return undefined;\n\n    return getCustomPeerFromInvite(inviteInfo);\n  }, [inviteInfo]);\n\n  const participants = useMemo(() => {\n    if (!participantIds) {\n      return undefined;\n    }\n\n    const global = getGlobal();\n    return participantIds.map((id) => selectUser(global, id)).filter(Boolean);\n  }, [participantIds]);\n\n  useHorizontalScroll(participantsRef, !modal || !participants);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      contentClassName={styles.content}\n      isSlim\n      onClose={handleClose}\n      onEnter={handleAccept}\n    >\n      {customPeer && <Avatar size=\"jumbo\" photo={photo} peer={customPeer} withVideo />}\n      {customPeer && <FullNameTitle className={styles.title} peer={customPeer} />}\n      {about && <p className={styles.about}>{about}</p>}\n      <p className={styles.participantCount}>\n        {lang(isBroadcast ? 'Subscribers' : 'Members', participantsCount, 'i')}\n      </p>\n      {participants && (\n        <div ref={participantsRef} className={buildClassName(styles.participants, 'no-scrollbar')}>\n          {participants.map((participant) => (\n            <PeerBadge className={styles.participant} peer={participant} text={getUserFullName(participant)} />\n          ))}\n        </div>\n      )}\n      <div className={buildClassName('dialog-buttons', styles.buttons)}>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleAccept}>\n          {lang(isRequestNeeded ? requestToJoinLangKey : acceptLangKey)}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleClose}>\n          {lang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(ChatInviteModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LFkgLoAk\",\"title\":\"La4sUYaq\",\"description\":\"Bn5kz5br\",\"moreButton\":\"JdN5pGTw\",\"secondary\":\"hbsLlXSH\",\"content\":\"TZE15Pt_\"};","import React, { memo, useMemo, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSponsoredMessage } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { TableAboutData } from '../common/TableAboutModal';\n\nimport { selectSponsoredMessage } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport SponsoredMessageContextMenuContainer from '../../middle/message/SponsoredMessageContextMenuContainer';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport TableAboutModal from '../common/TableAboutModal';\n\nimport styles from './AboutAdsModal.module.scss';\n\nexport type OwnProps = {\n  // eslint-disable-next-line react/no-unused-prop-types\n  modal: TabState['aboutAdsModal'];\n};\n\ntype StateProps = {\n  message?: ApiSponsoredMessage;\n  minLevelToRestrictAds?: number;\n};\n\nconst AboutAdsModal = ({ message, minLevelToRestrictAds }: OwnProps & StateProps) => {\n  const { closeAboutAdsModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const moreMenuRef = useRef<HTMLButtonElement>(null);\n\n  const isOpen = Boolean(message);\n  const isMonetizationSharing = message?.canReport;\n\n  const renderingIsNewDesign = useCurrentOrPrev(isMonetizationSharing);\n\n  const oldLang = useOldLang();\n\n  const regularAdContent = useMemo(() => {\n    return (\n      <>\n        <h3>{oldLang('SponsoredMessageInfoScreen.Title')}</h3>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription1'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription2'), ['br'])}</p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription3'), ['br'])}</p>\n        <p>\n          <SafeLink\n            url={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n            text={oldLang('SponsoredMessageAlertLearnMoreUrl')}\n          />\n        </p>\n        <p>{renderText(oldLang('SponsoredMessageInfoDescription4'), ['br'])}</p>\n      </>\n    );\n  }, [oldLang]);\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleContextMenu, handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(moreMenuRef, !renderingIsNewDesign);\n\n  const handleClose = useLastCallback(() => {\n    closeAboutAdsModal();\n    handleContextMenuClose();\n    handleContextMenuHide();\n  });\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <>\n        <h3 className={styles.title}>{oldLang('AboutRevenueSharingAds')}</h3>\n        <p className={buildClassName(styles.description, styles.secondary)}>\n          {oldLang('RevenueSharingAdsAlertSubtitle')}\n        </p>\n        <Button\n          ref={moreMenuRef}\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          className={styles.moreButton}\n          onClick={handleContextMenu}\n        >\n          <Icon name=\"more\" />\n        </Button>\n      </>\n    );\n\n    const listItemData = [\n      ['lock', oldLang('RevenueSharingAdsInfo1Title'),\n        renderText(oldLang('RevenueSharingAdsInfo1Subtitle'), ['simple_markdown'])],\n      ['revenue-split', oldLang('RevenueSharingAdsInfo2Title'),\n        renderText(oldLang('RevenueSharingAdsInfo2Subtitle'), ['simple_markdown'])],\n      ['nochannel', oldLang('RevenueSharingAdsInfo3Title'),\n        renderText(oldLang('RevenueSharingAdsInfo3Subtitle', minLevelToRestrictAds), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{renderText(oldLang('RevenueSharingAdsInfo4Title'), ['simple_markdown'])}</h3>\n        <p className={styles.description}>\n          {renderText(oldLang('RevenueSharingAdsInfo4Subtitle2', ''), ['simple_markdown'])}\n          <SafeLink\n            url={oldLang('PromoteUrl')}\n            text={oldLang('LearnMoreArrow')}\n          />\n        </p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, handleContextMenu, minLevelToRestrictAds]);\n\n  if (renderingIsNewDesign) {\n    return (\n      <>\n        <TableAboutModal\n          isOpen={isOpen}\n          listItemData={modalData?.listItemData}\n          headerIconName=\"channel\"\n          withSeparator\n          header={modalData?.header}\n          footer={modalData?.footer}\n          buttonText={oldLang('RevenueSharingAdsUnderstood')}\n          onClose={handleClose}\n        />\n        {contextMenuAnchor && message && (\n          <SponsoredMessageContextMenuContainer\n            isOpen={isContextMenuOpen}\n            anchor={contextMenuAnchor}\n            triggerRef={moreMenuRef}\n            message={message}\n            shouldSkipAbout\n            onItemClick={handleClose}\n            onClose={handleContextMenuClose}\n            onCloseAnimationEnd={handleContextMenuHide}\n          />\n        )}\n      </>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      {regularAdContent}\n      <Button\n        size=\"smaller\"\n        onClick={handleClose}\n      >\n        {oldLang('RevenueSharingAdsUnderstood')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const message = modal?.chatId ? selectSponsoredMessage(global, modal.chatId) : undefined;\n    const minLevelToRestrictAds = global.appConfig?.channelRestrictAdsLevelMin;\n\n    return {\n      message,\n      minLevelToRestrictAds,\n    };\n  },\n)(AboutAdsModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"t9iZUzOj\",\"description\":\"mjveZmdr\",\"toncoin\":\"ATkOSqJ7\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../lib/teact/teact';\n\nimport type { TableAboutData } from '../modals/common/TableAboutModal';\n\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport TableAboutModal from '../modals/common/TableAboutModal';\nimport Icon from './icons/Icon';\nimport SafeLink from './SafeLink';\n\nimport styles from './AboutMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\nconst AboutMonetizationModal: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const blockchainText = useMemo(() => {\n    const linkText = oldLang('LearnMore');\n    return lang(\n      'ChannelEarnLearnCoinAbout',\n      {\n        link: (\n          <SafeLink url={oldLang('MonetizationInfoTONLink')} text={linkText}>\n            {linkText}\n            <Icon name=\"next\" />\n          </SafeLink>\n        ),\n      },\n      {\n        withNodes: true,\n      },\n    );\n  }, [lang, oldLang]);\n\n  const monetizationTitle = useMemo(() => {\n    return lang(\n      'MonetizationInfoTONTitle',\n      undefined,\n      {\n        withNodes: true,\n        specialReplacement: { '💎': <Icon className={styles.toncoin} name=\"toncoin\" /> },\n      },\n    );\n  }, [lang]);\n\n  const modalData = useMemo(() => {\n    if (!isOpen) return undefined;\n\n    const header = (\n      <h3 className={styles.title}>{oldLang('lng_channel_earn_learn_title')}</h3>\n    );\n\n    const listItemData = [\n      ['channel', oldLang('lng_channel_earn_learn_in_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_in_about'), ['simple_markdown'])],\n      ['revenue-split', oldLang('lng_channel_earn_learn_split_subtitle'),\n        renderText(oldLang('Monetization.Intro.Split.Text'), ['simple_markdown'])],\n      ['cash-circle', oldLang('lng_channel_earn_learn_out_subtitle'),\n        renderText(oldLang('lng_channel_earn_learn_out_about'), ['simple_markdown'])],\n    ] satisfies TableAboutData;\n\n    const footer = (\n      <>\n        <h3 className={styles.title}>{monetizationTitle}</h3>\n        <p className={styles.description}>{blockchainText}</p>\n      </>\n    );\n\n    return {\n      header,\n      listItemData,\n      footer,\n    };\n  }, [isOpen, oldLang, monetizationTitle, blockchainText]);\n\n  if (!modalData) {\n    return undefined;\n  }\n\n  return (\n    <TableAboutModal\n      isOpen={isOpen}\n      listItemData={modalData.listItemData}\n      headerIconName=\"cash-circle\"\n      withSeparator\n      header={modalData.header}\n      footer={modalData.footer}\n      buttonText={oldLang('RevenueSharingAdsUnderstood')}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(AboutMonetizationModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"WqeWhMAS\",\"content\":\"oofoCYlu\"};","import React, {\n  memo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { TabState } from '../../global/types';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\n\nimport Modal from '../ui/Modal';\nimport PasswordForm from './PasswordForm';\n\nimport styles from './VerificationMonetizationModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['monetizationVerificationModal'];\n};\n\ntype StateProps = {\n  passwordHint?: string;\n};\n\nconst VerificationMonetizationModal = ({\n  modal,\n  passwordHint,\n}: OwnProps & StateProps) => {\n  const {\n    closeMonetizationVerificationModal, clearMonetizationVerificationError, processMonetizationRevenueWithdrawalUrl,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const renderingModal = useCurrentOrPrev(modal);\n\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useLastCallback((password: string) => {\n    if (!renderingModal) return;\n    processMonetizationRevenueWithdrawalUrl({\n      peerId: renderingModal.chatId,\n      currentPassword: password,\n    });\n  });\n\n  const handleClearError = useLastCallback(() => {\n    clearMonetizationVerificationError();\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeMonetizationVerificationModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('CheckPasswordTitle')}\n      className={styles.root}\n      contentClassName={styles.content}\n      onClose={handleClose}\n    >\n      <div className={buildClassName(styles.content, 'settings-content password-form custom-scroll')}>\n        <div className=\"settings-item pt-0\">\n          <PasswordForm\n            shouldShowSubmit\n            placeholder={lang('CheckPasswordPlaceholder')}\n            error={renderingModal?.errorKey && lang.withRegular(renderingModal.errorKey)}\n            description={lang('CheckPasswordDescription')}\n            clearError={handleClearError}\n            isLoading={renderingModal?.isLoading}\n            hint={passwordHint}\n            isPasswordVisible={shouldShowPassword}\n            shouldResetValue={isOpen}\n            onChangePasswordVisibility={setShouldShowPassword}\n            onSubmit={handleSubmit}\n          />\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      twoFaSettings: {\n        hint: passwordHint,\n      },\n    } = global;\n\n    return {\n      passwordHint,\n    };\n  },\n)(VerificationMonetizationModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"MKdSUg2P\",\"chatItem\":\"qEIwBtp0\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStickerSet, ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectIsCurrentUserPremium, selectStickerSet, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './EmojiStatusAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['emojiStatusAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n  stickerSet?: ApiStickerSet;\n  isPremium?: boolean;\n};\n\nconst INTERVAL = 3200;\n\nconst EmojiStatusAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n  stickerSet,\n  isPremium,\n}) => {\n  const {\n    closeEmojiStatusAccessModal,\n    toggleUserEmojiStatusPermission,\n    sendWebAppEvent,\n    openPremiumModal,\n    loadDefaultStatusIcons,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [currentStatusIndex, setCurrentStatusIndex] = useState<number>(0);\n\n  useEffect(() => {\n    if (isOpen && !stickerSet?.stickers) {\n      loadDefaultStatusIcons();\n    }\n  }, [isOpen, stickerSet]);\n\n  const mockPeerWithStatus = useMemo(() => {\n    if (!currentUser || !stickerSet?.stickers) return undefined;\n    return {\n      ...currentUser,\n      emojiStatus: {\n        type: 'regular',\n        documentId: stickerSet.stickers[currentStatusIndex].id,\n      },\n    } satisfies ApiUser;\n  }, [currentUser, stickerSet, currentStatusIndex]);\n\n  const totalCount = stickerSet?.stickers?.length;\n  useInterval(\n    () => {\n      if (!totalCount) return;\n      setCurrentStatusIndex((prevIndex) => (prevIndex + 1) % totalCount);\n    },\n    totalCount ? INTERVAL : undefined,\n  );\n\n  const renderPickerItem = useLastCallback(() => {\n    return (\n      <PeerChip\n        withEmojiStatus\n        className={styles.chatItem}\n        itemClassName={styles.itemName}\n        mockPeer={mockPeerWithStatus}\n      />\n    );\n  });\n\n  const confirmHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      if (isPremium) {\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'allowed',\n            },\n          },\n        });\n        toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: true, isBotAccessEmojiGranted: true });\n      } else {\n        openPremiumModal();\n        sendWebAppEvent({\n          webAppKey: modal.webAppKey,\n          event: {\n            eventType: 'emoji_status_access_requested',\n            eventData: {\n              status: 'cancelled',\n            },\n          },\n        });\n      }\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeEmojiStatusAccessModal();\n    if (modal?.webAppKey) {\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'emoji_status_access_requested',\n          eventData: {\n            status: 'cancelled',\n          },\n        },\n      });\n    }\n    if (isPremium) {\n      toggleUserEmojiStatusPermission({ botId: modal.bot.id, isEnabled: false });\n    }\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('EmojiStatusAccessText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      contentClassName={styles.content}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderPickerItem()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n    const isPremium = selectIsCurrentUserPremium(global);\n    const stickerSet = global.defaultStatusIconsId ? selectStickerSet(global, global.defaultStatusIconsId) : undefined;\n\n    return {\n      currentUser,\n      stickerSet,\n      isPremium,\n    };\n  },\n)(EmojiStatusAccessModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getGeolocationStatus } from '../../../util/windowEnvironment';\n\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './LocationAccessModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['locationAccessModal'];\n};\n\nexport type StateProps = {\n  currentUser?: ApiUser;\n};\n\nconst LocationAccessModal: FC<OwnProps & StateProps> = ({\n  modal,\n  currentUser,\n}) => {\n  const {\n    closeLocationAccessModal, toggleUserLocationPermission, sendWebAppEvent,\n  } = getActions();\n\n  const isOpen = Boolean(modal);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const confirmHandler = useLastCallback(async () => {\n    const geolocationData = await getGeolocationStatus();\n    const { geolocation } = geolocationData;\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: true,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: true,\n            latitude: geolocation?.latitude,\n            longitude: geolocation?.longitude,\n            altitude: geolocation?.altitude,\n            course: geolocation?.heading,\n            speed: geolocation?.speed,\n            horizontal_accuracy: geolocation?.accuracy,\n            vertical_accuracy: geolocation?.accuracy,\n          },\n        },\n      });\n    }\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    if (!modal?.bot?.id) return;\n    closeLocationAccessModal();\n    if (modal?.webAppKey) {\n      toggleUserLocationPermission({\n        botId: modal.bot.id,\n        isAccessGranted: false,\n      });\n      sendWebAppEvent({\n        webAppKey: modal.webAppKey,\n        event: {\n          eventType: 'location_requested',\n          eventData: {\n            available: false,\n          },\n        },\n      });\n    }\n  });\n\n  const renderInfo = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return (\n      <div className={styles.avatars}>\n        <Avatar\n          size=\"large\"\n          peer={currentUser}\n        />\n        <Icon name=\"next\" className={styles.arrow} />\n        <Avatar\n          size=\"large\"\n          peer={modal.bot}\n        />\n      </div>\n    );\n  });\n\n  const renderStatusText = useLastCallback(() => {\n    if (!modal?.bot) return undefined;\n    return lang('LocationPermissionText', {\n      name: getUserFullName(modal?.bot!),\n    }, {\n      withNodes: true,\n      withMarkdown: true,\n    });\n  });\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n    >\n      {renderInfo()}\n      <div>\n        {renderStatusText()}\n        <div\n          className=\"dialog-buttons mt-2\"\n          ref={containerRef}\n        >\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={confirmHandler}\n            color=\"primary\"\n          >\n            {oldLang('lng_bot_allow_write_confirm')}\n          </Button>\n          <Button\n            className=\"confirm-dialog-button\"\n            isText\n            onClick={onCloseHandler}\n          >\n            {lang('Cancel')}\n          </Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentUser = selectUser(global, global.currentUserId!);\n\n    return {\n      currentUser,\n    };\n  },\n)(LocationAccessModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatars\":\"CGPoDaLo\",\"arrow\":\"pzERgD5x\"};","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"qJDgUtjV\",\"root\":\"njPBcVYr\",\"modalTitle\":\"ZAdG13Ah\",\"optionText\":\"oWujoaSC\",\"option\":\"aFbjDzNo\",\"optionButton\":\"VbE0HzDs\",\"sectionTitle\":\"jrA2dOiw\",\"description\":\"k71Zrc_P\",\"title\":\"mMmY6YR4\",\"titleMultiline\":\"lVVyV0py\",\"subtitle\":\"gSkAFc4u\",\"transition\":\"HjsGIG6e\"};","import React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport SafeLink from '../../common/SafeLink';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportAdModal.module.scss';\n\nconst ADDED_PADDING = 56;\n\nexport type OwnProps = {\n  modal: TabState['reportAdModal'];\n};\n\nconst ReportAdModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportSponsoredMessage, closeReportAdModal, openPreviousReportAdModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const { chatId, randomId } = modal!;\n    reportSponsoredMessage({ peerId: chatId, randomId, option });\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    if (!renderingDepth) {\n      closeReportAdModal();\n      return;\n    }\n\n    openPreviousReportAdModal();\n  });\n\n  const bottomText = useMemo(() => {\n    if (!modal) return undefined;\n    const template = lang('lng_report_sponsored_reported_learn');\n    const parts = template.split('{link}');\n    return [\n      parts[0],\n      <SafeLink\n        text={lang('lng_report_sponsored_reported_link')}\n        url={lang('ReportAd.Help_URL')}\n      />,\n      parts[1],\n    ];\n  }, [lang, modal]);\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang(renderingDepth ? 'Back' : 'Close')}\n          onClick={handleBackClick}\n        >\n          <Icon name={renderingDepth ? 'arrow-left' : 'close'} />\n        </Button>\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={styles.title}>{lang('ReportAd')}</h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.subtitle]);\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton\n      className={styles.root}\n      header={header}\n      onClose={closeReportAdModal}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3>\n          {renderingSection?.options.map((option) => (\n            <ListItem\n              narrow\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n        </div>\n        <p className={styles.description}>{bottomText}</p>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportAdModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"slide\":\"kq9LwNTZ\",\"root\":\"E1bGWeON\",\"content\":\"tNysQgHL\",\"modalTitle\":\"Lj_ezEWU\",\"header\":\"AlMDkK7c\",\"optionText\":\"FU8m6NUU\",\"option\":\"RoxwMzvA\",\"optionButton\":\"Z6skYdvb\",\"sectionTitle\":\"GSfUuTet\",\"description\":\"zwfjNhF9\",\"title\":\"QawchdxB\",\"hasDepth\":\"CV7kzv9H\",\"titleMultiline\":\"OYFbu8fQ\",\"subtitle\":\"OUFckTb7\",\"transition\":\"n2VxPirU\",\"block\":\"KpptZ3Mk\",\"optionInfo\":\"yc3szGcx\",\"reportIcon\":\"kO8JC4gK\"};","import type { ChangeEvent } from 'react';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\n\nimport { requestMeasure, requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport buildClassName from '../../../util/buildClassName';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport TextArea from '../../ui/TextArea';\nimport Transition, { ACTIVE_SLIDE_CLASS_NAME, TO_SLIDE_CLASS_NAME } from '../../ui/Transition';\n\nimport styles from './ReportModal.module.scss';\n\nconst MAX_DESCRIPTION = 512;\nconst ADDED_PADDING = 20;\n\nexport type OwnProps = {\n  modal: TabState['reportModal'];\n};\n\nconst ReportModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    reportMessages, reportStory, closeReportModal, openPreviousReportModal,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  // eslint-disable-next-line no-null/no-null\n  const transitionRef = useRef<HTMLDivElement>(null);\n\n  const [text, setText] = useState('');\n\n  const handleOptionClick = useLastCallback((e, option: string) => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    if (!messageIds) return;\n    switch (subject) {\n      case 'message':\n        reportMessages({ chatId: chatId!, messageIds, option });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds[0], peerId: peerId!, option,\n        });\n        break;\n    }\n  });\n\n  const [renderingSection, renderingDepth] = useMemo(() => {\n    if (!modal) return [undefined, 0];\n    const sectionDepth = modal.sections.length - 1;\n    return [modal?.sections[sectionDepth], sectionDepth];\n  }, [modal]);\n\n  const handleBackClick = useLastCallback(() => {\n    openPreviousReportModal();\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closeReportModal();\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    const hasSubtitle = Boolean(renderingSection?.subtitle);\n\n    return (\n      <div className=\"modal-header-condensed\">\n        {renderingDepth ? (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Back')}\n            onClick={handleBackClick}\n          >\n            <Icon name=\"arrow-left\" />\n          </Button>\n        ) : (\n          <Button\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Close')}\n            onClick={handleCloseClick}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n        <div className={buildClassName('modal-title', styles.modalTitle, hasSubtitle && styles.titleMultiline)}>\n          <h3 className={buildClassName(styles.title, renderingDepth && styles.hasDepth)}>\n            {renderingSection?.options\n              ? lang(modal?.subject === 'story' ? 'ReportStory' : 'Report') : renderingSection?.title}\n          </h3>\n          {hasSubtitle && (\n            <span className={styles.subtitle}>{renderingSection.subtitle}</span>\n          )}\n        </div>\n      </div>\n    );\n  }, [lang, modal, renderingDepth, renderingSection?.options, renderingSection?.subtitle, renderingSection?.title]);\n\n  const handleTextChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setText(e.target.value);\n  });\n\n  useEffect(() => {\n    if (!modal) return;\n    const slide = document.querySelector<HTMLElement>(`.${ACTIVE_SLIDE_CLASS_NAME} > .${styles.slide}`);\n    if (!slide) return;\n\n    const height = slide.scrollHeight;\n    requestMutation(() => {\n      transitionRef.current!.style.height = `${height}px`;\n    });\n  }, [modal]);\n\n  const handleAnimationStart = useLastCallback(() => {\n    const slide = document.querySelector<HTMLElement>(`.${TO_SLIDE_CLASS_NAME} > .${styles.slide}`)!;\n\n    requestMeasure(() => {\n      const height = slide.scrollHeight;\n      requestMutation(() => {\n        transitionRef.current!.style.height = `${height + ADDED_PADDING}px`;\n      });\n    });\n  });\n\n  const closeReportMessageModalHandler = useLastCallback(() => {\n    setText('');\n    closeReportModal();\n  });\n\n  const sendMessageReportHandler = useLastCallback(() => {\n    const {\n      messageIds, subject, peerId, chatId,\n    } = modal!;\n    switch (subject) {\n      case 'message':\n        reportMessages({\n          chatId: chatId!, messageIds, option: renderingSection?.option, description: text,\n        });\n        break;\n      case 'story':\n        reportStory({\n          storyId: messageIds?.[0], peerId: peerId!, option: renderingSection?.option, description: text,\n        });\n        break;\n    }\n    closeReportMessageModalHandler();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      header={header}\n      onClose={closeReportMessageModalHandler}\n      contentClassName={styles.content}\n      className={buildClassName(styles.root, modal?.subject === 'story' && 'component-theme-dark')}\n    >\n      <Transition\n        name=\"slide\"\n        className={styles.transition}\n        ref={transitionRef}\n        activeKey={renderingDepth}\n        onStart={handleAnimationStart}\n      >\n        <div className={styles.slide}>\n          {renderingSection?.options\n            ? <h3 className={styles.sectionTitle}>{renderingSection?.title}</h3> : undefined}\n          {renderingSection?.options?.map((option) => (\n            <ListItem\n              narrow\n              nonInteractive\n              secondaryIcon=\"next\"\n              className={styles.option}\n              buttonClassName={styles.optionButton}\n              clickArg={option.option}\n              onClick={handleOptionClick}\n            >\n              <div className={styles.optionText}>{option.text}</div>\n            </ListItem>\n          ))}\n          {renderingSection?.option ? (\n            <div className={styles.block}>\n              <AnimatedIconWithPreview\n                tgsUrl={LOCAL_TGS_URLS.Report}\n                size={100}\n                className={styles.reportIcon}\n                nonInteractive\n                forceAlways\n                noLoop={false}\n              />\n              <TextArea\n                id=\"option\"\n                className={styles.optionInfo}\n                label={renderingSection.isOptional ? lang('Report2CommentOptional') : lang('Report2Comment')}\n                onChange={handleTextChange}\n                value={text}\n                maxLength={MAX_DESCRIPTION}\n                maxLengthIndicator={(MAX_DESCRIPTION - text.length).toString()}\n                noReplaceNewlines\n              />\n              <Button\n                size=\"smaller\"\n                onClick={sendMessageReportHandler}\n                disabled={!renderingSection.isOptional ? !text.length : undefined}\n              >{lang('ReportSend')}\n              </Button>\n            </div>\n          ) : undefined}\n        </div>\n      </Transition>\n    </Modal>\n  );\n};\n\nexport default memo(ReportModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Rzj2LMLf\",\"content\":\"Ve4u2KVI\",\"modalTitle\":\"E42tgAwD\",\"container\":\"pNSCKAVN\",\"header\":\"P1fPh6h8\",\"actionMessageView\":\"McJgXCtB\",\"info\":\"xWnXsG7q\",\"background\":\"_6w75ldP\",\"customBgImage\":\"CZkpv8n0\",\"customBgColor\":\"VJAYrDF_\",\"withTransition\":\"lElCwweL\",\"blurred\":\"m8xzfVvU\",\"withRightColumn\":\"rJCyBVMB\"};","import React, {\n  type FC,\n  memo, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\nimport type { ThemeKey } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport { getMockPreparedMessageFromResult, getUserFullName } from '../../../global/helpers';\nimport { selectTheme, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\n\nimport useCustomBackground from '../../../hooks/useCustomBackground';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Icon from '../../common/icons/Icon';\nimport Message from '../../middle/message/Message';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './PreparedMessageModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['preparedMessageModal'];\n};\n\ntype StateProps = {\n  theme: ThemeKey;\n  isBackgroundBlurred?: boolean;\n  patternColor?: string;\n  customBackground?: string;\n  backgroundColor?: string;\n  bot?: ApiUser;\n};\n\nconst PreparedMessageModal: FC<OwnProps & StateProps> = ({\n  modal,\n  theme,\n  isBackgroundBlurred,\n  patternColor,\n  customBackground,\n  backgroundColor,\n  bot,\n}) => {\n  const {\n    closePreparedInlineMessageModal, sendWebAppEvent, openSharePreparedMessageModal,\n  } = getActions();\n  const lang = useLang();\n  const isOpen = Boolean(modal);\n\n  const { webAppKey, message, botId } = modal || {};\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const customBackgroundValue = useCustomBackground(theme, customBackground);\n\n  const handleOpenClick = useLastCallback(() => {\n    if (webAppKey && botId && message) {\n      openSharePreparedMessageModal({\n        webAppKey,\n        message,\n      });\n      closePreparedInlineMessageModal();\n    }\n  });\n\n  const handleCloseClick = useLastCallback(() => {\n    closePreparedInlineMessageModal();\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_failed',\n          eventData: { error: 'USER_DECLINED' },\n        },\n      });\n    }\n  });\n\n  const header = useMemo(() => {\n    if (!modal) {\n      return undefined;\n    }\n\n    return (\n      <div className={styles.header}>\n        <Button\n          round\n          color=\"translucent\"\n          size=\"smaller\"\n          ariaLabel={lang('Close')}\n          onClick={handleCloseClick}\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <h3 className={buildClassName('modal-title', styles.modalTitle)}>\n          {lang('BotShareMessage')}\n        </h3>\n      </div>\n    );\n  }, [lang, modal]);\n\n  const localMessage = useMemo(() => {\n    if (!botId || !message || !webAppKey) return undefined;\n    return getMockPreparedMessageFromResult(botId, message);\n  }, [botId, message, webAppKey]);\n\n  const bgClassName = buildClassName(\n    styles.background,\n    styles.withTransition,\n    customBackground && styles.customBgImage,\n    backgroundColor && styles.customBgColor,\n    customBackground && isBackgroundBlurred && styles.blurred,\n  );\n\n  return (\n    <Modal\n      dialogRef={containerRef}\n      isOpen={isOpen}\n      header={header}\n      onClose={handleCloseClick}\n      className={styles.root}\n      contentClassName={styles.content}\n    >\n      <div\n        className={buildClassName(styles.actionMessageView, 'MessageList')}\n        // @ts-ignore -- FIXME: Find a way to disable interactions but keep a11y\n        inert\n        style={buildStyle(\n          `--pattern-color: ${patternColor}`,\n          backgroundColor && `--theme-background-color: ${backgroundColor}`,\n        )}\n      >\n        <div\n          className={bgClassName}\n          style={customBackgroundValue ? `--custom-background: ${customBackgroundValue}` : undefined}\n        />\n        {localMessage && (\n          <Message\n            key={botId}\n            message={localMessage}\n            threadId={MAIN_THREAD_ID}\n            messageListType=\"thread\"\n            noComments\n            noReplies\n            appearanceOrder={0}\n            isJustAdded={false}\n            isFirstInGroup\n            isLastInGroup\n            isLastInList={false}\n            isFirstInDocumentGroup={false}\n            isLastInDocumentGroup={false}\n          />\n        )}\n      </div>\n      <div className={styles.container}>\n        <p className={styles.info}>\n          {lang('WebAppShareMessageInfo', { user: getUserFullName(bot) })}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={handleOpenClick}\n        >\n          {lang('BotShareMessageShare')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }) => {\n    const theme = selectTheme(global);\n    const {\n      isBlurred: isBackgroundBlurred,\n      patternColor,\n      background: customBackground,\n      backgroundColor,\n    } = global.settings.themes[theme] || {};\n    const bot = modal ? selectUser(global, modal?.botId) : undefined;\n\n    return {\n      theme,\n      isBackgroundBlurred,\n      patternColor,\n      customBackground,\n      backgroundColor,\n      bot,\n      currentUserId: global.currentUserId,\n    };\n  },\n)(PreparedMessageModal));\n","import React, {\n  type FC,\n  memo, useEffect,\n} from '../../../lib/teact/teact';\nimport {\n  getActions, getGlobal, withGlobal,\n} from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport type { ThreadId } from '../../../types';\nimport { MAIN_THREAD_ID } from '../../../api/types';\n\nimport {\n} from '../../../global/helpers';\nimport { getPeerTitle } from '../../../global/helpers/peers';\nimport {\n  selectPeer, selectTabState,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePaidMessageConfirmation from '../../middle/composer/hooks/usePaidMessageConfirmation';\n\nimport PaymentMessageConfirmDialog from '../../common/PaymentMessageConfirmDialog';\nimport RecipientPicker from '../../common/RecipientPicker';\n\nexport type OwnProps = {\n  modal: TabState['sharePreparedMessageModal'];\n};\n\ntype StateProps = {\n  isPaymentMessageConfirmDialogOpen: boolean;\n  starsBalance: number;\n  isStarsBalanceModalOpen: boolean;\n};\n\nexport type SendParams = {\n  peerName?: string;\n  starsForSendMessage: number;\n};\n\nconst SharePreparedMessageModal: FC<OwnProps & StateProps> = ({\n  modal, isPaymentMessageConfirmDialogOpen, isStarsBalanceModalOpen, starsBalance,\n}) => {\n  const {\n    closeSharePreparedMessageModal,\n    sendInlineBotResult,\n    sendWebAppEvent,\n    showNotification,\n    updateSharePreparedMessageModalSendArgs,\n  } = getActions();\n  const lang = useOldLang();\n  const isOpen = Boolean(modal);\n\n  const [isShown, markIsShown, unmarkIsShown] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      markIsShown();\n    }\n  }, [isOpen, markIsShown]);\n\n  const {\n    message, filter, webAppKey, pendingSendArgs,\n  } = modal || {};\n\n  const {\n    starsForSendMessage,\n  } = pendingSendArgs || {};\n\n  const {\n    closeConfirmDialog: closeConfirmModalPayForMessage,\n    dialogHandler: paymentMessageConfirmDialogHandler,\n    shouldAutoApprove: shouldPaidMessageAutoApprove,\n    setAutoApprove: setShouldPaidMessageAutoApprove,\n    handleWithConfirmation: handleActionWithPaymentConfirmation,\n  } = usePaidMessageConfirmation(starsForSendMessage || 0, isStarsBalanceModalOpen, starsBalance);\n\n  const handleClose = useLastCallback(() => {\n    closeSharePreparedMessageModal();\n    if (webAppKey) {\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_failed',\n          eventData: { error: 'USER_DECLINED' },\n        },\n      });\n    }\n  });\n\n  const handleSend = useLastCallback((id: string, threadId?: ThreadId) => {\n    if (message && webAppKey) {\n      const global = getGlobal();\n      const peer = selectPeer(global, id);\n      sendInlineBotResult({\n        chatId: id,\n        threadId: threadId || MAIN_THREAD_ID,\n        id: message.result.id,\n        queryId: message.result.queryId,\n      });\n      if (!starsForSendMessage) {\n        showNotification({\n          message: lang('BotSharedToOne', getPeerTitle(lang, peer!)),\n        });\n      }\n      sendWebAppEvent({\n        webAppKey,\n        event: {\n          eventType: 'prepared_message_sent',\n        },\n      });\n      closeSharePreparedMessageModal();\n      updateSharePreparedMessageModalSendArgs({ args: undefined });\n    }\n  });\n\n  const handleSelectRecipient = useLastCallback((id: string, threadId?: ThreadId) => {\n    updateSharePreparedMessageModalSendArgs({ args: { peerId: id, threadId } });\n  });\n\n  const handleSendWithPaymentConfirmation = useLastCallback(() => {\n    if (pendingSendArgs) {\n      handleActionWithPaymentConfirmation(handleSend, pendingSendArgs.peerId, pendingSendArgs.threadId);\n    }\n  });\n\n  const handleClosePaymentMessageConfirmDialog = useLastCallback(() => {\n    closeConfirmModalPayForMessage();\n    updateSharePreparedMessageModalSendArgs({ args: undefined });\n  });\n\n  useEffect(() => {\n    if (pendingSendArgs) {\n      handleSendWithPaymentConfirmation();\n    }\n  }, [pendingSendArgs]);\n\n  const global = getGlobal();\n  const peer = pendingSendArgs ? selectPeer(global, pendingSendArgs.peerId) : undefined;\n  const peerName = peer ? getPeerTitle(lang, peer) : undefined;\n\n  if (!isOpen && !isShown) {\n    return undefined;\n  }\n\n  return (\n    <>\n      <RecipientPicker\n        isOpen={isOpen}\n        searchPlaceholder={lang('Search')}\n        filter={filter}\n        onSelectRecipient={handleSelectRecipient}\n        onClose={handleClose}\n        onCloseAnimationEnd={unmarkIsShown}\n        isLowStackPriority\n      />\n      <PaymentMessageConfirmDialog\n        isOpen={isPaymentMessageConfirmDialogOpen}\n        onClose={handleClosePaymentMessageConfirmDialog}\n        userName={peerName}\n        messagePriceInStars={starsForSendMessage || 0}\n        messagesCount={1}\n        shouldAutoApprove={shouldPaidMessageAutoApprove}\n        setAutoApprove={setShouldPaidMessageAutoApprove}\n        confirmHandler={paymentMessageConfirmDialogHandler}\n      />\n    </>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const { isPaymentMessageConfirmDialogOpen } = tabState;\n    const starsBalance = global.stars?.balance.amount || 0;\n    const isStarsBalanceModalOpen = Boolean(tabState.starsBalanceModal);\n    return {\n      isPaymentMessageConfirmDialogOpen,\n      starsBalance,\n      isStarsBalanceModalOpen,\n    };\n  },\n)(SharePreparedMessageModal));\n","import type React from '../../../lib/teact/teact';\nimport { useCallback, useEffect, useState } from '../../../lib/teact/teact';\n\nimport type { ApiChatBannedRights } from '../../../api/types';\n\nconst FLOATING_BUTTON_ANIMATION_TIMEOUT_MS = 250;\nconst MEDIA_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'embedLinks',\n  'sendPolls',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n  'sendStickers',\n  'sendGifs',\n];\nconst MESSAGE_PERMISSIONS: typeof MEDIA_PERMISSIONS = [...MEDIA_PERMISSIONS, 'sendPlain'];\n\nexport default function useManagePermissions(defaultPermissions: ApiChatBannedRights | undefined) {\n  const [permissions, setPermissions] = useState<ApiChatBannedRights>({});\n  const [havePermissionChanged, setHavePermissionChanged] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n    setTimeout(() => {\n      setIsLoading(false);\n    }, FLOATING_BUTTON_ANIMATION_TIMEOUT_MS);\n  }, [defaultPermissions]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name: targetName } = e.target;\n\n    const name = targetName as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    const oldPermissions = permissions;\n\n    let newPermissions: ApiChatBannedRights = {\n      ...oldPermissions,\n      [name]: getUpdatedPermissionValue(oldPermissions[name]),\n      ...(name === 'sendStickers' && {\n        sendGifs: getUpdatedPermissionValue(oldPermissions[name]),\n      }),\n    };\n\n    const checkMedia = () => {\n      const mediaPermissions = MEDIA_PERMISSIONS.map((key) => newPermissions[key]);\n      if (mediaPermissions.some((v) => !v)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: undefined,\n        };\n      } else if (mediaPermissions.every(Boolean)) {\n        newPermissions = {\n          ...newPermissions,\n          sendMedia: true,\n        };\n      }\n    };\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    } else {\n      newPermissions = {\n        ...newPermissions,\n        ...(MEDIA_PERMISSIONS.reduce((acc, key) => (\n          Object.assign(acc, { [key]: newPermissions.sendMedia })\n        ), {})),\n      };\n    }\n\n    // Embed links can't be enabled if plain text is banned\n    if (name !== 'embedLinks' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        embedLinks: true,\n      };\n    }\n\n    if (name !== 'sendPlain' && !newPermissions.embedLinks && newPermissions.sendPlain) {\n      newPermissions = {\n        ...newPermissions,\n        sendPlain: undefined,\n      };\n    }\n\n    if (name !== 'sendMedia') {\n      checkMedia();\n    }\n\n    const sendMessages = MESSAGE_PERMISSIONS.every((key) => newPermissions[key]);\n    newPermissions = {\n      ...newPermissions,\n      sendMessages: sendMessages ? true : undefined,\n    };\n\n    setPermissions(newPermissions);\n\n    setHavePermissionChanged(!defaultPermissions || Object.keys(newPermissions).some((k) => {\n      const key = k as Exclude<keyof ApiChatBannedRights, 'untilDate'>;\n      return Boolean(defaultPermissions[key]) !== Boolean(newPermissions[key]);\n    }));\n  }, [defaultPermissions, permissions]);\n\n  const resetPermissions = useCallback(() => {\n    setPermissions(defaultPermissions || {});\n    setHavePermissionChanged(false);\n  }, [defaultPermissions]);\n\n  return {\n    permissions,\n    isLoading,\n    havePermissionChanged,\n    handlePermissionChange,\n    setIsLoading,\n    resetPermissions,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useMemo,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatBannedRights } from '../../api/types';\n\nimport { isChatPublic } from '../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport stopEvent from '../../util/stopEvent';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\n\nexport type OwnProps = {\n  chatId?: string;\n  handlePermissionChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  permissions: ApiChatBannedRights;\n  isMediaDropdownOpen: boolean;\n  setIsMediaDropdownOpen: (open: boolean) => void;\n  className?: string;\n  shiftedClassName?: string;\n  dropdownClassName?: string;\n  withCheckbox?: boolean;\n  permissionGroup?: boolean;\n  getControlIsDisabled?: (key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => boolean | undefined;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasLinkedChat?: boolean;\n};\n\nconst permissionKeyList: (keyof ApiChatBannedRights)[] = [\n  'sendPhotos', 'sendVideos', 'sendStickers',\n  'sendAudios', 'sendDocs', 'sendVoices', 'sendRoundvideos', 'embedLinks', 'sendPolls',\n];\n\nconst PermissionCheckboxList: FC<OwnProps & StateProps> = ({\n  chat,\n  isMediaDropdownOpen,\n  setIsMediaDropdownOpen,\n  hasLinkedChat,\n  permissions,\n  handlePermissionChange,\n  className,\n  shiftedClassName,\n  dropdownClassName,\n  withCheckbox,\n  getControlIsDisabled,\n  permissionGroup,\n}) => {\n  const {\n    showNotification,\n  } = getActions();\n\n  const { isForum } = chat || {};\n\n  const lang = useOldLang();\n\n  const isPublic = useMemo(() => chat && isChatPublic(chat), [chat]);\n  const shouldDisablePermissionForPublicGroup = hasLinkedChat || isPublic;\n\n  const countCheckedPermissions = useMemo(() => {\n    return permissionKeyList.reduce((count, key) => {\n      if (!permissions[key]) {\n        count += 1;\n      }\n      return count;\n    }, 0);\n  }, [permissions]);\n\n  const handleOpenMediaDropdown = useLastCallback((e: React.MouseEvent) => {\n    stopEvent(e);\n    setIsMediaDropdownOpen(!isMediaDropdownOpen);\n  });\n\n  const handleDisabledClick = useLastCallback(() => {\n    showNotification({ message: lang('lng_rights_permission_unavailable') });\n  });\n\n  return (\n    <>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendPlain\"\n          checked={!permissions.sendPlain}\n          label={lang('UserRestrictionsSend')}\n          blocking\n          permissionGroup={permissionGroup}\n          onChange={handlePermissionChange}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendPlain')}\n        />\n      </div>\n      <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n        <Checkbox\n          name=\"sendMedia\"\n          checked={!permissions.sendMedia}\n          label={lang('UserRestrictionsSendMedia')}\n          labelText={`${countCheckedPermissions}/${permissionKeyList.length}`}\n          blocking\n          permissionGroup={permissionGroup}\n          rightIcon={isMediaDropdownOpen ? 'up' : 'down'}\n          onChange={handlePermissionChange}\n          onClickLabel={handleOpenMediaDropdown}\n          disabled={getControlIsDisabled && getControlIsDisabled('sendMedia')}\n        />\n      </div>\n      <div className={dropdownClassName}>\n        <div\n          className={className}\n        >\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPhotos\"\n              checked={!permissions.sendPhotos}\n              label={lang('UserRestrictionsSendPhotos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPhotos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVideos\"\n              checked={!permissions.sendVideos}\n              label={lang('UserRestrictionsSendVideos')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendStickers\"\n              checked={!permissions.sendStickers && !permissions.sendGifs}\n              label={lang('UserRestrictionsSendStickers')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendStickers')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendAudios\"\n              checked={!permissions.sendAudios}\n              label={lang('UserRestrictionsSendMusic')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendAudios')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendDocs\"\n              checked={!permissions.sendDocs}\n              label={lang('UserRestrictionsSendFiles')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendDocs')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendVoices\"\n              checked={!permissions.sendVoices}\n              label={lang('UserRestrictionsSendVoices')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendVoices')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendRoundvideos\"\n              checked={!permissions.sendRoundvideos}\n              label={lang('UserRestrictionsSendRound')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendRoundvideos')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"embedLinks\"\n              checked={!permissions.embedLinks}\n              label={lang('UserRestrictionsEmbedLinks')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('embedLinks')}\n            />\n          </div>\n\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"sendPolls\"\n              checked={!permissions.sendPolls}\n              label={lang('UserRestrictionsSendPolls')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('sendPolls')}\n            />\n          </div>\n        </div>\n      </div>\n      <div className={shiftedClassName}>\n        <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n          <Checkbox\n            name=\"inviteUsers\"\n            checked={!permissions.inviteUsers}\n            label={lang('UserRestrictionsInviteUsers')}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n            disabled={getControlIsDisabled && getControlIsDisabled('inviteUsers')}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"pinMessages\"\n            checked={!permissions.pinMessages}\n            label={lang('UserRestrictionsPinMessages')}\n            disabled={getControlIsDisabled ? getControlIsDisabled('pinMessages')\n              : shouldDisablePermissionForPublicGroup}\n            blocking\n            permissionGroup={permissionGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        <div\n          className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}\n          onClick={shouldDisablePermissionForPublicGroup ? handleDisabledClick : undefined}\n        >\n          <Checkbox\n            name=\"changeInfo\"\n            checked={!permissions.changeInfo}\n            label={lang('UserRestrictionsChangeInfo')}\n            blocking\n            permissionGroup={permissionGroup}\n            disabled={getControlIsDisabled ? getControlIsDisabled('changeInfo')\n              : shouldDisablePermissionForPublicGroup}\n            onChange={handlePermissionChange}\n          />\n        </div>\n        {isForum && (\n          <div className={buildClassName('ListItem', withCheckbox && 'with-checkbox')}>\n            <Checkbox\n              name=\"manageTopics\"\n              checked={!permissions.manageTopics}\n              label={lang('CreateTopicsPermission')}\n              blocking\n              permissionGroup={permissionGroup}\n              onChange={handlePermissionChange}\n              disabled={getControlIsDisabled && getControlIsDisabled('manageTopics')}\n            />\n          </div>\n        )}\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const fullInfo = chat && selectChatFullInfo(global, chat.id);\n    const hasLinkedChat = Boolean(fullInfo?.linkedChatId);\n\n    return {\n      chat,\n      hasLinkedChat,\n    };\n  },\n)(PermissionCheckboxList));\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"_YNfwDqt\",\"root\":\"SeaF_shb\",\"container\":\"axa67kqo\",\"title\":\"U4IFhV0a\",\"singleTitle\":\"qd6OFHiG\",\"actionTitle\":\"yGhFKTl5\",\"restrictionTitle\":\"t3KOsBfm\",\"button\":\"goI3MITH\",\"options\":\"b6847Kh3\",\"dropdownList\":\"czTjjKim\",\"dialogButtons\":\"JTT_DIRv\",\"proceedButtons\":\"L4YzeG91\",\"restrictionContainer\":\"iv0u9Zw6\",\"restrictionContainerOpen\":\"qCQftA04\",\"dropdownListOpen\":\"Ifpyv7Jp\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useEffect,\n  useMemo,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../api/types';\nimport type { IRadioOption } from '../ui/CheckboxGroup';\n\nimport {\n  getHasAdminRight,\n  getPrivateChatUserId,\n  getUserFirstOrLastName, isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isSystemBot,\n  isUserId,\n} from '../../global/helpers';\nimport { getPeerTitle } from '../../global/helpers/peers';\nimport {\n  getSendersFromSelectedMessages,\n  selectBot,\n  selectCanDeleteSelectedMessages,\n  selectChat,\n  selectChatFullInfo, selectIsChatWithBot,\n  selectSenderFromMessage,\n  selectTabState,\n  selectUser,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { buildCollectionByCallback, unique } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport renderText from './helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useManagePermissions from '../right/hooks/useManagePermissions';\n\nimport PermissionCheckboxList from '../main/PermissionCheckboxList';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport Avatar from './Avatar';\nimport AvatarList from './AvatarList';\nimport Icon from './icons/Icon';\n\nimport styles from './DeleteMessageModal.module.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isGroup?: boolean;\n  isChannel?: boolean;\n  isSuperGroup?: boolean;\n  messageIds?: number[];\n  canDeleteForAll?: boolean;\n  contactName?: string;\n  currentUserId?: string;\n  willDeleteForCurrentUserOnly?: boolean;\n  willDeleteForAll?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  chatBot?: boolean;\n  isSchedule?: boolean;\n  onConfirm?: NoneToVoidFunction;\n  canBanUsers?: boolean;\n  isCreator?: boolean;\n  linkedChatId?: string;\n};\n\nconst DeleteMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chat,\n  isChannel,\n  isSuperGroup,\n  isSchedule,\n  currentUserId,\n  messageIds,\n  isCreator,\n  canDeleteForAll,\n  contactName,\n  willDeleteForCurrentUserOnly,\n  willDeleteForAll,\n  onConfirm,\n  chatBot,\n  adminMembersById,\n  canBanUsers,\n  linkedChatId,\n}) => {\n  const {\n    closeDeleteMessageModal,\n    deleteMessages,\n    reportChannelSpam,\n    deleteChatMember,\n    deleteScheduledMessages,\n    exitMessageSelectMode,\n    updateChatMemberBannedRights,\n    deleteParticipantHistory,\n  } = getActions();\n\n  const prevIsOpen = usePreviousDeprecated(isOpen);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const {\n    permissions, havePermissionChanged, handlePermissionChange, resetPermissions,\n  } = useManagePermissions(chat?.defaultBannedRights);\n\n  const [peerIdsToDeleteAll, setPeerIdsToDeleteAll] = useState<string[] | undefined>(undefined);\n  const [peerIdsToBan, setPeerIdsToBan] = useState<string[] | undefined>(undefined);\n  const [peerIdsToReportSpam, setPeerIdsToReportSpam] = useState<string[] | undefined>(undefined);\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n  const [isAdditionalOptionsVisible, setIsAdditionalOptionsVisible] = useState(false);\n  const [shouldDeleteForAll, setShouldDeleteForAll] = useState(true);\n\n  const peerList = useMemo(() => {\n    if (isChannel || !messageIds || !chat) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n    const senderArray = getSendersFromSelectedMessages(global, chat.id, messageIds);\n    return senderArray ? unique(senderArray)\n      .filter((peer) => peer?.id !== chat?.id && peer?.id !== linkedChatId) : MEMO_EMPTY_ARRAY;\n  }, [chat, isChannel, linkedChatId, messageIds]);\n\n  const buildNestedOptionListWithAvatars = useLastCallback(() => {\n    return peerList.map((member) => {\n      return {\n        value: `${member.id}`,\n        label: getPeerTitle(lang, member) || '',\n        leftElement: <Avatar size=\"small\" peer={member} />,\n      };\n    });\n  });\n\n  const peerListToDeleteAll = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== linkedChatId && peer.id !== currentUserId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToReportSpam = useMemo(() => {\n    return peerList.filter((peer) => peer.id !== currentUserId && peer.id !== linkedChatId);\n  }, [peerList, currentUserId, linkedChatId]);\n\n  const peerListToBan = useMemo(() => {\n    const isCurrentUserInList = peerList.some((peer) => peer.id === currentUserId);\n    const shouldReturnEmpty = !canBanUsers || isCurrentUserInList;\n\n    if (shouldReturnEmpty) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return peerList.filter((peer) => {\n      const isAdmin = adminMembersById?.[peer.id];\n      return isCreator || !isAdmin;\n    });\n  }, [peerList, isCreator, currentUserId, canBanUsers, adminMembersById]);\n\n  const shouldShowAdditionalOptions = useMemo(() => {\n    return Boolean(peerListToDeleteAll.length || peerListToReportSpam.length || peerListToBan.length);\n  }, [peerListToDeleteAll, peerListToReportSpam, peerListToBan]);\n\n  const shouldShowOption = shouldShowAdditionalOptions\n    && !canDeleteForAll && !isSchedule && isSuperGroup;\n\n  const peerNames = useMemo(() => {\n    if (!peerList || isSchedule) return {};\n    return buildCollectionByCallback(peerList, (peer) => [peer.id, getPeerTitle(lang, peer)]);\n  }, [isSchedule, lang, peerList]);\n\n  const ACTION_SPAM_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'spam' : peerList?.[0]?.id,\n        label: oldLang('ReportSpamTitle'),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, linkedChatId, currentUserId]);\n\n  const ACTION_DELETE_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'delete_all' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? oldLang('DeleteAllFromUsers')\n          : oldLang('DeleteAllFrom', Object.values(peerNames)[0]),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars().filter((opt) => opt.value !== linkedChatId\n            && opt.value !== currentUserId),\n        ] : undefined,\n      },\n    ];\n  }, [messageIds, peerList, oldLang, peerNames, linkedChatId, currentUserId]);\n\n  const ACTION_BAN_OPTION: IRadioOption[] = useMemo(() => {\n    return [\n      {\n        value: messageIds && peerList.length >= 2 ? 'ban' : peerList?.[0]?.id,\n        label: messageIds && peerList.length >= 2\n          ? (isAdditionalOptionsVisible ? oldLang('DeleteRestrictUsers') : oldLang('DeleteBanUsers'))\n          : (isAdditionalOptionsVisible ? oldLang('KickFromSupergroup')\n            : oldLang('DeleteBan', Object.values(peerNames)[0])),\n        nestedOptions: messageIds && peerList.length >= 2 ? [\n          ...buildNestedOptionListWithAvatars(),\n        ] : undefined,\n      },\n    ];\n  }, [isAdditionalOptionsVisible, oldLang, messageIds, peerList, peerNames]);\n\n  const toggleAdditionalOptions = useLastCallback(() => {\n    setIsAdditionalOptionsVisible((prev) => !prev);\n  });\n\n  const filterMessageIdByPeerId = useLastCallback((peerIds: string[], selectedMessageIdList: number[]) => {\n    if (!chat) return MEMO_EMPTY_ARRAY;\n    const global = getGlobal();\n    return selectedMessageIdList.filter((msgId) => {\n      const sender = selectSenderFromMessage(global, chat.id, msgId);\n      return sender && peerIds.includes(sender.id);\n    });\n  });\n\n  const handleReportSpam = useLastCallback((userMessagesMap: Record<string, number[]>) => {\n    Object.entries(userMessagesMap).forEach(([userId, messageIdList]) => {\n      if (messageIdList.length) {\n        reportChannelSpam({\n          participantId: userId,\n          chatId: chat!.id,\n          messageIds: messageIdList,\n        });\n      }\n    });\n  });\n\n  const handleDeleteMessages = useLastCallback((filteredMessageIdList: number[]) => {\n    deleteMessages({ messageIds: filteredMessageIdList, shouldDeleteForAll: true });\n  });\n\n  const handleDeleteAllPeerMessages = useLastCallback((peerIdList: string[]) => {\n    if (!chat) return;\n    peerIdList.forEach((peerId) => {\n      deleteParticipantHistory({ peerId, chatId: chat.id });\n    });\n  });\n\n  const handleDeleteMember = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      deleteChatMember({ chatId: chat!.id, userId });\n    });\n  });\n\n  const handleUpdateChatMemberBannedRights = useLastCallback((filteredUserIdList: string[]) => {\n    filteredUserIdList.forEach((userId) => {\n      updateChatMemberBannedRights({\n        chatId: chat!.id,\n        userId,\n        bannedRights: permissions,\n      });\n    });\n  });\n\n  const handleDeleteMessageList = useLastCallback(() => {\n    if (!chat || !messageIds) return;\n\n    onConfirm?.();\n    if (isSchedule) {\n      deleteScheduledMessages({ messageIds });\n    } else if (shouldShowOption) {\n      if (peerIdsToReportSpam) {\n        const global = getGlobal();\n        const peerIdList = peerIdsToReportSpam.filter((option) => !Number.isNaN(Number(option)));\n        const messageList = messageIds!.reduce<Record<string, number[]>>((acc, msgId) => {\n          const peer = selectSenderFromMessage(global, chat.id, msgId);\n          if (peer && peerIdList.includes(peer.id)) {\n            if (!acc[peer.id]) {\n              acc[peer.id] = [];\n            }\n            acc[peer.id].push(Number(msgId));\n          }\n          return acc;\n        }, {});\n\n        handleReportSpam(messageList);\n      }\n\n      if (peerIdsToDeleteAll) {\n        const peerIdList = peerIdsToDeleteAll.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteAllPeerMessages(peerIdList);\n      }\n\n      if (peerIdsToBan && !havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleDeleteMember(peerIdList);\n        const filteredMessageIdList = filterMessageIdByPeerId(peerIdList, messageIds!);\n        handleDeleteMessages(filteredMessageIdList);\n      }\n\n      if (peerIdsToBan && havePermissionChanged) {\n        const peerIdList = peerIdsToBan.filter((option) => !Number.isNaN(Number(option)));\n        handleUpdateChatMemberBannedRights(peerIdList);\n      }\n\n      if (!peerIdsToReportSpam || !peerIdsToDeleteAll || !peerIdsToBan) {\n        deleteMessages({ messageIds, shouldDeleteForAll });\n      }\n    } else {\n      deleteMessages({ messageIds, shouldDeleteForAll });\n    }\n\n    closeDeleteMessageModal();\n    exitMessageSelectMode();\n  });\n\n  const onCloseHandler = useLastCallback(() => {\n    closeDeleteMessageModal();\n  });\n\n  useEffect(() => {\n    if (!isOpen && prevIsOpen) {\n      setPeerIdsToReportSpam(undefined);\n      setPeerIdsToDeleteAll(undefined);\n      setPeerIdsToBan(undefined);\n      setShouldDeleteForAll(true);\n      setIsMediaDropdownOpen(false);\n      setIsAdditionalOptionsVisible(false);\n      resetPermissions();\n    }\n  }, [isOpen, prevIsOpen, resetPermissions]);\n\n  function renderHeader() {\n    return (\n      <div\n        className={shouldShowOption && styles.container}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldShowOption && (\n          <AvatarList\n            size=\"small\"\n            peers={peerList}\n          />\n        )}\n        <h3 className={buildClassName(shouldShowOption ? styles.title : styles.singleTitle)}>\n          {oldLang('Chat.DeleteMessagesConfirmation', messageIds?.length)}\n        </h3>\n      </div>\n    );\n  }\n\n  function renderAdditionalActionOptions() {\n    return (\n      <div className={styles.options}>\n        <CheckboxGroup\n          options={ACTION_SPAM_OPTION}\n          onChange={setPeerIdsToReportSpam}\n          selected={peerIdsToReportSpam}\n          nestedCheckbox={messageIds && peerList.length >= 2}\n        />\n        {peerListToDeleteAll?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_DELETE_OPTION}\n            onChange={setPeerIdsToDeleteAll}\n            selected={peerIdsToDeleteAll}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n        {peerListToBan?.length > 0 && (\n          <CheckboxGroup\n            options={ACTION_BAN_OPTION}\n            onChange={setPeerIdsToBan}\n            selected={peerIdsToBan}\n            nestedCheckbox={messageIds && peerList.length >= 2}\n          />\n        )}\n      </div>\n    );\n  }\n\n  function renderPartiallyRestrictedUser() {\n    return (\n      <div className={buildClassName(styles.restrictionContainer,\n        isAdditionalOptionsVisible && styles.restrictionContainerOpen)}\n      >\n        <h3 className={buildClassName(styles.actionTitle, styles.restrictionTitle)}>\n          {oldLang('UserRestrictionsCanDoUsers', peerList.length)}\n        </h3>\n        <PermissionCheckboxList\n          withCheckbox\n          chatId={chat?.id}\n          isMediaDropdownOpen={isMediaDropdownOpen}\n          setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n          handlePermissionChange={handlePermissionChange}\n          permissions={permissions}\n          className={buildClassName(\n            styles.dropdownList,\n            isMediaDropdownOpen && styles.dropdownListOpen,\n          )}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onCloseHandler}\n      onEnter={canDeleteForAll ? undefined : handleDeleteMessageList}\n      className={styles.root}\n    >\n      <div className={styles.main}>\n        {renderHeader()}\n        {shouldShowOption && (\n          <>\n            <p className={styles.actionTitle}>{oldLang('DeleteAdditionalActions')}</p>\n            {renderAdditionalActionOptions()}\n            {renderPartiallyRestrictedUser()}\n            {\n              peerIdsToBan && canBanUsers ? (\n                <ListItem\n                  narrow\n                  buttonClassName={styles.button}\n                  onClick={toggleAdditionalOptions}\n                >\n                  {oldLang(isAdditionalOptionsVisible ? 'DeleteToggleBanUsers' : 'DeleteToggleRestrictUsers')}\n                  <Icon\n                    name={isAdditionalOptionsVisible ? 'up' : 'down'}\n                    className={buildClassName(styles.button, 'ml-2')}\n                  />\n                </ListItem>\n              ) : setIsAdditionalOptionsVisible(false)\n            }\n          </>\n        )}\n        {(canDeleteForAll || chatBot || !shouldShowOption) && (\n          <>\n            <p>{messageIds && messageIds.length > 1\n              ? lang('AreYouSureDeleteFewMessages') : lang('AreYouSureDeleteSingleMessage')}\n            </p>\n            {willDeleteForCurrentUserOnly && (\n              <p>{oldLang('lng_delete_for_me_chat_hint', 1, 'i')}</p>\n            )}\n            {willDeleteForAll && (\n              <p>{oldLang('lng_delete_for_everyone_hint', 1, 'i')}</p>\n            )}\n          </>\n        )}\n        {canDeleteForAll && (\n          <Checkbox\n            className=\"dialog-checkbox\"\n            label={contactName ? renderText(oldLang('DeleteMessagesOptionAlso', contactName))\n              : oldLang('Conversation.DeleteMessagesForEveryone')}\n            checked={shouldDeleteForAll}\n            onCheck={setShouldDeleteForAll}\n          />\n        )}\n        <div className={buildClassName('dialog-buttons',\n          isMediaDropdownOpen ? styles.dialogButtons : styles.proceedButtons)}\n        >\n          <Button color=\"danger\" className=\"confirm-dialog-button\" isText onClick={handleDeleteMessageList}>\n            {shouldShowOption ? oldLang('DeleteProceedBtn') : lang('Delete')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onCloseHandler}>{oldLang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      deleteMessageModal,\n    } = selectTabState(global);\n    const messageIds = deleteMessageModal?.messageIds;\n    const chatId = deleteMessageModal?.chatId;\n    const { canDeleteForAll } = selectCanDeleteSelectedMessages(global, messageIds);\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chat && selectChatFullInfo(global, chat.id);\n    const linkedChatId = chatFullInfo?.linkedChatId;\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const isSchedule = deleteMessageModal?.isSchedule;\n    const onConfirm = deleteMessageModal?.onConfirm;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n    const chatBot = Boolean(chat && !isSystemBot(chat.id) && selectBot(global, chat.id));\n    const adminMembersById = chatFullInfo?.adminMembersById;\n    const canBanUsers = chat && getHasAdminRight(chat, 'banUsers');\n    const isCreator = chat?.isCreator;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const willDeleteForCurrentUserOnly = (chat && isChatBasicGroup(chat) && !canDeleteForAll) || isChatWithBot;\n    const willDeleteForAll = chat && (isChatSuperGroup(chat) || isChannel);\n\n    return {\n      chat,\n      isChannel,\n      isSuperGroup,\n      messageIds,\n      currentUserId: global.currentUserId,\n      canDeleteForAll: !isSchedule && canDeleteForAll,\n      contactName,\n      willDeleteForCurrentUserOnly,\n      willDeleteForAll,\n      adminMembersById,\n      chatBot,\n      canBanUsers,\n      linkedChatId,\n      isSchedule,\n      isCreator,\n      onConfirm,\n    };\n  },\n)(DeleteMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport {\n  getPrivateChatUserId,\n  getUserFirstOrLastName,\n  isChatBasicGroup,\n  isChatChannel,\n  isChatSuperGroup,\n  isUserId,\n} from '../../global/helpers';\nimport { selectChat, selectIsChatWithSelf, selectUser } from '../../global/selectors';\nimport renderText from './helpers/renderText';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  messageId: number;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  isChannel: boolean;\n  isPrivateChat: boolean;\n  isChatWithSelf: boolean;\n  isGroup: boolean;\n  isSuperGroup: boolean;\n  canPinForAll: boolean;\n  contactName?: string;\n};\n\nconst PinMessageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  isChannel,\n  isGroup,\n  isSuperGroup,\n  canPinForAll,\n  contactName,\n  onClose,\n}) => {\n  const { pinMessage } = getActions();\n\n  const handlePinMessageForAll = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const handlePinMessage = useCallback(() => {\n    pinMessage({\n      chatId, messageId, isUnpin: false, isOneSide: true, isSilent: true,\n    });\n    onClose();\n  }, [chatId, messageId, onClose]);\n\n  const lang = useOldLang();\n\n  function renderMessage() {\n    if (isChannel) {\n      return lang('PinMessageAlertChannel');\n    }\n\n    if (isGroup || isSuperGroup) {\n      return lang('PinMessageAlert');\n    }\n\n    return lang('PinMessageAlertChat');\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"pin\"\n      title={lang('PinMessageAlertTitle')}\n    >\n      <p>{renderMessage()}</p>\n      <div className=\"dialog-buttons-column\">\n        <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessage}>\n          {lang('DialogPin')}\n        </Button>\n        {canPinForAll && (\n          <Button className=\"confirm-dialog-button\" isText onClick={handlePinMessageForAll}>\n            {contactName\n              ? renderText(lang('Conversation.PinMessagesFor', contactName))\n              : lang('Conversation.PinMessageAlert.PinAndNotifyMembers')}\n          </Button>\n        )}\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const isPrivateChat = isUserId(chatId);\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const isChannel = Boolean(chat) && isChatChannel(chat);\n    const isGroup = Boolean(chat) && isChatBasicGroup(chat);\n    const isSuperGroup = Boolean(chat) && isChatSuperGroup(chat);\n    const canPinForAll = (isPrivateChat && !isChatWithSelf) || isSuperGroup || isGroup;\n    const contactName = chat && isUserId(chat.id)\n      ? getUserFirstOrLastName(selectUser(global, getPrivateChatUserId(chat)!))\n      : undefined;\n\n    return {\n      isPrivateChat,\n      isChatWithSelf,\n      isChannel,\n      isGroup,\n      isSuperGroup,\n      canPinForAll,\n      contactName,\n    };\n  },\n)(PinMessageModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  pinnedMessagesCount?: number;\n  onClose: () => void;\n  onUnpin: () => void;\n};\n\nconst UnpinAllMessagesModal: FC<OwnProps> = ({\n  isOpen,\n  pinnedMessagesCount = 0,\n  onClose,\n  onUnpin,\n}) => {\n  const lang = useOldLang();\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      className=\"unpin-all\"\n      title={lang('Chat.PanelUnpinAllMessages')}\n    >\n      <p>{lang('Chat.UnpinAllMessagesConfirmation', pinnedMessagesCount, 'i')}</p>\n      <div className=\"dialog-buttons mt-2\">\n        <Button className=\"confirm-dialog-button\" isText onClick={onUnpin}>\n          {lang('DialogUnpin')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(UnpinAllMessagesModal);\n","import { useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { useHotkeys } from '../../../hooks/useHotkeys';\n\nconst useCopySelectedMessages = (isActive?: boolean) => {\n  function handleCopy(e: KeyboardEvent) {\n    e.preventDefault();\n    getActions().copySelectedMessages();\n  }\n\n  useHotkeys(useMemo(() => (isActive ? {\n    'Mod+C': handleCopy,\n  } : undefined), [isActive]));\n};\n\nexport default useCopySelectedMessages;\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat } from '../../api/types';\nimport type { MessageListType } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  selectCanDeleteSelectedMessages,\n  selectCanDownloadSelectedMessages,\n  selectCanForwardMessages,\n  selectCanReportSelectedMessages, selectCurrentChat,\n  selectCurrentMessageList, selectHasProtectedMessage,\n  selectSelectedMessagesCount,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useCopySelectedMessages from './hooks/useCopySelectedMessages';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport ConfirmDialog from '../ui/ConfirmDialog';\n\nimport './MessageSelectToolbar.scss';\n\nexport type OwnProps = {\n  isActive?: boolean;\n  canPost?: boolean;\n  messageListType?: MessageListType;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isSchedule: boolean;\n  selectedMessagesCount?: number;\n  canDeleteMessages?: boolean;\n  canReportMessages?: boolean;\n  canDownloadMessages?: boolean;\n  canForwardMessages?: boolean;\n  hasProtectedMessage?: boolean;\n  isAnyModalOpen?: boolean;\n  selectedMessageIds?: number[];\n  shouldWarnAboutSvg?: boolean;\n};\n\nconst MessageSelectToolbar: FC<OwnProps & StateProps> = ({\n  chat,\n  canPost,\n  isActive,\n  messageListType,\n  isSchedule,\n  selectedMessagesCount,\n  canDeleteMessages,\n  canReportMessages,\n  canDownloadMessages,\n  canForwardMessages,\n  hasProtectedMessage,\n  isAnyModalOpen,\n  selectedMessageIds,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    exitMessageSelectMode,\n    openForwardMenuForSelectedMessages,\n    downloadSelectedMessages,\n    copySelectedMessages,\n    showNotification,\n    reportMessages,\n    openDeleteMessageModal,\n    setSettingOption,\n  } = getActions();\n  const lang = useOldLang();\n\n  useCopySelectedMessages(isActive);\n\n  const [isSvgDialogOpen, openSvgDialog, closeSvgDialog] = useFlag();\n  const [shouldNotWarnAboutSvg, setShouldNotWarnAboutSvg] = useState(false);\n\n  const handleExitMessageSelectMode = useLastCallback(() => {\n    exitMessageSelectMode();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    openDeleteMessageModal({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n      isSchedule,\n    });\n  });\n\n  useEffect(() => {\n    return isActive && !isAnyModalOpen\n      ? captureKeyboardListeners({\n        onBackspace: canDeleteMessages ? handleDelete : undefined,\n        onDelete: canDeleteMessages ? handleDelete : undefined,\n        onEsc: handleExitMessageSelectMode,\n      })\n      : undefined;\n  }, [\n    isActive, handleDelete, handleExitMessageSelectMode, isAnyModalOpen,\n    canDeleteMessages,\n  ]);\n\n  const handleCopy = useLastCallback(() => {\n    copySelectedMessages();\n    showNotification({\n      message: lang('Share.Link.Copied'),\n    });\n    exitMessageSelectMode();\n  });\n\n  const handleDownload = useLastCallback(() => {\n    downloadSelectedMessages();\n    exitMessageSelectMode();\n  });\n\n  const handleMessageDownload = useLastCallback(() => {\n    if (shouldWarnAboutSvg) {\n      openSvgDialog();\n      return;\n    }\n\n    handleDownload();\n  });\n\n  const handleSvgConfirm = useLastCallback(() => {\n    setSettingOption({ shouldWarnAboutSvg: false });\n    closeSvgDialog();\n    handleDownload();\n  });\n\n  const prevSelectedMessagesCount = usePreviousDeprecated(selectedMessagesCount || undefined, true);\n  const renderingSelectedMessagesCount = isActive ? selectedMessagesCount : prevSelectedMessagesCount;\n\n  const formattedMessagesCount = lang('VoiceOver.Chat.MessagesSelected', renderingSelectedMessagesCount, 'i');\n\n  const openMessageReport = useLastCallback(() => {\n    if (!selectedMessageIds || !chat) return;\n    reportMessages({\n      chatId: chat.id,\n      messageIds: selectedMessageIds,\n    });\n    exitMessageSelectMode();\n  });\n\n  const className = buildClassName(\n    'MessageSelectToolbar',\n    canPost && 'with-composer',\n    isActive && 'shown',\n  );\n\n  const renderButton = (\n    icon: IconName, label: string, onClick: AnyToVoidFunction, destructive?: boolean,\n  ) => {\n    return (\n      <div\n        role=\"button\"\n        tabIndex={0}\n        className={buildClassName(\n          'div-button',\n          'item',\n          destructive && 'destructive',\n        )}\n        onClick={onClick}\n        title={label}\n        aria-label={label}\n      >\n        <Icon name={icon} />\n      </div>\n    );\n  };\n\n  return (\n    <>\n      <div className={className}>\n        <div className=\"MessageSelectToolbar-inner\">\n          <Button\n            color=\"translucent\"\n            round\n            onClick={handleExitMessageSelectMode}\n            ariaLabel=\"Exit select mode\"\n          >\n            <Icon name=\"close\" />\n          </Button>\n          <span className=\"MessageSelectToolbar-count\" title={formattedMessagesCount}>\n            {formattedMessagesCount}\n          </span>\n\n          {Boolean(selectedMessagesCount) && (\n            <div className=\"MessageSelectToolbar-actions\">\n              {messageListType !== 'scheduled' && canForwardMessages && (\n                renderButton(\n                  'forward', lang('Chat.ForwardActionHeader'), openForwardMenuForSelectedMessages,\n                )\n              )}\n              {canReportMessages && (\n                renderButton('flag', lang('Conversation.ReportMessages'), openMessageReport)\n              )}\n              {canDownloadMessages && !hasProtectedMessage && (\n                renderButton('download', lang('lng_media_download'), handleMessageDownload)\n              )}\n              {!hasProtectedMessage && (\n                renderButton('copy', lang('lng_context_copy_selected_items'), handleCopy)\n              )}\n              {canDeleteMessages && (\n                renderButton('delete', lang('EditAdminGroupDeleteMessages'), handleDelete, true)\n              )}\n            </div>\n          )}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isSvgDialogOpen}\n        onClose={closeSvgDialog}\n        confirmHandler={handleSvgConfirm}\n      >\n        {lang('lng_launch_svg_warning')}\n        <Checkbox\n          className=\"dialog-checkbox\"\n          checked={shouldNotWarnAboutSvg}\n          label={lang('lng_launch_exe_dont_ask')}\n          onCheck={setShouldNotWarnAboutSvg}\n        />\n      </ConfirmDialog>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const tabState = selectTabState(global);\n    const chat = selectCurrentChat(global);\n    const { type: messageListType, chatId } = selectCurrentMessageList(global) || {};\n    const isSchedule = messageListType === 'scheduled';\n    const { canDelete } = selectCanDeleteSelectedMessages(global);\n    const canReport = Boolean(!isSchedule && selectCanReportSelectedMessages(global));\n    const canDownload = selectCanDownloadSelectedMessages(global);\n    const { messageIds: selectedMessageIds } = tabState.selectedMessages || {};\n    const hasProtectedMessage = chatId ? selectHasProtectedMessage(global, chatId, selectedMessageIds) : false;\n    const canForward = !isSchedule && chatId ? selectCanForwardMessages(global, chatId, selectedMessageIds) : false;\n    const isShareMessageModalOpen = tabState.isShareMessageModalShown;\n    const isAnyModalOpen = Boolean(isShareMessageModalOpen || tabState.requestedDraft\n      || tabState.requestedAttachBotInChat || tabState.requestedAttachBotInstall || tabState.reportModal\n      || tabState.deleteMessageModal);\n\n    return {\n      chat,\n      isSchedule,\n      selectedMessagesCount: selectSelectedMessagesCount(global),\n      canDeleteMessages: canDelete,\n      canReportMessages: canReport,\n      canDownloadMessages: canDownload,\n      canForwardMessages: canForward,\n      selectedMessageIds,\n      hasProtectedMessage,\n      isAnyModalOpen,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  },\n)(MessageSelectToolbar));\n","import React, { memo, useMemo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectChatMessage, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\n\nimport useCurrentOrPrev from '../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\nimport PrivateChatInfo from './PrivateChatInfo';\n\nimport styles from './SeenByModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = {\n  seenByDates?: Record<string, number>;\n};\n\nconst CLOSE_ANIMATION_DURATION = 100;\n\nfunction SeenByModal({\n  isOpen,\n  seenByDates,\n}: OwnProps & StateProps) {\n  const {\n    openChat,\n    closeSeenByModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderingSeenByDates = useCurrentOrPrev(seenByDates, true);\n  const memberIds = useMemo(() => {\n    if (!renderingSeenByDates) {\n      return undefined;\n    }\n\n    const result = Object.keys(renderingSeenByDates);\n    result.sort((leftId, rightId) => renderingSeenByDates[rightId] - renderingSeenByDates[leftId]);\n\n    return result;\n  }, [renderingSeenByDates]);\n\n  const handleClick = useLastCallback((userId: string) => {\n    closeSeenByModal();\n\n    setTimeout(() => {\n      openChat({ id: userId });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleCloseSeenByModal = useLastCallback(() => {\n    closeSeenByModal();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={closeSeenByModal}\n      className={buildClassName(styles.modal, 'narrow')}\n      title={`Seen by ${memberIds?.length} users`}\n    >\n      <div dir={lang.isRtl ? 'rtl' : undefined}>\n        {memberIds && memberIds.map((userId) => (\n          <ListItem\n            key={userId}\n            className=\"chat-item-clickable scroll-item small-icon\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(userId)}\n          >\n            <PrivateChatInfo\n              userId={userId}\n              noStatusOrTyping\n              status={formatDateAtTime(lang, renderingSeenByDates![userId] * 1000)}\n              statusIcon=\"message-read\"\n            />\n          </ListItem>\n        ))}\n      </div>\n      <div className=\"dialog-buttons mt-2\">\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={handleCloseSeenByModal}\n        >\n          {lang('Close')}\n        </Button>\n      </div>\n    </Modal>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).seenByModal || {};\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    return {\n      seenByDates: selectChatMessage(global, chatId, messageId)?.seenByDates,\n    };\n  },\n)(SeenByModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modal\":\"slqA9gR2\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"tauadiDm\",\"icon\":\"i4wZg_0J\",\"header\":\"MQxuEIRA\",\"desc\":\"AEAN1Au4\",\"separator\":\"sXXb5yOS\",\"button\":\"F7owtTHj\",\"closeButton\":\"i6iFv9YE\"};","import React, { memo } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiUser } from '../../api/types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport { getUserFirstOrLastName } from '../../global/helpers';\nimport { selectTabState, selectUser } from '../../global/selectors';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\nimport renderText from './helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal, { ANIMATION_DURATION } from '../ui/Modal';\nimport Separator from '../ui/Separator';\nimport AnimatedIconWithPreview from './AnimatedIconWithPreview';\nimport Icon from './icons/Icon';\n\nimport styles from './PrivacySettingsNoticeModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isReadDate?: boolean;\n};\n\nconst CLOSE_ANIMATION_DURATION = ANIMATION_DURATION + ANIMATION_END_DELAY;\n\nconst PrivacySettingsNoticeModal = ({ isOpen, isReadDate, user }: OwnProps & StateProps) => {\n  const lang = useOldLang();\n  const {\n    updateGlobalPrivacySettings,\n    openPremiumModal,\n    closePrivacySettingsNoticeModal,\n    showNotification,\n    setPrivacyVisibility,\n    loadUser,\n  } = getActions();\n  const userName = getUserFirstOrLastName(user);\n\n  const handleShowReadTime = useLastCallback(() => {\n    updateGlobalPrivacySettings({ shouldHideReadMarks: false });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumReadSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleShowLastSeen = useLastCallback(() => {\n    setPrivacyVisibility({\n      privacyKey: 'lastSeen',\n      visibility: 'everybody',\n      onSuccess: () => loadUser({ userId: user!.id }),\n    });\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      showNotification({ message: lang('PremiumLastSeenSet') });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleOpenPremium = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n\n    setTimeout(() => {\n      openPremiumModal({ initialSection: 'last_seen' });\n    }, CLOSE_ANIMATION_DURATION);\n  });\n\n  const handleClose = useLastCallback(() => {\n    closePrivacySettingsNoticeModal();\n  });\n\n  return (\n    <Modal isSlim isOpen={isOpen} onClose={handleClose}>\n      <div className={styles.container} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className={styles.closeButton}\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={handleClose}\n          ariaLabel=\"Close\"\n        >\n          <Icon name=\"close\" />\n        </Button>\n        <AnimatedIconWithPreview\n          tgsUrl={isReadDate ? LOCAL_TGS_URLS.ReadTime : LOCAL_TGS_URLS.LastSeen}\n          size={84}\n          className={styles.icon}\n          nonInteractive\n          noLoop\n        />\n        <h2 className={styles.header}>\n          {lang(isReadDate ? 'PremiumReadHeader1' : 'PremiumLastSeenHeader1')}\n        </h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(\n              isReadDate ? 'PremiumReadText1' : 'PremiumLastSeenText1Locked',\n              userName,\n            ),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          size=\"smaller\"\n          onClick={isReadDate ? handleShowReadTime : handleShowLastSeen}\n          className={styles.button}\n        >\n          {lang(isReadDate ? 'PremiumReadButton1' : 'PremiumLastSeenButton1')}\n        </Button>\n        <Separator className={styles.separator}>{lang('PremiumOr')}</Separator>\n        <h2 className={styles.header}>{lang('PremiumReadHeader2')}</h2>\n        <p className={styles.desc}>\n          {renderText(\n            lang(isReadDate ? 'PremiumReadText2' : 'PremiumLastSeenText2', userName),\n            ['simple_markdown'],\n          )}\n        </p>\n        <Button\n          withPremiumGradient\n          size=\"smaller\"\n          onClick={handleOpenPremium}\n          className={styles.button}\n        >\n          {lang('PremiumLastSeenButton2')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(\n  withGlobal<OwnProps>((global): StateProps => {\n    const { chatId, isReadDate } = selectTabState(global).privacySettingsNoticeModal || {};\n    const user = chatId ? selectUser(global, chatId) : undefined;\n\n    return { user, isReadDate };\n  })(PrivacySettingsNoticeModal),\n);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiAvailableReaction, ApiMessage, ApiReaction } from '../../api/types';\nimport { LoadMoreDirection } from '../../types';\n\nimport { getReactionKey, isSameReaction } from '../../global/helpers';\nimport {\n  selectChatMessage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { formatDateAtTime } from '../../util/dates/dateFormat';\nimport { unique } from '../../util/iteratees';\nimport { formatIntegerCompact } from '../../util/textFormat';\n\nimport useFlag from '../../hooks/useFlag';\nimport useInfiniteScroll from '../../hooks/useInfiniteScroll';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Avatar from '../common/Avatar';\nimport FullNameTitle from '../common/FullNameTitle';\nimport Icon from '../common/icons/Icon';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ReactionStaticEmoji from '../common/reactions/ReactionStaticEmoji';\nimport Button from '../ui/Button';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport Modal from '../ui/Modal';\n\nimport './ReactorListModal.scss';\n\nconst MIN_REACTIONS_COUNT_FOR_FILTERS = 10;\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\nexport type StateProps = Pick<ApiMessage, 'reactors' | 'reactions' | 'seenByDates'> & {\n  chatId?: string;\n  messageId?: number;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst ReactorListModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  reactors,\n  reactions,\n  chatId,\n  messageId,\n  seenByDates,\n  availableReactions,\n}) => {\n  const {\n    loadReactors,\n    closeReactorListModal,\n    openChat,\n  } = getActions();\n\n  // No need for expensive global updates on chats or users, so we avoid them\n  const chatsById = getGlobal().chats.byId;\n  const usersById = getGlobal().users.byId;\n\n  const lang = useOldLang();\n  const [isClosing, startClosing, stopClosing] = useFlag(false);\n  const [chosenTab, setChosenTab] = useState<ApiReaction | undefined>(undefined);\n  const canShowFilters = reactors && reactions && reactors.count >= MIN_REACTIONS_COUNT_FOR_FILTERS\n    && reactions.results.length > 1;\n  const chatIdRef = useRef<string>();\n\n  useEffect(() => {\n    if (isOpen && !isClosing) {\n      chatIdRef.current = undefined;\n    }\n\n    if (isClosing && !isOpen) {\n      stopClosing();\n      setChosenTab(undefined);\n    }\n  }, [isClosing, isOpen, stopClosing]);\n\n  const handleCloseAnimationEnd = useLastCallback(() => {\n    if (chatIdRef.current) {\n      openChat({ id: chatIdRef.current });\n    }\n    closeReactorListModal();\n  });\n\n  const handleClose = useLastCallback(() => {\n    startClosing();\n  });\n\n  const handleClick = useLastCallback((userId: string) => {\n    chatIdRef.current = userId;\n    handleClose();\n  });\n\n  const handleLoadMore = useLastCallback(() => {\n    loadReactors({\n      chatId: chatId!,\n      messageId: messageId!,\n    });\n  });\n\n  const allReactions = useMemo(() => {\n    const uniqueReactions: ApiReaction[] = [];\n    reactors?.reactions?.forEach(({ reaction }) => {\n      if (!uniqueReactions.some((r) => isSameReaction(r, reaction))) {\n        uniqueReactions.push(reaction);\n      }\n    });\n    return uniqueReactions;\n  }, [reactors]);\n\n  const peerIds = useMemo(() => {\n    if (chosenTab) {\n      return reactors?.reactions\n        .filter(({ reaction }) => isSameReaction(reaction, chosenTab))\n        .map(({ peerId }) => peerId);\n    }\n\n    const seenByUserIds = Object.keys(seenByDates || {});\n\n    return unique(reactors?.reactions.map(({ peerId }) => peerId).concat(seenByUserIds || []) || []);\n  }, [chosenTab, reactors, seenByDates]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(\n    handleLoadMore, peerIds, reactors && reactors.nextOffset === undefined,\n  );\n\n  useEffect(() => {\n    getMore?.({ direction: LoadMoreDirection.Backwards });\n  }, [getMore]);\n\n  return (\n    <Modal\n      isOpen={isOpen && !isClosing}\n      onClose={handleClose}\n      className=\"ReactorListModal narrow\"\n      title={lang('Reactions')}\n      onCloseAnimationEnd={handleCloseAnimationEnd}\n    >\n      {canShowFilters && (\n        <div className=\"Reactions\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <Button\n            className={buildClassName(!chosenTab && 'chosen')}\n            size=\"tiny\"\n            ripple\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setChosenTab(undefined)}\n          >\n            <Icon name=\"heart\" />\n            {Boolean(reactors?.count) && formatIntegerCompact(reactors.count)}\n          </Button>\n          {allReactions.map((reaction) => {\n            const count = reactions?.results\n              .find((reactionsCount) => isSameReaction(reactionsCount.reaction, reaction))?.count;\n            return (\n              <Button\n                key={getReactionKey(reaction)}\n                className={buildClassName(isSameReaction(chosenTab, reaction) && 'chosen')}\n                size=\"tiny\"\n                ripple\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => setChosenTab(reaction)}\n              >\n                <ReactionStaticEmoji\n                  reaction={reaction}\n                  className=\"reaction-filter-emoji\"\n                  availableReactions={availableReactions}\n                />\n                {Boolean(count) && formatIntegerCompact(count)}\n              </Button>\n            );\n          })}\n        </div>\n      )}\n\n      <div dir={lang.isRtl ? 'rtl' : undefined} className=\"reactor-list-wrapper\">\n        {viewportIds?.length ? (\n          <InfiniteScroll\n            className=\"reactor-list custom-scroll\"\n            items={viewportIds}\n            onLoadMore={getMore}\n          >\n            {viewportIds?.flatMap(\n              (peerId) => {\n                const peer = usersById[peerId] || chatsById[peerId];\n\n                const peerReactions = reactors?.reactions.filter((reactor) => reactor.peerId === peerId);\n                const items: React.ReactNode[] = [];\n                const seenByUser = seenByDates?.[peerId];\n\n                peerReactions?.forEach((r) => {\n                  if (chosenTab && !isSameReaction(r.reaction, chosenTab)) return;\n\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-${getReactionKey(r.reaction)}`}\n                      className=\"chat-item-clickable reactors-list-item\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <Avatar peer={peer} size=\"medium\" />\n                      <div className=\"info\">\n                        <FullNameTitle peer={peer} withEmojiStatus />\n                        <span className=\"status\" dir=\"auto\">\n                          <Icon name=\"heart-outline\" className=\"status-icon\" />\n                          {formatDateAtTime(lang, r.addedDate * 1000)}\n                        </span>\n                      </div>\n                      {r.reaction && (\n                        <ReactionStaticEmoji\n                          className=\"reactors-list-emoji\"\n                          reaction={r.reaction}\n                          availableReactions={availableReactions}\n                        />\n                      )}\n                    </ListItem>,\n                  );\n                });\n\n                if (!chosenTab && !peerReactions?.length) {\n                  items.push(\n                    <ListItem\n                      key={`${peerId}-seen-by`}\n                      className=\"chat-item-clickable scroll-item small-icon\"\n                      // eslint-disable-next-line react/jsx-no-bind\n                      onClick={() => handleClick(peerId)}\n                    >\n                      <PrivateChatInfo\n                        userId={peerId}\n                        noStatusOrTyping\n                        avatarSize=\"medium\"\n                        status={seenByUser ? formatDateAtTime(lang, seenByUser * 1000) : undefined}\n                        statusIcon=\"message-read\"\n                      />\n                    </ListItem>,\n                  );\n                }\n                return items;\n              },\n            )}\n          </InfiniteScroll>\n        ) : <Loading />}\n      </div>\n      <Button\n        className=\"confirm-dialog-button\"\n        isText\n        onClick={handleClose}\n      >\n        {lang('Close')}\n      </Button>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).reactorModal || {};\n    const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n\n    return {\n      chatId,\n      messageId,\n      reactions: message?.reactions,\n      reactors: message?.reactors,\n      seenByDates: message?.seenByDates,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n)(ReactorListModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  beginHeavyAnimation,\n  memo, useEffect, useLayoutEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ActiveEmojiInteraction } from '../../types';\n\nimport {\n  selectAnimatedEmojiEffect,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_ANDROID } from '../../util/windowEnvironment';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\n\nimport AnimatedSticker from '../common/AnimatedSticker';\n\nimport './EmojiInteractionAnimation.scss';\n\nexport type OwnProps = {\n  activeEmojiInteraction: ActiveEmojiInteraction;\n};\n\ntype StateProps = {\n  effectAnimationId?: string;\n};\n\nconst HIDE_ANIMATION_DURATION = 250;\nconst PLAYING_DURATION = 3000;\nconst EFFECT_SIZE = 309;\n\nconst EmojiInteractionAnimation: FC<OwnProps & StateProps> = ({\n  effectAnimationId,\n  activeEmojiInteraction,\n}) => {\n  const { stopActiveEmojiInteraction } = getActions();\n\n  const [isHiding, startHiding] = useFlag(false);\n  const [isPlaying, startPlaying] = useFlag(false);\n  const timeoutRef = useRef<NodeJS.Timeout>();\n\n  const stop = useLastCallback(() => {\n    startHiding();\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n    setTimeout(() => {\n      stopActiveEmojiInteraction({ id: activeEmojiInteraction.id });\n    }, HIDE_ANIMATION_DURATION);\n  });\n\n  const handleCancelAnimation = useLastCallback((e: UIEvent) => {\n    if (!(e.target as HTMLElement)?.closest('.AnimatedEmoji')) {\n      stop();\n    }\n  });\n\n  useEffect(() => {\n    document.addEventListener('touchstart', handleCancelAnimation);\n    document.addEventListener('touchmove', handleCancelAnimation);\n    document.addEventListener('mousedown', handleCancelAnimation);\n    document.addEventListener('wheel', handleCancelAnimation);\n\n    return () => {\n      document.removeEventListener('touchstart', handleCancelAnimation);\n      document.removeEventListener('touchmove', handleCancelAnimation);\n      document.removeEventListener('mousedown', handleCancelAnimation);\n      document.removeEventListener('wheel', handleCancelAnimation);\n    };\n  }, [handleCancelAnimation]);\n\n  useLayoutEffect(() => {\n    const endHeavyAnimation = beginHeavyAnimation();\n\n    timeoutRef.current = setTimeout(() => {\n      stop();\n      endHeavyAnimation();\n    }, PLAYING_DURATION);\n  }, [stop]);\n\n  const effectHash = effectAnimationId && `sticker${effectAnimationId}`;\n  const effectTgsUrl = useMedia(effectHash, !effectAnimationId);\n\n  if (!activeEmojiInteraction.startSize) {\n    return undefined;\n  }\n\n  const scale = (activeEmojiInteraction.startSize || 0) / EFFECT_SIZE;\n\n  return (\n    <div\n      className={buildClassName(\n        'EmojiInteractionAnimation',\n        isHiding && 'hiding',\n        isPlaying && 'playing',\n        activeEmojiInteraction.isReversed && 'reversed',\n      )}\n      style={`--scale: ${scale}; --start-x: ${activeEmojiInteraction.x}px; --start-y: ${activeEmojiInteraction.y}px;`}\n    >\n      <AnimatedSticker\n        key={`effect_${effectAnimationId}`}\n        size={EFFECT_SIZE}\n        tgsUrl={effectTgsUrl}\n        play\n        quality={IS_ANDROID ? 0.5 : undefined}\n        forceAlways\n        noLoop\n        onLoad={startPlaying}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { activeEmojiInteraction }): StateProps => {\n    const animatedEffect = activeEmojiInteraction.animatedEffect !== undefined\n      && selectAnimatedEmojiEffect(global, activeEmojiInteraction.animatedEffect);\n    return {\n      effectAnimationId: animatedEffect ? animatedEffect.id : undefined,\n    };\n  },\n)(EmojiInteractionAnimation));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../config';\nimport {\n  selectLanguageCode,\n  selectRequestedChatTranslationLanguage,\n  selectRequestedMessageTranslationLanguage,\n  selectTabState,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport renderText from '../common/helpers/renderText';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\nimport ListItem from '../ui/ListItem';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatLanguageModal.module.scss';\n\ntype LanguageItem = {\n  langCode: string;\n  translatedName: string;\n  originalName: string;\n};\n\nexport type OwnProps = {\n  isOpen?: boolean;\n};\n\ntype StateProps = {\n  chatId?: string;\n  messageId?: number;\n  activeTranslationLanguage?: string;\n  currentLanguageCode: string;\n};\n\nconst ChatLanguageModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  messageId,\n  activeTranslationLanguage,\n  currentLanguageCode,\n}) => {\n  const {\n    requestMessageTranslation,\n    closeChatLanguageModal,\n    setSettingOption,\n    requestChatTranslation,\n  } = getActions();\n\n  const [search, setSearch] = useState('');\n  const lang = useOldLang();\n\n  const handleSelect = useLastCallback((langCode: string) => {\n    if (!chatId) return;\n\n    if (messageId) {\n      requestMessageTranslation({ chatId, id: messageId, toLanguageCode: langCode });\n    } else {\n      setSettingOption({ translationLanguage: langCode });\n      requestChatTranslation({ chatId, toLanguageCode: langCode });\n    }\n\n    closeChatLanguageModal();\n  });\n\n  const handleSearch = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setSearch(e.target.value);\n  });\n\n  const translateLanguages = useMemo(() => SUPPORTED_TRANSLATION_LANGUAGES.map((langCode: string) => {\n    const translatedNames = new Intl.DisplayNames([currentLanguageCode], { type: 'language' });\n    const translatedName = translatedNames.of(langCode)!;\n\n    const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n    const originalName = originalNames.of(langCode)!;\n\n    return {\n      langCode,\n      translatedName,\n      originalName,\n    } satisfies LanguageItem;\n  }), [currentLanguageCode]);\n\n  useEffect(() => {\n    if (!isOpen) setSearch('');\n  }, [isOpen]);\n\n  const filteredDisplayedLanguages = useMemo(() => {\n    if (!search.trim()) {\n      return translateLanguages;\n    }\n\n    return translateLanguages.filter(({ langCode, translatedName, originalName }) => (\n      translatedName.toLowerCase().includes(search.toLowerCase())\n      || originalName.toLowerCase().includes(search.toLowerCase())\n      || langCode.toLowerCase().includes(search.toLowerCase())\n    ));\n  }, [translateLanguages, search]);\n\n  return (\n    <Modal\n      className={styles.root}\n      isSlim\n      isOpen={isOpen}\n      hasCloseButton\n      title={lang('Language')}\n      onClose={closeChatLanguageModal}\n    >\n      <InputText\n        key=\"search\"\n        value={search}\n        onChange={handleSearch}\n        placeholder={lang('Search')}\n        teactExperimentControlled\n      />\n      <div className={buildClassName(styles.languages, 'custom-scroll')}>\n        {filteredDisplayedLanguages.map(({ langCode, originalName, translatedName }) => (\n          <ListItem\n            key={langCode}\n            className={buildClassName(styles.listItem, 'no-icon')}\n            secondaryIcon={activeTranslationLanguage === langCode ? 'check' : undefined}\n            disabled={activeTranslationLanguage === langCode}\n            multiline\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleSelect(langCode)}\n          >\n            <span className={buildClassName('title', styles.title)}>\n              {renderText(originalName, ['highlight'], { highlight: search })}\n            </span>\n            <span className={buildClassName('subtitle', styles.subtitle)}>\n              {renderText(translatedName, ['highlight'], { highlight: search })}\n            </span>\n          </ListItem>\n        ))}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId, messageId } = selectTabState(global).chatLanguageModal || {};\n\n    const currentLanguageCode = selectLanguageCode(global);\n    const activeTranslationLanguage = chatId\n      ? messageId\n        ? selectRequestedMessageTranslationLanguage(global, chatId, messageId)\n        : selectRequestedChatTranslationLanguage(global, chatId)\n      : undefined;\n\n    return {\n      chatId,\n      messageId,\n      activeTranslationLanguage,\n      currentLanguageCode,\n    };\n  },\n)(ChatLanguageModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"aMjNU9gm\",\"list-item\":\"T3An6Hoz\",\"listItem\":\"T3An6Hoz\",\"title\":\"dQ9wwFu1\",\"subtitle\":\"m_J41YYl\",\"languages\":\"r3YNWDQr\"};","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"WEJIbFQj\",\"closeButton\":\"_vwPuDEM\",\"icon\":\"BUiGM8qZ\",\"title\":\"Q3NhXpNI\",\"description\":\"frZbGQ0G\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiCountryCode } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatDateAtTime } from '../../../util/dates/dateFormat';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport formatUsername from '../../common/helpers/formatUsername';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './CollectibleInfoModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['collectibleInfoModal'];\n};\n\ntype StateProps = {\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst TOP_ICON_SIZE = 60;\n\nconst CollectibleInfoModal: FC<OwnProps & StateProps> = ({\n  modal,\n  phoneCodeList,\n}) => {\n  const {\n    closeCollectibleInfoModal,\n    openChat,\n    openUrl,\n    showNotification,\n  } = getActions();\n  const lang = useOldLang();\n\n  const isUsername = modal?.type === 'username';\n\n  const handleClose = useLastCallback(() => {\n    closeCollectibleInfoModal();\n  });\n\n  const handleOpenChat = useLastCallback(() => {\n    openChat({ id: modal!.peerId });\n    handleClose();\n  });\n\n  const handleOpenUrl = useLastCallback(() => {\n    openUrl({\n      url: modal!.url,\n      shouldSkipModal: true,\n    });\n    handleClose();\n  });\n\n  const handleCopy = useLastCallback(() => {\n    const text = isUsername ? formatUsername(modal!.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal!.collectible);\n    copyTextToClipboard(text);\n    showNotification({\n      message: lang(isUsername ? 'UsernameCopied' : 'PhoneCopied'),\n    });\n    handleClose();\n  });\n\n  const title = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameTitle' : 'FragmentPhoneTitle';\n    const formattedCollectible = isUsername\n      ? formatUsername(modal.collectible)\n      : formatPhoneNumberWithCode(phoneCodeList, modal.collectible);\n    return lang(key, formattedCollectible);\n  }, [modal, isUsername, phoneCodeList, lang]);\n\n  const description = useMemo(() => {\n    if (!modal) return undefined;\n    const key = isUsername ? 'FragmentUsernameMessage' : 'FragmentPhoneMessage';\n    const date = formatDateAtTime(lang, modal.purchaseDate * 1000);\n    const currency = formatCurrencyAsString(modal.amount, modal.currency, lang.code);\n    const cryptoCurrency = formatCurrencyAsString(modal.cryptoAmount, modal.cryptoCurrency, lang.code);\n    const paid = `${cryptoCurrency} (${currency})`;\n    return lang(key, [date, paid]);\n  }, [modal, isUsername, lang]);\n\n  return (\n    <Modal\n      isOpen={Boolean(modal)}\n      isSlim\n      contentClassName={styles.content}\n      onClose={closeCollectibleInfoModal}\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      <div className={styles.icon}>\n        <AnimatedIconWithPreview\n          tgsUrl={isUsername ? LOCAL_TGS_URLS.Mention : LOCAL_TGS_URLS.Fragment}\n          size={TOP_ICON_SIZE}\n        />\n      </div>\n      <h3 className={styles.title}>\n        {title && renderText(title, ['simple_markdown'])}\n      </h3>\n      <PeerChip\n        className={styles.chip}\n        peerId={modal?.peerId}\n        forceShowSelf\n        clickArg={modal?.peerId}\n        onClick={handleOpenChat}\n      />\n      <p className={styles.description}>\n        {description && renderText(description, ['simple_markdown'])}\n      </p>\n      <div className=\"dialog-buttons dialog-buttons-centered\">\n        <Button className=\"confirm-dialog-button\" onClick={handleOpenUrl}>\n          {lang('FragmentUsernameOpen')}\n        </Button>\n        <Button isText className=\"confirm-dialog-button\" onClick={handleCopy}>\n          {lang(isUsername ? 'FragmentUsernameCopy' : 'FragmentPhoneCopy')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { countryList } = global;\n\n    return {\n      phoneCodeList: countryList.phoneCodes,\n    };\n  },\n)(CollectibleInfoModal));\n","import type {\n  ApiChat, ApiGlobalMessageSearchType, ApiMessage, ApiUser,\n} from '../../../../api/types';\nimport type { GlobalState, TabState } from '../../../../global/types';\nimport type { ISettings } from '../../../../types';\nimport type { SearchResultKey } from '../../../../util/keys/searchResultKey';\n\nimport { selectChat, selectTabState, selectTheme } from '../../../../global/selectors';\n\nexport type StateProps = {\n  theme: ISettings['theme'];\n  isLoading?: boolean;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  foundIds?: SearchResultKey[];\n  searchChatId?: string;\n  activeDownloads: TabState['activeDownloads'];\n  isChatProtected?: boolean;\n  shouldWarnAboutSvg?: boolean;\n};\n\nexport function createMapStateToProps(type: ApiGlobalMessageSearchType) {\n  return (global: GlobalState, props: any) => {\n    const tabState = selectTabState(global);\n    const { byId: chatsById } = global.chats;\n    const { byId: usersById } = global.users;\n    const {\n      fetchingStatus, resultsByType, chatId,\n    } = tabState.globalSearch;\n\n    // One component is used for two different types of results.\n    // The differences between them are only in the isVoice property.\n    // The rest of the search results use their own personal components.\n    const currentType = type !== 'audio' ? type : (props?.isVoice ? 'voice' : 'audio');\n\n    const { byChatId: globalMessagesByChatId } = global.messages;\n    const foundIds = resultsByType?.[currentType]?.foundIds;\n\n    const activeDownloads = tabState.activeDownloads;\n\n    return {\n      theme: selectTheme(global),\n      isLoading: foundIds === undefined\n        || (fetchingStatus ? Boolean(fetchingStatus.chats || fetchingStatus.messages) : false),\n      chatsById,\n      usersById,\n      globalMessagesByChatId,\n      foundIds,\n      searchChatId: chatId,\n      activeDownloads,\n      isChatProtected: chatId ? selectChat(global, chatId)?.isProtected : undefined,\n      shouldWarnAboutSvg: global.settings.byKey.shouldWarnAboutSvg,\n    };\n  };\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { AudioOrigin, LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDownloadableMedia } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Audio from '../../common/Audio';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  isVoice?: boolean;\n  searchQuery?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst AudioResults: FC<OwnProps & StateProps> = ({\n  theme,\n  isVoice,\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n    openAudioPlayer,\n  } = getActions();\n\n  const lang = useOldLang();\n  const currentType = isVoice ? 'voice' : 'audio';\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: currentType,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [currentType, searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  const handlePlayAudio = useCallback((messageId: number, chatId: string) => {\n    openAudioPlayer({ chatId, messageId });\n  }, [openAudioPlayer]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n\n      const media = getMessageDownloadableMedia(message)!;\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Audio\n              key={message.id}\n              theme={theme}\n              message={message}\n              origin={AudioOrigin.Search}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              date={message.date}\n              className=\"scroll-item\"\n              onPlay={handlePlayAudio}\n              onDateClick={handleMessageFocus}\n              canDownload={!chatsById[message.chatId]?.isProtected && !message.isProtected}\n              isDownloading={getIsDownloading(activeDownloads, media)}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps('audio'),\n)(AudioResults));\n","import { useCallback, useEffect, useRef } from '../lib/teact/teact';\n\nconst useSendWithEnter = (\n  onSelect: NoneToVoidFunction,\n) => {\n  // eslint-disable-next-line no-null/no-null\n  const buttonRef = useRef<HTMLDivElement>(null);\n\n  const handleKeyDown = useCallback((e: KeyboardEvent) => {\n    if (e.key !== 'Enter') return;\n    const isFocused = buttonRef.current === document.activeElement;\n\n    if (isFocused) {\n      onSelect();\n    }\n  }, [onSelect]);\n\n  useEffect(() => {\n    window.addEventListener('keydown', handleKeyDown, false);\n\n    return () => window.removeEventListener('keydown', handleKeyDown, false);\n  }, [handleKeyDown]);\n\n  return buttonRef;\n};\n\nexport default useSendWithEnter;\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiUser } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { isUserId } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectChat, selectIsChatPinned, selectNotifyDefaults, selectNotifyException, selectUser,\n} from '../../../global/selectors';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\n\nimport useChatContextActions from '../../../hooks/useChatContextActions';\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport ChatFolderModal from '../ChatFolderModal.async';\nimport MuteChatModal from '../MuteChatModal.async';\n\ntype OwnProps = {\n  chatId: string;\n  withUsername?: boolean;\n  withOpenAppButton?: boolean;\n  onClick: (id: string) => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  user?: ApiUser;\n  isPinned?: boolean;\n  isMuted?: boolean;\n  canChangeFolder?: boolean;\n};\n\nconst LeftSearchResultChat: FC<OwnProps & StateProps> = ({\n  chatId,\n  withUsername,\n  chat,\n  user,\n  isPinned,\n  isMuted,\n  canChangeFolder,\n  withOpenAppButton,\n  onClick,\n}) => {\n  const { requestMainWebView } = getActions();\n  const oldLang = useOldLang();\n\n  const [isMuteModalOpen, openMuteModal, closeMuteModal] = useFlag();\n  const [isChatFolderModalOpen, openChatFolderModal, closeChatFolderModal] = useFlag();\n  const [shouldRenderChatFolderModal, markRenderChatFolderModal, unmarkRenderChatFolderModal] = useFlag();\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n\n  const handleChatFolderChange = useCallback(() => {\n    markRenderChatFolderModal();\n    openChatFolderModal();\n  }, [markRenderChatFolderModal, openChatFolderModal]);\n\n  const handleMute = useCallback(() => {\n    markRenderMuteModal();\n    openMuteModal();\n  }, [markRenderMuteModal, openMuteModal]);\n\n  const contextActions = useChatContextActions({\n    chat,\n    user,\n    isPinned,\n    isMuted,\n    canChangeFolder,\n    handleMute,\n    handleChatFolderChange,\n  }, true);\n\n  const handleClick = useLastCallback(() => {\n    onClick(chatId);\n  });\n\n  const handleOpenApp = useLastCallback((e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n    e.stopPropagation();\n\n    const theme = extractCurrentThemeParams();\n    requestMainWebView({\n      botId: chatId,\n      peerId: chatId,\n      theme,\n    });\n  });\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      contextActions={contextActions}\n      buttonRef={buttonRef}\n    >\n      {isUserId(chatId) ? (\n        <PrivateChatInfo\n          userId={chatId}\n          withUsername={withUsername}\n          withStory\n          avatarSize=\"medium\"\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      ) : (\n        <GroupChatInfo\n          chatId={chatId}\n          withUsername={withUsername}\n          avatarSize=\"medium\"\n          withStory\n          storyViewerOrigin={StoryViewerOrigin.SearchResult}\n        />\n      )}\n      {withOpenAppButton && user?.hasMainMiniApp && (\n        <Button\n          className=\"ChatBadge miniapp\"\n          pill\n          fluid\n          size=\"tiny\"\n          onClick={handleOpenApp}\n        >\n          {oldLang('BotOpen')}\n        </Button>\n      )}\n      {shouldRenderMuteModal && (\n        <MuteChatModal\n          isOpen={isMuteModalOpen}\n          onClose={closeMuteModal}\n          onCloseAnimationEnd={unmarkRenderMuteModal}\n          chatId={chatId}\n        />\n      )}\n      {shouldRenderChatFolderModal && (\n        <ChatFolderModal\n          isOpen={isChatFolderModalOpen}\n          onClose={closeChatFolderModal}\n          onCloseAnimationEnd={unmarkRenderChatFolderModal}\n          chatId={chatId}\n        />\n      )}\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const user = selectUser(global, chatId);\n    const isPinned = selectIsChatPinned(global, chatId);\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n\n    return {\n      chat,\n      user,\n      isPinned,\n      isMuted,\n      canChangeFolder: Boolean(global.chatFolders.orderedIds?.length),\n    };\n  },\n)(LeftSearchResultChat));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { throttle } from '../../../util/schedulers';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\ntype StateProps = {\n  isLoading?: boolean;\n  foundIds?: string[];\n  recentBotIds?: string[];\n};\n\nconst LESS_LIST_ITEMS_AMOUNT = 5;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst BotAppResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  foundIds,\n  recentBotIds,\n}) => {\n  const {\n    searchPopularBotApps,\n    openChatWithInfo,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const [shouldShowMoreMine, setShouldShowMoreMine] = useState<boolean>(false);\n\n  const filteredFoundIds = useMemo(() => {\n    if (!foundIds) return [];\n    const recentSet = new Set(recentBotIds);\n    const withoutRecent = foundIds.filter((id) => !recentSet.has(id));\n\n    return filterPeersByQuery({ ids: withoutRecent, query: searchQuery, type: 'user' });\n  }, [foundIds, recentBotIds, searchQuery]);\n\n  const handleChatClick = useLastCallback((id: string) => {\n    openChatWithInfo({ id, shouldReplaceHistory: true });\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchPopularBotApps();\n      });\n    }\n  }, []);\n\n  const handleToggleShowMoreMine = useLastCallback(() => {\n    setShouldShowMoreMine((prev) => !prev);\n  });\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll\"\n        items={canRenderContents ? filteredFoundIds : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && !filteredFoundIds?.length && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && !searchQuery && Boolean(recentBotIds?.length) && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">\n              {recentBotIds.length > LESS_LIST_ITEMS_AMOUNT && (\n                <Link className=\"Link\" onClick={handleToggleShowMoreMine}>\n                  {lang(shouldShowMoreMine ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n                </Link>\n              )}\n              {lang('SearchAppsMine')}\n            </h3>\n            {recentBotIds.map((id, index) => {\n              if (!shouldShowMoreMine && index >= LESS_LIST_ITEMS_AMOUNT) {\n                return undefined;\n              }\n\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n        {canRenderContents && filteredFoundIds?.length && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\">{lang('SearchAppsPopular')}</h3>\n            {filteredFoundIds.map((id) => {\n              return (\n                <LeftSearchResultChat\n                  chatId={id}\n                  onClick={handleChatClick}\n                  withOpenAppButton\n                />\n              );\n            })}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const globalSearch = selectTabState(global).globalSearch;\n  const foundIds = globalSearch.popularBotApps?.peerIds;\n\n  return {\n    isLoading: !foundIds && globalSearch.fetchingStatus?.botApps,\n    foundIds,\n    recentBotIds: global.topBotApps.userIds,\n  };\n})(BotAppResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiMessageOutgoingStatus,\n  ApiUser,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageIsSpoiler,\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageSticker,\n  getMessageVideo,\n  getPrivateChatUserId,\n} from '../../../global/helpers';\nimport { selectChat, selectUser } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Link from '../../ui/Link';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatMessage.scss';\n\ntype OwnProps = {\n  searchQuery?: string;\n  message: ApiMessage;\n  chatId: string;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  privateChatUser?: ApiUser;\n  lastMessageOutgoingStatus?: ApiMessageOutgoingStatus;\n};\n\nconst ChatMessage: FC<OwnProps & StateProps> = ({\n  message,\n  searchQuery,\n  chatId,\n  chat,\n  privateChatUser,\n}) => {\n  const { focusMessage } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const mediaThumbnail = !getMessageSticker(message) ? getMessageMediaThumbDataUri(message) : undefined;\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useLastCallback(() => {\n    focusMessage({ chatId, messageId: message.id, shouldReplaceHistory: true });\n  });\n\n  const lang = useOldLang();\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!chat) {\n    return undefined;\n  }\n\n  const peer = privateChatUser || chat;\n\n  return (\n    <ListItem\n      className=\"ChatMessage chat-item-clickable\"\n      ripple={!isMobile}\n      onClick={handleClick}\n      buttonRef={buttonRef}\n    >\n      <Avatar\n        peer={peer}\n        isSavedMessages={privateChatUser?.isSelf}\n      />\n      <div className=\"info\">\n        <div className=\"info-row\">\n          <FullNameTitle\n            peer={peer}\n            withEmojiStatus\n            isSavedMessages={chatId === privateChatUser?.id && privateChatUser?.isSelf}\n          />\n          <div className=\"message-date\">\n            <Link className=\"date\">\n              {formatPastTimeShort(lang, message.date * 1000)}\n            </Link>\n          </div>\n\n        </div>\n        <div className=\"subtitle\">\n          <div className=\"message\" dir=\"auto\">\n            {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, searchQuery, isRoundVideo)}\n          </div>\n        </div>\n      </div>\n    </ListItem>\n  );\n};\n\nfunction renderSummary(\n  lang: OldLangFn, message: ApiMessage, blobUrl?: string, searchQuery?: string, isRoundVideo?: boolean,\n) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message, undefined, searchQuery);\n  }\n\n  const isSpoiler = getMessageIsSpoiler(message);\n\n  return (\n    <span className=\"media-preview\">\n      <img\n        src={blobUrl}\n        alt=\"\"\n        className={\n          buildClassName('media-preview--image', isRoundVideo && 'round', isSpoiler && 'media-preview-spoiler')\n        }\n        draggable={false}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true, searchQuery)}\n    </span>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const privateChatUserId = getPrivateChatUserId(chat);\n    const privateChatUser = privateChatUserId ? selectUser(global, privateChatUserId) : undefined;\n\n    return {\n      chat,\n      ...(privateChatUserId && { privateChatUser }),\n    };\n  },\n)(ChatMessage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport { formatDateToString } from '../../../util/dates/dateFormat';\n\nimport Icon from '../../common/icons/Icon';\n\nimport './DateSuggest.scss';\n\nconst SUGGESTION_COUNT = 8;\n\nexport type OwnProps = {\n  searchDate: string;\n  onSelect: (value: Date) => void;\n};\n\nconst DateSuggest: FC<OwnProps> = ({\n  searchDate, onSelect,\n}) => {\n  const suggestions = useMemo(() => getSuggestionsFromDate(searchDate), [searchDate]);\n  return (\n    <section className=\"DateSuggest custom-scroll custom-scroll-x\">\n      {suggestions.map(({ date, text }) => {\n        return (\n          <div\n            onClick={() => onSelect(date)}\n            className=\"date-item\"\n            key={text}\n          >\n            <Icon name=\"calendar\" />\n            <span>{text}</span>\n          </div>\n        );\n      })}\n    </section>\n  );\n};\n\nfunction getSuggestionsFromDate(searchDate: string) {\n  const hasYear = searchDate.match(/^\\d{2,4}-\\d{2}-\\d{2}$/g);\n  if (hasYear) {\n    const date = new Date(searchDate);\n    return [{ date, text: formatDateToString(date) }];\n  }\n\n  const suggestion = [];\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const latestYear = currentDate.getTime() > (new Date(`${currentYear}-${searchDate}`)).getTime()\n    ? currentYear\n    : currentYear - 1;\n\n  for (let i = 0; i < SUGGESTION_COUNT; i++) {\n    const date = new Date(`${latestYear - i}-${searchDate}`);\n    suggestion.push({ date, text: formatDateToString(date) });\n  }\n\n  return suggestion;\n}\n\nexport default memo(DateSuggest);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiTopic } from '../../../api/types';\n\nimport { selectTopic } from '../../../global/selectors';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useSelectWithEnter from '../../../hooks/useSelectWithEnter';\n\nimport TopicIcon from '../../common/TopicIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  topicId: number;\n  onClick: (id: number) => void;\n};\n\ntype StateProps = {\n  topic?: ApiTopic;\n};\n\nconst TOPIC_ICON_SIZE = 2 * REM;\n\nconst LeftSearchResultTopic: FC<OwnProps & StateProps> = ({\n  topicId,\n  topic,\n  onClick,\n}) => {\n  const handleClick = useCallback(() => {\n    onClick(topicId);\n  }, [topicId, onClick]);\n\n  const buttonRef = useSelectWithEnter(handleClick);\n\n  if (!topic) {\n    return undefined;\n  }\n\n  return (\n    <ListItem\n      className=\"chat-item-clickable search-result\"\n      onClick={handleClick}\n      buttonClassName=\"topic-item\"\n      buttonRef={buttonRef}\n    >\n      <TopicIcon\n        size={TOPIC_ICON_SIZE}\n        topic={topic}\n        className=\"topic-icon\"\n        letterClassName=\"topic-icon-letter\"\n      />\n      <div dir=\"auto\" className=\"fullName\">{renderText(topic.title)}</div>\n    </ListItem>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, topicId }): StateProps => {\n    const topic = selectTopic(global, chatId, topicId);\n\n    return {\n      topic,\n    };\n  },\n)(LeftSearchResultTopic));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiMessage } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultTopic from './LeftSearchResultTopic';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  chatsById: Record<string, ApiChat>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  foundTopicIds?: number[];\n  searchChatId?: string;\n};\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst ChatMessageResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  dateSearchQuery,\n  foundIds,\n  globalMessagesByChatId,\n  chatsById,\n  fetchingStatus,\n  foundTopicIds,\n  searchChatId,\n  onSearchDateSelect,\n  onReset,\n}) => {\n  const { searchMessagesGlobal, openThread } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: 'text',\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const handleTopicClick = useCallback(\n    (id: number) => {\n      if (!searchChatId) return;\n      openThread({ chatId: searchChatId, threadId: id, shouldReplaceHistory: true });\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [searchChatId, isMobile, onReset],\n  );\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean)\n      .sort((a, b) => b.date - a.date);\n  }, [foundIds, globalMessagesByChatId]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const text = renderMessageSummary(lang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const nothingFound = fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages && !foundMessages.length\n    && !foundTopicIds?.length;\n\n  return (\n    <div className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content custom-scroll chat-list\"\n        items={foundMessages}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {dateSearchQuery && (\n          <div className=\"chat-selection no-scrollbar\">\n            <DateSuggest\n              searchDate={dateSearchQuery}\n              onSelect={onSearchDateSelect}\n            />\n          </div>\n        )}\n        {nothingFound && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {Boolean(foundTopicIds?.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('Topics')}\n            </h3>\n            {foundTopicIds!.map((id) => {\n              return (\n                <LeftSearchResultTopic\n                  chatId={searchChatId!}\n                  topicId={id}\n                  onClick={handleTopicClick}\n                />\n              );\n            })}\n          </div>\n        )}\n        {Boolean(foundMessages.length) && (\n          <div className=\"pb-2\">\n            <h3 className=\"section-heading topic-search-heading\" dir={lang.isRtl ? 'auto' : undefined}>\n              {lang('SearchMessages')}\n            </h3>\n            {foundMessages.map(renderFoundMessage)}\n          </div>\n        )}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: chatsById } = global.chats;\n    const { currentUserId, messages: { byChatId: globalMessagesByChatId } } = global;\n    const {\n      fetchingStatus, resultsByType, foundTopicIds, chatId: searchChatId,\n    } = selectTabState(global).globalSearch;\n\n    const { foundIds } = (resultsByType?.text) || {};\n\n    return {\n      currentUserId,\n      foundIds,\n      globalMessagesByChatId,\n      chatsById,\n      fetchingStatus,\n      foundTopicIds,\n      searchChatId,\n    };\n  },\n)(ChatMessageResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport LeftSearchResultChat from './LeftSearchResultChat';\n\nimport './RecentContacts.scss';\n\ntype OwnProps = {\n  onReset: () => void;\n};\n\ntype StateProps = {\n  topUserIds?: string[];\n  usersById: Record<string, ApiUser>;\n  recentlyFoundChatIds?: string[];\n};\n\nconst SEARCH_CLOSE_TIMEOUT_MS = 250;\nconst NBSP = '\\u00A0';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst RecentContacts: FC<OwnProps & StateProps> = ({\n  topUserIds,\n  usersById,\n  recentlyFoundChatIds,\n  onReset,\n}) => {\n  const {\n    loadTopUsers, openChat,\n    addRecentlyFoundChatId, clearRecentlyFoundChats,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const topUsersRef = useRef<HTMLDivElement>(null);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadTopUsers();\n    });\n  }, [loadTopUsers]);\n\n  useHorizontalScroll(topUsersRef, !topUserIds);\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n    onReset();\n    setTimeout(() => {\n      addRecentlyFoundChatId({ id });\n    }, SEARCH_CLOSE_TIMEOUT_MS);\n  }, [openChat, addRecentlyFoundChatId, onReset]);\n\n  const handleClearRecentlyFoundChats = useCallback(() => {\n    clearRecentlyFoundChats();\n  }, [clearRecentlyFoundChats]);\n\n  const lang = useOldLang();\n\n  return (\n    <div className=\"RecentContacts custom-scroll\">\n      {topUserIds && (\n        <div className=\"top-peers-section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <div ref={topUsersRef} className=\"top-peers\">\n            {topUserIds.map((userId) => (\n              <div\n                key={userId}\n                className=\"top-peer-item\"\n                onClick={() => handleClick(userId)}\n                dir={lang.isRtl ? 'rtl' : undefined}\n              >\n                <Avatar peer={usersById[userId]} />\n                <div className=\"top-peer-name\">{renderText(getUserFirstOrLastName(usersById[userId]) || NBSP)}</div>\n              </div>\n            ))}\n          </div>\n        </div>\n      )}\n      {recentlyFoundChatIds && (\n        <div className=\"search-section pt-1\">\n          <h3\n            className={buildClassName(\n              'section-heading mt-0 recent-chats-header',\n              !topUserIds && 'without-border',\n            )}\n            dir={lang.isRtl ? 'rtl' : undefined}\n          >\n            {lang('Recent')}\n\n            <Button\n              className=\"clear-recent-chats\"\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              ariaLabel={lang('Clear')}\n              onClick={handleClearRecentlyFoundChats}\n              isRtl={lang.isRtl}\n            >\n              <Icon name=\"close\" />\n            </Button>\n          </h3>\n          {recentlyFoundChatIds.map((id) => (\n            <LeftSearchResultChat\n              chatId={id}\n              withOpenAppButton\n              onClick={handleClick}\n            />\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: topUserIds } = global.topPeers;\n    const usersById = global.users.byId;\n    const { recentlyFoundChatIds } = global;\n\n    return {\n      topUserIds,\n      usersById,\n      recentlyFoundChatIds,\n    };\n  },\n)(RecentContacts));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiMessage, ApiMessageSearchContext } from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { ALL_FOLDER_ID, GLOBAL_SUGGESTED_CHANNELS_ID } from '../../../config';\nimport {\n  isChatChannel,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectSimilarChannelIds, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { getOrderedIds } from '../../../util/folderManager';\nimport { unique } from '../../../util/iteratees';\nimport { parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PeerChip from '../../common/PeerChip';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Link from '../../ui/Link';\nimport Loading from '../../ui/Loading';\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport Transition from '../../ui/Transition';\nimport ChatMessage from './ChatMessage';\nimport DateSuggest from './DateSuggest';\nimport LeftSearchResultChat from './LeftSearchResultChat';\nimport RecentContacts from './RecentContacts';\n\nimport './ChatResults.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  dateSearchQuery?: string;\n  searchDate?: number;\n  isChannelList?: boolean;\n  onReset: () => void;\n  onSearchDateSelect: (value: Date) => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  contactIds?: string[];\n  accountPeerIds?: string[];\n  globalPeerIds?: string[];\n  foundIds?: SearchResultKey[];\n  globalMessagesByChatId?: Record<string, { byId: Record<number, ApiMessage> }>;\n  fetchingStatus?: { chats?: boolean; messages?: boolean };\n  suggestedChannelIds?: string[];\n};\n\nconst MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH = 4;\nconst LESS_LIST_ITEMS_AMOUNT = 5;\n\nconst runThrottled = throttle((cb) => cb(), 500, false);\n\nconst ChatResults: FC<OwnProps & StateProps> = ({\n  isChannelList,\n  searchQuery,\n  searchDate,\n  dateSearchQuery,\n  currentUserId,\n  contactIds,\n  accountPeerIds,\n  globalPeerIds,\n  foundIds,\n  globalMessagesByChatId,\n  fetchingStatus,\n  suggestedChannelIds,\n  onReset,\n  onSearchDateSelect,\n}) => {\n  const {\n    openChat, addRecentlyFoundChatId, searchMessagesGlobal,\n    setGlobalSearchChatId, loadChannelRecommendations,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const chatSelectionRef = useRef<HTMLDivElement>(null);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const [shouldShowMoreLocal, setShouldShowMoreLocal] = useState<boolean>(false);\n  const [shouldShowMoreGlobal, setShouldShowMoreGlobal] = useState<boolean>(false);\n  const [searchContext, setSearchContext] = useState<ApiMessageSearchContext>('all');\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useEffectOnce(() => {\n    if (isChannelList) loadChannelRecommendations({});\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: isChannelList ? 'channels' : 'text',\n          context: searchContext,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery, searchContext]);\n\n  const handleChatClick = useCallback(\n    (id: string) => {\n      openChat({ id, shouldReplaceHistory: true });\n\n      if (id !== currentUserId) {\n        addRecentlyFoundChatId({ id });\n      }\n\n      if (!isMobile) {\n        onReset();\n      }\n    },\n    [openChat, currentUserId, isMobile, addRecentlyFoundChatId, onReset],\n  );\n\n  const handlePickerItemClick = useCallback((id: string) => {\n    setGlobalSearchChatId({ id });\n  }, [setGlobalSearchChatId]);\n\n  function getSearchContextCaption(context: ApiMessageSearchContext) {\n    if (context === 'users') return lang('PrivateChatsSearchContext');\n    if (context === 'groups') return lang('GroupChatsSearchContext');\n    if (context === 'channels') return lang('ChannelsSearchContext');\n    return lang('AllChatsSearchContext');\n  }\n\n  const {\n    isContextMenuOpen, contextMenuAnchor, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getRootElement = useLastCallback(() => ref.current!);\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.chatResultsContextMenu .bubble'));\n  const getTriggerElement = useLastCallback(() => ref.current!.querySelector('.menuTrigger'));\n\n  const handleClickContext = useLastCallback((e: React.MouseEvent): void => {\n    handleContextMenu(e);\n  });\n\n  const itemPlaceholderClass = buildClassName('icon', 'iconPlaceholder');\n\n  function renderContextMenu() {\n    return (\n      <Menu\n        isOpen={isContextMenuOpen}\n        anchor={contextMenuAnchor}\n        getTriggerElement={getTriggerElement}\n        getRootElement={getRootElement}\n        getMenuElement={getMenuElement}\n        className=\"chatResultsContextMenu\"\n        onClose={handleContextMenuClose}\n        onCloseAnimationEnd={handleContextMenuHide}\n        autoClose\n      >\n        <>\n          <MenuItem\n            icon={searchContext === 'all' ? 'check' : undefined}\n            customIcon={searchContext !== 'all' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('all')}\n          >\n            {getSearchContextCaption('all')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'users' ? 'check' : undefined}\n            customIcon={searchContext !== 'users' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('users')}\n          >\n            {getSearchContextCaption('users')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'groups' ? 'check' : undefined}\n            customIcon={searchContext !== 'groups' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('groups')}\n          >\n            {getSearchContextCaption('groups')}\n          </MenuItem>\n          <MenuItem\n            icon={searchContext === 'channels' ? 'check' : undefined}\n            customIcon={searchContext !== 'channels' ? <i className={itemPlaceholderClass} /> : undefined}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => setSearchContext('channels')}\n          >\n            {getSearchContextCaption('channels')}\n          </MenuItem>\n        </>\n      </Menu>\n    );\n  }\n\n  const localResults = useMemo(() => {\n    if (!isChannelList && (!searchQuery || (searchQuery.startsWith('@') && searchQuery.length < 2))) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const orderedChatIds = getOrderedIds(ALL_FOLDER_ID) ?? [];\n    const filteredChatIds = orderedChatIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n    const localChatIds = filterPeersByQuery({ ids: filteredChatIds, query: searchQuery, type: 'chat' });\n\n    if (isChannelList) return localChatIds;\n\n    const contactIdsWithMe = [\n      ...(currentUserId ? [currentUserId] : []),\n      ...(contactIds || []),\n    ];\n\n    const localContactIds = filterPeersByQuery({\n      ids: contactIdsWithMe, query: searchQuery, type: 'user',\n    });\n\n    const localPeerIds = [\n      ...localContactIds,\n      ...localChatIds,\n    ];\n\n    return unique([\n      ...sortChatIds(localPeerIds, undefined, currentUserId ? [currentUserId] : undefined),\n      ...sortChatIds(accountPeerIds || []),\n    ]);\n  }, [searchQuery, currentUserId, contactIds, accountPeerIds, isChannelList]);\n\n  useHorizontalScroll(chatSelectionRef, !localResults.length || isChannelList, true);\n\n  const globalResults = useMemo(() => {\n    if (!searchQuery || searchQuery.length < MIN_QUERY_LENGTH_FOR_GLOBAL_SEARCH || !globalPeerIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    const filteredIds = globalPeerIds.filter((id) => {\n      if (!isChannelList) return true;\n      const chat = chatsById[id];\n      return chat && isChatChannel(chat);\n    });\n\n    return sortChatIds(filteredIds, true);\n  }, [globalPeerIds, isChannelList, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if ((!searchQuery && !searchDate) || !foundIds || foundIds.length === 0) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    // No need for expensive global updates, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n\n    return foundIds\n      .map((id) => {\n        const [chatId, messageId] = parseSearchResultKey(id);\n        const chat = chatsById[chatId];\n        if (!chat) return undefined;\n        if (isChannelList && !isChatChannel(chat)) return undefined;\n\n        return globalMessagesByChatId?.[chatId]?.byId[messageId];\n      })\n      .filter(Boolean);\n  }, [searchQuery, searchDate, foundIds, isChannelList, globalMessagesByChatId]);\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    searchMessagesGlobal({\n      type: isChannelList ? 'channels' : 'text',\n      context: searchContext,\n      shouldResetResultsByType: true,\n      shouldCheckFetchingMessagesStatus: true,\n    });\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps\n  }, [searchContext]);\n\n  const handleClickShowMoreLocal = useCallback(() => {\n    setShouldShowMoreLocal(!shouldShowMoreLocal);\n  }, [shouldShowMoreLocal]);\n\n  const handleClickShowMoreGlobal = useCallback(() => {\n    setShouldShowMoreGlobal(!shouldShowMoreGlobal);\n  }, [shouldShowMoreGlobal]);\n\n  function renderFoundMessage(message: ApiMessage) {\n    const chatsById = getGlobal().chats.byId;\n\n    const text = renderMessageSummary(oldLang, message);\n    const chat = chatsById[message.chatId];\n\n    if (!text || !chat) {\n      return undefined;\n    }\n\n    return (\n      <ChatMessage\n        chatId={message.chatId}\n        message={message}\n        searchQuery={searchQuery}\n      />\n    );\n  }\n\n  const actualFoundIds = foundMessages;\n\n  const nothingFound = searchContext === 'all' && fetchingStatus && !fetchingStatus.chats && !fetchingStatus.messages\n    && !localResults.length && !globalResults.length && !actualFoundIds.length;\n  const isMessagesFetching = fetchingStatus?.messages;\n\n  if (!searchQuery && !searchDate && !isChannelList) {\n    return <RecentContacts onReset={onReset} />;\n  }\n\n  const shouldRenderMessagesSection = searchContext === 'all' ? Boolean(actualFoundIds.length) : true;\n\n  return (\n    <InfiniteScroll\n      className=\"LeftSearch--content custom-scroll\"\n      items={actualFoundIds}\n      onLoadMore={handleLoadMore}\n      // To prevent scroll jumps caused by delayed local results rendering\n      noScrollRestoreOnTop\n      noFastList\n    >\n      {dateSearchQuery && (\n        <div className=\"chat-selection no-scrollbar\">\n          <DateSuggest\n            searchDate={dateSearchQuery}\n            onSelect={onSearchDateSelect}\n          />\n        </div>\n      )}\n      {nothingFound && (\n        <NothingFound\n          text={oldLang('ChatList.Search.NoResults')}\n          description={oldLang('ChatList.Search.NoResultsDescription')}\n        />\n      )}\n      {Boolean(localResults.length) && !isChannelList && (\n        <div\n          className=\"chat-selection no-scrollbar\"\n          dir={oldLang.isRtl ? 'rtl' : undefined}\n          ref={chatSelectionRef}\n        >\n          {localResults.map((id) => (\n            <PeerChip\n              peerId={id}\n              className=\"left-search-local-suggestion\"\n              onClick={handlePickerItemClick}\n              clickArg={id}\n            />\n          ))}\n        </div>\n      )}\n      {Boolean(localResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {localResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreLocal}>\n                {oldLang(shouldShowMoreLocal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang(isChannelList ? 'SearchMyChannels' : 'DialogList.SearchSectionDialogs')}\n          </h3>\n          {localResults.map((id, index) => {\n            if (!shouldShowMoreLocal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                withOpenAppButton\n                chatId={id}\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(globalResults.length) && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {globalResults.length > LESS_LIST_ITEMS_AMOUNT && (\n              <Link className=\"Link\" onClick={handleClickShowMoreGlobal}>\n                {oldLang(shouldShowMoreGlobal ? 'ChatList.Search.ShowLess' : 'ChatList.Search.ShowMore')}\n              </Link>\n            )}\n            {oldLang('DialogList.SearchSectionGlobal')}\n          </h3>\n          {globalResults.map((id, index) => {\n            if (!shouldShowMoreGlobal && index >= LESS_LIST_ITEMS_AMOUNT) {\n              return undefined;\n            }\n\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      {Boolean(suggestedChannelIds?.length) && !searchQuery && (\n        <div className=\"search-section\">\n          <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n            {oldLang('SearchRecommendedChannels')}\n          </h3>\n          {suggestedChannelIds.map((id) => {\n            return (\n              <LeftSearchResultChat\n                chatId={id}\n                withUsername\n                onClick={handleChatClick}\n              />\n            );\n          })}\n        </div>\n      )}\n      <div className=\"menuOwner\" ref={ref}>\n        {renderContextMenu()}\n        {shouldRenderMessagesSection && (\n          <div className=\"search-section\">\n            <h3 className=\"section-heading\" dir={oldLang.isRtl ? 'auto' : undefined}>\n              {!isChannelList && (\n                <Link className=\"Link menuTrigger dropDownLink\" onClick={handleClickContext}>\n                  {lang('SearchContextCaption', {\n                    type: getSearchContextCaption(searchContext),\n                  }, {\n                    withNodes: true,\n                  })}\n\n                  <Transition\n                    name=\"fade\"\n                    shouldCleanup\n                    activeKey={Number(isMessagesFetching)}\n                    className=\"iconContainer\"\n                    slideClassName=\"iconContainerSlide\"\n                  >\n                    {isMessagesFetching && (<Loading />)}\n                    {!isMessagesFetching && <Icon name=\"down\" />}\n                  </Transition>\n                </Link>\n              )}\n              {oldLang('SearchMessages')}\n            </h3>\n            {actualFoundIds.map(renderFoundMessage)}\n          </div>\n        )}\n      </div>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { isChannelList }): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const {\n      currentUserId, messages,\n    } = global;\n\n    if (!contactIds) {\n      return {};\n    }\n\n    const {\n      fetchingStatus, globalResults, localResults, resultsByType,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: accountPeerIds } = localResults || {};\n    const { byChatId: globalMessagesByChatId } = messages;\n    const foundIds = resultsByType?.[isChannelList ? 'channels' : 'text']?.foundIds;\n    const { similarChannelIds } = selectSimilarChannelIds(global, GLOBAL_SUGGESTED_CHANNELS_ID) || {};\n\n    return {\n      currentUserId,\n      contactIds,\n      accountPeerIds,\n      globalPeerIds,\n      foundIds,\n      globalMessagesByChatId,\n      fetchingStatus,\n      suggestedChannelIds: similarChannelIds,\n    };\n  },\n)(ChatResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { getIsDownloading, getMessageDocument } from '../../../global/helpers';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Document from '../../common/Document';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'documents';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst FileResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  activeDownloads,\n  shouldWarnAboutSvg,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n    // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n      const message = globalMessagesByChatId[chatId]?.byId[messageId];\n\n      return message && getMessageDocument(message) ? message : undefined;\n    }).filter(Boolean) as ApiMessage[];\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              dir={lang.isRtl ? 'rtl' : undefined}\n              key={message.date}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            key={message.id}\n          >\n            <Document\n              document={getMessageDocument(message)!}\n              message={message}\n              withDate\n              datetime={message.date}\n              smaller\n              sender={getSenderName(lang, message, chatsById, usersById)}\n              className=\"scroll-item\"\n              isDownloading={getIsDownloading(activeDownloads, message.content.document!)}\n              shouldWarnAboutSvg={shouldWarnAboutSvg}\n              observeIntersection={observeIntersectionForMedia}\n              onDateClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(FileResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiMessage } from '../../../api/types';\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { formatMonthAndYear, toYearMonth } from '../../../util/dates/dateFormat';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\nimport { getSenderName } from './helpers/getSenderName';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport NothingFound from '../../common/NothingFound';\nimport WebLink from '../../common/WebLink';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'links';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst LinkResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  chatsById,\n  usersById,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    focusMessage,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleMessageFocus = useCallback((message: ApiMessage) => {\n    focusMessage({ chatId: message.chatId, messageId: message.id });\n  }, [focusMessage]);\n\n  function renderList() {\n    return foundMessages.map((message, index) => {\n      const isFirst = index === 0;\n      const shouldDrawDateDivider = isFirst\n        || toYearMonth(message.date) !== toYearMonth(foundMessages[index - 1].date);\n      return (\n        <>\n          {shouldDrawDateDivider && (\n            <p\n              className=\"section-heading\"\n              key={message.date}\n              dir={lang.isRtl ? 'rtl' : undefined}\n            >\n              {formatMonthAndYear(lang, new Date(message.date * 1000))}\n            </p>\n          )}\n          <div\n            className=\"ListItem small-icon\"\n            dir={lang.isRtl ? 'rtl' : undefined}\n            key={message.id}\n          >\n            <WebLink\n              key={message.id}\n              message={message}\n              senderTitle={getSenderName(lang, message, chatsById, usersById)}\n              isProtected={isChatProtected || message.isProtected}\n              observeIntersection={observeIntersectionForMedia}\n              onMessageClick={handleMessageFocus}\n            />\n          </div>\n        </>\n      );\n    });\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content\">\n      <InfiniteScroll\n        className=\"search-content documents-list custom-scroll\"\n        items={canRenderContents ? foundMessages : undefined}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {canRenderContents && foundIds && foundIds.length > 0 && renderList()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(LinkResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { StateProps } from './helpers/createMapStateToProps';\nimport { LoadMoreDirection, MediaViewerOrigin } from '../../../types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { parseSearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { throttle } from '../../../util/schedulers';\nimport { createMapStateToProps } from './helpers/createMapStateToProps';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Media from '../../common/Media';\nimport NothingFound from '../../common/NothingFound';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport ChatMessage from './ChatMessage';\n\nexport type OwnProps = {\n  searchQuery?: string;\n};\n\nconst CURRENT_TYPE = 'media';\nconst INTERSECTION_THROTTLE = 500;\n\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nconst MediaResults: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  isLoading,\n  globalMessagesByChatId,\n  foundIds,\n  isChatProtected,\n}) => {\n  const {\n    searchMessagesGlobal,\n    openMediaViewer,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const { observe: observeIntersectionForMedia } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  });\n\n  const handleLoadMore = useCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(() => {\n        searchMessagesGlobal({\n          type: CURRENT_TYPE,\n        });\n      });\n    }\n  // eslint-disable-next-line react-hooks-static-deps/exhaustive-deps -- `searchQuery` is required to prevent infinite message loading\n  }, [searchMessagesGlobal, searchQuery]);\n\n  const foundMessages = useMemo(() => {\n    if (!foundIds || !globalMessagesByChatId) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return foundIds.map((id) => {\n      const [chatId, messageId] = parseSearchResultKey(id);\n\n      return globalMessagesByChatId[chatId]?.byId[messageId];\n    }).filter(Boolean);\n  }, [globalMessagesByChatId, foundIds]);\n\n  const handleSelectMedia = useCallback((id: number, chatId: string) => {\n    openMediaViewer({\n      chatId,\n      messageId: id,\n      origin: MediaViewerOrigin.SearchResult,\n    });\n  }, [openMediaViewer]);\n\n  function renderGallery() {\n    return (\n      <div className=\"media-list\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {foundMessages.map((message) => (\n          <Media\n            key={`${message.chatId}-${message.id}`}\n            idPrefix=\"search-media\"\n            message={message}\n            isProtected={isChatProtected || message.isProtected}\n            observeIntersection={observeIntersectionForMedia}\n            onClick={handleSelectMedia}\n          />\n        ))}\n      </div>\n    );\n  }\n\n  function renderSearchResult() {\n    return foundMessages.map((message) => (\n      <ChatMessage\n        key={message.id}\n        chatId={message.chatId}\n        message={message}\n      />\n    ));\n  }\n\n  const canRenderContents = useAsyncRendering([searchQuery], SLIDE_TRANSITION_DURATION) && !isLoading;\n  const isMediaGrid = canRenderContents && foundIds && foundIds.length > 0 && !searchQuery;\n  const isMessageList = canRenderContents && foundIds && foundIds.length > 0 && searchQuery;\n\n  const classNames = buildClassName(\n    'search-content custom-scroll',\n    isMessageList && 'chat-list',\n  );\n\n  return (\n    <div ref={containerRef} className=\"LeftSearch--content LeftSearch--media\">\n      <InfiniteScroll\n        className={classNames}\n        items={canRenderContents ? foundMessages : undefined}\n        itemSelector={!searchQuery ? '.Media' : '.ListItem'}\n        onLoadMore={handleLoadMore}\n        noFastList\n      >\n        {!canRenderContents && <Loading />}\n        {canRenderContents && (!foundIds || foundIds.length === 0) && (\n          <NothingFound\n            text={lang('ChatList.Search.NoResults')}\n            description={lang('ChatList.Search.NoResultsDescription')}\n          />\n        )}\n        {isMediaGrid && renderGallery()}\n        {isMessageList && renderSearchResult()}\n      </InfiniteScroll>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  createMapStateToProps(CURRENT_TYPE),\n)(MediaResults));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { RegularLangKey } from '../../../types/language';\nimport { GlobalSearchContent } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { parseDateString } from '../../../util/dates/dateFormat';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport TabList from '../../ui/TabList';\nimport Transition from '../../ui/Transition';\nimport AudioResults from './AudioResults';\nimport BotAppResults from './BotAppResults';\nimport ChatMessageResults from './ChatMessageResults';\nimport ChatResults from './ChatResults';\nimport FileResults from './FileResults';\nimport LinkResults from './LinkResults';\nimport MediaResults from './MediaResults';\n\nimport './LeftSearch.scss';\n\nexport type OwnProps = {\n  searchQuery?: string;\n  searchDate?: number;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentContent?: GlobalSearchContent;\n  chatId?: string;\n};\n\ntype TabInfo = {\n  type: GlobalSearchContent;\n  key: RegularLangKey;\n};\n\nconst TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabChats' },\n  { type: GlobalSearchContent.ChannelList, key: 'SearchTabChannels' },\n  { type: GlobalSearchContent.BotApps, key: 'SearchTabApps' },\n  { type: GlobalSearchContent.Media, key: 'SearchTabMedia' },\n  { type: GlobalSearchContent.Links, key: 'SearchTabLinks' },\n  { type: GlobalSearchContent.Files, key: 'SearchTabFiles' },\n  { type: GlobalSearchContent.Music, key: 'SearchTabMusic' },\n  { type: GlobalSearchContent.Voice, key: 'SearchTabVoice' },\n];\n\nconst CHAT_TABS: TabInfo[] = [\n  { type: GlobalSearchContent.ChatList, key: 'SearchTabMessages' },\n  ...TABS.slice(3), // Skip ChatList, ChannelList and BotApps, replaced with All Messages\n];\n\nconst LeftSearch: FC<OwnProps & StateProps> = ({\n  searchQuery,\n  searchDate,\n  isActive,\n  currentContent = GlobalSearchContent.ChatList,\n  chatId,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchContent,\n    setGlobalSearchDate,\n  } = getActions();\n\n  const lang = useLang();\n  const [activeTab, setActiveTab] = useState(currentContent);\n  const dateSearchQuery = useMemo(() => parseDateString(searchQuery), [searchQuery]);\n\n  const tabs = useMemo(() => {\n    const arr = chatId ? CHAT_TABS : TABS;\n    return arr.map((tab) => ({\n      ...tab,\n      title: lang(tab.key),\n    }));\n  }, [chatId, lang]);\n\n  const handleSwitchTab = useLastCallback((index: number) => {\n    const tab = tabs[index];\n    setGlobalSearchContent({ content: tab.type });\n    setActiveTab(index);\n  });\n\n  const handleSearchDateSelect = useLastCallback((value: Date) => {\n    setGlobalSearchDate({ date: value.getTime() / 1000 });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, undefined, '.ListItem-button', true);\n\n  return (\n    <div className=\"LeftSearch\" ref={containerRef} onKeyDown={handleKeyDown}>\n      <TabList activeTab={activeTab} tabs={tabs} onSwitchTab={handleSwitchTab} />\n      <Transition\n        name={lang.isRtl ? 'slideOptimizedRtl' : 'slideOptimized'}\n        renderCount={tabs.length}\n        activeKey={currentContent}\n      >\n        {(() => {\n          switch (currentContent) {\n            case GlobalSearchContent.ChatList:\n            case GlobalSearchContent.ChannelList:\n              if (chatId) {\n                return (\n                  <ChatMessageResults\n                    searchQuery={searchQuery}\n                    dateSearchQuery={dateSearchQuery}\n                    onReset={onReset}\n                    onSearchDateSelect={handleSearchDateSelect}\n                  />\n                );\n              }\n              return (\n                <ChatResults\n                  isChannelList={currentContent === GlobalSearchContent.ChannelList}\n                  searchQuery={searchQuery}\n                  searchDate={searchDate}\n                  dateSearchQuery={dateSearchQuery}\n                  onReset={onReset}\n                  onSearchDateSelect={handleSearchDateSelect}\n                />\n              );\n            case GlobalSearchContent.Media:\n              return <MediaResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Links:\n              return <LinkResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Files:\n              return <FileResults searchQuery={searchQuery} />;\n            case GlobalSearchContent.Music:\n              return (\n                <AudioResults\n                  key=\"audio\"\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.Voice:\n              return (\n                <AudioResults\n                  key=\"voice\"\n                  isVoice\n                  searchQuery={searchQuery}\n                />\n              );\n            case GlobalSearchContent.BotApps:\n              return (\n                <BotAppResults\n                  key=\"botApps\"\n                  searchQuery={searchQuery}\n                />\n              );\n            default:\n              return undefined;\n          }\n        })()}\n      </Transition>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentContent, chatId } = selectTabState(global).globalSearch;\n\n    return { currentContent, chatId };\n  },\n)(LeftSearch));\n","import type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type TwoFaActions = (\n  'setCurrentPassword' | 'setPassword' | 'setHint' | 'setEmail' | 'reset'\n);\nexport type TwoFaDispatch = Dispatch<TwoFaState, TwoFaActions>;\n\nexport type TwoFaState = {\n  currentPassword: string;\n  password: string;\n  hint: string;\n  email: string;\n};\n\nconst INITIAL_STATE: TwoFaState = {\n  currentPassword: '',\n  password: '',\n  hint: '',\n  email: '',\n};\n\nconst twoFaReducer: StateReducer<TwoFaState, TwoFaActions> = (\n  state,\n  action,\n) => {\n  switch (action.type) {\n    case 'setCurrentPassword':\n      return {\n        ...state,\n        currentPassword: action.payload,\n      };\n\n    case 'setPassword':\n      return {\n        ...state,\n        password: action.payload,\n      };\n\n    case 'setHint':\n      return {\n        ...state,\n        hint: action.payload,\n      };\n\n    case 'setEmail':\n      return {\n        ...state,\n        email: action.payload,\n      };\n\n    case 'reset':\n      return INITIAL_STATE;\n\n    default:\n      return state;\n  }\n};\n\nconst useTwoFaReducer = () => {\n  return useReducer(twoFaReducer, INITIAL_STATE);\n};\n\nexport default useTwoFaReducer;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID } from '../../../../config';\nimport { filterPeersByQuery } from '../../../../global/helpers/peers';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { unique } from '../../../../util/iteratees';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport { useFolderManagerForOrderedIds } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport Icon from '../../../common/icons/Icon';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Loading from '../../../ui/Loading';\n\ntype StateProps = {\n  maxChats: number;\n};\n\ntype OwnProps = {\n  mode: 'included' | 'excluded';\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onSaveFilter: VoidFunction;\n};\n\nconst SettingsFoldersChatFilters: FC<OwnProps & StateProps> = ({\n  mode,\n  state,\n  dispatch,\n  isActive,\n  onReset,\n  onSaveFilter,\n  maxChats,\n}) => {\n  const lang = useOldLang();\n\n  const { openLimitReachedModal } = getActions();\n\n  const { chatFilter } = state;\n  const { selectedChatIds, selectedChatTypes } = useMemo(() => selectChatFilters(state, mode, true), [mode, state]);\n  const chatTypes = mode === 'included' ? CUSTOM_PEER_INCLUDED_CHAT_TYPES : CUSTOM_PEER_EXCLUDED_CHAT_TYPES;\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n\n  const shouldHideChatTypes = state.folder.isChatList;\n\n  useEffect(() => {\n    if (!isActive) {\n      setIsTouched(false);\n    }\n  }, [isActive]);\n\n  const displayedIds = useMemo(() => {\n    const chatIds = [...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []];\n    return unique([\n      ...filterPeersByQuery({ ids: chatIds, query: chatFilter, type: 'chat' }),\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, chatFilter]);\n\n  const handleFilterChange = useLastCallback((newFilter: string) => {\n    dispatch({\n      type: 'setChatFilter',\n      payload: newFilter,\n    });\n    setIsTouched(true);\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    if (mode === 'included') {\n      if (ids.length >= maxChats) {\n        openLimitReachedModal({\n          limit: 'dialogFiltersChats',\n        });\n        return;\n      }\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: { ...state.includeFilters, includedChatIds: ids },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: { ...state.excludeFilters, excludedChatIds: ids },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  const handleSelectedChatTypesChange = useLastCallback((keys: string[]) => {\n    const newFilters: Record<string, boolean> = {};\n    keys.forEach((key) => {\n      newFilters[key] = true;\n    });\n\n    if (mode === 'included') {\n      dispatch({\n        type: 'setIncludeFilters',\n        payload: {\n          includedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    } else {\n      dispatch({\n        type: 'setExcludeFilters',\n        payload: {\n          excludedChatIds: selectedChatIds,\n          ...newFilters,\n        },\n      });\n    }\n    setIsTouched(true);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  if (!displayedIds) {\n    return <Loading />;\n  }\n\n  return (\n    <div className=\"Picker settings-folders-chat-list\">\n      <PeerPicker\n        categories={shouldHideChatTypes ? undefined : chatTypes}\n        itemIds={displayedIds}\n        selectedIds={selectedChatIds}\n        selectedCategories={selectedChatTypes}\n        filterValue={chatFilter}\n        filterPlaceholder={lang('Search')}\n        categoryPlaceholderKey=\"FilterChatTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        withDefaultPadding\n        withPeerTypes\n        allowMultiple\n        itemInputType=\"checkbox\"\n        onSelectedIdsChange={handleSelectedIdsChange}\n        onSelectedCategoriesChange={handleSelectedChatTypesChange}\n        onFilterChange={handleFilterChange}\n      />\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={onSaveFilter}\n        ariaLabel={lang('Save')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      maxChats: selectCurrentLimit(global, 'dialogFiltersChats'),\n    };\n  },\n)(SettingsFoldersChatFilters));\n","import type { FC } from '../../../lib/teact/teact';\nimport React from '../../../lib/teact/teact';\n\nimport type { OwnProps } from './FolderIconPickerMenu';\n\nimport { Bundles } from '../../../util/moduleLoader';\n\nimport useModuleLoader from '../../../hooks/useModuleLoader';\n\nconst FolderIconPickerMenuAsync: FC<OwnProps> = (props) => {\n  const { isOpen } = props;\n  const FolderIconPickerMenu = useModuleLoader(Bundles.Extra, 'FolderIconPickerMenu', !isOpen);\n\n  // eslint-disable-next-line react/jsx-props-no-spreading\n  return FolderIconPickerMenu ? <FolderIconPickerMenu {...props} /> : undefined;\n};\n\nexport default FolderIconPickerMenuAsync;\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder, ApiChatlistExportedInvite } from '../../../../api/types';\nimport type {\n  FolderEditDispatch,\n  FoldersState,\n} from '../../../../hooks/reducers/useFoldersReducer';\nimport type { IconName } from '../../../../types/icons';\n\nimport { FILTER_EMOTICON_ICONS, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isUserId } from '../../../../global/helpers';\nimport { selectCanShareFolder } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { findIntersectionWithSet } from '../../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { CUSTOM_PEER_EXCLUDED_CHAT_TYPES, CUSTOM_PEER_INCLUDED_CHAT_TYPES } from '../../../../util/objects/customPeer';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport GroupChatInfo from '../../../common/GroupChatInfo';\nimport Icon from '../../../common/icons/Icon';\nimport PrivateChatInfo from '../../../common/PrivateChatInfo';\nimport Button from '../../../ui/Button';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport InputText from '../../../ui/InputText';\nimport ListItem from '../../../ui/ListItem';\nimport Spinner from '../../../ui/Spinner';\nimport { LeftColumnBarFolderIcon } from '../../LeftColumnBar';\nimport FolderIconPickerMenu from '../../main/FolderIconPickerMenu.async';\n\ntype OwnProps = {\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  onAddIncludedChats: VoidFunction;\n  onAddExcludedChats: VoidFunction;\n  onShareFolder: VoidFunction;\n  onOpenInvite: (url: string) => void;\n  isActive?: boolean;\n  isOnlyInvites?: boolean;\n  onReset: () => void;\n  onBack: () => void;\n  onSaveFolder: (cb?: VoidFunction) => void;\n};\n\ntype StateProps = {\n  loadedActiveChatIds?: string[];\n  loadedArchivedChatIds?: string[];\n  invites?: ApiChatlistExportedInvite[];\n  isRemoved?: boolean;\n  maxInviteLinks: number;\n  maxChatLists: number;\n  chatListCount: number;\n};\n\nconst SUBMIT_TIMEOUT = 500;\n\nconst INITIAL_CHATS_LIMIT = 5;\n\nexport const ERROR_NO_TITLE = 'Please provide a title for this folder.';\nexport const ERROR_NO_CHATS = 'ChatList.Filter.Error.Empty';\n\nconst SettingsFoldersEdit: FC<OwnProps & StateProps> = ({\n  state,\n  dispatch,\n  onAddIncludedChats,\n  onAddExcludedChats,\n  onShareFolder,\n  onOpenInvite,\n  isActive,\n  onReset,\n  isRemoved,\n  onBack,\n  loadedActiveChatIds,\n  isOnlyInvites,\n  loadedArchivedChatIds,\n  invites,\n  maxInviteLinks,\n  maxChatLists,\n  chatListCount,\n  onSaveFolder,\n}) => {\n  const {\n    loadChatlistInvites,\n    openLimitReachedModal,\n    showNotification,\n  } = getActions();\n\n  const isCreating = state.mode === 'create';\n  const isEditingChatList = state.folder.isChatList;\n\n  const [isIncludedChatsListExpanded, setIsIncludedChatsListExpanded] = useState(false);\n  const [isExcludedChatsListExpanded, setIsExcludedChatsListExpanded] = useState(false);\n\n  useEffect(() => {\n    if (isRemoved) {\n      onReset();\n    }\n  }, [isRemoved, onReset]);\n\n  useEffect(() => {\n    if (isActive && state.folderId && state.folder.isChatList) {\n      loadChatlistInvites({ folderId: state.folderId });\n    }\n  }, [isActive, state.folder.isChatList, state.folderId]);\n\n  const {\n    selectedChatIds: includedChatIds,\n    selectedChatTypes: includedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'included'), [state]);\n  const {\n    selectedChatIds: excludedChatIds,\n    selectedChatTypes: excludedChatTypes,\n  } = useMemo(() => selectChatFilters(state, 'excluded'), [state]);\n\n  useEffect(() => {\n    setIsIncludedChatsListExpanded(false);\n    setIsExcludedChatsListExpanded(false);\n  }, [state.folderId]);\n\n  const [visibleIncludedChatIds, visibleExcludedChatIds] = useMemo(() => {\n    const allLoadedChatsSet = new Set([\n      ...(loadedActiveChatIds || []),\n      ...(loadedArchivedChatIds || []),\n    ]);\n\n    const loadedIncludedChatIds = findIntersectionWithSet(includedChatIds, allLoadedChatsSet);\n    const loadedExcludedChatIds = findIntersectionWithSet(excludedChatIds, allLoadedChatsSet);\n\n    return [\n      isIncludedChatsListExpanded\n        ? loadedIncludedChatIds\n        : loadedIncludedChatIds.slice(0, INITIAL_CHATS_LIMIT - includedChatTypes.length),\n      isExcludedChatsListExpanded\n        ? loadedExcludedChatIds\n        : loadedExcludedChatIds.slice(0, INITIAL_CHATS_LIMIT - excludedChatTypes.length),\n    ];\n  }, [\n    excludedChatIds, includedChatIds, includedChatTypes, excludedChatTypes,\n    isExcludedChatsListExpanded, isIncludedChatsListExpanded,\n    loadedActiveChatIds, loadedArchivedChatIds,\n  ]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack,\n  });\n\n  const handleChange = useCallback((event: React.ChangeEvent<HTMLInputElement>) => {\n    const { currentTarget } = event;\n    dispatch({ type: 'setTitle', payload: currentTarget.value.trim() });\n  }, [dispatch]);\n\n  const handleSubmit = useCallback(() => {\n    dispatch({ type: 'setIsLoading', payload: true });\n\n    onSaveFolder(() => {\n      setTimeout(() => {\n        onReset();\n      }, SUBMIT_TIMEOUT);\n    });\n  }, [dispatch, onSaveFolder, onReset]);\n\n  const handleCreateInviteClick = useCallback(() => {\n    if (!invites) {\n      if (isCreating) {\n        onSaveFolder(onShareFolder);\n      }\n      return;\n    }\n\n    // Ignoring global updates is a known drawback here\n    if (!selectCanShareFolder(getGlobal(), state.folderId!)) {\n      showNotification({ message: lang('ChatList.Filter.InviteLink.IncludeExcludeError') });\n      return;\n    }\n\n    if (chatListCount >= maxChatLists && !state.folder.isChatList) {\n      openLimitReachedModal({\n        limit: 'chatlistJoined',\n      });\n      return;\n    }\n\n    if (invites.length < maxInviteLinks) {\n      if (state.isTouched) {\n        onSaveFolder(onShareFolder);\n      } else {\n        onShareFolder();\n      }\n      return;\n    }\n\n    openLimitReachedModal({\n      limit: 'chatlistInvites',\n    });\n  }, [\n    invites, state.folderId, state.isTouched, chatListCount, maxInviteLinks, isCreating, onSaveFolder,\n    onShareFolder, lang, maxChatLists, state.folder.isChatList,\n  ]);\n\n  const handleEditInviteClick = useCallback((e: React.MouseEvent<HTMLElement>, url: string) => {\n    if (state.isTouched) {\n      onSaveFolder(() => onOpenInvite(url));\n    } else {\n      onOpenInvite(url);\n    }\n  }, [onSaveFolder, onOpenInvite, state.isTouched]);\n\n  function renderChatType(key: string, mode: 'included' | 'excluded') {\n    const chatType = mode === 'included'\n      ? CUSTOM_PEER_INCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key)\n      : CUSTOM_PEER_EXCLUDED_CHAT_TYPES.find(({ type: typeKey }) => typeKey === key);\n\n    if (!chatType) {\n      return undefined;\n    }\n\n    return (\n      <ListItem\n        key={chatType.type}\n        className=\"settings-folders-list-item mb-1\"\n        narrow\n        inactive\n      >\n        <PrivateChatInfo\n          avatarSize=\"small\"\n          customPeer={chatType}\n        />\n      </ListItem>\n    );\n  }\n\n  function renderChats(mode: 'included' | 'excluded') {\n    const selectedChatTypes = mode === 'included' ? includedChatTypes : excludedChatTypes;\n    const visibleChatIds = mode === 'included' ? visibleIncludedChatIds : visibleExcludedChatIds;\n\n    const isExpanded = mode === 'included' ? isIncludedChatsListExpanded : isExcludedChatsListExpanded;\n    const allChatIds = mode === 'included' ? includedChatIds : excludedChatIds;\n    const leftChatsCount = allChatIds.length - visibleChatIds.length;\n    const clickHandler = mode === 'included'\n      ? () => setIsIncludedChatsListExpanded(true)\n      : () => setIsExcludedChatsListExpanded(true);\n\n    return (\n      <>\n        {selectedChatTypes.map((key) => renderChatType(key, mode))}\n        {visibleChatIds.map((id) => (\n          <ListItem\n            className=\"settings-folders-list-item mb-1\"\n            narrow\n            inactive\n          >\n            {isUserId(id) ? (\n              <PrivateChatInfo avatarSize=\"small\" userId={id} />\n            ) : (\n              <GroupChatInfo avatarSize=\"small\" chatId={id} />\n            )}\n          </ListItem>\n        ))}\n        {(!isExpanded && leftChatsCount > 0) && (\n          <ListItem\n            key=\"load-more\"\n            className=\"settings-folders-list-item\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={clickHandler}\n            icon=\"down\"\n          >\n            {lang('FilterShowMoreChats', leftChatsCount, 'i')}\n          </ListItem>\n        )}\n      </>\n    );\n  }\n\n  // eslint-disable-next-line no-null/no-null\n  const folderIconPickerButtonRef = useRef<HTMLButtonElement>(null);\n  const [isFolderIconPickerOpen, openFolderIconPicker, closeFolderIconPicker] = useFlag(false);\n\n  const handleFolderIconPickerButtonClicked = useCallback(() => {\n    openFolderIconPicker();\n  }, []);\n\n  const handleFolderIconSet = useCallback((icon: IconName) => {\n    dispatch({\n      type: 'setEmoticon',\n      payload: Object.entries(FILTER_EMOTICON_ICONS).find(([, iconName]) => (icon === iconName))![0],\n    });\n  }, [dispatch]);\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-content-header\">\n          <AnimatedIconWithPreview\n            size={STICKER_SIZE_FOLDER_SETTINGS}\n            tgsUrl={LOCAL_TGS_URLS.FoldersNew}\n            play={String(state.folderId)}\n            className=\"settings-content-icon\"\n          />\n\n          {isCreating && (\n            <p className=\"settings-item-description mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('FilterIncludeInfo')}\n            </p>\n          )}\n\n          <InputText\n            className=\"mb-0\"\n            label={lang('FilterNameHint')}\n            value={state.folder.title.text}\n            onChange={handleChange}\n            error={state.error && state.error === ERROR_NO_TITLE ? ERROR_NO_TITLE : undefined}\n            append={(\n              <>\n                <Button\n                  round\n                  ref={folderIconPickerButtonRef}\n                  ripple={false}\n                  size=\"smaller\"\n                  color=\"translucent\"\n                  className=\"folder-icon-picker-button\"\n                  onClick={handleFolderIconPickerButtonClicked}\n                >\n                  <LeftColumnBarFolderIcon folder={state.folder as ApiChatFolder} />\n                </Button>\n\n                <FolderIconPickerMenu\n                  iconButtonRef={folderIconPickerButtonRef}\n                  isOpen={isFolderIconPickerOpen}\n                  onIconSelect={handleFolderIconSet}\n                  onClose={closeFolderIconPicker}\n                />\n              </>\n            )}\n          />\n        </div>\n\n        {!isOnlyInvites && (\n          <div className=\"settings-item\">\n            {state.error && state.error === ERROR_NO_CHATS && (\n              <p className=\"settings-item-description color-danger mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n                {lang(state.error)}\n              </p>\n            )}\n\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterInclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddIncludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('included')}\n          </div>\n        )}\n\n        {!isOnlyInvites && !isEditingChatList && (\n          <div className=\"settings-item pt-3\">\n            <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterExclude')}</h4>\n\n            <ListItem\n              className=\"settings-folders-list-item color-primary\"\n              icon=\"add\"\n              narrow\n              onClick={onAddExcludedChats}\n            >\n              {lang('FilterAddChats')}\n            </ListItem>\n\n            {renderChats('excluded')}\n          </div>\n        )}\n\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FolderLinkScreen.Title')}\n          </h4>\n\n          <ListItem\n            className=\"settings-folders-list-item color-primary\"\n            icon=\"add\"\n            narrow\n            onClick={handleCreateInviteClick}\n          >\n            {lang('ChatListFilter.CreateLinkNew')}\n          </ListItem>\n\n          {invites?.map((invite) => (\n            <ListItem\n              className=\"settings-folders-list-item\"\n              icon=\"link\"\n              narrow\n              multiline\n              onClick={handleEditInviteClick}\n              clickArg={invite.url}\n            >\n              <span className=\"title\" dir=\"auto\">{invite.title || invite.url}</span>\n              <span className=\"subtitle\">\n                {lang('ChatListFilter.LinkLabelChatCount', invite.peerIds.length, 'i')}\n              </span>\n            </ListItem>\n          ))}\n\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={Boolean(state.isTouched)}\n        disabled={state.isLoading}\n        onClick={handleSubmit}\n        ariaLabel={state.mode === 'edit' ? 'Save changes' : 'Create folder'}\n      >\n        {state.isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { state }): StateProps => {\n    const { listIds } = global.chats;\n    const { byId, invites } = global.chatFolders;\n    const chatListCount = Object.values(byId).reduce((acc, el) => acc + (el.isChatList ? 1 : 0), 0);\n\n    return {\n      loadedActiveChatIds: listIds.active,\n      loadedArchivedChatIds: listIds.archived,\n      invites: state.folderId ? (invites[state.folderId] || MEMO_EMPTY_ARRAY) : undefined,\n      isRemoved: state.folderId !== undefined && !byId[state.folderId],\n      maxInviteLinks: selectCurrentLimit(global, 'chatlistInvites'),\n      maxChatLists: selectCurrentLimit(global, 'chatlistJoined'),\n      chatListCount,\n    };\n  },\n)(SettingsFoldersEdit));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { ALL_FOLDER_ID, STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { getFolderDescriptionText } from '../../../../global/helpers';\nimport { selectIsCurrentUserPremium } from '../../../../global/selectors';\nimport { selectCurrentLimit } from '../../../../global/selectors/limits';\nimport { isBetween } from '../../../../util/math';\nimport { MEMO_EMPTY_ARRAY } from '../../../../util/memo';\nimport { throttle } from '../../../../util/schedulers';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport { useFolderManagerForChatsCount } from '../../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../../hooks/usePreviousDeprecated';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Icon from '../../../common/icons/Icon';\nimport Button from '../../../ui/Button';\nimport Draggable from '../../../ui/Draggable';\nimport ListItem from '../../../ui/ListItem';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onCreateFolder: () => void;\n  onEditFolder: (folder: ApiChatFolder) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  folderIds?: number[];\n  foldersById: Record<number, ApiChatFolder>;\n  recommendedChatFolders?: ApiChatFolder[];\n  maxFolders: number;\n  isPremium?: boolean;\n};\n\ntype SortState = {\n  orderedFolderIds?: number[];\n  dragOrderIds?: number[];\n  draggedIndex?: number;\n};\n\nconst FOLDER_HEIGHT_PX = 56;\nconst runThrottledForLoadRecommended = throttle((cb) => cb(), 60000, true);\n\nconst SettingsFoldersMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  onCreateFolder,\n  onEditFolder,\n  onReset,\n  folderIds,\n  foldersById,\n  isPremium,\n  recommendedChatFolders,\n  maxFolders,\n}) => {\n  const {\n    loadRecommendedChatFolders,\n    addChatFolder,\n    openLimitReachedModal,\n    openDeleteChatFolderModal,\n    sortChatFolders,\n  } = getActions();\n\n  const [state, setState] = useState<SortState>({\n    orderedFolderIds: folderIds,\n    dragOrderIds: folderIds,\n    draggedIndex: undefined,\n  });\n\n  const prevFolderIds = usePreviousDeprecated(folderIds);\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevFolderIds !== folderIds) {\n      setState({\n        orderedFolderIds: folderIds,\n        dragOrderIds: folderIds,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevFolderIds, folderIds, state.orderedFolderIds?.length]);\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottledForLoadRecommended(() => {\n      loadRecommendedChatFolders();\n    });\n  }, [loadRecommendedChatFolders]);\n\n  const handleCreateFolder = useCallback(() => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    onCreateFolder();\n  }, [foldersById, maxFolders, onCreateFolder, openLimitReachedModal]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const chatsCountByFolderId = useFolderManagerForChatsCount();\n  const userFolders = useMemo(() => {\n    if (!folderIds) {\n      return undefined;\n    }\n\n    if (folderIds.length <= 1) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    return folderIds.map((id) => {\n      const folder = foldersById[id];\n\n      if (id === ALL_FOLDER_ID) {\n        return {\n          id,\n          title: {\n            text: lang('FilterAllChats'),\n            entities: [],\n          },\n        };\n      }\n\n      return {\n        id: folder.id,\n        title: folder.title,\n        subtitle: getFolderDescriptionText(lang, folder, chatsCountByFolderId[folder.id]),\n        isChatList: folder.isChatList,\n        noTitleAnimations: folder.noTitleAnimations,\n      };\n    });\n  }, [folderIds, foldersById, lang, chatsCountByFolderId]);\n\n  const handleCreateFolderFromRecommended = useCallback((folder: ApiChatFolder) => {\n    if (Object.keys(foldersById).length >= maxFolders - 1) {\n      openLimitReachedModal({\n        limit: 'dialogFilters',\n      });\n\n      return;\n    }\n\n    addChatFolder({ folder });\n  }, [foldersById, maxFolders, addChatFolder, openLimitReachedModal]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / FOLDER_HEIGHT_PX);\n    const index = state.orderedFolderIds?.indexOf(id as number) || 0;\n    const dragOrderIds = state.orderedFolderIds?.filter((folderId) => folderId !== id);\n\n    if (!dragOrderIds || !isBetween(index + delta, 0, folderIds?.length || 0)) {\n      return;\n    }\n\n    dragOrderIds.splice(index + delta + (isPremium ? 0 : 1), 0, id as number);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderIds,\n    }));\n  }, [folderIds?.length, isPremium, state.orderedFolderIds]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      sortChatFolders({ folderIds: current.dragOrderIds! });\n\n      return {\n        ...current,\n        orderedFolderIds: current.dragOrderIds,\n        draggedIndex: undefined,\n      };\n    });\n  }, [sortChatFolders]);\n\n  const canCreateNewFolder = useMemo(() => {\n    return !isPremium || Object.keys(foldersById).length < maxFolders - 1;\n  }, [foldersById, isPremium, maxFolders]);\n\n  return (\n    <div className=\"settings-content no-border custom-scroll\">\n      <div className=\"settings-content-header\">\n        <AnimatedIconWithPreview\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersAll}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('CreateNewFilterInfo')}\n        </p>\n\n        {canCreateNewFolder && (\n          <Button\n          // TODO: Refactor button component to handle icon placemenet with props\n            className=\"settings-button with-icon\"\n            color=\"primary\"\n            size=\"smaller\"\n            pill\n            fluid\n            onClick={handleCreateFolder}\n            isRtl={lang.isRtl}\n          >\n            <Icon name=\"add\" />\n            {lang('CreateNewFilter')}\n          </Button>\n        )}\n      </div>\n\n      <div className=\"settings-item pt-3\">\n        <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Filters')}</h4>\n\n        <div className=\"settings-sortable-container\" style={`height: ${(folderIds?.length || 0) * FOLDER_HEIGHT_PX}px`}>\n          {userFolders?.length ? userFolders.map((folder, i) => {\n            const isBlocked = i > maxFolders - 1;\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedFolderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n            const top = (state.dragOrderIds?.indexOf(folder.id) ?? 0) * FOLDER_HEIGHT_PX;\n\n            if (folder.id === ALL_FOLDER_ID) {\n              return (\n                <Draggable\n                  key={folder.id}\n                  id={folder.id}\n                  onDrag={handleDrag}\n                  onDragEnd={handleDragEnd}\n                  style={`top: ${isDragged ? draggedTop : top}px;`}\n                  knobStyle={`${lang.isRtl ? 'left' : 'right'}: 0.375rem;`}\n                  isDisabled={!isPremium || !isActive}\n                >\n                  <ListItem\n                    key={folder.id}\n                    className=\"drag-item no-icon settings-sortable-item\"\n                    narrow\n                    inactive\n                    multiline\n                    isStatic\n                    allowSelection\n                  >\n                    <span className=\"title\">\n                      {renderTextWithEntities({\n                        text: folder.title.text,\n                        entities: folder.title.entities,\n                        noCustomEmojiPlayback: folder.noTitleAnimations,\n                      })}\n                    </span>\n                    <span className=\"subtitle\">{lang('FoldersAllChatsDesc')}</span>\n                  </ListItem>\n                </Draggable>\n              );\n            }\n\n            return (\n              <Draggable\n                key={folder.id}\n                id={folder.id}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={isBlocked || !isActive}\n              >\n                <ListItem\n                  className=\"drag-item no-icon settings-sortable-item\"\n                  narrow\n                  secondaryIcon=\"more\"\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        openDeleteChatFolderModal({ folderId: folder.id });\n                      },\n                      destructive: true,\n                      title: lang('Delete'),\n                      icon: 'delete',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    if (isBlocked) {\n                      openLimitReachedModal({\n                        limit: 'dialogFilters',\n                      });\n                    } else {\n                      onEditFolder(foldersById[folder.id]);\n                    }\n                  }}\n                >\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                    {isBlocked && <Icon name=\"lock-badge\" className=\"settings-folders-blocked-icon\" />}\n                  </span>\n                  <span className=\"subtitle\">\n                    {folder.isChatList && <Icon name=\"link\" className=\"mr-1\" />}\n                    {folder.subtitle}\n                  </span>\n                </ListItem>\n              </Draggable>\n            );\n          }) : userFolders && !userFolders.length ? (\n            <p className=\"settings-item-description my-4\" dir=\"auto\">\n              You have no folders yet.\n            </p>\n          ) : <Loading />}\n        </div>\n      </div>\n\n      {(recommendedChatFolders && Boolean(recommendedChatFolders.length)) && (\n        <div className=\"settings-item pt-3\">\n          <h4 className=\"settings-item-header mb-3\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('FilterRecommended')}\n          </h4>\n\n          {recommendedChatFolders.map((folder) => (\n            <ListItem\n              narrow\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleCreateFolderFromRecommended(folder)}\n            >\n              <div className=\"settings-folders-recommended-item\">\n                <div className=\"multiline-item\">\n                  <span className=\"title\">\n                    {renderTextWithEntities({\n                      text: folder.title.text,\n                      entities: folder.title.entities,\n                      noCustomEmojiPlayback: folder.noTitleAnimations,\n                    })}\n                  </span>\n                  <span className=\"subtitle\">{folder.description}</span>\n                </div>\n\n                <Button\n                  className=\"px-3\"\n                  color=\"primary\"\n                  size=\"tiny\"\n                  pill\n                  fluid\n                  isRtl={lang.isRtl}\n                >\n                  {lang('Add')}\n                </Button>\n              </div>\n            </ListItem>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      orderedIds: folderIds,\n      byId: foldersById,\n      recommended: recommendedChatFolders,\n    } = global.chatFolders;\n\n    return {\n      folderIds,\n      foldersById,\n      isPremium: selectIsCurrentUserPremium(global),\n      recommendedChatFolders,\n      maxFolders: selectCurrentLimit(global, 'dialogFilters'),\n    };\n  },\n)(SettingsFoldersMain));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\n\nimport { STICKER_SIZE_FOLDER_SETTINGS } from '../../../../config';\nimport { isChatChannel, isUserBot } from '../../../../global/helpers';\nimport {\n  selectCanInviteToChat, selectChat,\n  selectChatFolder,\n  selectTabState, selectUser,\n} from '../../../../global/selectors';\nimport { partition } from '../../../../util/iteratees';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport { renderTextWithEntities } from '../../../common/helpers/renderTextWithEntities';\n\nimport useEffectWithPrevDeps from '../../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useLang from '../../../../hooks/useLang';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Icon from '../../../common/icons/Icon';\nimport LinkField from '../../../common/LinkField';\nimport PeerPicker from '../../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../../ui/FloatingActionButton';\nimport Spinner from '../../../ui/Spinner';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n};\n\ntype StateProps = {\n  folderId?: number;\n  folder?: ApiChatFolder;\n  peerIds?: string[];\n  url?: string;\n  isLoading?: boolean;\n};\n\nconst SettingsShareChatlist: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  folderId,\n  folder,\n  peerIds,\n  url,\n  isLoading,\n}) => {\n  const {\n    createChatlistInvite, deleteChatlistInvite, editChatlistInvite, showNotification,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isTouched, setIsTouched] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  useEffect(() => {\n    if (!isLoading) {\n      setIsTouched(false);\n    }\n  }, [isLoading]);\n\n  useEffect(() => {\n    if (!url && folderId && isActive) {\n      createChatlistInvite({ folderId });\n    }\n  }, [folderId, isActive, url]);\n\n  const handleRevoke = useLastCallback(() => {\n    if (!url || !folderId) return;\n\n    deleteChatlistInvite({ folderId, url });\n    onReset();\n  });\n\n  const itemIds = useMemo(() => {\n    return (folder?.includedChatIds || []).concat(folder?.pinnedChatIds || []);\n  }, [folder?.includedChatIds, folder?.pinnedChatIds]);\n\n  const [unlockedIds, lockedIds] = useMemo(() => {\n    const global = getGlobal();\n    return partition(itemIds, (id) => selectCanInviteToChat(global, id));\n  }, [itemIds]);\n\n  const [selectedIds, setSelectedIds] = useState<string[]>(peerIds || []);\n\n  const isFirstRenderRef = useRef(true);\n  useEffectWithPrevDeps(([prevUrl]) => {\n    if (prevUrl !== url) {\n      isFirstRenderRef.current = true;\n    }\n    if (!isFirstRenderRef.current) return;\n    isFirstRenderRef.current = false;\n    if (!url) {\n      setSelectedIds(unlockedIds);\n    } else if (peerIds) {\n      setSelectedIds(peerIds);\n    }\n  }, [url, unlockedIds, peerIds]);\n\n  const handleClickDisabled = useLastCallback((id: string) => {\n    const global = getGlobal();\n    const user = selectUser(global, id);\n    const chat = selectChat(global, id);\n    if (user && isUserBot(user)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableBot'),\n      });\n    } else if (user) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailableUser'),\n      });\n    } else if (chat && isChatChannel(chat)) {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicChannel'),\n      });\n    } else {\n      showNotification({\n        message: oldLang('FolderLinkScreen.AlertTextUnavailablePublicGroup'),\n      });\n    }\n  });\n\n  const handleSelectedIdsChange = useLastCallback((ids: string[]) => {\n    setSelectedIds(ids);\n    setIsTouched(true);\n  });\n\n  const handleSubmit = useLastCallback(() => {\n    if (!folderId || !url || !isTouched) return;\n    editChatlistInvite({ folderId, peerIds: selectedIds, url });\n  });\n\n  const chatsCount = selectedIds.length;\n  const isDisabled = !chatsCount || isLoading;\n\n  return (\n    <div className=\"settings-content no-border custom-scroll SettingsFoldersChatsPicker\">\n      <div className=\"settings-content-header\">\n        <AnimatedIcon\n          size={STICKER_SIZE_FOLDER_SETTINGS}\n          tgsUrl={LOCAL_TGS_URLS.FoldersShare}\n          className=\"settings-content-icon\"\n        />\n\n        {folder && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('FolderLinkTitleDescription', {\n              folder: renderTextWithEntities({\n                text: folder.title.text,\n                entities: folder.title.entities,\n                noCustomEmojiPlayback: folder.noTitleAnimations,\n              }),\n              chats: lang('FolderLinkTitleDescriptionChats', { count: chatsCount }, { pluralValue: chatsCount }),\n            }, {\n              withMarkdown: true,\n              withNodes: true,\n            })}\n          </p>\n        )}\n      </div>\n\n      <LinkField\n        className=\"settings-item\"\n        link={!url ? oldLang('Loading') : url}\n        withShare\n        onRevoke={handleRevoke}\n        isDisabled={!chatsCount || isTouched}\n      />\n\n      <div className=\"settings-item settings-item-picker\">\n        <PeerPicker\n          itemIds={itemIds}\n          lockedUnselectedIds={lockedIds}\n          onSelectedIdsChange={handleSelectedIdsChange}\n          selectedIds={selectedIds}\n          onDisabledClick={handleClickDisabled}\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n        />\n      </div>\n\n      <FloatingActionButton\n        isShown={isLoading || isTouched}\n        disabled={isDisabled}\n        onClick={handleSubmit}\n        ariaLabel=\"Save changes\"\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { folderId, url, isLoading } = selectTabState(global).shareFolderScreen || {};\n    const folder = folderId ? selectChatFolder(global, folderId) : undefined;\n    const invite = folderId ? global.chatFolders.invites[folderId]?.find((i) => i.url === url) : undefined;\n\n    return {\n      folderId,\n      folder,\n      url,\n      isLoading,\n      peerIds: invite?.peerIds,\n    };\n  },\n)(SettingsShareChatlist));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions } from '../../../../global';\n\nimport type { ApiChatFolder } from '../../../../api/types';\nimport type { FolderEditDispatch, FoldersState } from '../../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport { selectChatFilters } from '../../../../hooks/reducers/useFoldersReducer';\n\nimport SettingsFoldersChatFilters from './SettingsFoldersChatFilters';\nimport SettingsFoldersEdit, { ERROR_NO_CHATS, ERROR_NO_TITLE } from './SettingsFoldersEdit';\nimport SettingsFoldersMain from './SettingsFoldersMain';\nimport SettingsShareChatlist from './SettingsShareChatlist';\n\nimport './SettingsFolders.scss';\n\nconst TRANSITION_DURATION = 200;\n\nexport type OwnProps = {\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  state: FoldersState;\n  dispatch: FolderEditDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsFolders: FC<OwnProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    openShareChatFolderModal,\n    editChatFolder,\n    addChatFolder,\n  } = getActions();\n\n  const handleReset = useCallback(() => {\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        dispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (state.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  }, [\n    state.mode, dispatch,\n    currentScreen, onReset, onScreenSelect,\n  ]);\n\n  const isCreating = state.mode === 'create';\n\n  const saveState = useCallback((newState: FoldersState) => {\n    const { title } = newState.folder;\n\n    if (!title) {\n      dispatch({ type: 'setError', payload: ERROR_NO_TITLE });\n      return false;\n    }\n\n    const {\n      selectedChatIds: includedChatIds,\n      selectedChatTypes: includedChatTypes,\n    } = selectChatFilters(newState, 'included');\n\n    if (!includedChatIds.length && !Object.keys(includedChatTypes).length) {\n      dispatch({ type: 'setError', payload: ERROR_NO_CHATS });\n      return false;\n    }\n\n    if (!isCreating) {\n      editChatFolder({ id: newState.folderId!, folderUpdate: newState.folder });\n    } else {\n      addChatFolder({ folder: newState.folder as ApiChatFolder });\n    }\n\n    dispatch({ type: 'setError', payload: undefined });\n    dispatch({ type: 'setIsTouched', payload: false });\n\n    return true;\n  }, [dispatch, isCreating]);\n\n  const handleSaveFolder = useCallback((cb?: NoneToVoidFunction) => {\n    if (!saveState(state)) {\n      return;\n    }\n    cb?.();\n  }, [saveState, state]);\n\n  const handleSaveFilter = useCallback(() => {\n    const newState = dispatch({ type: 'saveFilters' });\n    handleReset();\n    saveState(newState);\n  }, [dispatch, handleReset, saveState]);\n\n  const handleCreateFolder = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.FoldersCreateFolder);\n  }, [onScreenSelect, dispatch]);\n\n  const handleEditFolder = useCallback((folder: ApiChatFolder) => {\n    dispatch({ type: 'editFolder', payload: folder });\n    onScreenSelect(SettingsScreens.FoldersEditFolder);\n  }, [dispatch, onScreenSelect]);\n\n  const handleAddIncludedChats = useCallback(() => {\n    dispatch({ type: 'editIncludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersIncludedChatsFromChatList\n      : SettingsScreens.FoldersIncludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleAddExcludedChats = useCallback(() => {\n    dispatch({ type: 'editExcludeFilters' });\n    onScreenSelect(currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      ? SettingsScreens.FoldersExcludedChatsFromChatList\n      : SettingsScreens.FoldersExcludedChats);\n  }, [currentScreen, dispatch, onScreenSelect]);\n\n  const handleShareFolder = useCallback(() => {\n    openShareChatFolderModal({ folderId: state.folderId!, noRequestNextScreen: true });\n    dispatch({ type: 'setIsChatlist', payload: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [dispatch, onScreenSelect, state.folderId]);\n\n  const handleOpenInvite = useCallback((url: string) => {\n    openShareChatFolderModal({ folderId: state.folderId!, url, noRequestNextScreen: true });\n    onScreenSelect(SettingsScreens.FoldersShare);\n  }, [onScreenSelect, state.folderId]);\n\n  switch (currentScreen) {\n    case SettingsScreens.Folders:\n      return (\n        <SettingsFoldersMain\n          onCreateFolder={handleCreateFolder}\n          onEditFolder={handleEditFolder}\n          isActive={isActive || [\n            SettingsScreens.FoldersCreateFolder,\n            SettingsScreens.FoldersEditFolder,\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n    case SettingsScreens.FoldersCreateFolder:\n    case SettingsScreens.FoldersEditFolder:\n    case SettingsScreens.FoldersEditFolderFromChatList:\n    case SettingsScreens.FoldersEditFolderInvites:\n      return (\n        <SettingsFoldersEdit\n          state={state}\n          dispatch={dispatch}\n          onAddIncludedChats={handleAddIncludedChats}\n          onAddExcludedChats={handleAddExcludedChats}\n          onShareFolder={handleShareFolder}\n          onOpenInvite={handleOpenInvite}\n          onReset={handleReset}\n          isActive={isActive || [\n            SettingsScreens.FoldersIncludedChats,\n            SettingsScreens.FoldersExcludedChats,\n          ].includes(shownScreen)}\n          isOnlyInvites={currentScreen === SettingsScreens.FoldersEditFolderInvites}\n          onBack={onReset}\n          onSaveFolder={handleSaveFolder}\n        />\n      );\n    case SettingsScreens.FoldersIncludedChats:\n    case SettingsScreens.FoldersIncludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"included\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n    case SettingsScreens.FoldersExcludedChats:\n    case SettingsScreens.FoldersExcludedChatsFromChatList:\n      return (\n        <SettingsFoldersChatFilters\n          mode=\"excluded\"\n          state={state}\n          dispatch={dispatch}\n          onReset={handleReset}\n          onSaveFilter={handleSaveFilter}\n          isActive={isActive}\n        />\n      );\n\n    case SettingsScreens.FoldersShare:\n      return (\n        <SettingsShareChatlist\n          isActive={isActive}\n          onReset={handleReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(SettingsFolders);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport PasswordForm from '../../common/PasswordForm';\nimport PasswordMonkey from '../../common/PasswordMonkey';\n\ntype OwnProps = {\n  error?: string;\n  isLoading?: boolean;\n  shouldDisablePasswordManager?: boolean;\n  expectedPassword?: string;\n  placeholder?: string;\n  hint?: string;\n  submitLabel?: string;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (password: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst EQUAL_PASSWORD_ERROR = 'Passwords Should Be Equal';\n\nconst SettingsPasswordForm: FC<OwnProps> = ({\n  isActive,\n  onReset,\n  error,\n  isLoading,\n  shouldDisablePasswordManager,\n  expectedPassword,\n  placeholder = 'Current Password',\n  hint,\n  submitLabel,\n  clearError,\n  onSubmit,\n}) => {\n  const [validationError, setValidationError] = useState<string>('');\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n\n  const handleSubmit = useCallback((newPassword) => {\n    if (expectedPassword && newPassword !== expectedPassword) {\n      setValidationError(EQUAL_PASSWORD_ERROR);\n    } else {\n      onSubmit(newPassword);\n    }\n  }, [onSubmit, expectedPassword]);\n\n  const handleClearError = useCallback(() => {\n    if (clearError) {\n      clearError();\n    }\n    setValidationError('');\n  }, [clearError]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content password-form custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <PasswordForm\n          error={validationError || error}\n          hint={hint}\n          placeholder={placeholder}\n          shouldDisablePasswordManager={shouldDisablePasswordManager}\n          submitLabel={submitLabel || lang('Next')}\n          clearError={handleClearError}\n          isLoading={isLoading}\n          isPasswordVisible={shouldShowPassword}\n          shouldResetValue={isActive}\n          onChangePasswordVisibility={setShouldShowPassword}\n          onSubmit={handleSubmit}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasswordForm);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\nconst SettingsPasscodeCongratulations: FC<OwnProps> = ({\n  isActive, onReset,\n}) => {\n  const lang = useOldLang();\n\n  const fullReset = useCallback(() => {\n    onReset(true);\n  }, [onReset]);\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_PASSCODE}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Congratulations!\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Now you can lock the app with a passcode so that others can&apos;t open it.\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={fullReset}>{lang('Back')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Local passcode is enabled.\n        </p>\n      </div>\n\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeChangePasscodeCurrent)}\n        >\n          {lang('Passcode.Change')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PasscodeTurnOff)}\n        >\n          {lang('Passcode.TurnOff')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { STICKER_SIZE_PASSCODE } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsPasscodeStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({ isActive, onBack: onReset });\n\n  return (\n    <div className=\"settings-content local-passcode custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={STICKER_SIZE_PASSCODE}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description\" dir=\"auto\">\n          When you set up an additional passcode, a lock icon will appear on the chats page.\n          Tap it to lock and unlock your Telegram Web A.\n        </p>\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          Note: if you forget your local passcode, you&apos;ll need to log out of Telegram Web A and log in again.\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={onStart}>{lang('EnablePasscode')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsPasscodeStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport { SettingsScreens } from '../../../../types';\n\nimport { decryptSession } from '../../../../util/passcode';\n\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsPasscodeForm from '../SettingsPasswordForm';\nimport SettingsPasscodeCongratulations from './SettingsPasscodeCongratulations';\nimport SettingsPasscodeEnabled from './SettingsPasscodeEnabled';\nimport SettingsPasscodeStart from './SettingsPasscodeStart';\n\nexport type OwnProps = {\n  passcode: string;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  isActive?: boolean;\n  onSetPasscode: (passcode: string) => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['passcode'];\n\nconst SettingsPasscode: FC<OwnProps & StateProps> = ({\n  passcode,\n  currentScreen,\n  shownScreen,\n  error,\n  isActive,\n  isLoading,\n  onScreenSelect,\n  onSetPasscode,\n  onReset,\n}) => {\n  const {\n    setPasscode,\n    clearPasscode,\n    setPasscodeError,\n    clearPasscodeError,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const handleStartWizard = useCallback(() => {\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeNewPasscode);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeNewPasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    setPasscode({ passcode });\n    onSetPasscode('');\n    onScreenSelect(SettingsScreens.PasscodeCongratulations);\n  }, [onScreenSelect, onSetPasscode, passcode, setPasscode]);\n\n  const handleChangePasswordCurrent = useCallback((currentPasscode: string) => {\n    onSetPasscode('');\n    decryptSession(currentPasscode).then(() => {\n      onScreenSelect(SettingsScreens.PasscodeChangePasscodeNew);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [lang, onScreenSelect, onSetPasscode, setPasscodeError]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    onSetPasscode(value);\n    onScreenSelect(SettingsScreens.PasscodeChangePasscodeConfirm);\n  }, [onScreenSelect, onSetPasscode]);\n\n  const handleTurnOff = useCallback((currentPasscode: string) => {\n    decryptSession(currentPasscode).then(() => {\n      clearPasscode();\n      onScreenSelect(SettingsScreens.Privacy);\n    }, () => {\n      setPasscodeError({\n        error: lang('PasscodeController.Error.Current'),\n      });\n    });\n  }, [clearPasscode, lang, onScreenSelect, setPasscodeError]);\n\n  switch (currentScreen) {\n    case SettingsScreens.PasscodeDisabled:\n      return (\n        <SettingsPasscodeStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscode,\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscode:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('EnterNewPasscode')}\n          submitLabel={lang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.PasscodeNewPasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeNewPasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('ReEnterYourPasscode')}\n          submitLabel={lang('Continue')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeCongratulations:\n      return (\n        <SettingsPasscodeCongratulations\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeEnabled:\n      return (\n        <SettingsPasscodeEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeCurrent,\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n            SettingsScreens.PasscodeTurnOff,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeCurrent:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeNew,\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeNew:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          placeholder={lang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.PasscodeChangePasscodeConfirm,\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeChangePasscodeConfirm:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          expectedPassword={passcode}\n          placeholder={lang('PasscodeController.ReEnterPasscode.Placeholder')}\n          isLoading={isLoading}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.PasscodeCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.PasscodeTurnOff:\n      return (\n        <SettingsPasscodeForm\n          shouldDisablePasswordManager\n          error={error ? lang(error) : undefined}\n          clearError={clearPasscodeError}\n          placeholder={lang('PasscodeController.Current.Placeholder')}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.passcode }),\n)(SettingsPasscode));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPremiumSection } from '../../../api/types';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  premiumSection?: ApiPremiumSection;\n};\n\nfunction PremiumStatusItem({ premiumSection }: OwnProps) {\n  const { openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const handleOpenPremiumModal = useLastCallback(() => openPremiumModal({ initialSection: premiumSection }));\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n        onClick={handleOpenPremiumModal}\n      >\n        {lang('PrivacyLastSeenPremium')}\n      </ListItem>\n      <p\n        className=\"settings-item-description-larger premium-info\"\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {lang('lng_messages_privacy_premium_about')}\n      </p>\n    </div>\n  );\n}\n\nexport default memo(PremiumStatusItem);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './PrivacyLockedOption.module.scss';\n\ntype OwnProps = {\n  label: string;\n  isChecked?: boolean;\n};\n\nfunction PrivacyLockedOption({ label, isChecked }: OwnProps) {\n  const lang = useOldLang();\n  const { showNotification } = getActions();\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        isChecked && styles.checked,\n      )}\n      onClick={() => showNotification({ message: lang('OptionPremiumRequiredMessage') })}\n    >\n      <span>{label}</span>\n      <Icon name=\"lock-badge\" className={styles.lockIcon} />\n    </div>\n  );\n}\n\nexport default memo(PrivacyLockedOption);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"sBptmiga\",\"lock-icon\":\"jWxrRbkh\",\"lockIcon\":\"jWxrRbkh\",\"checked\":\"U_6O1ebL\"};","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport {\n  DEFAULT_CHARGE_FOR_MESSAGES,\n  DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES,\n  MINIMUM_CHARGE_FOR_MESSAGES,\n} from '../../../config';\nimport {\n  selectIsCurrentUserPremium,\n  selectNewNoncontactPeersRequirePremium,\n  selectNonContactPeersPaidStars,\n} from '../../../global/selectors';\nimport { formatCurrencyAsString } from '../../../util/formatCurrency';\nimport { formatStarsAsText } from '../../../util/localization/format';\n\nimport useDebouncedCallback from '../../../hooks/useDebouncedCallback';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: VoidFunction;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  shouldChargeForMessages?: boolean;\n  canLimitNewMessagesWithoutPremium?: boolean;\n  canChargeForMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  starsUsdWithdrawRate: number;\n  starsPaidMessageCommissionPermille: number;\n  starsPaidMessageAmountMax?: number;\n  nonContactPeersPaidStars: number;\n  noPaidReactionsForUsersCount: number;\n};\n\nfunction PrivacyMessages({\n  isActive,\n  canLimitNewMessagesWithoutPremium,\n  canChargeForMessages,\n  shouldNewNonContactPeersRequirePremium,\n  shouldChargeForMessages,\n  nonContactPeersPaidStars,\n  isCurrentUserPremium,\n  starsPaidMessageCommissionPermille,\n  starsPaidMessageAmountMax,\n  starsUsdWithdrawRate,\n  noPaidReactionsForUsersCount,\n  onReset,\n  onScreenSelect,\n}: OwnProps & StateProps) {\n  const { updateGlobalPrivacySettings } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const canChangeForContactsAndPremium = isCurrentUserPremium || canLimitNewMessagesWithoutPremium;\n  const canChangeChargeForMessages = isCurrentUserPremium && canChargeForMessages;\n  const [chargeForMessages, setChargeForMessages] = useState<number>(nonContactPeersPaidStars);\n\n  const selectedValue = useMemo(() => {\n    if (shouldChargeForMessages) return 'charge_for_messages';\n    if (shouldNewNonContactPeersRequirePremium) return 'contacts_and_premium';\n    return 'everybody';\n  }, [shouldChargeForMessages, shouldNewNonContactPeersRequirePremium]);\n\n  const options = useMemo(() => {\n    return [\n      { value: 'everybody', label: oldLang('P2PEverybody') },\n      {\n        value: 'contacts_and_premium',\n        label: canChangeForContactsAndPremium ? (\n          oldLang('PrivacyMessagesContactsAndPremium')\n        ) : (\n          <PrivacyLockedOption\n            label={oldLang('PrivacyMessagesContactsAndPremium')}\n            isChecked={selectedValue === 'contacts_and_premium'}\n          />\n        ),\n        hidden: !canChangeForContactsAndPremium,\n        isCanCheckedInDisabled: true,\n      },\n      {\n        value: 'charge_for_messages',\n        label: canChangeChargeForMessages ? (\n          lang('PrivacyChargeForMessages')\n        ) : (\n          <PrivacyLockedOption\n            label={lang('PrivacyChargeForMessages')}\n            isChecked={selectedValue === 'charge_for_messages'}\n          />\n        ),\n        hidden: !canChangeChargeForMessages,\n        isCanCheckedInDisabled: true,\n      },\n    ];\n  }, [oldLang, lang, canChangeForContactsAndPremium, canChangeChargeForMessages, selectedValue]);\n\n  const handleChange = useLastCallback((privacy: string) => {\n    updateGlobalPrivacySettings({\n      shouldNewNonContactPeersRequirePremium: privacy === 'contacts_and_premium',\n      // eslint-disable-next-line no-null/no-null\n      nonContactPeersPaidStars: privacy === 'charge_for_messages' ? chargeForMessages : null,\n    });\n  });\n\n  const updateGlobalPrivacySettingsWithDebounced = useDebouncedCallback((value: number) => {\n    updateGlobalPrivacySettings({\n      nonContactPeersPaidStars: value,\n    });\n  }, [updateGlobalPrivacySettings], 300, true);\n\n  const handleChargeForMessagesChange = useCallback((value: number) => {\n    setChargeForMessages(value);\n    updateGlobalPrivacySettingsWithDebounced(value);\n  }, [setChargeForMessages, updateGlobalPrivacySettingsWithDebounced]);\n\n  const renderValueForStarsRange = useCallback((value: number) => {\n    return (\n      <span className=\"settings-range-value\">\n        {!canChangeChargeForMessages && (<Icon name=\"lock-badge\" />)}\n        {formatStarsAsText(lang, value)}\n      </span>\n    );\n  }, [lang, canChangeChargeForMessages]);\n\n  function renderSectionStarsAmountForPaidMessages() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {lang('SectionTitleStarsForForMessages')}\n        </h4>\n        <RangeSlider\n          isCenteredLayout\n          min={MINIMUM_CHARGE_FOR_MESSAGES}\n          max={starsPaidMessageAmountMax}\n          value={chargeForMessages}\n          onChange={handleChargeForMessagesChange}\n          renderValue={renderValueForStarsRange}\n          readOnly={!canChangeChargeForMessages}\n        />\n        <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {lang('SectionDescriptionStarsForForMessages', {\n            percent: starsPaidMessageCommissionPermille * 100,\n            amount: formatCurrencyAsString(\n              chargeForMessages * starsUsdWithdrawRate * starsPaidMessageCommissionPermille,\n              'USD',\n              lang.code,\n\n            ),\n          }, {\n            withNodes: true,\n          })}\n        </p>\n      </div>\n    );\n  }\n\n  function renderSectionNoPaidMessagesForUsers() {\n    const itemSubtitle = !noPaidReactionsForUsersCount ? lang('SubtitlePrivacyAddUsers')\n      : oldLang('Users', noPaidReactionsForUsersCount, 'i');\n\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {lang('RemoveFeeTitle')}\n        </h4>\n        <ListItem\n          narrow\n          icon=\"delete-user\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => {\n            onScreenSelect(SettingsScreens.PrivacyNoPaidMessages);\n          }}\n        >\n          <div className=\"multiline-item full-size\">\n            <span className=\"title\">{lang('ExceptionTitlePrivacyChargeForMessages')}</span>\n            <span className=\"subtitle\">{\n              itemSubtitle\n            }\n            </span>\n          </div>\n        </ListItem>\n      </div>\n    );\n  }\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const privacyDescription = useMemo(() => {\n    if (shouldChargeForMessages) return lang('PrivacyDescriptionChargeForMessages');\n    return lang('PrivacyDescriptionMessagesContactsAndPremium');\n  }, [shouldChargeForMessages, lang]);\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {oldLang('PrivacyMessagesTitle')}\n        </h4>\n        <RadioGroup\n          name=\"privacy-messages\"\n          options={options}\n          onChange={handleChange}\n          selected={selectedValue}\n        />\n        <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {privacyDescription}\n        </p>\n      </div>\n      {selectedValue === 'charge_for_messages' && renderSectionStarsAmountForPaidMessages()}\n      {canChangeChargeForMessages && selectedValue === 'charge_for_messages' && renderSectionNoPaidMessagesForUsers()}\n      {!isCurrentUserPremium && <PremiumStatusItem premiumSection=\"message_privacy\" />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const nonContactPeersPaidStars = selectNonContactPeersPaidStars(global);\n\n  const starsUsdWithdrawRateX1000 = global.appConfig?.starsUsdWithdrawRateX1000;\n  const starsUsdWithdrawRate = starsUsdWithdrawRateX1000 ? starsUsdWithdrawRateX1000 / 1000 : 1;\n  const configStarsPaidMessageCommissionPermille = global.appConfig?.starsPaidMessageCommissionPermille;\n  const starsPaidMessageCommissionPermille = configStarsPaidMessageCommissionPermille\n    ? configStarsPaidMessageCommissionPermille / 1000 : 100;\n\n  const noPaidReactionsForUsersCount = global.settings.privacy.noPaidMessages?.allowUserIds.length || 0;\n\n  return {\n    shouldNewNonContactPeersRequirePremium: selectNewNoncontactPeersRequirePremium(global),\n    shouldChargeForMessages: Boolean(nonContactPeersPaidStars),\n    nonContactPeersPaidStars: nonContactPeersPaidStars || DEFAULT_CHARGE_FOR_MESSAGES,\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    canLimitNewMessagesWithoutPremium: global.appConfig?.canLimitNewMessagesWithoutPremium,\n    canChargeForMessages: global.appConfig?.starsPaidMessagesAvailable,\n    starsPaidMessageAmountMax: global.appConfig?.starsPaidMessageAmountMax || DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES,\n    starsPaidMessageCommissionPermille,\n    starsUsdWithdrawRate,\n    noPaidReactionsForUsersCount,\n  };\n})(PrivacyMessages));\n","import type { ApiSession } from '../../../../api/types';\nimport type { DeviceType } from '../../../../types/icons/device';\n\nexport default function getSessionIcon(session: ApiSession): DeviceType {\n  const platform = session.platform.toLowerCase();\n  const device = session.deviceModel.toLowerCase();\n  const systemVersion = session.systemVersion.toLowerCase();\n\n  if (device.includes('xbox')) {\n    return 'xbox';\n  }\n\n  if (device.includes('chrome') && !device.includes('chromebook')) {\n    return 'chrome';\n  }\n  if (device.includes('brave')) {\n    return 'brave';\n  }\n  if (device.includes('vivaldi')) {\n    return 'vivaldi';\n  }\n  if (device.includes('safari')) {\n    return 'safari';\n  }\n  if (device.includes('firefox')) {\n    return 'firefox';\n  }\n  if (device.includes('opera')) {\n    return 'opera';\n  }\n  if (device.includes('samsungbrowser')) {\n    return 'samsung';\n  }\n  if (platform.includes('android')) {\n    return 'android';\n  }\n  if (\n    device.includes('iphone')\n    || device.includes('ipad')\n    || platform.includes('ios')\n    || platform.includes('macos')\n    || systemVersion.includes('macos')\n  ) {\n    return 'apple';\n  }\n  if (platform.includes('ubuntu') || systemVersion.includes('ubuntu')) {\n    return 'ubuntu';\n  }\n  if (platform.includes('linux') || systemVersion.includes('linux')) {\n    return 'linux';\n  }\n  if (platform.includes('windows') || systemVersion.includes('windows')) {\n    return 'windows';\n  }\n\n  return 'unknown';\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SettingsActiveSession\":\"M84mrPgu\",\"settingsActiveSession\":\"M84mrPgu\",\"iconDevice\":\"Add8P_K4\",\"iconDevice__android\":\"onkXVGY4\",\"iconDeviceAndroid\":\"onkXVGY4\",\"iconDevice__apple\":\"xw13aT8u\",\"iconDeviceApple\":\"xw13aT8u\",\"iconDevice__brave\":\"HESrGUdv\",\"iconDeviceBrave\":\"HESrGUdv\",\"iconDevice__chrome\":\"Vpej7wm7\",\"iconDeviceChrome\":\"Vpej7wm7\",\"iconDevice__edge\":\"ueWE77x9\",\"iconDeviceEdge\":\"ueWE77x9\",\"iconDevice__firefox\":\"_lMTmvya\",\"iconDeviceFirefox\":\"_lMTmvya\",\"iconDevice__linux\":\"cDVfvyG_\",\"iconDeviceLinux\":\"cDVfvyG_\",\"iconDevice__opera\":\"nWqlTxZt\",\"iconDeviceOpera\":\"nWqlTxZt\",\"iconDevice__safari\":\"ldFLp1Gf\",\"iconDeviceSafari\":\"ldFLp1Gf\",\"iconDevice__samsung\":\"VHNORBGL\",\"iconDeviceSamsung\":\"VHNORBGL\",\"iconDevice__ubuntu\":\"QBVivtdu\",\"iconDeviceUbuntu\":\"QBVivtdu\",\"iconDevice__unknown\":\"GbjIgrwU\",\"iconDeviceUnknown\":\"GbjIgrwU\",\"iconDevice__vivaldi\":\"yieVnjoI\",\"iconDeviceVivaldi\":\"yieVnjoI\",\"iconDevice__windows\":\"_0dnTFOE\",\"iconDeviceWindows\":\"_0dnTFOE\",\"iconDevice__xbox\":\"fbCjjDpU\",\"iconDeviceXbox\":\"fbCjjDpU\",\"title\":\"c6edjhlh\",\"note\":\"lRqTZAYn\",\"date\":\"oLnN6crs\",\"box\":\"wVEXuPlZ\",\"actionHeader\":\"olQS2T1n\",\"actionName\":\"KuX1APpO\",\"headerButton\":\"VT8pZfMu\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Switcher from '../../ui/Switcher';\n\nimport styles from './SettingsActiveSession.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiSession;\n};\n\nconst SettingsActiveSession: FC<OwnProps & StateProps> = ({\n  isOpen, session, onClose,\n}) => {\n  const { changeSessionSettings, terminateAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n\n  const handleSecretChatsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areSecretChatsEnabled: !session!.areSecretChatsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleCallsStateChange = useCallback(() => {\n    changeSessionSettings({\n      hash: session!.hash,\n      areCallsEnabled: !session!.areCallsEnabled,\n    });\n  }, [changeSessionSettings, session]);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('SessionPreview.Title')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('SessionPreview.TerminateSession')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.SettingsActiveSession}\n    >\n      <div className={buildClassName(\n        styles.iconDevice,\n        renderingSession && styles[`iconDevice__${getSessionIcon(renderingSession)}`],\n      )}\n      />\n      <h3 className={styles.title} dir=\"auto\">{renderingSession?.deviceModel}</h3>\n      <div className={styles.date} aria-label={lang('PrivacySettings.LastSeen')}>\n        {formatDateTimeToString(renderingSession.dateActive * 1000, lang.code)}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('SessionPreview.App')}</dt>\n        <dd>\n          {renderingSession?.appName} {renderingSession?.appVersion},{' '}\n          {renderingSession?.platform} {renderingSession?.systemVersion}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession && getLocation(renderingSession)}</dd>\n      </dl>\n\n      <p className={styles.note}>{lang('SessionPreview.IpDesc')}</p>\n\n      <h4 className={styles.actionHeader}>{lang('AuthSessions.View.AcceptTitle')}</h4>\n\n      <ListItem onClick={handleSecretChatsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Secret')}</span>\n        <Switcher\n          id=\"accept_secrets\"\n          label=\"On\"\n          checked={renderingSession.areSecretChatsEnabled}\n        />\n      </ListItem>\n      <ListItem onClick={handleCallsStateChange}>\n        <span className={styles.actionName}>{lang('SessionPreview.Accept.Calls')}</span>\n        <Switcher\n          id=\"accept_calls\"\n          label=\"On\"\n          checked={renderingSession.areCallsEnabled}\n        />\n      </ListItem>\n    </Modal>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>((global, { hash }) => {\n  return {\n    session: hash ? global.activeSessions.byHash[hash] : undefined,\n  };\n})(SettingsActiveSession));\n","/* eslint-disable react/jsx-no-bind */\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSession } from '../../../api/types';\n\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\nimport getSessionIcon from './helpers/getSessionIcon';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport SettingsActiveSession from './SettingsActiveSession';\n\nimport './SettingsActiveSessions.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiSession>;\n  orderedHashes: string[];\n  ttlDays?: number;\n};\n\nconst SettingsActiveSessions: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  byHash,\n  orderedHashes,\n  ttlDays,\n}) => {\n  const {\n    terminateAuthorization,\n    terminateAllAuthorizations,\n    changeSessionTtl,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedSessionHash, setOpenedSessionHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const autoTerminateValue = useMemo(() => {\n    // eslint-disable-next-line max-len\n    // https://github.com/DrKLO/Telegram/blob/96dce2c9aabc33b87db61d830aa087b6b03fe397/TMessagesProj/src/main/java/org/telegram/ui/SessionsActivity.java#L195\n    if (ttlDays === undefined) {\n      return undefined;\n    }\n\n    if (ttlDays <= 7) {\n      return '7';\n    }\n\n    if (ttlDays <= 30) {\n      return '30';\n    }\n\n    if (ttlDays <= 93) {\n      return '90';\n    }\n\n    if (ttlDays <= 183) {\n      return '183';\n    }\n\n    if (ttlDays > 183) {\n      return '365';\n    }\n\n    return undefined;\n  }, [ttlDays]);\n\n  const AUTO_TERMINATE_OPTIONS = useMemo(() => {\n    const options = [{\n      label: lang('Weeks', 1, 'i'),\n      value: '7',\n    }, {\n      label: lang('Months', 1, 'i'),\n      value: '30',\n    }, {\n      label: lang('Months', 3, 'i'),\n      value: '90',\n    }, {\n      label: lang('Months', 6, 'i'),\n      value: '183',\n    }];\n    if (ttlDays && ttlDays >= 365) {\n      options.push({\n        label: lang('Years', 1, 'i'),\n        value: '365',\n      });\n    }\n    return options;\n  }, [lang, ttlDays]);\n\n  const handleTerminateSessionClick = useCallback((hash: string) => {\n    terminateAuthorization({ hash });\n  }, [terminateAuthorization]);\n\n  const handleTerminateAllSessions = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedSessionHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseSessionModal = useCallback(() => {\n    setOpenedSessionHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  const handleChangeSessionTtl = useCallback((value: string) => {\n    changeSessionTtl({ days: Number(value) });\n  }, [changeSessionTtl]);\n\n  const currentSession = useMemo(() => {\n    const currentSessionHash = orderedHashes.find((hash) => byHash[hash].isCurrent);\n\n    return currentSessionHash ? byHash[currentSessionHash] : undefined;\n  }, [byHash, orderedHashes]);\n\n  const otherSessionHashes = useMemo(() => {\n    return orderedHashes.filter((hash) => !byHash[hash].isCurrent);\n  }, [byHash, orderedHashes]);\n  const hasOtherSessions = Boolean(otherSessionHashes.length);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderCurrentSession(session: ApiSession) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AuthSessions.CurrentSession')}\n        </h4>\n\n        <ListItem narrow inactive icon={`device-${getSessionIcon(session)}`} iconClassName=\"icon-device\">\n          <div className=\"multiline-item full-size\" dir=\"auto\">\n            <span className=\"title\" dir=\"auto\">{session.deviceModel}</span>\n            <span className=\"subtitle black tight\">\n              {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n            </span>\n            <span className=\"subtitle\">{session.ip} - {getLocation(session)}</span>\n          </div>\n        </ListItem>\n\n        {hasOtherSessions && (\n          <ListItem\n            className=\"destructive mb-0 no-icon\"\n            icon=\"stop\"\n            ripple\n            narrow\n            onClick={openConfirmTerminateAllDialog}\n          >\n            {lang('TerminateAllSessions')}\n          </ListItem>\n        )}\n      </div>\n    );\n  }\n\n  function renderOtherSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('OtherSessions')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderAutoTerminate() {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('TerminateOldSessionHeader')}\n        </h4>\n\n        <p className=\"settings-item-description-larger\">{lang('IfInactiveFor')}</p>\n        <RadioGroup\n          name=\"session_ttl\"\n          options={AUTO_TERMINATE_OPTIONS}\n          selected={autoTerminateValue}\n          onChange={handleChangeSessionTtl}\n        />\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateSessionClick(session.hash);\n          },\n        }]}\n        icon={`device-${getSessionIcon(session)}`}\n        iconClassName=\"icon-device\"\n        onClick={() => { handleOpenSessionModal(session.hash); }}\n      >\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          <span className=\"title\">{session.deviceModel}</span>\n          <span className=\"subtitle black tight\">\n            {session.appName} {session.appVersion}, {session.platform} {session.systemVersion}\n          </span>\n          <span className=\"subtitle\">{session.ip} {getLocation(session)}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll SettingsActiveSessions\">\n      {currentSession && renderCurrentSession(currentSession)}\n      {hasOtherSessions && renderOtherSessions(otherSessionHashes)}\n      {renderAutoTerminate()}\n      {hasOtherSessions && (\n        <ConfirmDialog\n          isOpen={isConfirmTerminateAllDialogOpen}\n          onClose={closeConfirmTerminateAllDialog}\n          text={lang('AreYouSureSessions')}\n          confirmLabel={lang('TerminateAllSessions')}\n          confirmHandler={handleTerminateAllSessions}\n          confirmIsDestructive\n          areButtonsInColumn\n        />\n      )}\n      <SettingsActiveSession isOpen={isModalOpen} hash={openedSessionHash} onClose={handleCloseSessionModal} />\n    </div>\n  );\n};\n\nfunction getLocation(session: ApiSession) {\n  return [session.region, session.country].filter(Boolean).join(', ');\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => global.activeSessions,\n)(SettingsActiveSessions));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Wd0fmiSY\",\"avatar\":\"OhZHdRsP\",\"title\":\"EQ7__xGn\",\"note\":\"YRYk96ki\",\"box\":\"kmCTIfvf\",\"action-header\":\"qkq5Fa0V\",\"actionHeader\":\"qkq5Fa0V\",\"action-name\":\"zFYUiy13\",\"actionName\":\"zFYUiy13\",\"header-button\":\"lUf0RJ2h\",\"headerButton\":\"lUf0RJ2h\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './SettingsActiveWebsite.module.scss';\n\ntype OwnProps = {\n  isOpen: boolean;\n  hash?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  session?: ApiWebSession;\n  bot?: ApiUser;\n};\n\nconst SettingsActiveWebsite: FC<OwnProps & StateProps> = ({\n  isOpen,\n  session,\n  bot,\n  onClose,\n}) => {\n  const { terminateWebAuthorization } = getActions();\n  const lang = useOldLang();\n\n  const renderingSession = useCurrentOrPrev(session, true);\n  const renderingBot = useCurrentOrPrev(bot, true);\n\n  const handleTerminateSessionClick = useCallback(() => {\n    terminateWebAuthorization({ hash: session!.hash });\n    onClose();\n  }, [onClose, session, terminateWebAuthorization]);\n\n  if (!renderingSession) {\n    return undefined;\n  }\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('WebSessionsTitle')}</div>\n        <Button\n          color=\"danger\"\n          onClick={handleTerminateSessionClick}\n          className={buildClassName('modal-action-button', styles.headerButton)}\n        >\n          {lang('AuthSessions.LogOut')}\n        </Button>\n      </div>\n    );\n  }\n  return (\n    <Modal\n      header={renderHeader()}\n      isOpen={isOpen}\n      hasCloseButton\n      onClose={onClose}\n      className={styles.root}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={renderingBot}\n        size=\"large\"\n      />\n      {renderingBot && <FullNameTitle className={styles.title} peer={renderingBot} />}\n      <div className={styles.note}>\n        {renderingSession?.domain}\n      </div>\n\n      <dl className={styles.box}>\n        <dt>{lang('AuthSessions.View.Browser')}</dt>\n        <dd>\n          {renderingSession?.browser}\n        </dd>\n\n        <dt>{lang('SessionPreview.Ip')}</dt>\n        <dd>{renderingSession?.ip}</dd>\n\n        <dt>{lang('SessionPreview.Location')}</dt>\n        <dd>{renderingSession?.region}</dd>\n      </dl>\n      <p className={styles.note}>{lang('AuthSessions.View.LocationInfo')}</p>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { hash }): StateProps => {\n  const session = hash ? global.activeWebSessions.byHash[hash] : undefined;\n  const bot = session ? global.users.byId[session.botId] : undefined;\n\n  return {\n    session,\n    bot,\n  };\n})(SettingsActiveWebsite));\n","// extracted by mini-css-extract-plugin\nexport default {\"avatar\":\"v0wP46TR\",\"clear-help\":\"WnnxcARX\",\"clearHelp\":\"WnnxcARX\",\"subtitle\":\"uEUfjByC\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiWebSession } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPastTimeShort } from '../../../util/dates/dateFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SettingsActiveWebsite from './SettingsActiveWebsite';\n\nimport styles from './SettingsActiveWebsites.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  byHash: Record<string, ApiWebSession>;\n  orderedHashes: string[];\n};\n\nconst SettingsActiveWebsites: FC<OwnProps & StateProps> = ({\n  isActive,\n  byHash,\n  orderedHashes,\n  onReset,\n}) => {\n  const {\n    terminateWebAuthorization,\n    terminateAllWebAuthorizations,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [isConfirmTerminateAllDialogOpen, openConfirmTerminateAllDialog, closeConfirmTerminateAllDialog] = useFlag();\n  const [openedWebsiteHash, setOpenedWebsiteHash] = useState<string | undefined>();\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  const handleTerminateAuthClick = useCallback((hash: string) => {\n    terminateWebAuthorization({ hash });\n  }, [terminateWebAuthorization]);\n\n  const handleTerminateAllAuth = useCallback(() => {\n    closeConfirmTerminateAllDialog();\n    terminateAllWebAuthorizations();\n  }, [closeConfirmTerminateAllDialog, terminateAllWebAuthorizations]);\n\n  const handleOpenSessionModal = useCallback((hash: string) => {\n    setOpenedWebsiteHash(hash);\n    openModal();\n  }, [openModal]);\n\n  const handleCloseWebsiteModal = useCallback(() => {\n    setOpenedWebsiteHash(undefined);\n    closeModal();\n  }, [closeModal]);\n\n  // Close when empty\n  useEffect(() => {\n    if (!orderedHashes.length) {\n      onReset();\n    }\n  }, [onReset, orderedHashes]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function renderSessions(sessionHashes: string[]) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('WebSessionsTitle')}\n        </h4>\n\n        {sessionHashes.map(renderSession)}\n      </div>\n    );\n  }\n\n  function renderSession(sessionHash: string) {\n    const session = byHash[sessionHash];\n    const bot = getGlobal().users.byId[session.botId];\n\n    return (\n      <ListItem\n        key={session.hash}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Terminate',\n          icon: 'stop',\n          destructive: true,\n          handler: () => {\n            handleTerminateAuthClick(session.hash);\n          },\n        }]}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => handleOpenSessionModal(session.hash)}\n      >\n        <Avatar className={styles.avatar} peer={bot} size=\"tiny\" />\n        <div className=\"multiline-item full-size\" dir=\"auto\">\n          <span className=\"date\">{formatPastTimeShort(lang, session.dateActive * 1000)}</span>\n          {bot && <FullNameTitle className={styles.title} peer={bot} />}\n          <span className={buildClassName('subtitle', 'black', 'tight', styles.platform)}>\n            {session.domain}, {session.browser}, {session.platform}\n          </span>\n          <span className={buildClassName('subtitle', styles.subtitle)}>{session.ip} {session.region}</span>\n        </div>\n      </ListItem>\n    );\n  }\n\n  if (!orderedHashes.length) return undefined;\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          className=\"destructive mb-0 no-icon\"\n          icon=\"stop\"\n          ripple\n          narrow\n          onClick={openConfirmTerminateAllDialog}\n        >\n          {lang('AuthSessions.LogOutApplications')}\n        </ListItem>\n        <p className={buildClassName('settings-item-description', styles.clearHelp)}>\n          {lang('ClearOtherWebSessionsHelp')}\n        </p>\n      </div>\n      {renderSessions(orderedHashes)}\n      <ConfirmDialog\n        isOpen={isConfirmTerminateAllDialogOpen}\n        onClose={closeConfirmTerminateAllDialog}\n        title={lang('AuthSessions.LogOutApplications')}\n        text={lang('AreYouSureWebSessions')}\n        confirmHandler={handleTerminateAllAuth}\n        confirmIsDestructive\n      />\n      <SettingsActiveWebsite isOpen={isModalOpen} hash={openedWebsiteHash} onClose={handleCloseWebsiteModal} />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byHash, orderedHashes } = global.activeWebSessions;\n    return {\n      byHash,\n      orderedHashes,\n    };\n  },\n)(SettingsActiveWebsites));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { CHAT_HEIGHT_PX, STICKER_SIZE_GENERAL_SETTINGS } from '../../config';\nimport buildClassName from '../../util/buildClassName';\n\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport ListItem from '../ui/ListItem';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetCard.scss';\n\ntype OwnProps = {\n  stickerSet?: ApiStickerSet;\n  noPlay?: boolean;\n  className?: string;\n  observeIntersection: ObserveFn;\n  onClick: (value: ApiSticker) => void;\n};\n\nconst StickerSetCard: FC<OwnProps> = ({\n  stickerSet,\n  noPlay,\n  className,\n  observeIntersection,\n  onClick,\n}) => {\n  const lang = useOldLang();\n\n  const firstSticker = stickerSet?.stickers?.[0];\n\n  const handleCardClick = useLastCallback(() => {\n    if (firstSticker) onClick(firstSticker);\n  });\n\n  if (!stickerSet?.stickers) {\n    return undefined;\n  }\n\n  function renderPreview() {\n    if (!stickerSet) return undefined;\n    if (stickerSet.hasThumbnail || !firstSticker) {\n      return (\n        <Button\n          ariaLabel={stickerSet.title}\n          color=\"translucent\"\n          isRtl={lang.isRtl}\n        >\n          <StickerSetCover\n            stickerSet={stickerSet}\n            size={STICKER_SIZE_GENERAL_SETTINGS}\n            noPlay={noPlay}\n            observeIntersection={observeIntersection}\n          />\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          sticker={firstSticker}\n          size={STICKER_SIZE_GENERAL_SETTINGS}\n          title={stickerSet.title}\n          noPlay={noPlay}\n          observeIntersection={observeIntersection}\n          noContextMenu\n          isCurrentUserPremium\n          clickArg={undefined}\n        />\n      );\n    }\n  }\n\n  return (\n    <ListItem\n      className={buildClassName('StickerSetCard', 'chat-item-clickable small-icon', className)}\n      style={`height: ${CHAT_HEIGHT_PX}px;`}\n      inactive={!firstSticker}\n      onClick={handleCardClick}\n    >\n      {renderPreview()}\n      <div className=\"multiline-item\">\n        <div className=\"title\">{stickerSet.title}</div>\n        <div className=\"subtitle\">{lang('StickerPack.StickerCount', stickerSet.count, 'i')}</div>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(StickerSetCard);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { ISettings } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'shouldSuggestCustomEmoji'\n)> & {\n  customEmojiSetIds?: string[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  canPlayAnimatedEmojis: boolean;\n};\n\nconst SettingsCustomEmoji: FC<OwnProps & StateProps> = ({\n  isActive,\n  customEmojiSetIds,\n  stickerSetsById,\n  shouldSuggestCustomEmoji,\n  canPlayAnimatedEmojis,\n  onReset,\n}) => {\n  const { openStickerSet, setSettingOption } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestCustomEmojiChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestCustomEmoji: newValue });\n  }, [setSettingOption]);\n\n  const customEmojiSets = useMemo(() => (\n    customEmojiSetIds && Object.values(pick(stickerSetsById, customEmojiSetIds))\n  ), [customEmojiSetIds, stickerSetsById]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {customEmojiSets && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('SuggestAnimatedEmoji')}\n            checked={shouldSuggestCustomEmoji}\n            onCheck={handleSuggestCustomEmojiChange}\n          />\n          <div className=\"mt-4\" ref={stickerSettingsRef}>\n            {customEmojiSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('EmojiBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestCustomEmoji',\n      ]),\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsCustomEmoji));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { AUTODOWNLOAD_FILESIZE_MB_LIMITS } from '../../../config';\nimport { pick } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, (\n  'canAutoLoadPhotoFromContacts' |\n  'canAutoLoadPhotoInPrivateChats' |\n  'canAutoLoadPhotoInGroups' |\n  'canAutoLoadPhotoInChannels' |\n  'canAutoLoadVideoFromContacts' |\n  'canAutoLoadVideoInPrivateChats' |\n  'canAutoLoadVideoInGroups' |\n  'canAutoLoadVideoInChannels' |\n  'canAutoLoadFileFromContacts' |\n  'canAutoLoadFileInPrivateChats' |\n  'canAutoLoadFileInGroups' |\n  'canAutoLoadFileInChannels' |\n  'autoLoadFileMaxSizeMb'\n)>;\n\nconst SettingsDataStorage: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  canAutoLoadPhotoFromContacts,\n  canAutoLoadPhotoInPrivateChats,\n  canAutoLoadPhotoInGroups,\n  canAutoLoadPhotoInChannels,\n  canAutoLoadVideoFromContacts,\n  canAutoLoadVideoInPrivateChats,\n  canAutoLoadVideoInGroups,\n  canAutoLoadVideoInChannels,\n  canAutoLoadFileFromContacts,\n  canAutoLoadFileInPrivateChats,\n  canAutoLoadFileInGroups,\n  canAutoLoadFileInChannels,\n  autoLoadFileMaxSizeMb,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const renderFileSizeCallback = useCallback((value: number) => {\n    return lang('AutodownloadSizeLimitUpTo', {\n      limit: lang('FileSizeMB', { count: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] }),\n    });\n  }, [lang]);\n\n  const handleFileSizeChange = useCallback((value: number) => {\n    setSettingOption({ autoLoadFileMaxSizeMb: AUTODOWNLOAD_FILESIZE_MB_LIMITS[value] });\n  }, [setSettingOption]);\n\n  function renderContentSizeSlider() {\n    const value = AUTODOWNLOAD_FILESIZE_MB_LIMITS.indexOf(autoLoadFileMaxSizeMb);\n\n    return (\n      <div className=\"pt-5\">\n        <RangeSlider\n          label={lang('AutoDownloadMaxFileSize')}\n          min={0}\n          max={5}\n          value={value !== -1 ? value : 2}\n          renderValue={renderFileSizeCallback}\n          onChange={handleFileSizeChange}\n        />\n      </div>\n    );\n  }\n\n  function renderAutoDownloadBlock(\n    title: string,\n    key: 'Photo' | 'Video' | 'File',\n    canAutoLoadFromContacts: boolean,\n    canAutoLoadInPrivateChats: boolean,\n    canAutoLoadInGroups: boolean,\n    canAutoLoadInChannels: boolean,\n  ) {\n    return (\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{title}</h4>\n\n        <Checkbox\n          label={lang('AutoDownloadSettingsContacts')}\n          checked={canAutoLoadFromContacts}\n          // TODO rewrite to support `useCallback`\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}FromContacts`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsPrivateChats')}\n          checked={canAutoLoadInPrivateChats}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InPrivateChats`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsGroupChats')}\n          checked={canAutoLoadInGroups}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InGroups`]: isChecked })}\n        />\n        <Checkbox\n          label={lang('AutoDownloadSettingsChannels')}\n          checked={canAutoLoadInChannels}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={(isChecked) => setSettingOption({ [`canAutoLoad${key}InChannels`]: isChecked })}\n        />\n\n        {key === 'File' && renderContentSizeSlider()}\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadPhotosTitle'),\n        'Photo',\n        canAutoLoadPhotoFromContacts,\n        canAutoLoadPhotoInPrivateChats,\n        canAutoLoadPhotoInGroups,\n        canAutoLoadPhotoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadVideosTitle'),\n        'Video',\n        canAutoLoadVideoFromContacts,\n        canAutoLoadVideoInPrivateChats,\n        canAutoLoadVideoInGroups,\n        canAutoLoadVideoInChannels,\n      )}\n      {renderAutoDownloadBlock(\n        lang('AutoDownloadFilesTitle'),\n        'File',\n        canAutoLoadFileFromContacts,\n        canAutoLoadFileInPrivateChats,\n        canAutoLoadFileInGroups,\n        canAutoLoadFileInChannels,\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return pick(global.settings.byKey, [\n      'canAutoLoadPhotoFromContacts',\n      'canAutoLoadPhotoInPrivateChats',\n      'canAutoLoadPhotoInGroups',\n      'canAutoLoadPhotoInChannels',\n      'canAutoLoadVideoFromContacts',\n      'canAutoLoadVideoInPrivateChats',\n      'canAutoLoadVideoInGroups',\n      'canAutoLoadVideoInChannels',\n      'canAutoLoadFileFromContacts',\n      'canAutoLoadFileInPrivateChats',\n      'canAutoLoadFileInGroups',\n      'canAutoLoadFileInChannels',\n      'autoLoadFileMaxSizeMb',\n    ]);\n  },\n)(SettingsDataStorage));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"Ys1i4ssl\",\"item\":\"skaVPMTF\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings } from '../../../types';\n\nimport { SUPPORTED_TRANSLATION_LANGUAGES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { partition } from '../../../util/iteratees';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\n\nimport styles from './SettingsDoNotTranslate.module.scss';\n\n// https://fasttext.cc/docs/en/language-identification.html\nconst LOCAL_SUPPORTED_DETECTION_LANGUAGES = [\n  'af', 'als', 'am', 'an', 'ar', 'arz', 'as', 'ast', 'av', 'az',\n  'azb', 'ba', 'bar', 'bcl', 'be', 'bg', 'bh', 'bn', 'bo', 'bpy',\n  'br', 'bs', 'bxr', 'ca', 'cbk', 'ce', 'ceb', 'ckb', 'co', 'cs',\n  'cv', 'cy', 'da', 'de', 'diq', 'dsb', 'dty', 'dv', 'el', 'eml',\n  'en', 'eo', 'es', 'et', 'eu', 'fa', 'fi', 'fr', 'frr', 'fy',\n  'ga', 'gd', 'gl', 'gn', 'gom', 'gu', 'gv', 'he', 'hi', 'hif',\n  'hr', 'hsb', 'ht', 'hu', 'hy', 'ia', 'id', 'ie', 'ilo', 'io',\n  'is', 'it', 'ja', 'jbo', 'jv', 'ka', 'kk', 'km', 'kn', 'ko',\n  'krc', 'ku', 'kv', 'kw', 'ky', 'la', 'lb', 'lez', 'li', 'lmo',\n  'lo', 'lrc', 'lt', 'lv', 'mai', 'mg', 'mhr', 'min', 'mk', 'ml',\n  'mn', 'mr', 'mrj', 'ms', 'mt', 'mwl', 'my', 'myv', 'mzn', 'nah',\n  'nap', 'nds', 'ne', 'new', 'nl', 'nn', 'no', 'oc', 'or', 'os',\n  'pa', 'pam', 'pfl', 'pl', 'pms', 'pnb', 'ps', 'pt', 'qu', 'rm',\n  'ro', 'ru', 'rue', 'sa', 'sah', 'sc', 'scn', 'sco', 'sd', 'sh',\n  'si', 'sk', 'sl', 'so', 'sq', 'sr', 'su', 'sv', 'sw', 'ta', 'te',\n  'tg', 'th', 'tk', 'tl', 'tr', 'tt', 'tyv', 'ug', 'uk', 'ur', 'uz',\n  'vec', 'vep', 'vi', 'vls', 'vo', 'wa', 'war', 'wuu', 'xal', 'xmf',\n  'yi', 'yo', 'yue', 'zh',\n];\n\nconst SUPPORTED_LANGUAGES = SUPPORTED_TRANSLATION_LANGUAGES.filter((lang: string) => (\n  LOCAL_SUPPORTED_DETECTION_LANGUAGES.includes(lang)\n));\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = Pick<ISettings, 'doNotTranslate'>;\n\nconst SettingsDoNotTranslate: FC<OwnProps & StateProps> = ({\n  isActive,\n  doNotTranslate,\n  onReset,\n}) => {\n  const { setSettingOption } = getActions();\n\n  const lang = useOldLang();\n  const language = lang.code || 'en';\n  const [displayedOptions, setDisplayedOptions] = useState<string[]>([]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n\n  const displayedOptionList: ItemPickerOption[] = useMemo(() => {\n    const options = SUPPORTED_LANGUAGES.map((langCode: string) => {\n      const translatedNames = new Intl.DisplayNames([language], { type: 'language' });\n      const translatedName = translatedNames.of(langCode)!;\n\n      const originalNames = new Intl.DisplayNames([langCode], { type: 'language' });\n      const originalName = originalNames.of(langCode)!;\n\n      return {\n        langCode,\n        translatedName,\n        originalName,\n      };\n    }).filter(Boolean).map(({ langCode, translatedName, originalName }) => ({\n      label: translatedName,\n      subLabel: originalName,\n      value: langCode,\n    }));\n\n    if (!searchQuery.trim()) {\n      const currentLanguageOption = options.find((option) => option.value === language);\n      const otherOptionList = options.filter((option) => option.value !== language);\n      return currentLanguageOption ? [currentLanguageOption, ...otherOptionList] : options;\n    }\n\n    return options?.filter((option) => option.label.toLowerCase().includes(searchQuery.toLowerCase()));\n  }, [language, searchQuery]);\n\n  useEffectWithPrevDeps(([prevIsActive, prevLanguage]) => {\n    if (prevIsActive === isActive && prevLanguage?.find((option) => option === language)) return;\n    const [selected] = partition(displayedOptionList, (option) => doNotTranslate.includes(option.value));\n    setDisplayedOptions([...selected.map((option) => option.value)]);\n  }, [isActive, doNotTranslate, displayedOptions.length, language, displayedOptionList]);\n\n  const handleChange = useLastCallback((newSelectedIds: string[]) => {\n    setDisplayedOptions(newSelectedIds);\n    setSettingOption({\n      doNotTranslate: newSelectedIds,\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'settings-content infinite-scroll')}>\n      <div className={buildClassName(styles.item)}>\n        <ItemPicker\n          className={styles.picker}\n          items={displayedOptionList}\n          selectedValues={displayedOptions}\n          onSelectedValuesChange={handleChange}\n          filterValue={searchQuery}\n          onFilterChange={setSearchQuery}\n          isSearchable\n          allowMultiple\n          withDefaultPadding\n          itemInputType=\"checkbox\"\n          searchInputId=\"lang-picker-search\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      doNotTranslate,\n    } = global.settings.byKey;\n\n    return {\n      doNotTranslate,\n    };\n  },\n)(SettingsDoNotTranslate));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { ApiUsername } from '../../api/types';\n\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport { isBetween } from '../../util/math';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport ConfirmDialog from '../ui/ConfirmDialog';\nimport Draggable from '../ui/Draggable';\nimport ListItem from '../ui/ListItem';\n\nimport styles from './ManageUsernames.module.scss';\n\ntype SortState = {\n  orderedUsernames?: string[];\n  dragOrderUsernames?: string[];\n  draggedIndex?: number;\n};\n\ntype OwnProps = {\n  chatId?: string;\n  usernames: ApiUsername[];\n  onEditUsername: (username: string) => void;\n};\n\nconst USERNAME_HEIGHT_PX = 56;\n\nconst ManageUsernames: FC<OwnProps> = ({\n  chatId,\n  usernames,\n  onEditUsername,\n}) => {\n  const {\n    showNotification,\n    toggleUsername,\n    toggleChatUsername,\n    sortUsernames,\n    sortChatUsernames,\n  } = getActions();\n  const lang = useOldLang();\n  const [usernameForConfirm, setUsernameForConfirm] = useState<ApiUsername | undefined>();\n\n  const usernameList = useMemo(() => usernames.map(({ username }) => username), [usernames]);\n  const prevUsernameList = usePreviousDeprecated(usernameList);\n\n  const [state, setState] = useState<SortState>({\n    orderedUsernames: usernameList,\n    dragOrderUsernames: usernameList,\n    draggedIndex: undefined,\n  });\n\n  // Sync folders state after changing folders in other clients\n  useEffect(() => {\n    if (prevUsernameList !== usernameList) {\n      setState({\n        orderedUsernames: usernameList,\n        dragOrderUsernames: usernameList,\n        draggedIndex: undefined,\n      });\n    }\n  }, [prevUsernameList, usernameList]);\n\n  const handleCopyUsername = useCallback((value: string) => {\n    copyTextToClipboard(`@${value}`);\n    showNotification({\n      message: lang('UsernameCopied'),\n    });\n  }, [lang, showNotification]);\n\n  const handleUsernameClick = useCallback((data: ApiUsername) => {\n    if (data.isEditable) {\n      onEditUsername(data.username);\n    } else {\n      setUsernameForConfirm(data);\n    }\n  }, [onEditUsername]);\n\n  const closeConfirmUsernameDialog = useCallback(() => {\n    setUsernameForConfirm(undefined);\n  }, []);\n\n  const handleUsernameToggle = useCallback(() => {\n    if (!usernameForConfirm) {\n      return;\n    }\n\n    if (chatId) {\n      toggleChatUsername({\n        chatId,\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    } else {\n      toggleUsername({\n        username: usernameForConfirm.username,\n        isActive: !usernameForConfirm.isActive,\n      });\n    }\n    closeConfirmUsernameDialog();\n  }, [chatId, closeConfirmUsernameDialog, toggleChatUsername, toggleUsername, usernameForConfirm]);\n\n  const handleDrag = useCallback((translation: { x: number; y: number }, id: string | number) => {\n    const delta = Math.round(translation.y / USERNAME_HEIGHT_PX);\n    const index = state.orderedUsernames?.indexOf(id as string) || 0;\n    const dragOrderUsernames = state.orderedUsernames?.filter((username) => username !== id);\n\n    if (!dragOrderUsernames || !isBetween(index + delta, 0, usernameList.length)) {\n      return;\n    }\n\n    dragOrderUsernames.splice(index + delta, 0, id as string);\n    setState((current) => ({\n      ...current,\n      draggedIndex: index,\n      dragOrderUsernames,\n    }));\n  }, [state.orderedUsernames, usernameList.length]);\n\n  const handleDragEnd = useCallback(() => {\n    setState((current) => {\n      if (chatId) {\n        sortChatUsernames({\n          chatId,\n          usernames: current.dragOrderUsernames!,\n        });\n      } else {\n        sortUsernames({ usernames: current.dragOrderUsernames! });\n      }\n\n      return {\n        ...current,\n        orderedUsernames: current.dragOrderUsernames,\n        draggedIndex: undefined,\n      };\n    });\n  }, [chatId, sortChatUsernames, sortUsernames]);\n\n  return (\n    <>\n      <div className={styles.container}>\n        <h4 className={styles.header} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_subtitle')}\n        </h4>\n        <div className={styles.sortableContainer} style={`height: ${(usernames.length) * USERNAME_HEIGHT_PX}px`}>\n          {usernames.map((usernameData, i) => {\n            const isDragged = state.draggedIndex === i;\n            const draggedTop = (state.orderedUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const top = (state.dragOrderUsernames?.indexOf(usernameData.username) ?? 0) * USERNAME_HEIGHT_PX;\n            const subtitle = usernameData.isEditable\n              ? 'lng_usernames_edit'\n              : (usernameData.isActive ? 'lng_usernames_active' : 'lng_usernames_non_active');\n\n            return (\n              <Draggable\n                key={usernameData.username}\n                id={usernameData.username}\n                onDrag={handleDrag}\n                onDragEnd={handleDragEnd}\n                style={`top: ${isDragged ? draggedTop : top}px;`}\n                knobStyle={`${lang.isRtl ? 'left' : 'right'}: 3rem;`}\n                isDisabled={!usernameData.isActive}\n              >\n                <ListItem\n                  key={usernameData.username}\n                  className={buildClassName('drag-item no-icon', styles.item)}\n                  narrow\n                  secondaryIcon=\"more\"\n                  icon={usernameData.isActive ? 'link' : 'link-broken'}\n                  multiline\n                  contextActions={[\n                    {\n                      handler: () => {\n                        handleCopyUsername(usernameData.username);\n                      },\n                      title: lang('Copy'),\n                      icon: 'copy',\n                    },\n                  ]}\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => {\n                    handleUsernameClick(usernameData);\n                  }}\n                >\n                  <span className=\"title\">@{usernameData.username}</span>\n                  <span className=\"subtitle\">{lang(subtitle)}</span>\n                </ListItem>\n              </Draggable>\n            );\n          })}\n        </div>\n        <p className={styles.description} dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('lng_usernames_description')}\n        </p>\n      </div>\n      <ConfirmDialog\n        isOpen={Boolean(usernameForConfirm)}\n        onClose={closeConfirmUsernameDialog}\n        title={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertTitle' : 'Username.ActivateAlertTitle')}\n        text={lang(usernameForConfirm?.isActive ? 'Username.DeactivateAlertText' : 'Username.ActivateAlertText')}\n        confirmLabel={lang(usernameForConfirm?.isActive\n          ? 'Username.DeactivateAlertHide'\n          : 'Username.ActivateAlertShow')}\n        confirmHandler={handleUsernameToggle}\n        confirmIsDestructive={!usernameForConfirm?.isActive}\n      />\n    </>\n  );\n};\n\nexport default memo(ManageUsernames);\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"PaO1MMi5\",\"header\":\"wSswdVkR\",\"description\":\"oiJc22Aj\",\"sortableContainer\":\"lAeeBh9K\",\"item\":\"l04OwRBg\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\nimport { debounce } from '../../util/schedulers';\nimport {\n  isUsernameValid, MAX_USERNAME_LENGTH, MIN_UPDATE_USERNAME_LENGTH, USERNAME_REGEX,\n} from '../../util/username';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport InputText from '../ui/InputText';\n\ntype OwnProps = {\n  currentUsername?: string;\n  asLink?: boolean;\n  isLoading?: boolean;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  onChange: (value: string) => void;\n};\n\nconst LINK_PREFIX_REGEX = /https:\\/\\/t\\.me\\/?/i;\n\nconst runDebouncedForCheckUsername = debounce((cb) => cb(), 250, false);\n\nconst UsernameInput: FC<OwnProps> = ({\n  currentUsername,\n  asLink,\n  isLoading,\n  isUsernameAvailable,\n  checkedUsername,\n  onChange,\n}) => {\n  const { checkUsername, checkPublicLink } = getActions();\n  const [username, setUsername] = useState(currentUsername || '');\n\n  const lang = useOldLang();\n  const langPrefix = asLink ? 'SetUrl' : 'Username';\n  const label = asLink ? lang('SetUrlPlaceholder') : lang('Username');\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = currentUsername !== username\n    ? (isUsernameAvailable ?? previousIsUsernameAvailable) : undefined;\n  const isChecking = username && currentUsername !== username && checkedUsername !== username;\n\n  const [usernameSuccess, usernameError] = useMemo(() => {\n    if (!username.length) {\n      return [];\n    }\n\n    if (username.length < MIN_UPDATE_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidShort`)];\n    }\n    if (username.length > MAX_USERNAME_LENGTH) {\n      return [undefined, lang(`${langPrefix}InvalidLong`)];\n    }\n    if (!USERNAME_REGEX.test(username)) {\n      return [undefined, lang(`${langPrefix}Invalid`)];\n    }\n\n    if (renderingIsUsernameAvailable === undefined || isChecking) {\n      return [];\n    }\n\n    // Variable `isUsernameAvailable` is initialized with `undefined`, so a strict false check is required\n    return [\n      renderingIsUsernameAvailable ? lang(`${langPrefix}Available`, label) : undefined,\n      renderingIsUsernameAvailable === false ? lang(`${langPrefix}InUse`) : undefined,\n    ];\n  }, [username, renderingIsUsernameAvailable, isChecking, lang, langPrefix, label]);\n\n  useEffect(() => {\n    setUsername(currentUsername || '');\n  }, [asLink, currentUsername]);\n\n  const handleUsernameChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value.trim();\n    // Prevent prefix editing\n    if (asLink && !value.match(LINK_PREFIX_REGEX)) {\n      if (!value.length) {\n        setUsername('');\n        onChange?.('');\n      }\n      return;\n    }\n    const newUsername = value.replace(LINK_PREFIX_REGEX, '');\n\n    setUsername(newUsername);\n\n    const isValid = newUsername === '' ? true : isUsernameValid(newUsername, true);\n    if (!isValid) return;\n\n    onChange?.(newUsername);\n\n    runDebouncedForCheckUsername(() => {\n      if (newUsername !== currentUsername) {\n        const check = asLink ? checkPublicLink : checkUsername;\n        check({ username: newUsername });\n      }\n    });\n  }, [asLink, checkPublicLink, checkUsername, currentUsername, onChange]);\n\n  return (\n    <InputText\n      value={`${asLink ? TME_LINK_PREFIX : ''}${username}`}\n      onChange={handleUsernameChange}\n      label={isChecking ? lang('Checking') : label}\n      error={usernameError}\n      success={usernameSuccess}\n      readOnly={isLoading}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(UsernameInput);\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUsername } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ProfileEditProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { getChatAvatarHash } from '../../../global/helpers';\nimport { selectTabState, selectUser, selectUserFullInfo } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport { throttle } from '../../../util/schedulers';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\ntype OwnProps = {\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentAvatarHash?: string;\n  currentFirstName?: string;\n  currentLastName?: string;\n  currentBio?: string;\n  progress?: ProfileEditProgress;\n  checkedUsername?: string;\n  editUsernameError?: string;\n  isUsernameAvailable?: boolean;\n  maxBioLength: number;\n  usernames?: ApiUsername[];\n};\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide your first name';\n\nconst SettingsEditProfile: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentAvatarHash,\n  currentFirstName,\n  currentLastName,\n  currentBio,\n  progress,\n  checkedUsername,\n  editUsernameError,\n  isUsernameAvailable,\n  maxBioLength,\n  usernames,\n  onReset,\n}) => {\n  const {\n    loadCurrentUser,\n    updateProfile,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const firstEditableUsername = useMemo(() => usernames?.find(({ isEditable }) => isEditable), [usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const [isUsernameTouched, setIsUsernameTouched] = useState(false);\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [firstName, setFirstName] = useState(currentFirstName || '');\n  const [lastName, setLastName] = useState(currentLastName || '');\n  const [bio, setBio] = useState(currentBio || '');\n  const [editableUsername, setEditableUsername] = useState<string | false>(currentUsername);\n\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  const isLoading = progress === ProfileEditProgress.InProgress;\n  const isUsernameError = editableUsername === false;\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n  const shouldRenderUsernamesManage = usernames && usernames.length > 1;\n\n  const isSaveButtonShown = useMemo(() => {\n    if (isUsernameError) {\n      return false;\n    }\n\n    return Boolean(photo) || isProfileFieldsTouched || (isUsernameTouched && renderingIsUsernameAvailable === true);\n  }, [isUsernameError, photo, isProfileFieldsTouched, isUsernameTouched, renderingIsUsernameAvailable]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadCurrentUser();\n    });\n  }, [loadCurrentUser]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName || '');\n    setLastName(currentLastName || '');\n    setBio(currentBio || '');\n  }, [currentFirstName, currentLastName, currentBio]);\n\n  useEffect(() => {\n    setEditableUsername(currentUsername || '');\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (progress === ProfileEditProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setIsUsernameTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handlePhotoChange = useCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n  }, []);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleBioChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUsernameChange = useCallback((value: string | false) => {\n    setEditableUsername(value);\n    setIsUsernameTouched(currentUsername !== value);\n  }, [currentUsername]);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n    const trimmedBio = bio.trim();\n\n    if (!editableUsername) return;\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateProfile({\n      photo,\n      ...(isProfileFieldsTouched && {\n        firstName: trimmedFirstName,\n        lastName: trimmedLastName,\n        bio: trimmedBio,\n      }),\n      ...(isUsernameTouched && {\n        username: editableUsername,\n      }),\n    });\n  }, [\n    photo,\n    firstName, lastName, bio, isProfileFieldsTouched,\n    editableUsername, isUsernameTouched,\n    updateProfile,\n  ]);\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content no-border custom-scroll\">\n        <div className=\"settings-item\">\n          <div className=\"settings-input\">\n            <AvatarEditable\n              currentAvatarBlobUrl={currentAvatarBlobUrl}\n              onChange={handlePhotoChange}\n              title=\"Edit your profile photo\"\n              disabled={isLoading}\n            />\n            <InputText\n              value={firstName}\n              onChange={handleFirstNameChange}\n              label={lang('FirstName')}\n              disabled={isLoading}\n              error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n            />\n            <InputText\n              value={lastName}\n              onChange={handleLastNameChange}\n              label={lang('LastName')}\n              disabled={isLoading}\n            />\n            <TextArea\n              value={bio}\n              onChange={handleBioChange}\n              label={lang('UserBio')}\n              disabled={isLoading}\n              maxLength={maxBioLength}\n              maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n            />\n          </div>\n\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('lng_settings_about_bio'), ['br', 'simple_markdown'])}\n          </p>\n        </div>\n\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Username')}</h4>\n\n          <div className=\"settings-input\">\n            <UsernameInput\n              currentUsername={currentUsername}\n              isLoading={isLoading}\n              isUsernameAvailable={isUsernameAvailable}\n              checkedUsername={checkedUsername}\n              onChange={handleUsernameChange}\n            />\n          </div>\n\n          {editUsernameError === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n          <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('UsernameHelp'), ['br', 'simple_markdown'])}\n          </p>\n          {editableUsername && (\n            <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n              {lang('lng_username_link')}<br />\n              <span className=\"username-link\">{TME_LINK_PREFIX}{editableUsername}</span>\n            </p>\n          )}\n        </div>\n\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            usernames={usernames}\n            onEditUsername={setEditableUsername}\n          />\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isSaveButtonShown}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const {\n      progress, isUsernameAvailable, checkedUsername, error: editUsernameError,\n    } = selectTabState(global).profileEdit || {};\n    const currentUser = currentUserId ? selectUser(global, currentUserId) : undefined;\n\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    if (!currentUser) {\n      return {\n        progress,\n        checkedUsername,\n        isUsernameAvailable,\n        editUsernameError,\n        maxBioLength,\n      };\n    }\n\n    const {\n      firstName: currentFirstName,\n      lastName: currentLastName,\n      usernames,\n    } = currentUser;\n    const currentUserFullInfo = currentUserId ? selectUserFullInfo(global, currentUserId) : undefined;\n    const currentAvatarHash = getChatAvatarHash(currentUser);\n\n    return {\n      currentAvatarHash,\n      currentFirstName,\n      currentLastName,\n      currentBio: currentUserFullInfo?.bio,\n      progress,\n      isUsernameAvailable,\n      checkedUsername,\n      editUsernameError,\n      maxBioLength,\n      usernames,\n    };\n  },\n)(SettingsEditProfile));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport { DEBUG_LOG_FILENAME } from '../../../config';\nimport { getDebugLogs } from '../../../util/debugConsole';\nimport download from '../../../util/download';\nimport { IS_ELECTRON, IS_SNAP_EFFECT_SUPPORTED, IS_WAVE_TRANSFORM_SUPPORTED } from '../../../util/windowEnvironment';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport { animateSnap } from '../../main/visualEffects/SnapEffectContainer';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  shouldForceHttpTransport?: boolean;\n  shouldAllowHttpTransport?: boolean;\n  shouldCollectDebugLogs?: boolean;\n  shouldDebugExportedSenders?: boolean;\n};\n\nconst SettingsExperimental: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  shouldForceHttpTransport,\n  shouldAllowHttpTransport,\n  shouldCollectDebugLogs,\n  shouldDebugExportedSenders,\n}) => {\n  const { requestConfetti, setSettingOption, requestWave } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const snapButtonRef = useRef<HTMLDivElement>(null);\n  const [isSnapButtonAnimating, setIsSnapButtonAnimating] = useState(false);\n\n  const lang = useOldLang();\n\n  const [isAutoUpdateEnabled, setIsAutoUpdateEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsAutoUpdateEnabled().then(setIsAutoUpdateEnabled);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDownloadLog = useLastCallback(() => {\n    const file = new File([getDebugLogs()], DEBUG_LOG_FILENAME, { type: 'text/plain' });\n    const url = URL.createObjectURL(file);\n    download(url, DEBUG_LOG_FILENAME);\n  });\n\n  const handleIsAutoUpdateEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsAutoUpdateEnabled(isChecked);\n  }, []);\n\n  const handleRequestWave = useLastCallback((e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n    requestWave({ startX: e.clientX, startY: e.clientY });\n  });\n\n  const handleRequestConfetti = useLastCallback(() => {\n    requestConfetti({ withStars: true });\n  });\n\n  const handleSnap = useLastCallback(() => {\n    const button = snapButtonRef.current;\n    if (!button) return;\n\n    if (animateSnap(button)) {\n      setIsSnapButtonAnimating(true);\n      // Manual reset for debug\n      setTimeout(() => {\n        setIsSnapButtonAnimating(false);\n      }, 1500);\n    }\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Experimental}\n          size={200}\n          className=\"experimental-duck\"\n          nonInteractive\n          noLoop={false}\n        />\n        <p className=\"settings-item-description pt-3\" dir=\"auto\">{lang('lng_settings_experimental_about')}</p>\n      </div>\n      <div className=\"settings-item\">\n        <ListItem\n          onClick={handleRequestConfetti}\n          icon=\"animations\"\n        >\n          <div className=\"title\">Launch some confetti!</div>\n        </ListItem>\n        <ListItem\n          onClick={handleRequestWave}\n          icon=\"story-expired\"\n          disabled={!IS_WAVE_TRANSFORM_SUPPORTED}\n        >\n          <div className=\"title\">Start wave</div>\n        </ListItem>\n        <ListItem\n          ref={snapButtonRef}\n          onClick={handleSnap}\n          icon=\"spoiler\"\n          disabled={!IS_SNAP_EFFECT_SUPPORTED}\n          style={isSnapButtonAnimating ? 'visibility: hidden' : ''}\n        >\n          <div className=\"title\">Vaporize this button</div>\n        </ListItem>\n\n        <Checkbox\n          label=\"Allow HTTP Transport\"\n          checked={Boolean(shouldAllowHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldAllowHttpTransport: !shouldAllowHttpTransport })}\n        />\n\n        <Checkbox\n          label=\"Force HTTP Transport\"\n          disabled={!shouldAllowHttpTransport}\n          checked={Boolean(shouldForceHttpTransport)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldForceHttpTransport: !shouldForceHttpTransport })}\n        />\n\n        <Checkbox\n          label={lang('DebugMenuEnableLogs')}\n          checked={Boolean(shouldCollectDebugLogs)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldCollectDebugLogs: !shouldCollectDebugLogs })}\n        />\n\n        <Checkbox\n          label=\"Enable exported senders debug\"\n          checked={Boolean(shouldDebugExportedSenders)}\n          // eslint-disable-next-line react/jsx-no-bind\n          onCheck={() => setSettingOption({ shouldDebugExportedSenders: !shouldDebugExportedSenders })}\n        />\n\n        {IS_ELECTRON && (\n          <Checkbox\n            label=\"Enable autoupdates\"\n            checked={Boolean(isAutoUpdateEnabled)}\n            onCheck={handleIsAutoUpdateEnabledChange}\n          />\n        )}\n\n        <ListItem\n          onClick={handleDownloadLog}\n          icon=\"bug\"\n        >\n          <div className=\"title\">Download log</div>\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    return {\n      shouldForceHttpTransport: global.settings.byKey.shouldForceHttpTransport,\n      shouldAllowHttpTransport: global.settings.byKey.shouldAllowHttpTransport,\n      shouldCollectDebugLogs: global.settings.byKey.shouldCollectDebugLogs,\n      shouldDebugExportedSenders: global.settings.byKey.shouldDebugExportedSenders,\n    };\n  },\n)(SettingsExperimental));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ISettings, TimeFormat } from '../../../types';\nimport type { IRadioOption } from '../../ui/RadioGroup';\nimport { SettingsScreens } from '../../../types';\n\nimport { pick } from '../../../util/iteratees';\nimport { setTimeFormat } from '../../../util/oldLangProvider';\nimport { getSystemTheme } from '../../../util/systemTheme';\nimport {\n  IS_ANDROID, IS_ELECTRON, IS_IOS, IS_MAC_OS, IS_WINDOWS,\n} from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'messageTextSize' |\n    'animationLevel' |\n    'messageSendKeyCombo' |\n    'timeFormat'\n  )> & {\n    theme: ISettings['theme'];\n    shouldUseSystemTheme: boolean;\n  };\n\nconst SettingsGeneral: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  messageTextSize,\n  messageSendKeyCombo,\n  timeFormat,\n  theme,\n  shouldUseSystemTheme,\n}) => {\n  const {\n    setSettingOption,\n  } = getActions();\n\n  const lang = useLang();\n\n  const { isMobile } = useAppLayout();\n  const isMobileDevice = isMobile && (IS_IOS || IS_ANDROID);\n\n  const timeFormatOptions: IRadioOption[] = [{\n    label: lang('SettingsTimeFormat12'),\n    value: '12h',\n  }, {\n    label: lang('SettingsTimeFormat24'),\n    value: '24h',\n  }];\n\n  const appearanceThemeOptions: IRadioOption[] = [{\n    label: lang('EmptyChatAppearanceLight'),\n    value: 'light',\n  }, {\n    label: lang('EmptyChatAppearanceDark'),\n    value: 'dark',\n  }, {\n    label: lang('EmptyChatAppearanceSystem'),\n    value: 'auto',\n  }];\n\n  const keyboardSendOptions = !isMobileDevice ? [\n    { value: 'enter', label: lang('SettingsSendEnter'), subLabel: lang('SettingsSendEnterDescription') },\n    {\n      value: 'ctrl-enter',\n      label: lang(IS_MAC_OS || IS_IOS ? 'SettingsSendCmdenter' : 'SettingsSendCtrlenter'),\n      subLabel: lang('SettingsSendPlusEnterDescription'),\n    },\n  ] : undefined;\n\n  const handleMessageTextSizeChange = useCallback((newSize: number) => {\n    document.documentElement.style.setProperty(\n      '--composer-text-size', `${Math.max(newSize, IS_IOS ? 16 : 15)}px`,\n    );\n    document.documentElement.style.setProperty('--message-meta-height', `${Math.floor(newSize * 1.3125)}px`);\n    document.documentElement.style.setProperty('--message-text-size', `${newSize}px`);\n    document.documentElement.setAttribute('data-message-text-size', newSize.toString());\n\n    setSettingOption({ messageTextSize: newSize });\n  }, [setSettingOption]);\n\n  const handleAppearanceThemeChange = useCallback((value: string) => {\n    const newTheme = value === 'auto' ? getSystemTheme() : value as ISettings['theme'];\n\n    setSettingOption({ theme: newTheme });\n    setSettingOption({ shouldUseSystemTheme: value === 'auto' });\n  }, [setSettingOption]);\n\n  const handleTimeFormatChange = useCallback((newTimeFormat: string) => {\n    setSettingOption({ timeFormat: newTimeFormat as TimeFormat });\n    setSettingOption({ wasTimeFormatSetManually: true });\n\n    setTimeFormat(newTimeFormat as TimeFormat);\n  }, [setSettingOption]);\n\n  const handleMessageSendComboChange = useCallback((newCombo: string) => {\n    setSettingOption({ messageSendKeyCombo: newCombo as ISettings['messageSendKeyCombo'] });\n  }, [setSettingOption]);\n\n  const [isTrayIconEnabled, setIsTrayIconEnabled] = useState(false);\n  useEffect(() => {\n    window.electron?.getIsTrayIconEnabled().then(setIsTrayIconEnabled);\n  }, []);\n\n  const handleIsTrayIconEnabledChange = useCallback((isChecked: boolean) => {\n    window.electron?.setIsTrayIconEnabled(isChecked);\n  }, []);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('Settings')}</h4>\n\n        <RangeSlider\n          label={lang('TextSize')}\n          min={12}\n          max={20}\n          value={messageTextSize}\n          onChange={handleMessageTextSizeChange}\n        />\n\n        <ListItem\n          icon=\"photo\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.GeneralChatBackground)}\n        >\n          {lang('ChatBackground')}\n        </ListItem>\n\n        {IS_ELECTRON && IS_WINDOWS && (\n          <Checkbox\n            label={lang('SettingsTray')}\n            checked={Boolean(isTrayIconEnabled)}\n            onCheck={handleIsTrayIconEnabledChange}\n          />\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('Theme')}\n        </h4>\n        <RadioGroup\n          name=\"theme\"\n          options={appearanceThemeOptions}\n          selected={shouldUseSystemTheme ? 'auto' : theme}\n          onChange={handleAppearanceThemeChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsTimeFormat')}\n        </h4>\n        <RadioGroup\n          name=\"timeformat\"\n          options={timeFormatOptions}\n          selected={timeFormat}\n          onChange={handleTimeFormatChange}\n        />\n      </div>\n\n      {keyboardSendOptions && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('SettingsKeyboard')}</h4>\n\n          <RadioGroup\n            name=\"keyboard-send-settings\"\n            options={keyboardSendOptions}\n            onChange={handleMessageSendComboChange}\n            selected={messageSendKeyCombo}\n          />\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { theme, shouldUseSystemTheme } = global.settings.byKey;\n\n    return {\n      ...pick(global.settings.byKey, [\n        'messageTextSize',\n        'animationLevel',\n        'messageSendKeyCombo',\n        'isSensitiveEnabled',\n        'canChangeSensitive',\n        'timeFormat',\n      ]),\n      theme,\n      shouldUseSystemTheme,\n    };\n  },\n)(SettingsGeneral));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n  useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { CUSTOM_BG_CACHE_NAME, CUSTOM_WALLPAPER_CACHE_NAME } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport buildStyle from '../../../util/buildStyle';\nimport * as cacheApi from '../../../util/cacheApi';\nimport { fetchBlob } from '../../../util/files';\nimport ChatBackgroundGradientRenderer, { getColorsFromWallPaper, HEIGHT, WIDTH } from '../../../util/gradientRenderer';\n\nimport useCanvasBlur from '../../../hooks/useCanvasBlur';\nimport useMedia from '../../../hooks/useMedia';\nimport useMediaWithLoadProgress from '../../../hooks/useMediaWithLoadProgress';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport ProgressSpinner from '../../ui/ProgressSpinner';\n\nimport './WallpaperTile.scss';\n\ntype OwnProps = {\n  wallpaper: ApiWallpaper;\n  theme: ThemeKey;\n  isSelected: boolean;\n  onClick: (slug: string) => void;\n};\n\nconst WallpaperTile: FC<OwnProps> = ({\n  wallpaper,\n  theme,\n  isSelected,\n  onClick,\n}) => {\n  const { slug, document } = wallpaper;\n  const localMediaHash = `wallpaper${document.id!}`;\n  const localBlobUrl = document.previewBlobUrl;\n  const previewBlobUrl = useMedia(`${localMediaHash}?size=m`);\n  const thumbRef = useCanvasBlur(document.thumbnail?.dataUri, Boolean(previewBlobUrl), true);\n  // eslint-disable-next-line no-null/no-null\n  const gradientRef = useRef<HTMLDivElement | HTMLCanvasElement | null | undefined>(null);\n  const { transitionClassNames } = useShowTransitionDeprecated(\n    Boolean(previewBlobUrl || localBlobUrl),\n    undefined,\n    undefined,\n    'slow',\n  );\n  const isLoadingRef = useRef(false);\n  const [isLoadAllowed, setIsLoadAllowed] = useState(false);\n  const {\n    mediaData: fullMedia, loadProgress,\n  } = useMediaWithLoadProgress(localMediaHash, !isLoadAllowed);\n  const wasLoadDisabled = usePreviousDeprecated(isLoadAllowed) === false;\n  const { shouldRender: shouldRenderSpinner, transitionClassNames: spinnerClassNames } = useShowTransitionDeprecated(\n    (isLoadAllowed && !fullMedia) || slug === UPLOADING_WALLPAPER_SLUG,\n    undefined,\n    wasLoadDisabled,\n    'slow',\n  );\n  // To prevent triggering of the effect for useCallback\n  const cacheKeyRef = useRef<string>();\n  cacheKeyRef.current = theme;\n\n  const handleSelect = useCallback(() => {\n    (async () => {\n      const blob = await fetchBlob(fullMedia!);\n      await cacheApi.save(CUSTOM_BG_CACHE_NAME, cacheKeyRef.current!, blob);\n      await cacheApi.save(CUSTOM_WALLPAPER_CACHE_NAME, cacheKeyRef.current!, JSON.stringify(wallpaper));\n      onClick(slug);\n    })();\n  }, [fullMedia, onClick, slug, wallpaper]);\n\n  useEffect(() => {\n    // If we've clicked on a wallpaper, select it when full media is loaded\n    if (fullMedia && isLoadingRef.current) {\n      handleSelect();\n      isLoadingRef.current = false;\n    }\n  }, [fullMedia, handleSelect]);\n\n  const handleClick = useCallback(() => {\n    if (fullMedia) {\n      handleSelect();\n    } else {\n      isLoadingRef.current = true;\n      setIsLoadAllowed((isAllowed) => !isAllowed);\n    }\n  }, [fullMedia, handleSelect]);\n\n  const className = buildClassName(\n    'WallpaperTile',\n    isSelected && 'selected',\n  );\n\n  useEffect(() => {\n    if (!wallpaper.pattern || !wallpaper.settings) return;\n    const colors = getColorsFromWallPaper(wallpaper);\n    gradientRef.current = window.document.createElement('canvas');\n    gradientRef.current.width = WIDTH;\n    gradientRef.current.height = HEIGHT;\n    // try {\n    //   ChatBackgroundGradientRendererWebGL.create(colors, gradientRef.current);\n    // } catch (e) {\n    ChatBackgroundGradientRenderer.create(colors, gradientRef.current);\n    // }\n  }, [wallpaper]);\n\n  const intensity = useMemo(() => {\n    return wallpaper.settings?.intensity ? (wallpaper.settings!.intensity / 100) : undefined;\n  }, [wallpaper]);\n\n  const isDarkPattern = useMemo(() => {\n    if (!wallpaper.pattern) return false;\n    // if (isDarkTheme) return true;\n    return (!!intensity && intensity < 0);\n  }, [intensity, wallpaper.pattern]);\n\n  return (\n    <div\n      className={buildClassName(\n        className, wallpaper.pattern && 'pattern', isDarkPattern && 'dark-pattern',\n      )}\n      onClick={handleClick}\n    >\n      <div className=\"media-inner\">\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n        {wallpaper.pattern && (\n          <div\n            ref={(el) => el && gradientRef.current && el.appendChild(gradientRef.current)}\n            className=\"gradient\"\n            style={buildStyle(isDarkPattern && `--pattern-image: url(${previewBlobUrl || localBlobUrl})`)}\n          />\n        )}\n        <img\n          src={previewBlobUrl || localBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n        {shouldRenderSpinner && (\n          <div className={buildClassName('spinner-container', spinnerClassNames)}>\n            <ProgressSpinner progress={loadProgress} onClick={handleClick} />\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(WallpaperTile);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiWallpaper } from '../../../api/types';\nimport type { ThemeKey } from '../../../types';\nimport { SettingsScreens, UPLOADING_WALLPAPER_SLUG } from '../../../types';\n\nimport { DARK_THEME_PATTERN_COLOR, DEFAULT_PATTERN_COLOR } from '../../../config';\nimport { selectTheme } from '../../../global/selectors';\nimport { getAverageColor, getPatternColor, rgb2hex } from '../../../util/colors';\nimport { validateFiles } from '../../../util/files';\nimport { throttle } from '../../../util/schedulers';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport WallpaperTile from './WallpaperTile';\n\nimport './SettingsGeneralBackground.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  background?: string;\n  isBlurred?: boolean;\n  loadedWallpapers?: ApiWallpaper[];\n  theme: ThemeKey;\n};\n\nconst SUPPORTED_TYPES = 'image/jpeg';\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onScreenSelect,\n  onReset,\n  background,\n  isBlurred,\n  loadedWallpapers,\n  theme,\n}) => {\n  const {\n    loadWallpapers,\n    uploadWallpaper,\n    setThemeSettings,\n  } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadWallpapers();\n    });\n  }, [loadWallpapers]);\n\n  const handleFileSelect = useCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n\n    const validatedFiles = validateFiles(files);\n    if (validatedFiles?.length) {\n      uploadWallpaper(validatedFiles[0]);\n    }\n  }, [uploadWallpaper]);\n\n  const handleUploadWallpaper = useCallback(() => {\n    openSystemFilesDialog(SUPPORTED_TYPES, handleFileSelect, true);\n  }, [handleFileSelect]);\n\n  const handleSetColor = useCallback(() => {\n    onScreenSelect(SettingsScreens.GeneralChatBackgroundColor);\n  }, [onScreenSelect]);\n\n  const handleResetToDefault = useCallback(() => {\n    setThemeSettings({\n      theme,\n      background: undefined,\n      backgroundColor: undefined,\n      isBlurred: true,\n      patternColor: theme === 'dark' ? DARK_THEME_PATTERN_COLOR : DEFAULT_PATTERN_COLOR,\n    });\n  }, [setThemeSettings, theme]);\n\n  const handleWallPaperSelect = useCallback((slug: string) => {\n    setThemeSettings({ theme: themeRef.current!, background: slug });\n    const currentWallpaper = loadedWallpapers && loadedWallpapers.find((wallpaper) => wallpaper.slug === slug);\n    if (currentWallpaper?.document.thumbnail) {\n      getAverageColor(currentWallpaper.document.thumbnail.dataUri)\n        .then((color) => {\n          const patternColor = getPatternColor(color);\n          const rgbColor = `#${rgb2hex(color)}`;\n          setThemeSettings({ theme: themeRef.current!, backgroundColor: rgbColor, patternColor });\n        });\n    }\n  }, [loadedWallpapers, setThemeSettings]);\n\n  const handleWallPaperBlurChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setThemeSettings({ theme: themeRef.current!, isBlurred: e.target.checked });\n  }, [setThemeSettings]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const isUploading = loadedWallpapers?.[0] && loadedWallpapers[0].slug === UPLOADING_WALLPAPER_SLUG;\n\n  const isBlurrable = useMemo(() => (!!(loadedWallpapers\n    && loadedWallpapers.find((item) => (\n      item.slug === background\n    && (!item.pattern)\n    )))), [loadedWallpapers, background]);\n\n  return (\n    <div className=\"SettingsGeneralBackground settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"camera-add\"\n          className=\"mb-0\"\n          disabled={isUploading}\n          onClick={handleUploadWallpaper}\n        >\n          {lang('UploadImage')}\n        </ListItem>\n\n        <ListItem\n          icon=\"colorize\"\n          className=\"mb-0\"\n          onClick={handleSetColor}\n        >\n          {lang('SetColor')}\n        </ListItem>\n\n        <ListItem icon=\"favorite\" onClick={handleResetToDefault}>\n          {lang('ThemeResetToDefaults')}\n        </ListItem>\n\n        <Checkbox\n          label={lang('BackgroundBlurred')}\n          checked={isBlurrable && Boolean(isBlurred)}\n          onChange={handleWallPaperBlurChange}\n          disabled={!isBlurrable}\n        />\n      </div>\n\n      {loadedWallpapers ? (\n        <div className=\"settings-wallpapers\">\n          {loadedWallpapers.map((wallpaper) => (\n            <WallpaperTile\n              key={wallpaper.slug}\n              wallpaper={wallpaper}\n              theme={theme}\n              isSelected={background === wallpaper.slug}\n              onClick={handleWallPaperSelect}\n            />\n          ))}\n        </div>\n      ) : (\n        <Loading />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { background, isBlurred } = global.settings.themes[theme] || {};\n    const { loadedWallpapers } = global.settings;\n\n    return {\n      background,\n      isBlurred,\n      loadedWallpapers,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { ChangeEvent, MutableRefObject, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ThemeKey } from '../../../types';\nimport type { RealTouchEvent } from '../../../util/captureEvents';\n\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { captureEvents } from '../../../util/captureEvents';\nimport {\n  getPatternColor, hex2rgb, hsb2rgb, rgb2hex, rgb2hsb,\n} from '../../../util/colors';\nimport { pick } from '../../../util/iteratees';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport InputText from '../../ui/InputText';\n\nimport './SettingsGeneralBackgroundColor.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  backgroundColor?: string;\n  theme: ThemeKey;\n};\n\ninterface CanvasRects {\n  colorRect: {\n    offsetLeft: number;\n    top: number;\n    width: number;\n    height: number;\n  };\n  hueRect: {\n    offsetLeft: number;\n    width: number;\n  };\n}\n\nconst DEFAULT_HSB = rgb2hsb(hex2rgb('e6ebee'));\nconst PREDEFINED_COLORS = [\n  '#e6ebee', '#b2cee1', '#008dd0', '#c6e7cb', '#c4e1a6', '#60b16e',\n  '#ccd0af', '#a6a997', '#7a7072', '#fdd7af', '#fdb76e', '#dd8851',\n];\n\nconst SettingsGeneralBackground: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  theme,\n  backgroundColor,\n}) => {\n  const { setThemeSettings } = getActions();\n\n  const themeRef = useRef<ThemeKey>();\n  themeRef.current = theme;\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const colorPickerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const huePickerRef = useRef<HTMLDivElement>(null);\n  const isFirstRunRef = useRef(true);\n\n  const [hsb, setHsb] = useState(getInitialHsb(backgroundColor));\n  // Cache for drag handlers\n  const hsbRef = useRef(hsb);\n  useEffect(() => {\n    hsbRef.current = hsb;\n  }, [hsb]);\n\n  const [isDragging, markIsDragging, unmarkIsDragging] = useFlag();\n  const [rgbInput, setRgbInput] = useState('');\n  const [hexInput, setHexInput] = useState('');\n\n  const rectsRef = useRef<CanvasRects>();\n  const colorCtxRef = useRef<CanvasRenderingContext2D>();\n\n  // Setup: cache rects, subscribe for drag events\n  useEffect(() => {\n    // We use `offsetLeft` instead of `left` to support screen transition\n    const colorRect = {\n      offsetLeft: colorPickerRef.current!.offsetLeft,\n      ...pick(colorPickerRef.current!.getBoundingClientRect(), ['top', 'width', 'height']),\n    };\n    const hueRect = {\n      offsetLeft: huePickerRef.current!.offsetLeft,\n      ...pick(huePickerRef.current!.getBoundingClientRect(), ['width']),\n    };\n\n    rectsRef.current = { colorRect, hueRect };\n\n    function handleColorDrag(e: MouseEvent | RealTouchEvent) {\n      const colorPosition = [\n        Math.min(Math.max(0, e.pageX! - colorRect.offsetLeft), colorRect.width - 1),\n        Math.min(Math.max(0, e.pageY! - colorRect.top + containerRef.current!.scrollTop), colorRect.height - 1),\n      ];\n\n      const { huePosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(colorPickerRef.current!, {\n      onCapture: handleColorDrag,\n      onDrag: handleColorDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n\n    function handleHueDrag(e: MouseEvent | RealTouchEvent) {\n      const { colorPosition } = hsb2positions(hsbRef.current, rectsRef.current!);\n      const huePosition = Math.min(Math.max(0, e.pageX! - hueRect.offsetLeft), hueRect.width - 1);\n\n      setHsb(positions2hsb({ colorPosition, huePosition }, rectsRef.current!));\n      markIsDragging();\n\n      return true;\n    }\n\n    captureEvents(huePickerRef.current!, {\n      onCapture: handleHueDrag,\n      onDrag: handleHueDrag,\n      onRelease: unmarkIsDragging,\n      onClick: unmarkIsDragging,\n      selectorToPreventScroll: '.SettingsGeneralBackgroundColor',\n      withCursor: true,\n    });\n  }, [markIsDragging, unmarkIsDragging]);\n\n  const { colorPosition = [0, 0], huePosition = 0 } = rectsRef.current ? hsb2positions(hsb, rectsRef.current) : {};\n  const hex = rgb2hex(hsb2rgb(hsb));\n  const hue = hsb[0];\n  const hueHex = rgb2hex(hsb2rgb([hue, 1, 1]));\n\n  // Save value and update inputs when HSL changes\n  useEffect(() => {\n    const rgb = hsb2rgb(hsb);\n    const color = `#${rgb2hex(rgb)}`;\n\n    setRgbInput(rgb.join(', '));\n    setHexInput(color);\n\n    if (!isFirstRunRef.current) {\n      const patternColor = getPatternColor(rgb);\n      setThemeSettings({\n        theme: themeRef.current!,\n        background: undefined,\n        backgroundColor: color,\n        patternColor,\n      });\n    }\n    isFirstRunRef.current = false;\n  }, [hsb, setThemeSettings]);\n\n  // Redraw color picker when hue changes\n  useEffect(() => {\n    drawColor(colorPickerRef.current!.firstChild as HTMLCanvasElement, hue, colorCtxRef, rectsRef);\n  }, [hue]);\n\n  // Initially draw hue picker\n  useEffect(() => {\n    drawHue(huePickerRef.current!.firstChild as HTMLCanvasElement);\n  }, []);\n\n  const handleRgbChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const rgbValue = e.currentTarget.value.replace(/[^\\d, ]/g, '').slice(0, 13);\n\n    if (rgbValue.match(/^\\d{1,3},\\s?\\d{1,3},\\s?\\d{1,3}$/)) {\n      const rgb = rgbValue.split(',').map((channel) => Number(channel.trim())) as [number, number, number];\n      setHsb(rgb2hsb(rgb));\n    }\n\n    e.currentTarget.value = rgbValue;\n  }, []);\n\n  const handleHexChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const hexValue = e.currentTarget.value.replace(/[^0-9a-fA-F]/g, '').slice(0, 6);\n\n    if (hexValue.match(/^#?[0-9a-fA-F]{6}$/)) {\n      setHsb(rgb2hsb(hex2rgb(hexValue.replace('#', ''))));\n    }\n\n    e.currentTarget.value = hexValue;\n  }, []);\n\n  const handlePredefinedColorClick = useCallback((e: React.MouseEvent<HTMLInputElement>) => {\n    setHsb(rgb2hsb(hex2rgb(e.currentTarget.dataset.color!.replace('#', ''))));\n  }, []);\n\n  const className = buildClassName(\n    'SettingsGeneralBackgroundColor settings-content custom-scroll',\n    isDragging && 'is-dragging',\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div ref={containerRef} className={className}>\n      <div className=\"settings-item pt-3\">\n        <div ref={colorPickerRef} className=\"color-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translate(${colorPosition[0]}px, ${colorPosition[1]}px); background-color: #${hex};`}\n          />\n        </div>\n        <div ref={huePickerRef} className=\"hue-picker\">\n          <canvas />\n          <div\n            className=\"handle\"\n            style={`transform: translateX(${huePosition}px); background-color: #${hueHex};`}\n          />\n        </div>\n        <div className=\"tools\">\n          <InputText value={hexInput} label=\"HEX\" onChange={handleHexChange} />\n          <InputText value={rgbInput} label=\"RGB\" onChange={handleRgbChange} />\n        </div>\n      </div>\n      <div className=\"predefined-colors\">\n        {PREDEFINED_COLORS.map((color) => (\n          <div\n            className={buildClassName('predefined-color', color === `#${hex}` ? 'active' : undefined)}\n            data-color={color}\n            style={`background-color: ${color};`}\n            onClick={handlePredefinedColorClick}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nfunction getInitialHsb(backgroundColor?: string) {\n  return backgroundColor && backgroundColor.startsWith('#')\n    ? rgb2hsb(hex2rgb(backgroundColor.replace('#', '')))\n    : DEFAULT_HSB;\n}\n\nfunction hsb2positions(hsb: [number, number, number], rects: CanvasRects) {\n  return {\n    colorPosition: [\n      Math.round((hsb[1]) * (rects.colorRect.width - 1)),\n      Math.round((1 - hsb[2]) * (rects.colorRect.height - 1)),\n    ],\n    huePosition: Math.round(hsb[0] * (rects.hueRect.width - 1)),\n  };\n}\n\nfunction positions2hsb(\n  { colorPosition, huePosition }: { colorPosition: number[]; huePosition: number },\n  rects: CanvasRects,\n): [number, number, number] {\n  return [\n    huePosition / (rects.hueRect.width - 1),\n    colorPosition[0] / (rects.colorRect.width - 1),\n    1 - colorPosition[1] / (rects.colorRect.height - 1),\n  ];\n}\n\nfunction drawColor(\n  canvas: HTMLCanvasElement,\n  hue: number,\n  colorCtxRef: MutableRefObject<CanvasRenderingContext2D | undefined>,\n  rectsRef: RefObject<CanvasRects | undefined>,\n) {\n  let w: number;\n  let h: number;\n  let ctx: CanvasRenderingContext2D;\n\n  if (!colorCtxRef.current || !rectsRef.current) {\n    // First run\n    w = canvas.offsetWidth;\n    h = canvas.offsetHeight;\n    ctx = canvas.getContext('2d')!;\n\n    canvas.width = w;\n    canvas.height = h;\n\n    colorCtxRef.current = ctx;\n  } else {\n    w = rectsRef.current.colorRect.width;\n    h = rectsRef.current.colorRect.height;\n    ctx = colorCtxRef.current;\n  }\n\n  const imgData = ctx!.createImageData(w, h);\n  const pixels = imgData.data;\n  const col = hsb2rgb([hue, 1, 1]);\n\n  let index = 0;\n\n  for (let y = 0; y < h; y++) {\n    const perY = 1 - y / (h - 1);\n    const st = [255 * perY, 255 * perY, 255 * perY];\n    const ed = [col[0] * perY, col[1] * perY, col[2] * perY];\n    for (let x = 0; x < w; x++) {\n      const perX = x / (w - 1);\n      pixels[index++] = st[0] + (ed[0] - st[0]) * perX;\n      pixels[index++] = st[1] + (ed[1] - st[1]) * perX;\n      pixels[index++] = st[2] + (ed[2] - st[2]) * perX;\n      pixels[index++] = 255;\n    }\n  }\n\n  ctx!.putImageData(imgData, 0, 0);\n}\n\nfunction drawHue(canvas: HTMLCanvasElement) {\n  const w = canvas.offsetWidth;\n  const h = 1;\n  canvas.width = w;\n  canvas.height = h;\n  const ctx = canvas.getContext('2d')!;\n\n  const imgData = ctx.createImageData(w, h);\n  const pixels = imgData.data;\n\n  let index = 0;\n\n  for (let x = 0; x < w; x++) {\n    const hue = x / (w - 1);\n    const rgb = hsb2rgb([hue, 1, 1]);\n    /* eslint-disable prefer-destructuring */\n    pixels[index++] = rgb[0];\n    pixels[index++] = rgb[1];\n    pixels[index++] = rgb[2];\n    /* eslint-enable prefer-destructuring */\n    pixels[index++] = 255;\n  }\n\n  ctx.putImageData(imgData, 0, 0);\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const theme = selectTheme(global);\n    const { backgroundColor } = global.settings.themes[theme] || {};\n    return {\n      backgroundColor,\n      theme,\n    };\n  },\n)(SettingsGeneralBackground));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport { SettingsScreens } from '../../../types';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLang from '../../../hooks/useLang';\nimport useMultiClick from '../../../hooks/useMultiClick';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\n\ntype OwnProps = {\n  currentScreen: SettingsScreens;\n  editedFolderId?: number;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\nconst SettingsHeader: FC<OwnProps> = ({\n  currentScreen,\n  editedFolderId,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    signOut,\n    openDeleteChatFolderModal,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isSignOutDialogOpen, setIsSignOutDialogOpen] = useState(false);\n\n  const handleMultiClick = useMultiClick(5, () => {\n    onScreenSelect(SettingsScreens.Experimental);\n  });\n\n  const openSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(true);\n  }, []);\n\n  const closeSignOutConfirmation = useCallback(() => {\n    setIsSignOutDialogOpen(false);\n  }, []);\n\n  const openDeleteFolderConfirmation = useCallback(() => {\n    if (!editedFolderId) return;\n\n    openDeleteChatFolderModal({ folderId: editedFolderId });\n  }, [editedFolderId, openDeleteChatFolderModal]);\n\n  const handleSignOutMessage = useCallback(() => {\n    closeSignOutConfirmation();\n    signOut({ forceInitApi: true });\n  }, [closeSignOutConfirmation, signOut]);\n\n  const SettingsMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  function renderHeaderContent() {\n    switch (currentScreen) {\n      case SettingsScreens.EditProfile:\n        return <h3>{oldLang('lng_settings_information')}</h3>;\n      case SettingsScreens.General:\n        return <h3>{oldLang('General')}</h3>;\n      case SettingsScreens.QuickReaction:\n        return <h3>{oldLang('DoubleTapSetting')}</h3>;\n      case SettingsScreens.CustomEmoji:\n        return <h3>{oldLang('Emoji')}</h3>;\n      case SettingsScreens.Notifications:\n        return <h3>{oldLang('Notifications')}</h3>;\n      case SettingsScreens.DataStorage:\n        return <h3>{oldLang('DataSettings')}</h3>;\n      case SettingsScreens.Privacy:\n        return <h3>{oldLang('PrivacySettings')}</h3>;\n      case SettingsScreens.Language:\n        return <h3>{oldLang('Language')}</h3>;\n      case SettingsScreens.DoNotTranslate:\n        return <h3>{oldLang('DoNotTranslate')}</h3>;\n      case SettingsScreens.Stickers:\n        return <h3>{oldLang('StickersName')}</h3>;\n      case SettingsScreens.Experimental:\n        return <h3>{oldLang('lng_settings_experimental')}</h3>;\n\n      case SettingsScreens.GeneralChatBackground:\n        return <h3>{oldLang('ChatBackground')}</h3>;\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return <h3>{oldLang('SetColor')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumber:\n        return <h3>{oldLang('PrivacyPhone')}</h3>;\n      case SettingsScreens.PrivacyLastSeen:\n        return <h3>{oldLang('PrivacyLastSeen')}</h3>;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return <h3>{oldLang('Privacy.ProfilePhoto')}</h3>;\n      case SettingsScreens.PrivacyBio:\n        return <h3>{oldLang('PrivacyBio')}</h3>;\n      case SettingsScreens.PrivacyBirthday:\n        return <h3>{oldLang('PrivacyBirthday')}</h3>;\n      case SettingsScreens.PrivacyGifts:\n        return <h3>{lang('PrivacyGifts')}</h3>;\n      case SettingsScreens.PrivacyForwarding:\n        return <h3>{oldLang('PrivacyForwards')}</h3>;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return <h3>{oldLang('PrivacyVoiceMessages')}</h3>;\n      case SettingsScreens.PrivacyMessages:\n        return <h3>{oldLang('PrivacyMessages')}</h3>;\n      case SettingsScreens.PrivacyGroupChats:\n        return <h3>{oldLang('AutodownloadGroupChats')}</h3>;\n      case SettingsScreens.PrivacyPhoneCall:\n        return <h3>{oldLang('Calls')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n        return <h3>{oldLang('AlwaysShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return <h3>{oldLang('NeverShareWith')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n        return <h3>{oldLang('AlwaysAllow')}</h3>;\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n        return <h3>{oldLang('NeverAllow')}</h3>;\n\n      case SettingsScreens.PrivacyNoPaidMessages:\n        return <h3>{lang('RemoveFeeTitle')}</h3>;\n\n      case SettingsScreens.Performance:\n        return <h3>{lang('MenuAnimations')}</h3>;\n\n      case SettingsScreens.ActiveSessions:\n        return <h3>{oldLang('SessionsTitle')}</h3>;\n      case SettingsScreens.ActiveWebsites:\n        return <h3>{oldLang('OtherWebSessions')}</h3>;\n      case SettingsScreens.PrivacyBlockedUsers:\n        return <h3>{oldLang('BlockedUsers')}</h3>;\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaEnabled:\n        return <h3>{oldLang('TwoStepVerification')}</h3>;\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n        return <h3>{oldLang('PleaseReEnterPassword')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaChangePasswordHint:\n        return <h3>{oldLang('PasswordHint')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaRecoveryEmail:\n        return <h3>{oldLang('RecoveryEmailTitle')}</h3>;\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return <h3>Recovery Email Code</h3>;\n      case SettingsScreens.TwoFaCongratulations:\n        return <h3>{oldLang('TwoStepVerificationPasswordSet')}</h3>;\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n        return <h3>{oldLang('PleaseEnterCurrentPassword')}</h3>;\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n        return <h3>{oldLang('Passcode')}</h3>;\n\n      case SettingsScreens.PasscodeTurnOff:\n        return <h3>{oldLang('PasscodeController.Disable.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n        return <h3>{oldLang('PasscodeController.Change.Title')}</h3>;\n\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n        return <h3>{oldLang('PasscodeController.ReEnterPasscode.Placeholder')}</h3>;\n\n      case SettingsScreens.Folders:\n        return <h3>{oldLang('Filters')}</h3>;\n      case SettingsScreens.FoldersCreateFolder:\n        return <h3>{oldLang('FilterNew')}</h3>;\n      case SettingsScreens.FoldersShare:\n        return <h3>{oldLang('FolderLinkScreen.Title')}</h3>;\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n        return (\n          <div className=\"settings-main-header\">\n            <h3>{oldLang('FilterEdit')}</h3>\n            {Boolean(editedFolderId) && (\n              <DropdownMenu\n                className=\"settings-more-menu\"\n                trigger={SettingsMenuButton}\n                positionX=\"right\"\n              >\n                <MenuItem icon=\"delete\" destructive onClick={openDeleteFolderConfirmation}>\n                  {oldLang('Delete')}\n                </MenuItem>\n              </DropdownMenu>\n            )}\n          </div>\n        );\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n        return (\n          <h3>\n            {oldLang(\n              currentScreen === SettingsScreens.FoldersIncludedChats\n                  || currentScreen === SettingsScreens.FoldersIncludedChatsFromChatList\n                ? 'FilterInclude' : 'FilterExclude',\n            )}\n          </h3>\n        );\n      default:\n        return (\n          <div className=\"settings-main-header\">\n            {/* eslint-disable-next-line jsx-a11y/no-noninteractive-element-interactions */}\n            <h3 onClick={handleMultiClick}>\n              {oldLang('SETTINGS')}\n            </h3>\n\n            <Button\n              round\n              ripple={!isMobile}\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => onScreenSelect(SettingsScreens.EditProfile)}\n              ariaLabel={oldLang('lng_settings_information')}\n            >\n              <Icon name=\"edit\" />\n            </Button>\n            <DropdownMenu\n              className=\"settings-more-menu\"\n              trigger={SettingsMenuButton}\n              positionX=\"right\"\n            >\n              <MenuItem icon=\"logout\" onClick={openSignOutConfirmation}>{oldLang('LogOutTitle')}</MenuItem>\n            </DropdownMenu>\n          </div>\n        );\n    }\n  }\n\n  return (\n    <div className=\"left-header\">\n      <Button\n        round\n        size=\"smaller\"\n        color=\"translucent\"\n        onClick={onReset}\n        ariaLabel={oldLang('AccDescrGoBack')}\n      >\n        <Icon name=\"arrow-left\" />\n      </Button>\n      {renderHeaderContent()}\n      <ConfirmDialog\n        isOpen={isSignOutDialogOpen}\n        onClose={closeSignOutConfirmation}\n        text={oldLang('lng_sure_logout')}\n        confirmLabel={oldLang('AccountSettings.Logout')}\n        confirmHandler={handleSignOutMessage}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(SettingsHeader);\n","import { useCallback, useRef } from '../lib/teact/teact';\n\nconst CLICK_TIMEOUT = 300;\n\nexport default function useMultiClick(amount: number, callback: NoneToVoidFunction) {\n  const currentAmountRef = useRef(0);\n  const timeoutRef = useRef<ReturnType<typeof setTimeout>>();\n  const handleClick = useCallback(() => {\n    currentAmountRef.current++;\n    if (currentAmountRef.current === amount) {\n      currentAmountRef.current = 0;\n      callback();\n      return;\n    }\n\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n\n    timeoutRef.current = setTimeout(() => {\n      currentAmountRef.current = 0;\n    }, CLICK_TIMEOUT);\n  }, [amount, callback]);\n\n  return handleClick;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiLanguage } from '../../../api/types';\nimport type { ISettings, LangCode } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium } from '../../../global/selectors';\nimport { oldSetLanguage } from '../../../util/oldLangProvider';\nimport { IS_TRANSLATION_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ItemPicker, { type ItemPickerOption } from '../../common/pickers/ItemPicker';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n  onScreenSelect: (screen: SettingsScreens) => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  languages?: ApiLanguage[];\n} & Pick<ISettings, | 'language' | 'canTranslate' | 'canTranslateChats' | 'doNotTranslate'>;\n\nconst SettingsLanguage: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  languages,\n  language,\n  canTranslate,\n  canTranslateChats,\n  doNotTranslate,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadLanguages,\n    setSettingOption,\n    openPremiumModal,\n  } = getActions();\n\n  const [selectedLanguage, setSelectedLanguage] = useState<string>(language);\n  const [isLoading, markIsLoading, unmarkIsLoading] = useFlag();\n\n  const canTranslateChatsEnabled = isCurrentUserPremium && canTranslateChats;\n\n  const lang = useOldLang();\n\n  useEffect(() => {\n    if (!languages?.length) {\n      loadLanguages();\n    }\n  }, [languages]);\n\n  const handleChange = useLastCallback((langCode: string) => {\n    setSelectedLanguage(langCode);\n    markIsLoading();\n\n    void oldSetLanguage(langCode as LangCode, () => {\n      unmarkIsLoading();\n\n      setSettingOption({ language: langCode as LangCode });\n    });\n  });\n\n  const options = useMemo(() => {\n    if (!languages) return undefined;\n    const currentLangCode = (window.navigator.language || 'en').toLowerCase();\n    const shortLangCode = currentLangCode.substr(0, 2);\n\n    return languages.map(({ langCode, nativeName, name }) => ({\n      value: langCode,\n      label: nativeName,\n      subLabel: name,\n      isLoading: langCode === selectedLanguage && isLoading,\n    } satisfies ItemPickerOption)).sort((a) => {\n      return currentLangCode && (a.value === currentLangCode || a.value === shortLangCode) ? -1 : 0;\n    });\n  }, [isLoading, languages, selectedLanguage]);\n\n  const handleShouldTranslateChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslate: newValue });\n  });\n\n  const handleShouldTranslateChatsChange = useLastCallback((newValue: boolean) => {\n    setSettingOption({ canTranslateChats: newValue });\n  });\n\n  const handleShouldTranslateChatsClick = useLastCallback(() => {\n    if (!isCurrentUserPremium) {\n      openPremiumModal({\n        initialSection: 'translations',\n      });\n    }\n  });\n\n  const doNotTranslateText = useMemo(() => {\n    if (!IS_TRANSLATION_SUPPORTED || !doNotTranslate.length) {\n      return undefined;\n    }\n\n    if (doNotTranslate.length === 1) {\n      const originalNames = new Intl.DisplayNames([language], { type: 'language' });\n      return originalNames.of(doNotTranslate[0])!;\n    }\n\n    return lang('Languages', doNotTranslate.length);\n  }, [doNotTranslate, lang, language]);\n\n  const handleDoNotSelectOpen = useLastCallback(() => {\n    onScreenSelect(SettingsScreens.DoNotTranslate);\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content settings-language custom-scroll\">\n      {IS_TRANSLATION_SUPPORTED && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('ShowTranslateButton')}\n            checked={canTranslate}\n            onCheck={handleShouldTranslateChange}\n          />\n          <Checkbox\n            label={lang('ShowTranslateChatButton')}\n            checked={canTranslateChatsEnabled}\n            disabled={!isCurrentUserPremium}\n            rightIcon={!isCurrentUserPremium ? 'lock' : undefined}\n            onClickLabel={handleShouldTranslateChatsClick}\n            onCheck={handleShouldTranslateChatsChange}\n          />\n          {(canTranslate || canTranslateChatsEnabled) && (\n            <ListItem\n              narrow\n              onClick={handleDoNotSelectOpen}\n            >\n              {lang('DoNotTranslate')}\n              <span className=\"settings-item__current-value\">{doNotTranslateText}</span>\n            </ListItem>\n          )}\n          <p className=\"settings-item-description mb-0 mt-1\">\n            {lang('lng_translate_settings_about')}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item settings-item-picker\">\n        <h4 className=\"settings-item-header\">\n          {lang('Localization.InterfaceLanguage')}\n        </h4>\n        {options ? (\n          <ItemPicker\n            items={options}\n            selectedValue={selectedLanguage}\n            forceRenderAllItems\n            onSelectedValueChange={handleChange}\n            itemInputType=\"radio\"\n            className=\"settings-picker\"\n          />\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      language, canTranslate, canTranslateChats, doNotTranslate,\n    } = global.settings.byKey;\n    const languages = global.settings.languages;\n\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return {\n      isCurrentUserPremium,\n      languages,\n      language,\n      canTranslate,\n      canTranslateChats,\n      doNotTranslate,\n    };\n  },\n)(SettingsLanguage));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiStarsAmount } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { FAQ_URL, PRIVACY_URL } from '../../../config';\nimport { formatStarsAmount } from '../../../global/helpers/payments';\nimport {\n  selectIsGiveawayGiftsPurchaseAvailable,\n  selectIsPremiumPurchaseBlocked,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport ChatExtra from '../../common/profile/ChatExtra';\nimport ProfileInfo from '../../common/ProfileInfo';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  sessionCount: number;\n  currentUserId?: string;\n  canBuyPremium?: boolean;\n  isGiveawayAvailable?: boolean;\n  starsBalance?: ApiStarsAmount;\n};\n\nconst SettingsMain: FC<OwnProps & StateProps> = ({\n  isActive,\n  currentUserId,\n  sessionCount,\n  canBuyPremium,\n  isGiveawayAvailable,\n  starsBalance,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadMoreProfilePhotos,\n    openPremiumModal,\n    openSupportChat,\n    openUrl,\n    openGiftRecipientPicker,\n    openStarsBalanceModal,\n  } = getActions();\n\n  const [isSupportDialogOpen, openSupportDialog, closeSupportDialog] = useFlag(false);\n\n  const lang = useLang();\n\n  useEffect(() => {\n    if (currentUserId) {\n      loadMoreProfilePhotos({ peerId: currentUserId, isPreload: true });\n    }\n  }, [currentUserId]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleOpenSupport = useLastCallback(() => {\n    openSupportChat();\n    closeSupportDialog();\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-main-menu self-profile\">\n        {currentUserId && (\n          <ProfileInfo\n            peerId={currentUserId}\n            canPlayVideo={Boolean(isActive)}\n            forceShowSelf\n          />\n        )}\n        {currentUserId && (\n          <ChatExtra\n            chatOrUserId={currentUserId}\n            isInSettings\n          />\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"settings\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.General)}\n        >\n          {lang('TelegramGeneralSettingsViewController')}\n        </ListItem>\n        <ListItem\n          icon=\"animations\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Performance)}\n        >\n          {lang('MenuAnimations')}\n        </ListItem>\n        <ListItem\n          icon=\"unmute\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Notifications)}\n        >\n          {lang('Notifications')}\n        </ListItem>\n        <ListItem\n          icon=\"data\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.DataStorage)}\n        >\n          {lang('DataSettings')}\n        </ListItem>\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Privacy)}\n        >\n          {lang('PrivacySettings')}\n        </ListItem>\n        <ListItem\n          icon=\"folder\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Folders)}\n        >\n          {lang('Filters')}\n        </ListItem>\n        <ListItem\n          icon=\"active-sessions\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.ActiveSessions)}\n        >\n          {lang('SessionsTitle')}\n          {sessionCount > 0 && (<span className=\"settings-item__current-value\">{sessionCount}</span>)}\n        </ListItem>\n        <ListItem\n          icon=\"language\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Language)}\n        >\n          {lang('Language')}\n          <span className=\"settings-item__current-value\">{lang.languageInfo.nativeName}</span>\n        </ListItem>\n        <ListItem\n          icon=\"stickers\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.Stickers)}\n        >\n          {lang('MenuStickers')}\n        </ListItem>\n      </div>\n      <div className=\"settings-main-menu\">\n        {canBuyPremium && (\n          <ListItem\n            leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openPremiumModal()}\n          >\n            {lang('TelegramPremium')}\n          </ListItem>\n        )}\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"gold\" size=\"big\" />}\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openStarsBalanceModal({})}\n        >\n          {lang('MenuStars')}\n          {Boolean(starsBalance) && (\n            <span className=\"settings-item__current-value\">\n              {formatStarsAmount(lang, starsBalance)}\n            </span>\n          )}\n        </ListItem>\n        {isGiveawayAvailable && (\n          <ListItem\n            icon=\"gift\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openGiftRecipientPicker()}\n          >\n            {lang('MenuSendGift')}\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-main-menu\">\n        <ListItem\n          icon=\"ask-support\"\n          narrow\n          onClick={openSupportDialog}\n        >\n          {lang('AskAQuestion')}\n        </ListItem>\n        <ListItem\n          icon=\"help\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: FAQ_URL })}\n        >\n          {lang('MenuTelegramFaq')}\n        </ListItem>\n        <ListItem\n          icon=\"privacy-policy\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => openUrl({ url: PRIVACY_URL })}\n        >\n          {lang('MenuPrivacyPolicy')}\n        </ListItem>\n      </div>\n      <ConfirmDialog\n        isOpen={isSupportDialogOpen}\n        confirmLabel={lang('OK')}\n        title={lang('AskAQuestion')}\n        textParts={lang('MenuAskText', undefined, { withNodes: true, renderTextFilters: ['br'] })}\n        confirmHandler={handleOpenSupport}\n        onClose={closeSupportDialog}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { currentUserId } = global;\n    const isGiveawayAvailable = selectIsGiveawayGiftsPurchaseAvailable(global);\n    const starsBalance = global.stars?.balance;\n\n    return {\n      sessionCount: global.activeSessions.orderedHashes.length,\n      currentUserId,\n      canBuyPremium: !selectIsPremiumPurchaseBlocked(global),\n      isGiveawayAvailable,\n      starsBalance,\n    };\n  },\n)(SettingsMain));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiNotifyPeerType, ApiPeerNotifySettings } from '../../../api/types';\n\nimport {\n  checkIfNotificationsSupported,\n  checkIfOfflinePushFailed,\n  playNotifySound,\n} from '../../../util/notifications';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useRunDebounced from '../../../hooks/useRunDebounced';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  notifyDefaults?: Record<ApiNotifyPeerType, ApiPeerNotifySettings>;\n  hasContactJoinedNotifications: boolean;\n  hasWebNotifications: boolean;\n  hasPushNotifications: boolean;\n  notificationSoundVolume: number;\n};\n\nconst SettingsNotifications: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  notifyDefaults,\n  hasContactJoinedNotifications,\n  hasPushNotifications,\n  hasWebNotifications,\n  notificationSoundVolume,\n}) => {\n  const {\n    loadNotificationSettings,\n    updateContactSignUpNotification,\n    updateNotificationSettings,\n    updateWebNotificationSettings,\n  } = getActions();\n\n  useEffect(() => {\n    loadNotificationSettings();\n  }, [loadNotificationSettings]);\n\n  const runDebounced = useRunDebounced(500, true);\n\n  const areNotificationsSupported = checkIfNotificationsSupported();\n  const areOfflineNotificationsSupported = areNotificationsSupported && !checkIfOfflinePushFailed();\n\n  const handleSettingsChange = useCallback((\n    e: ChangeEvent<HTMLInputElement>,\n    peerType: ApiNotifyPeerType,\n    setting: 'mute' | 'showPreviews',\n  ) => {\n    const currentIsMuted = Boolean(notifyDefaults?.[peerType]?.mutedUntil);\n    const currentShouldShowPreviews = Boolean(notifyDefaults?.[peerType]?.shouldShowPreviews);\n\n    updateNotificationSettings({\n      peerType,\n      isMuted: setting === 'mute' ? !e.target.checked : currentIsMuted,\n      shouldShowPreviews: setting === 'showPreviews' ? e.target.checked : currentShouldShowPreviews,\n    });\n  }, [notifyDefaults]);\n\n  const handleWebNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const isEnabled = e.target.checked;\n    updateWebNotificationSettings({\n      hasWebNotifications: isEnabled,\n      ...(!isEnabled && { hasPushNotifications: false }),\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePushNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateWebNotificationSettings({\n      hasPushNotifications: e.target.checked,\n    });\n  }, [updateWebNotificationSettings]);\n\n  const handlePrivateChatsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'users', 'mute');\n  }, [handleSettingsChange]);\n\n  const handlePrivateChatsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'users', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleGroupsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'groups', 'mute');\n  }, [handleSettingsChange]);\n\n  const handleGroupsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'groups', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleChannelsNotificationsChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'channels', 'mute');\n  }, [handleSettingsChange]);\n\n  const handleChannelsPreviewChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    handleSettingsChange(e, 'channels', 'showPreviews');\n  }, [handleSettingsChange]);\n\n  const handleContactNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    updateContactSignUpNotification({\n      isSilent: !e.target.checked,\n    });\n  }, [updateContactSignUpNotification]);\n\n  const handleVolumeChange = useCallback((volume: number) => {\n    updateWebNotificationSettings({\n      notificationSoundVolume: volume,\n    });\n    runDebounced(() => playNotifySound(undefined, volume));\n  }, [runDebounced, updateWebNotificationSettings]);\n\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('NotificationsWeb')}\n        </h4>\n        <Checkbox\n          label={lang('NotificationsWeb')}\n          subLabel={lang(hasWebNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={hasWebNotifications}\n          disabled={!areNotificationsSupported}\n          onChange={handleWebNotificationsChange}\n        />\n        <Checkbox\n          label={lang('NotificationsOffline')}\n          disabled={!hasWebNotifications || !areOfflineNotificationsSupported}\n          subLabel={areOfflineNotificationsSupported\n            ? lang(hasPushNotifications ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')\n            : lang('SettingsOfflineNotificationUnsupported')}\n          checked={hasPushNotifications}\n          onChange={handlePushNotificationsChange}\n        />\n        <div className=\"settings-item-slider\">\n          <RangeSlider\n            label={lang('NotificationsSound')}\n            min={0}\n            max={10}\n            disabled={!areNotificationsSupported}\n            value={notificationSoundVolume}\n            onChange={handleVolumeChange}\n          />\n        </div>\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('AutodownloadPrivateChats')}\n        </h4>\n\n        <Checkbox\n          label={lang('NotificationsForPrivateChats')}\n          subLabel={lang(notifyDefaults?.users?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.users?.mutedUntil)}\n          onChange={handlePrivateChatsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.users?.mutedUntil}\n          subLabel={lang(notifyDefaults?.users?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.users?.shouldShowPreviews)}\n          onChange={handlePrivateChatsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterGroups')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForGroups')}\n          subLabel={lang(notifyDefaults?.groups?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.groups?.mutedUntil)}\n          onChange={handleGroupsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.groups?.mutedUntil}\n          subLabel={lang(notifyDefaults?.groups?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.groups?.shouldShowPreviews)}\n          onChange={handleGroupsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('FilterChannels')}</h4>\n\n        <Checkbox\n          label={lang('NotificationsForChannels')}\n          subLabel={lang(notifyDefaults?.channels?.mutedUntil\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.channels?.mutedUntil)}\n          onChange={handleChannelsNotificationsChange}\n        />\n        <Checkbox\n          label={lang('MessagePreview')}\n          disabled={!notifyDefaults?.channels?.mutedUntil}\n          subLabel={lang(notifyDefaults?.channels?.shouldShowPreviews\n            ? 'UserInfoNotificationsEnabled' : 'UserInfoNotificationsDisabled')}\n          checked={Boolean(notifyDefaults?.channels?.shouldShowPreviews)}\n          onChange={handleChannelsPreviewChange}\n        />\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>{lang('PhoneOther')}</h4>\n\n        <Checkbox\n          label={lang('ContactJoined')}\n          checked={hasContactJoinedNotifications}\n          onChange={handleContactNotificationChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      hasContactJoinedNotifications: Boolean(global.settings.byKey.hasContactJoinedNotifications),\n      hasWebNotifications: global.settings.byKey.hasWebNotifications,\n      hasPushNotifications: global.settings.byKey.hasPushNotifications,\n      notificationSoundVolume: global.settings.byKey.notificationSoundVolume,\n    };\n  },\n)(SettingsNotifications));\n","import React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { AnimationLevel, PerformanceType, PerformanceTypeKey } from '../../../types';\nimport type { RegularLangKey } from '../../../types/language';\n\nimport {\n  ANIMATION_LEVEL_CUSTOM, ANIMATION_LEVEL_MAX, ANIMATION_LEVEL_MED, ANIMATION_LEVEL_MIN,\n} from '../../../config';\nimport {\n  INITIAL_PERFORMANCE_STATE_MAX,\n  INITIAL_PERFORMANCE_STATE_MID,\n  INITIAL_PERFORMANCE_STATE_MIN,\n} from '../../../global/initialState';\nimport { selectPerformanceSettings } from '../../../global/selectors';\nimport { areDeepEqual } from '../../../util/areDeepEqual';\nimport { IS_BACKDROP_BLUR_SUPPORTED, IS_SNAP_EFFECT_SUPPORTED } from '../../../util/windowEnvironment';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\n\nimport Checkbox from '../../ui/Checkbox';\nimport RangeSlider from '../../ui/RangeSlider';\n\ntype PerformanceSection = [RegularLangKey, PerformanceOption[]];\ntype PerformanceOption = {\n  key: PerformanceTypeKey;\n  label: RegularLangKey;\n  disabled?: boolean;\n};\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  performanceSettings: PerformanceType;\n};\n\nconst ANIMATION_LEVEL_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderMedium',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst ANIMATION_LEVEL_CUSTOM_OPTIONS: RegularLangKey[] = [\n  'SettingsPerformanceSliderLow',\n  'SettingsPerformanceSliderCustom',\n  'SettingsPerformanceSliderHigh',\n];\n\nconst PERFORMANCE_OPTIONS: PerformanceSection[] = [\n  ['SettingsPerformanceInterfaceAnimations', [\n    { key: 'pageTransitions', label: 'SettingsPerformancePageTransitions' },\n    { key: 'messageSendingAnimations', label: 'SettingsPerformanceSending' },\n    { key: 'mediaViewerAnimations', label: 'SettingsPerformanceMediaViewer' },\n    { key: 'messageComposerAnimations', label: 'SettingsPerformanceComposer' },\n    { key: 'contextMenuAnimations', label: 'SettingsPerformanceContextAnimation' },\n    { key: 'contextMenuBlur', label: 'SettingsPerformanceContextBlur', disabled: !IS_BACKDROP_BLUR_SUPPORTED },\n    { key: 'rightColumnAnimations', label: 'SettingsPerformanceRightColumn' },\n    { key: 'snapEffect', label: 'SettingsPerformanceThanos' },\n  ]],\n  ['SettingsPerformanceStickers', [\n    { key: 'animatedEmoji', label: 'SettingsPerformanceAnimatedEmoji' },\n    { key: 'loopAnimatedStickers', label: 'SettingsPerformanceLoopStickers' },\n    { key: 'reactionEffects', label: 'SettingsPerformanceReactionEffects' },\n    { key: 'stickerEffects', label: 'SettingsPerformanceStickerEffects' },\n  ]],\n  ['SettingsPerformanceMediaAutoplay', [\n    { key: 'autoplayGifs', label: 'SettingsPerformanceAutoplayGif' },\n    { key: 'autoplayVideos', label: 'SettingsPerformanceAutoplayVideo' },\n  ]],\n];\n\nfunction SettingsPerformance({\n  isActive,\n  performanceSettings,\n  onReset,\n}: OwnProps & StateProps) {\n  const {\n    setSettingOption,\n    updatePerformanceSettings,\n  } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const lang = useLang();\n  const [sectionExpandedStates, setSectionExpandedStates] = useState<Record<number, boolean>>({});\n\n  const sectionCheckedStates = useMemo(() => {\n    return PERFORMANCE_OPTIONS.reduce((acc, [, options], index) => {\n      acc[index] = options.every(({ key }) => performanceSettings[key]);\n\n      return acc;\n    }, {} as Record<number, boolean>);\n  }, [performanceSettings]);\n\n  const animationLevelState = useMemo(() => {\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MAX)) {\n      return ANIMATION_LEVEL_MAX;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MIN)) {\n      return ANIMATION_LEVEL_MIN;\n    }\n    if (areDeepEqual(performanceSettings, INITIAL_PERFORMANCE_STATE_MID)) {\n      return ANIMATION_LEVEL_MED;\n    }\n\n    return ANIMATION_LEVEL_CUSTOM;\n  }, [performanceSettings]);\n\n  const animationLevelOptions = useMemo(() => {\n    const options = animationLevelState === ANIMATION_LEVEL_CUSTOM\n      ? ANIMATION_LEVEL_CUSTOM_OPTIONS\n      : ANIMATION_LEVEL_OPTIONS;\n\n    return options.map((option) => lang(option));\n  }, [animationLevelState, lang]);\n\n  const handleToggleSection = useCallback((e: React.MouseEvent, index?: string) => {\n    e.preventDefault();\n    const sectionIndex = Number(index);\n\n    setSectionExpandedStates((prev) => ({\n      ...prev,\n      [sectionIndex]: !prev[sectionIndex],\n    }));\n  }, []);\n\n  const handleAnimationLevelChange = useCallback((newLevel: number) => {\n    const performance = newLevel === ANIMATION_LEVEL_MIN\n      ? INITIAL_PERFORMANCE_STATE_MIN\n      : (newLevel === ANIMATION_LEVEL_MED ? INITIAL_PERFORMANCE_STATE_MID : INITIAL_PERFORMANCE_STATE_MAX);\n\n    setSettingOption({ animationLevel: newLevel as AnimationLevel });\n    updatePerformanceSettings(performance);\n  }, [setSettingOption]);\n\n  const handlePropertyGroupChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n    const perfomanceSection = PERFORMANCE_OPTIONS.find(([sectionName]) => sectionName === name);\n    if (!perfomanceSection) {\n      return;\n    }\n\n    const newSettings = perfomanceSection[1].reduce((acc, { key }) => {\n      acc[key] = checked;\n      return acc;\n    }, {} as Partial<PerformanceType>);\n\n    updatePerformanceSettings(newSettings);\n  }, []);\n\n  const handlePropertyChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, checked } = e.target;\n\n    updatePerformanceSettings({ [name as PerformanceTypeKey]: checked });\n  }, []);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderTitle')}\n        </h4>\n        <p className=\"settings-item-description\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('SettingsPerformanceSliderSubtitle')}\n        </p>\n\n        <RangeSlider\n          options={animationLevelOptions}\n          value={animationLevelState === ANIMATION_LEVEL_CUSTOM ? ANIMATION_LEVEL_MED : animationLevelState}\n          onChange={handleAnimationLevelChange}\n        />\n      </div>\n\n      <div className=\"settings-item-simple settings-item__with-shifted-dropdown\">\n        <h3 className=\"settings-item-header\" dir=\"auto\">Resource-Intensive Processes</h3>\n\n        {PERFORMANCE_OPTIONS.map(([sectionName, options], index) => {\n          return (\n            <div\n              key={sectionName}\n              className=\"settings-dropdown-section\"\n            >\n              <div className=\"ListItem with-checkbox\">\n                <Checkbox\n                  name={sectionName}\n                  value={index.toString()}\n                  checked={sectionCheckedStates[index]}\n                  label={lang(sectionName)}\n                  rightIcon={sectionExpandedStates[index] ? 'up' : 'down'}\n                  onChange={handlePropertyGroupChange}\n                  onClickLabel={handleToggleSection}\n                />\n              </div>\n              {Boolean(sectionExpandedStates[index]) && (\n                <div className=\"DropdownList DropdownList--open\">\n                  {options.map(({ key, label, disabled }) => {\n                    if (key === 'snapEffect' && !IS_SNAP_EFFECT_SUPPORTED) return undefined;\n                    return (\n                      <Checkbox\n                        key={key}\n                        name={key}\n                        checked={performanceSettings[key]}\n                        label={lang(label)}\n                        disabled={disabled}\n                        onChange={handlePropertyChange}\n                      />\n                    );\n                  })}\n                </div>\n              )}\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  return {\n    performanceSettings: selectPerformanceSettings(global),\n  };\n})(SettingsPerformance));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanSetPasscode, selectIsCurrentUserPremium } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  isCurrentUserPremium?: boolean;\n  hasPassword?: boolean;\n  hasPasscode?: boolean;\n  canSetPasscode?: boolean;\n  blockedCount: number;\n  webAuthCount: number;\n  isSensitiveEnabled?: boolean;\n  canChangeSensitive?: boolean;\n  canDisplayAutoarchiveSetting: boolean;\n  shouldArchiveAndMuteNewNonContact?: boolean;\n  shouldNewNonContactPeersRequirePremium?: boolean;\n  shouldChargeForMessages: boolean;\n  canDisplayChatInTitle?: boolean;\n  privacy: GlobalState['settings']['privacy'];\n};\n\nconst SettingsPrivacy: FC<OwnProps & StateProps> = ({\n  isActive,\n  isCurrentUserPremium,\n  hasPassword,\n  hasPasscode,\n  blockedCount,\n  webAuthCount,\n  isSensitiveEnabled,\n  canChangeSensitive,\n  canDisplayAutoarchiveSetting,\n  shouldArchiveAndMuteNewNonContact,\n  shouldNewNonContactPeersRequirePremium,\n  shouldChargeForMessages,\n  canDisplayChatInTitle,\n  canSetPasscode,\n  privacy,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    loadPrivacySettings,\n    loadBlockedUsers,\n    loadContentSettings,\n    updateContentSettings,\n    loadGlobalPrivacySettings,\n    updateGlobalPrivacySettings,\n    loadWebAuthorizations,\n    setSettingOption,\n  } = getActions();\n\n  useEffect(() => {\n    loadBlockedUsers();\n    loadPrivacySettings();\n    loadContentSettings();\n    loadWebAuthorizations();\n  }, []);\n\n  useEffect(() => {\n    if (isActive) {\n      loadGlobalPrivacySettings();\n    }\n  }, [isActive, loadGlobalPrivacySettings]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleArchiveAndMuteChange = useCallback((isEnabled: boolean) => {\n    updateGlobalPrivacySettings({\n      shouldArchiveAndMuteNewNonContact: isEnabled,\n    });\n  }, [updateGlobalPrivacySettings]);\n\n  const handleChatInTitleChange = useCallback((isChecked: boolean) => {\n    setSettingOption({\n      canDisplayChatInTitle: isChecked,\n    });\n  }, []);\n\n  const handleUpdateContentSettings = useCallback((isChecked: boolean) => {\n    updateContentSettings(isChecked);\n  }, [updateContentSettings]);\n\n  function getVisibilityValue(setting?: ApiPrivacySettings) {\n    if (!setting) return oldLang('Loading');\n\n    const { visibility, shouldAllowPremium, botsPrivacy } = setting;\n\n    const isAllowBots = botsPrivacy === 'allow';\n    const isVisibilityEverybody = visibility === 'everybody';\n    const shouldShowBotsString = isAllowBots && !isVisibilityEverybody;\n\n    const blockCount = setting.blockChatIds.length + setting.blockUserIds.length;\n    const allowCount = setting.allowChatIds.length + setting.allowUserIds.length;\n    const total = [];\n    if (blockCount) total.push(`-${blockCount}`);\n    if (allowCount && !isVisibilityEverybody) total.push(`+${allowCount}`);\n\n    const botPrivacyString = shouldShowBotsString ? lang('PrivacyValueBots') : '';\n    const totalString = lang.conjunction(total);\n\n    const exceptionString = [botPrivacyString, totalString].filter(Boolean).join(' ');\n    if (shouldShowBotsString && !isVisibilityEverybody) return exceptionString;\n\n    if (shouldAllowPremium) {\n      return oldLang(exceptionString ? 'ContactsAndPremium' : 'PrivacyPremium');\n    }\n\n    switch (visibility) {\n      case 'everybody':\n        return `${oldLang('P2PEverybody')} ${exceptionString}`;\n\n      case 'contacts':\n        return `${oldLang('P2PContacts')} ${exceptionString}`;\n\n      case 'nobody':\n        return `${oldLang('P2PNobody')} ${exceptionString}`;\n    }\n\n    return undefined;\n  }\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"delete-user\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBlockedUsers)}\n        >\n          {oldLang('BlockedUsers')}\n          <span className=\"settings-item__current-value\">{blockedCount || ''}</span>\n        </ListItem>\n        {canSetPasscode && (\n          <ListItem\n            icon=\"key\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(\n              hasPasscode ? SettingsScreens.PasscodeEnabled : SettingsScreens.PasscodeDisabled,\n            )}\n          >\n            <div className=\"multiline-item\">\n              <span className=\"title\">{oldLang('Passcode')}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {oldLang(hasPasscode ? 'PasswordOn' : 'PasswordOff')}\n              </span>\n            </div>\n          </ListItem>\n        )}\n        <ListItem\n          icon=\"lock\"\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(\n            hasPassword ? SettingsScreens.TwoFaEnabled : SettingsScreens.TwoFaDisabled,\n          )}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('TwoStepVerification')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {oldLang(hasPassword ? 'PasswordOn' : 'PasswordOff')}\n            </span>\n          </div>\n        </ListItem>\n        {webAuthCount > 0 && (\n          <ListItem\n            icon=\"web\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.ActiveWebsites)}\n          >\n            {oldLang('PrivacySettings.WebSessions')}\n            <span className=\"settings-item__current-value\">{webAuthCount}</span>\n          </ListItem>\n        )}\n      </div>\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{oldLang('PrivacyTitle')}</h4>\n\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneNumber)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyPhoneTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneNumber)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyLastSeen)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('LastSeenTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.lastSeen)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyProfilePhoto)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyProfilePhotoTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.profilePhoto)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBio)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBio')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.bio)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyBirthday)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyBirthday')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.birthday)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGifts)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{lang('PrivacyGifts')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.gifts)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyForwarding)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyForwardsTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.forwards)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyPhoneCall)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanCallMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.phoneCall)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          allowDisabledClick\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyVoiceMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyVoiceMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.voiceMessages)}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          rightElement={isCurrentUserPremium && <StarIcon size=\"big\" type=\"premium\" />}\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyMessages)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('PrivacyMessagesTitle')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {shouldChargeForMessages ? lang('PrivacyPaidMessagesValue')\n                : shouldNewNonContactPeersRequirePremium\n                  ? oldLang('PrivacyMessagesContactsAndPremium')\n                  : oldLang('P2PEverybody')}\n            </span>\n          </div>\n        </ListItem>\n        <ListItem\n          narrow\n          className=\"no-icon\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.PrivacyGroupChats)}\n        >\n          <div className=\"multiline-item\">\n            <span className=\"title\">{oldLang('WhoCanAddMe')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {getVisibilityValue(privacy.chatInvite)}\n            </span>\n          </div>\n        </ListItem>\n      </div>\n\n      {canChangeSensitive && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('lng_settings_sensitive_title')}\n          </h4>\n          <Checkbox\n            label={oldLang('lng_settings_sensitive_disable_filtering')}\n            subLabel={oldLang('lng_settings_sensitive_about')}\n            checked={Boolean(isSensitiveEnabled)}\n            disabled={!canChangeSensitive}\n            onCheck={handleUpdateContentSettings}\n          />\n        </div>\n      )}\n\n      {canDisplayAutoarchiveSetting && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('NewChatsFromNonContacts')}\n          </h4>\n          <Checkbox\n            label={oldLang('ArchiveAndMute')}\n            subLabel={oldLang('ArchiveAndMuteInfo')}\n            checked={Boolean(shouldArchiveAndMuteNewNonContact)}\n            onCheck={handleArchiveAndMuteChange}\n          />\n        </div>\n      )}\n\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n          {oldLang('lng_settings_window_system')}\n        </h4>\n        <Checkbox\n          label={oldLang('lng_settings_title_chat_name')}\n          checked={Boolean(canDisplayChatInTitle)}\n          onCheck={handleChatInTitleChange}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      settings: {\n        byKey: {\n          hasPassword, isSensitiveEnabled, canChangeSensitive, shouldArchiveAndMuteNewNonContact,\n          canDisplayChatInTitle, shouldNewNonContactPeersRequirePremium, nonContactPeersPaidStars,\n        },\n        privacy,\n      },\n      blocked,\n      passcode: {\n        hasPasscode,\n      },\n      appConfig,\n    } = global;\n\n    const shouldChargeForMessages = Boolean(nonContactPeersPaidStars);\n\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      hasPassword,\n      hasPasscode: Boolean(hasPasscode),\n      blockedCount: blocked.totalCount,\n      webAuthCount: global.activeWebSessions.orderedHashes.length,\n      isSensitiveEnabled,\n      canDisplayAutoarchiveSetting: Boolean(appConfig?.canDisplayAutoarchiveSetting),\n      shouldArchiveAndMuteNewNonContact,\n      canChangeSensitive,\n      shouldNewNonContactPeersRequirePremium,\n      shouldChargeForMessages,\n      privacy,\n      canDisplayChatInTitle,\n      canSetPasscode: selectCanSetPasscode(global),\n    };\n  },\n)(SettingsPrivacy));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  blockedIds: string[];\n  contactIds?: string[];\n  localContactIds?: string[];\n  currentUserId?: string;\n};\n\nconst BlockUserModal: FC<OwnProps & StateProps> = ({\n  usersById,\n  blockedIds,\n  contactIds,\n  localContactIds,\n  currentUserId,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    setUserSearchQuery,\n    blockUser,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  useEffect(() => {\n    setUserSearchQuery({ query: search });\n  }, [search, setUserSearchQuery]);\n\n  const filteredContactIds = useMemo(() => {\n    const availableContactIds = unique([\n      ...(contactIds || []),\n      ...(localContactIds || []),\n    ].filter((contactId) => {\n      return contactId !== currentUserId && !blockedIds.includes(contactId);\n    }));\n\n    return filterPeersByQuery({ ids: availableContactIds, query: search, type: 'user' })\n      .sort((firstId, secondId) => {\n        const firstName = getUserFullName(usersById[firstId]) || '';\n        const secondName = getUserFullName(usersById[secondId]) || '';\n\n        return firstName.localeCompare(secondName);\n      });\n  }, [blockedIds, contactIds, currentUserId, search, localContactIds, usersById]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    blockUser({ userId });\n    onClose();\n  }, [onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={filteredContactIds}\n      searchPlaceholder={lang('BlockedUsers.BlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      users: {\n        byId: usersById,\n      },\n      blocked: {\n        ids: blockedIds,\n      },\n      contactList,\n      currentUserId,\n    } = global;\n\n    return {\n      usersById,\n      blockedIds,\n      contactIds: contactList?.userIds,\n      localContactIds: selectTabState(global).userSearch.localUserIds,\n      currentUserId,\n    };\n  },\n)(BlockUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiCountryCode, ApiUser } from '../../../api/types';\n\nimport { CHAT_HEIGHT_PX } from '../../../config';\nimport { getMainUsername, isUserId } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatPhoneNumberWithCode } from '../../../util/phoneNumber';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport BlockUserModal from './BlockUserModal';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  chatsByIds: Record<string, ApiChat>;\n  usersByIds: Record<string, ApiUser>;\n  blockedIds: string[];\n  phoneCodeList: ApiCountryCode[];\n};\n\nconst SettingsPrivacyBlockedUsers: FC<OwnProps & StateProps> = ({\n  isActive,\n  onReset,\n  chatsByIds,\n  usersByIds,\n  blockedIds,\n  phoneCodeList,\n}) => {\n  const { unblockUser } = getActions();\n\n  const lang = useOldLang();\n  const [isBlockUserModalOpen, openBlockUserModal, closeBlockUserModal] = useFlag();\n  const handleUnblockClick = useCallback((userId: string) => {\n    unblockUser({ userId });\n  }, [unblockUser]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const blockedUsernamesById = useMemo(() => {\n    return blockedIds.reduce((acc, userId) => {\n      const isPrivate = isUserId(userId);\n      const user = isPrivate ? usersByIds[userId] : undefined;\n      const mainUsername = user && !user.phoneNumber && getMainUsername(user);\n\n      if (mainUsername) {\n        acc[userId] = mainUsername;\n      }\n\n      return acc;\n    }, {} as Record<string, string>);\n  }, [blockedIds, usersByIds]);\n\n  function renderContact(contactId: string, i: number, viewportOffset: number) {\n    const isPrivate = isUserId(contactId);\n    const user = usersByIds[contactId];\n    const chat = chatsByIds[contactId];\n    const peer = user || chat;\n\n    const className = buildClassName(\n      'Chat chat-item-clickable blocked-list-item small-icon',\n      isPrivate ? 'private' : 'group',\n    );\n\n    const userMainUsername = blockedUsernamesById[contactId];\n\n    return (\n      <ListItem\n        key={`blocked_${contactId}`}\n        className={className}\n        ripple\n        narrow\n        contextActions={[{\n          title: 'Unblock',\n          icon: 'unlock',\n          handler: () => {\n            handleUnblockClick(contactId);\n          },\n        }]}\n        style={`top: ${(viewportOffset + i) * CHAT_HEIGHT_PX}px;`}\n      >\n        <Avatar\n          size=\"medium\"\n          peer={peer}\n        />\n        <div className=\"contact-info\" dir=\"auto\">\n          {peer && <FullNameTitle peer={peer} />}\n          {user?.phoneNumber && (\n            <div className=\"contact-phone\" dir=\"auto\">{formatPhoneNumberWithCode(phoneCodeList, user.phoneNumber)}</div>\n          )}\n          {userMainUsername && (<div className=\"contact-username\" dir=\"auto\">@{userMainUsername}</div>)}\n        </div>\n      </ListItem>\n    );\n  }\n\n  return (\n    <div className=\"settings-fab-wrapper\">\n      <div className=\"settings-content infinite-scroll\">\n        <div className=\"settings-item no-border\">\n          <p className=\"settings-item-description-larger mt-0 mb-2\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('BlockedUsersInfo')}\n          </p>\n        </div>\n\n        <div className=\"chat-list custom-scroll\">\n          {blockedIds?.length ? (\n            <div className=\"scroll-container settings-item\">\n              {blockedIds!.map((contactId, i) => renderContact(contactId, i, 0))}\n            </div>\n          ) : blockedIds && !blockedIds.length ? (\n            <div className=\"no-results\" dir=\"auto\">{lang('NoBlocked')}</div>\n          ) : (\n            <Loading key=\"loading\" />\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown\n        className=\"block-user-button\"\n        onClick={openBlockUserModal}\n        ariaLabel={lang('BlockContact')}\n      >\n        <Icon name=\"add\" />\n      </FloatingActionButton>\n      <BlockUserModal\n        isOpen={isBlockUserModalOpen}\n        onClose={closeBlockUserModal}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      chats: {\n        byId: chatsByIds,\n      },\n      users: {\n        byId: usersByIds,\n      },\n      blocked: {\n        ids,\n      },\n      countryList: {\n        phoneCodes: phoneCodeList,\n      },\n    } = global;\n\n    return {\n      chatsByIds,\n      usersByIds,\n      blockedIds: ids,\n      phoneCodeList,\n    };\n  },\n)(SettingsPrivacyBlockedUsers));\n","import type { ApiPrivacyKey } from '../../../../api/types';\nimport { SettingsScreens } from '../../../../types';\n\nexport function getPrivacyKey(screen: SettingsScreens): ApiPrivacyKey | undefined {\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumber:\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return 'phoneNumber';\n    case SettingsScreens.PrivacyLastSeen:\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return 'lastSeen';\n    case SettingsScreens.PrivacyProfilePhoto:\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return 'profilePhoto';\n    case SettingsScreens.PrivacyBio:\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return 'bio';\n    case SettingsScreens.PrivacyBirthday:\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return 'birthday';\n    case SettingsScreens.PrivacyGifts:\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return 'gifts';\n    case SettingsScreens.PrivacyForwarding:\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return 'forwards';\n    case SettingsScreens.PrivacyVoiceMessages:\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return 'voiceMessages';\n    case SettingsScreens.PrivacyGroupChats:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n      return 'chatInvite';\n    case SettingsScreens.PrivacyPhoneCall:\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return 'phoneCall';\n    case SettingsScreens.PrivacyPhoneP2P:\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return 'phoneP2P';\n    case SettingsScreens.PrivacyAddByPhone:\n      return 'addByPhone';\n    case SettingsScreens.PrivacyNoPaidMessages:\n      return 'noPaidMessages';\n  }\n\n  return undefined;\n}\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { PrivacyVisibility } from '../../../api/types';\n\nimport { selectIsCurrentUserPremium, selectShouldHideReadMarks } from '../../../global/selectors';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport StarIcon from '../../common/icons/StarIcon';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  visibility?: PrivacyVisibility;\n};\n\ntype StateProps = {\n  isCurrentUserPremium: boolean;\n  shouldHideReadMarks: boolean;\n};\n\nconst SettingsPrivacyLastSeen = ({\n  isCurrentUserPremium, shouldHideReadMarks, visibility,\n}: OwnProps & StateProps) => {\n  const { updateGlobalPrivacySettings, openPremiumModal } = getActions();\n  const lang = useOldLang();\n  const canShowHideReadTime = visibility === 'nobody' || visibility === 'contacts';\n\n  const handleChangeShouldHideReadMarks = useLastCallback(\n    (isEnabled) => updateGlobalPrivacySettings({ shouldHideReadMarks: isEnabled }),\n  );\n\n  const handleOpenPremiumModal = useLastCallback(() => {\n    openPremiumModal({\n      initialSection: 'last_seen',\n    });\n  });\n\n  return (\n    <>\n      {canShowHideReadTime && (\n        <div className=\"settings-item\">\n          <Checkbox\n            label={lang('HideReadTime')}\n            checked={shouldHideReadMarks}\n            onCheck={handleChangeShouldHideReadMarks}\n          />\n          <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {renderText(lang('HideReadTimeInfo'), ['br'])}\n          </p>\n        </div>\n      )}\n      <div className=\"settings-item\">\n        <ListItem\n          leftElement={<StarIcon className=\"icon ListItem-main-icon\" type=\"premium\" size=\"big\" />}\n          onClick={handleOpenPremiumModal}\n        >\n          {isCurrentUserPremium ? lang('PrivacyLastSeenPremiumForPremium') : lang('PrivacyLastSeenPremium')}\n        </ListItem>\n        <p\n          className=\"settings-item-description-larger premium-info\"\n          dir={lang.isRtl ? 'rtl' : undefined}\n        >\n          {isCurrentUserPremium\n            ? lang('PrivacyLastSeenPremiumInfoForPremium')\n            : lang('PrivacyLastSeenPremiumInfo')}\n        </p>\n      </div>\n    </>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldHideReadMarks: Boolean(selectShouldHideReadMarks(global)),\n    };\n  },\n)(SettingsPrivacyLastSeen));\n","// extracted by mini-css-extract-plugin\nexport default {\"fallback-photo\":\"Qvhl9Jjv\",\"fallbackPhoto\":\"Qvhl9Jjv\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPhoto } from '../../../api/types';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\n\nimport styles from './SettingsPrivacyPublicPhoto.module.scss';\n\ntype OwnProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n};\n\nconst SettingsPrivacyPublicProfilePhoto: FC<OwnProps> = ({\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n}) => {\n  const {\n    loadFullUser, uploadProfilePhoto, deleteProfilePhoto, showNotification,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const [isDeleteFallbackPhotoModalOpen, openDeleteFallbackPhotoModal, closeDeleteFallbackPhotoModal] = useFlag(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    if (!hasCurrentUserFullInfo) {\n      loadFullUser({ userId: currentUserId });\n    }\n  }, [hasCurrentUserFullInfo, currentUserId, loadFullUser]);\n\n  const handleSelectFile = useCallback((file: File) => {\n    uploadProfilePhoto({\n      file,\n      isFallback: true,\n    });\n    showNotification({\n      message: lang('Privacy.ProfilePhoto.PublicPhotoSuccess'),\n    });\n  }, [lang, showNotification, uploadProfilePhoto]);\n\n  const handleConfirmDelete = useCallback(() => {\n    closeDeleteFallbackPhotoModal();\n    deleteProfilePhoto({ photo: currentUserFallbackPhoto! });\n  }, [closeDeleteFallbackPhotoModal, deleteProfilePhoto, currentUserFallbackPhoto]);\n\n  const handleOpenFileSelector = useCallback(() => {\n    inputRef.current?.click();\n  }, []);\n\n  return (\n    <div className=\"settings-item\">\n      <ListItem\n        narrow\n        icon=\"camera-add\"\n        onClick={handleOpenFileSelector}\n      >\n        <SelectAvatar\n          onChange={handleSelectFile}\n          inputRef={inputRef}\n        />\n        {lang(currentUserFallbackPhoto\n          ? 'Privacy.ProfilePhoto.UpdatePublicPhoto'\n          : 'Privacy.ProfilePhoto.SetPublicPhoto')}\n      </ListItem>\n      {currentUserFallbackPhoto && (\n        <ListItem\n          narrow\n          leftElement={<Avatar photo={currentUserFallbackPhoto} size=\"mini\" className={styles.fallbackPhoto} />}\n          onClick={openDeleteFallbackPhotoModal}\n          destructive\n        >\n          {lang(currentUserFallbackPhoto.isVideo\n            ? 'Privacy.ProfilePhoto.RemovePublicVideo'\n            : 'Privacy.ProfilePhoto.RemovePublicPhoto')}\n          <ConfirmDialog\n            isOpen={isDeleteFallbackPhotoModalOpen}\n            onClose={closeDeleteFallbackPhotoModal}\n            text={lang('Privacy.ResetPhoto.Confirm')}\n            confirmLabel={lang('Delete')}\n            confirmHandler={handleConfirmDelete}\n            confirmIsDestructive\n          />\n        </ListItem>\n      )}\n      <p className=\"settings-item-description-larger\" dir={lang.isRtl ? 'rtl' : undefined}>\n        {lang('Privacy.ProfilePhoto.PublicPhotoInfo')}\n      </p>\n    </div>\n  );\n};\n\nexport default memo(SettingsPrivacyPublicProfilePhoto);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiPrivacySettings, BotsPrivacyType } from '../../../api/types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectIsCurrentUserPremium, selectUserFullInfo } from '../../../global/selectors';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ListItem from '../../ui/ListItem';\nimport RadioGroup from '../../ui/RadioGroup';\nimport PremiumStatusItem from './PremiumStatusItem';\nimport PrivacyLockedOption from './PrivacyLockedOption';\nimport SettingsPrivacyLastSeen from './SettingsPrivacyLastSeen';\nimport SettingsPrivacyPublicProfilePhoto from './SettingsPrivacyPublicProfilePhoto';\n\ntype OwnProps = {\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId: string;\n  hasCurrentUserFullInfo?: boolean;\n  currentUserFallbackPhoto?: ApiPhoto;\n  primaryPrivacy?: ApiPrivacySettings;\n  secondaryPrivacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n};\n\nconst SettingsPrivacyVisibility: FC<OwnProps & StateProps> = ({\n  screen,\n  isActive,\n  primaryPrivacy,\n  secondaryPrivacy,\n  currentUserId,\n  hasCurrentUserFullInfo,\n  currentUserFallbackPhoto,\n  isPremiumRequired,\n  onScreenSelect,\n  onReset,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const secondaryScreen = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneP2P;\n      case SettingsScreens.PrivacyPhoneNumber: {\n        return primaryPrivacy?.visibility === 'nobody' ? SettingsScreens.PrivacyAddByPhone : undefined;\n      }\n      default:\n        return undefined;\n    }\n  }, [primaryPrivacy, screen]);\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <PrivacySubsection\n        screen={screen}\n        privacy={primaryPrivacy}\n        onScreenSelect={onScreenSelect}\n        isPremiumRequired={isPremiumRequired}\n      />\n      {screen === SettingsScreens.PrivacyProfilePhoto && primaryPrivacy?.visibility !== 'everybody' && (\n        <SettingsPrivacyPublicProfilePhoto\n          currentUserId={currentUserId}\n          hasCurrentUserFullInfo={hasCurrentUserFullInfo}\n          currentUserFallbackPhoto={currentUserFallbackPhoto}\n        />\n      )}\n      {screen === SettingsScreens.PrivacyLastSeen && (\n        <SettingsPrivacyLastSeen visibility={primaryPrivacy?.visibility} />\n      )}\n      {secondaryScreen && (\n        <PrivacySubsection\n          screen={secondaryScreen}\n          privacy={secondaryPrivacy}\n          onScreenSelect={onScreenSelect}\n        />\n      )}\n    </div>\n  );\n};\n\nfunction PrivacySubsection({\n  screen,\n  privacy,\n  onScreenSelect,\n  isPremiumRequired,\n}: {\n  screen: SettingsScreens;\n  privacy?: ApiPrivacySettings;\n  isPremiumRequired?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n}) {\n  const { setPrivacyVisibility } = getActions();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const visibilityOptions = useMemo(() => {\n    const hasNobody = screen !== SettingsScreens.PrivacyAddByPhone;\n    const options = [\n      { value: 'everybody', label: oldLang('P2PEverybody') },\n      {\n        value: 'contacts',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PContacts')} />\n        ) : (\n          oldLang('P2PContacts')\n        ),\n        hidden: isPremiumRequired,\n      },\n    ];\n\n    if (hasNobody) {\n      options.push({\n        value: 'nobody',\n        label: isPremiumRequired ? (\n          <PrivacyLockedOption label={oldLang('P2PNobody')} />\n        ) : (\n          oldLang('P2PNobody')\n        ),\n        hidden: isPremiumRequired,\n      });\n    }\n    return options;\n  }, [oldLang, screen, isPremiumRequired]);\n\n  const primaryExceptionLists = useMemo(() => {\n    if (screen === SettingsScreens.PrivacyAddByPhone) {\n      return {\n        shouldShowDenied: false,\n        shouldShowAllowed: false,\n      };\n    }\n\n    return {\n      shouldShowDenied: privacy?.visibility !== 'nobody',\n      shouldShowAllowed: privacy?.visibility !== 'everybody',\n    };\n  }, [privacy, screen]);\n\n  const privacyKey = getPrivacyKey(screen);\n\n  const descriptionText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsInfo');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('CustomHelp');\n      case SettingsScreens.PrivacyAddByPhone: {\n        return privacy?.visibility === 'everybody' ? oldLang('PrivacyPhoneInfo') : oldLang('PrivacyPhoneInfo3');\n      }\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesInfo');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen, privacy]);\n\n  const headerText = useMemo(() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return oldLang('PrivacyPhoneTitle');\n      case SettingsScreens.PrivacyAddByPhone:\n        return oldLang('PrivacyPhoneTitle2');\n      case SettingsScreens.PrivacyLastSeen:\n        return oldLang('LastSeenTitle');\n      case SettingsScreens.PrivacyProfilePhoto:\n        return oldLang('PrivacyProfilePhotoTitle');\n      case SettingsScreens.PrivacyBio:\n        return oldLang('PrivacyBioTitle');\n      case SettingsScreens.PrivacyBirthday:\n        return oldLang('PrivacyBirthdayTitle');\n      case SettingsScreens.PrivacyGifts:\n        return lang('PrivacyGiftsTitle');\n      case SettingsScreens.PrivacyForwarding:\n        return oldLang('PrivacyForwardsTitle');\n      case SettingsScreens.PrivacyVoiceMessages:\n        return oldLang('PrivacyVoiceMessagesTitle');\n      case SettingsScreens.PrivacyGroupChats:\n        return oldLang('WhoCanAddMe');\n      case SettingsScreens.PrivacyPhoneCall:\n        return oldLang('WhoCanCallMe');\n      case SettingsScreens.PrivacyPhoneP2P:\n        return oldLang('PrivacyP2P');\n      default:\n        return undefined;\n    }\n  }, [oldLang, lang, screen]);\n\n  const prepareSubtitle = useLastCallback(\n    (userIds?: string[], chatIds?: string[], shouldAllowPremium?: boolean, botsPrivacy?: BotsPrivacyType) => {\n      const userIdsCount = userIds?.length || 0;\n      const chatIdsCount = chatIds?.length || 0;\n      const isAllowBots = botsPrivacy === 'allow';\n      const hasPeers = userIdsCount || chatIdsCount;\n\n      if (!hasPeers && !isAllowBots) {\n        return shouldAllowPremium ? oldLang('PrivacyPremium') : oldLang('EditAdminAddUsers');\n      } else if (shouldAllowPremium) {\n        return oldLang('ContactsAndPremium');\n      }\n\n      const userCountString = userIdsCount > 0 ? oldLang('Users', userIdsCount) : undefined;\n      const chatCountString = chatIdsCount > 0 ? oldLang('Chats', chatIdsCount) : undefined;\n\n      const botPrivacyString = isAllowBots ? lang('PrivacyValueBots') : '';\n      const peersString = lang.conjunction([userCountString, chatCountString].filter(Boolean));\n\n      return [botPrivacyString, peersString].filter(Boolean).join(' ');\n    },\n  );\n\n  const allowedString = useMemo(() => {\n    return prepareSubtitle(\n      privacy?.allowUserIds,\n      privacy?.allowChatIds,\n      privacy?.shouldAllowPremium,\n      privacy?.botsPrivacy,\n    );\n  }, [privacy]);\n\n  const blockString = useMemo(() => {\n    return prepareSubtitle(privacy?.blockUserIds, privacy?.blockChatIds);\n  }, [privacy]);\n\n  const handleVisibilityChange = useCallback((value) => {\n    setPrivacyVisibility({\n      privacyKey: privacyKey!,\n      visibility: value,\n    });\n  }, [privacyKey]);\n\n  const allowedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberAllowedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenAllowedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoAllowedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioAllowedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayAllowedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsAllowedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingAllowedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallAllowedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PAllowedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesAllowedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsAllowedContacts;\n    }\n  })();\n\n  const deniedContactsScreen = (() => {\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        return SettingsScreens.PrivacyPhoneNumberDeniedContacts;\n      case SettingsScreens.PrivacyLastSeen:\n        return SettingsScreens.PrivacyLastSeenDeniedContacts;\n      case SettingsScreens.PrivacyProfilePhoto:\n        return SettingsScreens.PrivacyProfilePhotoDeniedContacts;\n      case SettingsScreens.PrivacyBio:\n        return SettingsScreens.PrivacyBioDeniedContacts;\n      case SettingsScreens.PrivacyBirthday:\n        return SettingsScreens.PrivacyBirthdayDeniedContacts;\n      case SettingsScreens.PrivacyGifts:\n        return SettingsScreens.PrivacyGiftsDeniedContacts;\n      case SettingsScreens.PrivacyForwarding:\n        return SettingsScreens.PrivacyForwardingDeniedContacts;\n      case SettingsScreens.PrivacyPhoneCall:\n        return SettingsScreens.PrivacyPhoneCallDeniedContacts;\n      case SettingsScreens.PrivacyPhoneP2P:\n        return SettingsScreens.PrivacyPhoneP2PDeniedContacts;\n      case SettingsScreens.PrivacyVoiceMessages:\n        return SettingsScreens.PrivacyVoiceMessagesDeniedContacts;\n      default:\n        return SettingsScreens.PrivacyGroupChatsDeniedContacts;\n    }\n  })();\n\n  return (\n    <>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>{headerText}</h4>\n        <RadioGroup\n          name={`visibility-${privacyKey}`}\n          options={visibilityOptions}\n          onChange={handleVisibilityChange}\n          selected={privacy?.visibility}\n        />\n        {descriptionText && (\n          <p className=\"settings-item-description-larger\" dir={oldLang.isRtl ? 'rtl' : undefined}>{descriptionText}</p>\n        )}\n      </div>\n      {!isPremiumRequired && (primaryExceptionLists.shouldShowAllowed || primaryExceptionLists.shouldShowDenied) && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n            {oldLang('PrivacyExceptions')}\n          </h4>\n          {primaryExceptionLists.shouldShowAllowed && (\n            <ListItem\n              narrow\n              icon=\"add-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(allowedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('AlwaysAllow')}</span>\n                <span className=\"subtitle\">{allowedString}</span>\n              </div>\n            </ListItem>\n          )}\n          {primaryExceptionLists.shouldShowDenied && (\n            <ListItem\n              narrow\n              icon=\"delete-user\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => {\n                onScreenSelect(deniedContactsScreen);\n              }}\n            >\n              <div className=\"multiline-item full-size\">\n                <span className=\"title\">{oldLang('NeverAllow')}</span>\n                <span className=\"subtitle\">{blockString}</span>\n              </div>\n            </ListItem>\n          )}\n        </div>\n      )}\n      {isPremiumRequired && <PremiumStatusItem />}\n    </>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    let primaryPrivacy: ApiPrivacySettings | undefined;\n    let secondaryPrivacy: ApiPrivacySettings | undefined;\n\n    const {\n      currentUserId,\n      settings: { privacy },\n    } = global;\n\n    const currentUserFullInfo = selectUserFullInfo(global, currentUserId!);\n\n    switch (screen) {\n      case SettingsScreens.PrivacyPhoneNumber:\n        primaryPrivacy = privacy.phoneNumber;\n        secondaryPrivacy = privacy.addByPhone;\n        break;\n\n      case SettingsScreens.PrivacyLastSeen:\n        primaryPrivacy = privacy.lastSeen;\n        break;\n\n      case SettingsScreens.PrivacyProfilePhoto:\n        primaryPrivacy = privacy.profilePhoto;\n        break;\n\n      case SettingsScreens.PrivacyBio:\n        primaryPrivacy = privacy.bio;\n        break;\n\n      case SettingsScreens.PrivacyBirthday:\n        primaryPrivacy = privacy.birthday;\n        break;\n\n      case SettingsScreens.PrivacyGifts:\n        primaryPrivacy = privacy.gifts;\n        break;\n\n      case SettingsScreens.PrivacyPhoneP2P:\n      case SettingsScreens.PrivacyPhoneCall:\n        primaryPrivacy = privacy.phoneCall;\n        secondaryPrivacy = privacy.phoneP2P;\n        break;\n\n      case SettingsScreens.PrivacyForwarding:\n        primaryPrivacy = privacy.forwards;\n        break;\n\n      case SettingsScreens.PrivacyVoiceMessages:\n        primaryPrivacy = privacy.voiceMessages;\n        break;\n\n      case SettingsScreens.PrivacyGroupChats:\n        primaryPrivacy = privacy.chatInvite;\n        break;\n    }\n\n    if (!primaryPrivacy) {\n      return {\n        currentUserId: currentUserId!,\n        hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n        currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      };\n    }\n\n    return {\n      primaryPrivacy,\n      secondaryPrivacy,\n      currentUserId: currentUserId!,\n      hasCurrentUserFullInfo: Boolean(currentUserFullInfo),\n      currentUserFallbackPhoto: currentUserFullInfo?.fallbackPhoto,\n      isPremiumRequired: screen === SettingsScreens.PrivacyVoiceMessages && !selectIsCurrentUserPremium(global),\n    };\n  },\n)(SettingsPrivacyVisibility));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiPrivacySettings } from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { CustomPeerType, UniqueCustomPeer } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { ALL_FOLDER_ID, ARCHIVED_FOLDER_ID, SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport {\n  isChatChannel, isDeletedUser,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { unique } from '../../../util/iteratees';\nimport { CUSTOM_PEER_PREMIUM } from '../../../util/objects/customPeer';\nimport { getPrivacyKey } from './helpers/privacy';\n\nimport { useFolderManagerForOrderedIds } from '../../../hooks/useFolderManager';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isAllowList?: boolean;\n  withPremiumCategory?: boolean;\n  withMiniAppsCategory?: boolean;\n  usersOnly?: boolean;\n  screen: SettingsScreens;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  settings?: ApiPrivacySettings;\n};\n\nconst PREMIUM_CATEGORY = [CUSTOM_PEER_PREMIUM];\n\nconst SettingsPrivacyVisibilityExceptionList: FC<OwnProps & StateProps> = ({\n  isAllowList,\n  withPremiumCategory,\n  withMiniAppsCategory,\n  screen,\n  isActive,\n  currentUserId,\n  settings,\n  usersOnly = false,\n  onReset,\n}) => {\n  const { setPrivacySettings } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const customPeerBots : UniqueCustomPeer = useMemo(() => {\n    return {\n      isCustomPeer: true,\n      type: 'bots',\n      title: lang('PrivacyValueBots'),\n      avatarIcon: 'bots',\n      isAvatarSquare: true,\n      peerColorId: 6,\n    };\n  }, [lang]);\n\n  const miniAppsCategory = useMemo(() => {\n    return [customPeerBots];\n  }, [customPeerBots]);\n\n  const selectedContactIds = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n\n    if (isAllowList) {\n      return [...settings.allowUserIds, ...settings.allowChatIds];\n    } else {\n      return [...settings.blockUserIds, ...settings.blockChatIds];\n    }\n  }, [isAllowList, settings]);\n  const selectedCategoryTypes = useMemo(() => {\n    if (!settings) {\n      return [];\n    }\n    if (settings.shouldAllowPremium) { return [CUSTOM_PEER_PREMIUM.type]; }\n    if (settings.botsPrivacy === 'allow' && isAllowList) { return [customPeerBots.type]; }\n    return [];\n  }, [settings, isAllowList, customPeerBots]);\n  const [searchQuery, setSearchQuery] = useState<string>('');\n  const [isSubmitShown, setIsSubmitShown] = useState<boolean>(false);\n  const [newSelectedContactIds, setNewSelectedContactIds] = useState<string[]>(selectedContactIds);\n  const [newSelectedCategoryTypes, setNewSelectedCategoryTypes] = useState<CustomPeerType[]>(selectedCategoryTypes);\n\n  // Reset selected contact ids on change from other client when screen is not active\n  useEffect(() => {\n    if (!isActive) {\n      setNewSelectedContactIds(selectedContactIds);\n      setNewSelectedCategoryTypes(selectedCategoryTypes);\n    }\n  }, [isActive, selectedCategoryTypes, selectedContactIds]);\n\n  const folderAllOrderedIds = useFolderManagerForOrderedIds(ALL_FOLDER_ID);\n  const folderArchivedOrderedIds = useFolderManagerForOrderedIds(ARCHIVED_FOLDER_ID);\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on chats, so we avoid them\n    const chatsById = getGlobal().chats.byId;\n    const usersById = getGlobal().users.byId;\n\n    const chatIds = unique([...folderAllOrderedIds || [], ...folderArchivedOrderedIds || []])\n      .filter((chatId) => {\n        const chat = chatsById[chatId];\n        const user = usersById[chatId];\n        const isDeleted = user && isDeletedUser(user);\n        const isChannel = chat && isChatChannel(chat);\n        return (!usersOnly || user)\n          && chatId !== currentUserId\n          && chatId !== SERVICE_NOTIFICATIONS_USER_ID\n          && !isChannel && !isDeleted;\n      });\n\n    const filteredChats = filterPeersByQuery({ ids: chatIds, query: searchQuery });\n\n    // Show only relevant items\n    if (searchQuery) return filteredChats;\n\n    return unique([\n      ...selectedContactIds,\n      ...chatIds,\n    ]);\n  }, [folderAllOrderedIds, folderArchivedOrderedIds, selectedContactIds, searchQuery, currentUserId, usersOnly]);\n\n  const handleSelectedCategoriesChange = useCallback((value: CustomPeerType[]) => {\n    setNewSelectedCategoryTypes(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSelectedContactIdsChange = useCallback((value: string[]) => {\n    setNewSelectedContactIds(value);\n    setIsSubmitShown(true);\n  }, []);\n\n  const handleSubmit = useCallback(() => {\n    setPrivacySettings({\n      privacyKey: getPrivacyKey(screen)!,\n      isAllowList: Boolean(isAllowList),\n      updatedIds: newSelectedContactIds,\n      isPremiumAllowed: newSelectedCategoryTypes.includes(CUSTOM_PEER_PREMIUM.type) || undefined,\n      botsPrivacy: (!withMiniAppsCategory) ? 'none'\n        : (newSelectedCategoryTypes.includes(customPeerBots.type) ? 'allow' : 'disallow'),\n    });\n\n    onReset();\n  }, [\n    isAllowList,\n    withMiniAppsCategory,\n    newSelectedCategoryTypes,\n    newSelectedContactIds,\n    onReset,\n    screen,\n    customPeerBots,\n  ]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  function getCustomCategory() {\n    if (withPremiumCategory) return PREMIUM_CATEGORY;\n    if (withMiniAppsCategory && isAllowList) return miniAppsCategory;\n    return undefined;\n  }\n\n  return (\n    <div className=\"NewChat-inner step-1\">\n      <PeerPicker\n        categories={getCustomCategory()}\n        itemIds={displayedIds || []}\n        selectedIds={newSelectedContactIds}\n        selectedCategories={newSelectedCategoryTypes}\n        filterValue={searchQuery}\n        filterPlaceholder={isAllowList ? oldLang('AlwaysAllowPlaceholder') : oldLang('NeverAllowPlaceholder')}\n        categoryPlaceholderKey=\"PrivacyUserTypes\"\n        searchInputId=\"new-group-picker-search\"\n        isSearchable\n        onSelectedIdsChange={handleSelectedContactIdsChange}\n        onSelectedCategoriesChange={handleSelectedCategoriesChange}\n        onFilterChange={setSearchQuery}\n        allowMultiple\n        itemInputType=\"checkbox\"\n        withDefaultPadding\n        withStatus\n      />\n\n      <FloatingActionButton\n        isShown={isSubmitShown}\n        onClick={handleSubmit}\n        ariaLabel={isAllowList ? oldLang('AlwaysAllow') : oldLang('NeverAllow')}\n      >\n        <Icon name=\"check\" />\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nfunction getCurrentPrivacySettings(global: GlobalState, screen: SettingsScreens) {\n  const { privacy } = global.settings;\n  switch (screen) {\n    case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n    case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      return privacy.phoneNumber;\n    case SettingsScreens.PrivacyLastSeenAllowedContacts:\n    case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      return privacy.lastSeen;\n    case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n    case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      return privacy.profilePhoto;\n    case SettingsScreens.PrivacyBioAllowedContacts:\n    case SettingsScreens.PrivacyBioDeniedContacts:\n      return privacy.bio;\n    case SettingsScreens.PrivacyBirthdayAllowedContacts:\n    case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      return privacy.birthday;\n    case SettingsScreens.PrivacyGiftsAllowedContacts:\n    case SettingsScreens.PrivacyGiftsDeniedContacts:\n      return privacy.gifts;\n    case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n    case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      return privacy.phoneCall;\n    case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n    case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      return privacy.phoneP2P;\n    case SettingsScreens.PrivacyForwardingAllowedContacts:\n    case SettingsScreens.PrivacyForwardingDeniedContacts:\n      return privacy.forwards;\n    case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n    case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      return privacy.voiceMessages;\n    case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n    case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      return privacy.chatInvite;\n    case SettingsScreens.PrivacyNoPaidMessages:\n      return privacy.noPaidMessages;\n  }\n\n  return undefined;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { screen }): StateProps => {\n    return {\n      currentUserId: global.currentUserId,\n      settings: getCurrentPrivacySettings(global, screen),\n    };\n  },\n)(SettingsPrivacyVisibilityExceptionList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiAvailableReaction } from '../../../api/types';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport RadioGroup from '../../ui/RadioGroup';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  availableReactions?: ApiAvailableReaction[];\n  selectedReaction?: string;\n};\n\nconst SettingsQuickReaction: FC<OwnProps & StateProps> = ({\n  isActive,\n  availableReactions,\n  selectedReaction,\n  onReset,\n}) => {\n  const { setDefaultReaction } = getActions();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const options = useMemo(() => (\n    (availableReactions || []).filter((availableReaction) => !availableReaction.isInactive)\n      .map((availableReaction) => ({\n        label: (\n          <>\n            <ReactionStaticEmoji reaction={availableReaction.reaction} availableReactions={availableReactions} />\n            {availableReaction.title}\n          </>\n        ),\n        value: availableReaction.reaction.emoticon,\n      }))\n  ), [availableReactions]);\n\n  const handleChange = useCallback((reaction: string) => {\n    setDefaultReaction({\n      reaction: { type: 'emoji', emoticon: reaction },\n    });\n  }, [setDefaultReaction]);\n\n  return (\n    <div className=\"settings-content settings-item custom-scroll settings-quick-reaction\">\n      <RadioGroup\n        name=\"quick-reaction-settings\"\n        options={options}\n        selected={selectedReaction}\n        onChange={handleChange}\n        withIcon\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global) => {\n    const { config, reactions } = global;\n\n    return {\n      availableReactions: reactions.availableReactions,\n      selectedReaction: config?.defaultReaction,\n    };\n  },\n)(SettingsQuickReaction));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n  ApiSticker,\n  ApiStickerSet,\n} from '../../../api/types';\nimport type { ISettings } from '../../../types';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../../global/selectors';\nimport { pick } from '../../../util/iteratees';\nimport { REM } from '../../common/helpers/mediaDimensions';\nimport renderText from '../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport StickerSetCard from '../../common/StickerSetCard';\nimport Checkbox from '../../ui/Checkbox';\nimport ListItem from '../../ui/ListItem';\n\nconst DEFAULT_REACTION_SIZE = 1.5 * REM;\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps =\n  Pick<ISettings, (\n    'shouldSuggestStickers' | 'shouldUpdateStickerSetOrder'\n  )> & {\n    addedSetIds?: string[];\n    customEmojiSetIds?: string[];\n    stickerSetsById: Record<string, ApiStickerSet>;\n    defaultReaction?: ApiReaction;\n    availableReactions?: ApiAvailableReaction[];\n    canPlayAnimatedEmojis: boolean;\n  };\n\nconst SettingsStickers: FC<OwnProps & StateProps> = ({\n  isActive,\n  addedSetIds,\n  customEmojiSetIds,\n  stickerSetsById,\n  defaultReaction,\n  shouldSuggestStickers,\n  shouldUpdateStickerSetOrder,\n  availableReactions,\n  canPlayAnimatedEmojis,\n  onReset,\n  onScreenSelect,\n}) => {\n  const {\n    setSettingOption,\n    openStickerSet,\n  } = getActions();\n  const lang = useOldLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const stickerSettingsRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({ rootRef: stickerSettingsRef });\n\n  const handleStickerSetClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  }, [openStickerSet]);\n\n  const handleSuggestStickerSetOrderChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldUpdateStickerSetOrder: newValue });\n  }, [setSettingOption]);\n\n  const handleSuggestStickersChange = useCallback((newValue: boolean) => {\n    setSettingOption({ shouldSuggestStickers: newValue });\n  }, [setSettingOption]);\n\n  const stickerSets = useMemo(() => (\n    addedSetIds && Object.values(pick(stickerSetsById, addedSetIds))\n  ), [addedSetIds, stickerSetsById]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content custom-scroll\">\n      <div className=\"settings-item\">\n        <Checkbox\n          label={lang('SuggestStickers')}\n          checked={shouldSuggestStickers}\n          onCheck={handleSuggestStickersChange}\n        />\n        <ListItem\n          narrow\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.CustomEmoji)}\n          icon=\"smile\"\n        >\n          {lang('StickersList.EmojiItem')}\n          {customEmojiSetIds && <span className=\"settings-item__current-value\">{customEmojiSetIds.length}</span>}\n        </ListItem>\n        {defaultReaction && (\n          <ListItem\n            className=\"SettingsDefaultReaction\"\n            narrow\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => onScreenSelect(SettingsScreens.QuickReaction)}\n          >\n            <ReactionStaticEmoji\n              reaction={defaultReaction}\n              className=\"current-default-reaction\"\n              size={DEFAULT_REACTION_SIZE}\n              availableReactions={availableReactions}\n            />\n            <div className=\"title\">{lang('DoubleTapSetting')}</div>\n          </ListItem>\n        )}\n      </div>\n      <div className=\"settings-item\">\n        <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n          {lang('InstalledStickers.DynamicPackOrder')}\n        </h4>\n        <Checkbox\n          label={lang('InstalledStickers.DynamicPackOrder')}\n          checked={shouldUpdateStickerSetOrder}\n          onCheck={handleSuggestStickerSetOrderChange}\n        />\n        <p className=\"settings-item-description mt-3\" dir=\"auto\">\n          {lang('InstalledStickers.DynamicPackOrderInfo')}\n        </p>\n      </div>\n      {stickerSets && (\n        <div className=\"settings-item\">\n          <h4 className=\"settings-item-header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {lang('ChooseStickerMyStickerSets')}\n          </h4>\n          <div ref={stickerSettingsRef}>\n            {stickerSets.map((stickerSet: ApiStickerSet) => (\n              <StickerSetCard\n                key={stickerSet.id}\n                stickerSet={stickerSet}\n                observeIntersection={observeIntersectionForCovers}\n                onClick={handleStickerSetClick}\n                noPlay={!canPlayAnimatedEmojis}\n              />\n            ))}\n          </div>\n          <p className=\"settings-item-description mt-3\" dir=\"auto\">\n            {renderText(lang('StickersBotInfo'), ['links'])}\n          </p>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      ...pick(global.settings.byKey, [\n        'shouldSuggestStickers',\n        'shouldUpdateStickerSetOrder',\n      ]),\n      addedSetIds: global.stickers.added.setIds,\n      customEmojiSetIds: global.customEmojis.added.setIds,\n      stickerSetsById: global.stickers.setsById,\n      defaultReaction: global.config?.defaultReaction,\n      availableReactions: global.reactions.availableReactions,\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(SettingsStickers));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { STICKER_SIZE_TWO_FA } from '../../../../config';\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIcon from '../../../common/AnimatedIcon';\nimport Button from '../../../ui/Button';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaCongratulations: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  const handleClick = useCallback(() => {\n    onScreenSelect(SettingsScreens.Privacy);\n  }, [onScreenSelect]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIcon\n          size={STICKER_SIZE_TWO_FA}\n          tgsUrl={LOCAL_TGS_URLS.Congratulations}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('TwoStepVerificationPasswordSetInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={handleClick}>{lang('TwoStepVerificationPasswordReturnSettings')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaCongratulations);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji, selectTabState } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport InputText from '../../../ui/InputText';\nimport Loading from '../../../ui/Loading';\n\ntype OwnProps = {\n  isLoading?: boolean;\n  error?: string;\n  clearError: NoneToVoidFunction;\n  onSubmit: (hint: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n  codeLength: number;\n  recoveryEmail: string;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaEmailCode: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  codeLength,\n  isLoading,\n  error,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n  recoveryEmail,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n\n  const [value, setValue] = useState<string>('');\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    const newValue = e.target.value.slice(0, codeLength);\n\n    if (newValue.length === codeLength) {\n      onSubmit(newValue);\n    }\n\n    setValue(newValue);\n    e.target.value = newValue;\n  }, [clearError, codeLength, error, onSubmit]);\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        {recoveryEmail && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('TwoStepAuth.ConfirmEmailDescription', recoveryEmail)}\n          </p>\n        )}\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <InputText\n          value={value}\n          ref={inputRef}\n          inputMode=\"decimal\"\n          label={lang('YourEmailCode')}\n          error={error}\n          onChange={handleInputChange}\n        />\n        {isLoading && <Loading />}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global) => {\n  const tabState = selectTabState(global);\n  const recoveryEmail = tabState.recoveryEmail;\n\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, '💌'),\n    codeLength: global.twoFaSettings.waitingEmailCodeLength,\n    recoveryEmail,\n  };\n})(SettingsTwoFaEmailCode));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { SettingsScreens } from '../../../../types';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport ListItem from '../../../ui/ListItem';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaEnabled: FC<OwnProps> = ({\n  isActive, onReset, onScreenSelect,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {renderText(lang('EnabledPasswordText'), ['br'])}\n        </p>\n      </div>\n\n      <div className=\"settings-item\">\n        <ListItem\n          icon=\"edit\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaChangePasswordCurrent)}\n        >\n          {lang('ChangePassword')}\n        </ListItem>\n        <ListItem\n          icon=\"password-off\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaTurnOff)}\n        >\n          {lang('TurnPasswordOff')}\n        </ListItem>\n        <ListItem\n          icon=\"email\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCurrentPassword)}\n        >\n          {lang('SetRecoveryEmail')}\n        </ListItem>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaEnabled);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type { ApiSticker } from '../../../../api/types';\n\nimport { selectAnimatedEmoji } from '../../../../global/selectors';\nimport { IS_TOUCH_ENV } from '../../../../util/windowEnvironment';\nimport renderText from '../../../common/helpers/renderText';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useFlag from '../../../../hooks/useFlag';\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconFromSticker from '../../../common/AnimatedIconFromSticker';\nimport Button from '../../../ui/Button';\nimport InputText from '../../../ui/InputText';\nimport Modal from '../../../ui/Modal';\n\ntype OwnProps = {\n  icon: 'hint' | 'email';\n  type?: 'text' | 'email';\n  isLoading?: boolean;\n  error?: string;\n  placeholder: string;\n  shouldConfirm?: boolean;\n  clearError?: NoneToVoidFunction;\n  onSubmit: (value?: string) => void;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  animatedEmoji: ApiSticker;\n};\n\nconst ICON_SIZE = 160;\n\nconst SettingsTwoFaSkippableForm: FC<OwnProps & StateProps> = ({\n  animatedEmoji,\n  type = 'text',\n  isLoading,\n  error,\n  placeholder,\n  shouldConfirm,\n  clearError,\n  onSubmit,\n  isActive,\n  onReset,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const { isMobile } = useAppLayout();\n\n  const focusDelayTimeoutMs = isMobile ? 550 : 400;\n  const [value, setValue] = useState<string>('');\n  const [isConfirmShown, markIsConfirmShown, unmarkIsConfirmShown] = useFlag(false);\n\n  useEffect(() => {\n    if (!IS_TOUCH_ENV) {\n      setTimeout(() => {\n        inputRef.current!.focus();\n      }, focusDelayTimeoutMs);\n    }\n  }, [focusDelayTimeoutMs]);\n\n  const handleInputChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (error && clearError) {\n      clearError();\n    }\n\n    setValue(e.target.value);\n  }, [clearError, error]);\n\n  const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    if (!inputRef.current) {\n      return;\n    }\n\n    onSubmit(value);\n  };\n\n  const handleSkip = useCallback(() => {\n    onSubmit();\n  }, [onSubmit]);\n\n  const handleSkipConfirm = useCallback(() => {\n    unmarkIsConfirmShown();\n    onSubmit();\n  }, [onSubmit, unmarkIsConfirmShown]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconFromSticker sticker={animatedEmoji} size={ICON_SIZE} className=\"settings-content-icon\" />\n        {type === 'email' && (\n          <p className=\"settings-item-description mb-3\" dir=\"auto\">\n            {lang('RecoveryEmailSubtitle')}\n          </p>\n        )}\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <form action=\"\" onSubmit={handleSubmit}>\n          <InputText\n            ref={inputRef}\n            value={value}\n            inputMode={type}\n            label={placeholder}\n            error={error}\n            onChange={handleInputChange}\n          />\n\n          {value ? (\n            <Button type=\"submit\" isLoading={isLoading} ripple>{lang('Continue')}</Button>\n          ) : (\n            <Button\n              isText\n              isLoading={isLoading}\n              ripple\n              onClick={shouldConfirm ? markIsConfirmShown : handleSkip}\n            >\n              {lang('YourEmailSkip')}\n            </Button>\n          )}\n        </form>\n        {shouldConfirm && (\n          <Modal\n            className=\"narrow\"\n            isOpen={isConfirmShown}\n            title={lang('YourEmailSkipWarning')}\n            onClose={unmarkIsConfirmShown}\n          >\n            {renderText(lang('YourEmailSkipWarningText'), ['br', 'simple_markdown'])}\n            <div className=\"dialog-buttons\">\n              <Button\n                color=\"danger\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={handleSkipConfirm}\n              >\n                {lang('YourEmailSkip')}\n              </Button>\n              <Button\n                color=\"primary\"\n                ripple\n                isText\n                className=\"confirm-dialog-button\"\n                onClick={unmarkIsConfirmShown}\n              >\n                {lang('Cancel')}\n              </Button>\n            </div>\n          </Modal>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global, { icon }) => {\n  return {\n    animatedEmoji: selectAnimatedEmoji(global, icon === 'email' ? '💌' : '💡'),\n  };\n})(SettingsTwoFaSkippableForm));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport { LOCAL_TGS_URLS } from '../../../common/helpers/animatedAssets';\n\nimport useHistoryBack from '../../../../hooks/useHistoryBack';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../../common/AnimatedIconWithPreview';\nimport Button from '../../../ui/Button';\n\nimport lockPreviewUrl from '../../../../assets/lock.png';\n\ntype OwnProps = {\n  onStart: NoneToVoidFunction;\n  isActive?: boolean;\n  onReset: () => void;\n};\n\nconst SettingsTwoFaStart: FC<OwnProps> = ({\n  isActive, onReset, onStart,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  return (\n    <div className=\"settings-content two-fa custom-scroll\">\n      <div className=\"settings-content-header no-border\">\n        <AnimatedIconWithPreview\n          tgsUrl={LOCAL_TGS_URLS.Lock}\n          previewUrl={lockPreviewUrl}\n          size={160}\n          className=\"settings-content-icon\"\n        />\n\n        <p className=\"settings-item-description mb-3\" dir=\"auto\">\n          {lang('SetAdditionalPasswordInfo')}\n        </p>\n      </div>\n\n      <div className=\"settings-item settings-group\">\n        <Button onClick={onStart}>{lang('EditAdminTransferSetPassword')}</Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(SettingsTwoFaStart);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../../global';\n\nimport type { GlobalState } from '../../../../global/types';\nimport type { TwoFaDispatch, TwoFaState } from '../../../../hooks/reducers/useTwoFaReducer';\nimport { SettingsScreens } from '../../../../types';\n\nimport useLang from '../../../../hooks/useLang';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport SettingsTwoFaPassword from '../SettingsPasswordForm';\nimport SettingsTwoFaCongratulations from './SettingsTwoFaCongratulations';\nimport SettingsTwoFaEmailCode from './SettingsTwoFaEmailCode';\nimport SettingsTwoFaEnabled from './SettingsTwoFaEnabled';\nimport SettingsTwoFaSkippableForm from './SettingsTwoFaSkippableForm';\nimport SettingsTwoFaStart from './SettingsTwoFaStart';\n\nexport type OwnProps = {\n  state: TwoFaState;\n  currentScreen: SettingsScreens;\n  shownScreen: SettingsScreens;\n  dispatch: TwoFaDispatch;\n  isActive?: boolean;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  onReset: () => void;\n};\n\ntype StateProps = GlobalState['twoFaSettings'];\n\nconst SettingsTwoFa: FC<OwnProps & StateProps> = ({\n  currentScreen,\n  shownScreen,\n  state,\n  hint,\n  isLoading,\n  errorKey,\n  waitingEmailCodeLength,\n  dispatch,\n  isActive,\n  onScreenSelect,\n  onReset,\n}) => {\n  const {\n    updatePassword,\n    checkPassword,\n    clearTwoFaError,\n    updateRecoveryEmail,\n    provideTwoFaEmailCode,\n    clearPassword,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useEffect(() => {\n    if (waitingEmailCodeLength) {\n      if (currentScreen === SettingsScreens.TwoFaNewPasswordEmail) {\n        onScreenSelect(SettingsScreens.TwoFaNewPasswordEmailCode);\n      } else if (currentScreen === SettingsScreens.TwoFaRecoveryEmail) {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmailCode);\n      }\n    }\n  }, [currentScreen, onScreenSelect, waitingEmailCodeLength]);\n\n  const handleStartWizard = useCallback(() => {\n    dispatch({ type: 'reset' });\n    onScreenSelect(SettingsScreens.TwoFaNewPassword);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPassword = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordHint);\n  }, [onScreenSelect]);\n\n  const handleNewPasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaNewPasswordEmail);\n  }, [dispatch, onScreenSelect]);\n\n  const handleNewPasswordEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updatePassword({\n      ...state,\n      email: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleChangePasswordCurrent = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaChangePasswordNew);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleChangePasswordNew = useCallback((value: string) => {\n    dispatch({ type: 'setPassword', payload: value });\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordConfirm);\n  }, [dispatch, onScreenSelect]);\n\n  const handleChangePasswordConfirm = useCallback(() => {\n    onScreenSelect(SettingsScreens.TwoFaChangePasswordHint);\n  }, [onScreenSelect]);\n\n  const handleChangePasswordHint = useCallback((value?: string) => {\n    dispatch({ type: 'setHint', payload: value });\n    updatePassword({\n      ...state,\n      hint: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updatePassword]);\n\n  const handleTurnOff = useCallback((value: string) => {\n    clearPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.Privacy);\n      },\n    });\n  }, [clearPassword, onScreenSelect]);\n\n  const handleRecoveryEmailCurrentPassword = useCallback((value: string) => {\n    dispatch({ type: 'setCurrentPassword', payload: value });\n    checkPassword({\n      currentPassword: value,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaRecoveryEmail);\n      },\n    });\n  }, [checkPassword, dispatch, onScreenSelect]);\n\n  const handleRecoveryEmail = useCallback((value?: string) => {\n    dispatch({ type: 'setEmail', payload: value });\n    updateRecoveryEmail({\n      ...state,\n      email: value!,\n      onSuccess: () => {\n        onScreenSelect(SettingsScreens.TwoFaCongratulations);\n      },\n    });\n  }, [dispatch, onScreenSelect, state, updateRecoveryEmail]);\n\n  const handleEmailCode = useCallback((code: string) => {\n    provideTwoFaEmailCode({ code });\n  }, [provideTwoFaEmailCode]);\n\n  switch (currentScreen) {\n    case SettingsScreens.TwoFaDisabled:\n      return (\n        <SettingsTwoFaStart\n          onStart={handleStartWizard}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPassword,\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPassword:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordConfirm,\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          submitLabel={oldLang('Continue')}\n          onSubmit={handleNewPasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordHint,\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleNewPasswordHint}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmail,\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          placeholder={oldLang('RecoveryEmailTitle')}\n          shouldConfirm\n          onSubmit={handleNewPasswordEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaNewPasswordEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaNewPasswordEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaCongratulations:\n      return (\n        <SettingsTwoFaCongratulations\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaEnabled:\n      return (\n        <SettingsTwoFaEnabled\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordCurrent,\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaTurnOff,\n            SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordCurrent:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleChangePasswordCurrent}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordNew,\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordNew:\n      return (\n        <SettingsTwoFaPassword\n          placeholder={oldLang('PleaseEnterNewFirstPassword')}\n          onSubmit={handleChangePasswordNew}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordConfirm,\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordConfirm:\n      return (\n        <SettingsTwoFaPassword\n          expectedPassword={state.password}\n          placeholder={oldLang('PleaseReEnterPassword')}\n          onSubmit={handleChangePasswordConfirm}\n          isActive={isActive || [\n            SettingsScreens.TwoFaChangePasswordHint,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaChangePasswordHint:\n      return (\n        <SettingsTwoFaSkippableForm\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          icon=\"hint\"\n          placeholder={oldLang('PasswordHintPlaceholder')}\n          onSubmit={handleChangePasswordHint}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaTurnOff:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleTurnOff}\n          isActive={isActive}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      return (\n        <SettingsTwoFaPassword\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          hint={hint}\n          onSubmit={handleRecoveryEmailCurrentPassword}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmail,\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmail:\n      return (\n        <SettingsTwoFaSkippableForm\n          icon=\"email\"\n          type=\"email\"\n          placeholder={oldLang('RecoveryEmailTitle')}\n          onSubmit={handleRecoveryEmail}\n          isActive={isActive || [\n            SettingsScreens.TwoFaRecoveryEmailCode,\n            SettingsScreens.TwoFaCongratulations,\n          ].includes(shownScreen)}\n          onReset={onReset}\n        />\n      );\n\n    case SettingsScreens.TwoFaRecoveryEmailCode:\n      return (\n        <SettingsTwoFaEmailCode\n          isLoading={isLoading}\n          error={errorKey && lang.withRegular(errorKey)}\n          clearError={clearTwoFaError}\n          onSubmit={handleEmailCode}\n          isActive={isActive || shownScreen === SettingsScreens.TwoFaCongratulations}\n          onReset={onReset}\n        />\n      );\n\n    default:\n      return undefined;\n  }\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => ({ ...global.twoFaSettings }),\n)(SettingsTwoFa));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef, useState } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { FolderEditDispatch, FoldersState } from '../../../hooks/reducers/useFoldersReducer';\nimport { SettingsScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport useTwoFaReducer from '../../../hooks/reducers/useTwoFaReducer';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMarkScrolled from '../../../hooks/useMarkScrolled/useMarkScrolled';\n\nimport Transition from '../../ui/Transition';\nimport SettingsFolders from './folders/SettingsFolders';\nimport SettingsPasscode from './passcode/SettingsPasscode';\nimport PrivacyMessages from './PrivacyMessages';\nimport SettingsActiveSessions from './SettingsActiveSessions';\nimport SettingsActiveWebsites from './SettingsActiveWebsites';\nimport SettingsCustomEmoji from './SettingsCustomEmoji';\nimport SettingsDataStorage from './SettingsDataStorage';\nimport SettingsDoNotTranslate from './SettingsDoNotTranslate';\nimport SettingsEditProfile from './SettingsEditProfile';\nimport SettingsExperimental from './SettingsExperimental';\nimport SettingsGeneral from './SettingsGeneral';\nimport SettingsGeneralBackground from './SettingsGeneralBackground';\nimport SettingsGeneralBackgroundColor from './SettingsGeneralBackgroundColor';\nimport SettingsHeader from './SettingsHeader';\nimport SettingsLanguage from './SettingsLanguage';\nimport SettingsMain from './SettingsMain';\nimport SettingsNotifications from './SettingsNotifications';\nimport SettingsPerformance from './SettingsPerformance';\nimport SettingsPrivacy from './SettingsPrivacy';\nimport SettingsPrivacyBlockedUsers from './SettingsPrivacyBlockedUsers';\nimport SettingsPrivacyVisibility from './SettingsPrivacyVisibility';\nimport SettingsPrivacyVisibilityExceptionList from './SettingsPrivacyVisibilityExceptionList';\nimport SettingsQuickReaction from './SettingsQuickReaction';\nimport SettingsStickers from './SettingsStickers';\nimport SettingsTwoFa from './twoFa/SettingsTwoFa';\n\nimport './Settings.scss';\n\nconst TRANSITION_RENDER_COUNT = Object.keys(SettingsScreens).length / 2;\nconst TRANSITION_DURATION = 200;\n\nconst TWO_FA_SCREENS = [\n  SettingsScreens.TwoFaDisabled,\n  SettingsScreens.TwoFaNewPassword,\n  SettingsScreens.TwoFaNewPasswordConfirm,\n  SettingsScreens.TwoFaNewPasswordHint,\n  SettingsScreens.TwoFaNewPasswordEmail,\n  SettingsScreens.TwoFaNewPasswordEmailCode,\n  SettingsScreens.TwoFaCongratulations,\n  SettingsScreens.TwoFaEnabled,\n  SettingsScreens.TwoFaChangePasswordCurrent,\n  SettingsScreens.TwoFaChangePasswordNew,\n  SettingsScreens.TwoFaChangePasswordConfirm,\n  SettingsScreens.TwoFaChangePasswordHint,\n  SettingsScreens.TwoFaTurnOff,\n  SettingsScreens.TwoFaRecoveryEmailCurrentPassword,\n  SettingsScreens.TwoFaRecoveryEmail,\n  SettingsScreens.TwoFaRecoveryEmailCode,\n];\n\nconst PASSCODE_SCREENS = [\n  SettingsScreens.PasscodeDisabled,\n  SettingsScreens.PasscodeEnabled,\n];\n\nconst FOLDERS_SCREENS = [\n  SettingsScreens.Folders,\n  SettingsScreens.FoldersCreateFolder,\n  SettingsScreens.FoldersEditFolder,\n  SettingsScreens.FoldersEditFolderFromChatList,\n  SettingsScreens.FoldersEditFolderInvites,\n  SettingsScreens.FoldersIncludedChats,\n  SettingsScreens.FoldersIncludedChatsFromChatList,\n  SettingsScreens.FoldersExcludedChats,\n  SettingsScreens.FoldersExcludedChatsFromChatList,\n  SettingsScreens.FoldersShare,\n];\n\nconst PRIVACY_SCREENS = [\n  SettingsScreens.PrivacyBlockedUsers,\n  SettingsScreens.ActiveWebsites,\n];\n\nconst PRIVACY_PHONE_NUMBER_SCREENS = [\n  SettingsScreens.PrivacyPhoneNumberAllowedContacts,\n  SettingsScreens.PrivacyPhoneNumberDeniedContacts,\n];\n\nconst PRIVACY_LAST_SEEN_PHONE_SCREENS = [\n  SettingsScreens.PrivacyLastSeenAllowedContacts,\n  SettingsScreens.PrivacyLastSeenDeniedContacts,\n];\n\nconst PRIVACY_PROFILE_PHOTO_SCREENS = [\n  SettingsScreens.PrivacyProfilePhotoAllowedContacts,\n  SettingsScreens.PrivacyProfilePhotoDeniedContacts,\n];\n\nconst PRIVACY_BIO_SCREENS = [\n  SettingsScreens.PrivacyBioAllowedContacts,\n  SettingsScreens.PrivacyBioDeniedContacts,\n];\n\nconst PRIVACY_BIRTHDAY_SCREENS = [\n  SettingsScreens.PrivacyBirthdayAllowedContacts,\n  SettingsScreens.PrivacyBirthdayDeniedContacts,\n];\n\nconst PRIVACY_GIFTS_SCREENS = [\n  SettingsScreens.PrivacyGiftsAllowedContacts,\n  SettingsScreens.PrivacyGiftsDeniedContacts,\n];\n\nconst PRIVACY_PHONE_CALL_SCREENS = [\n  SettingsScreens.PrivacyPhoneCallAllowedContacts,\n  SettingsScreens.PrivacyPhoneCallDeniedContacts,\n];\n\nconst PRIVACY_PHONE_P2P_SCREENS = [\n  SettingsScreens.PrivacyPhoneP2PAllowedContacts,\n  SettingsScreens.PrivacyPhoneP2PDeniedContacts,\n];\n\nconst PRIVACY_FORWARDING_SCREENS = [\n  SettingsScreens.PrivacyForwardingAllowedContacts,\n  SettingsScreens.PrivacyForwardingDeniedContacts,\n];\n\nconst PRIVACY_VOICE_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyVoiceMessagesAllowedContacts,\n  SettingsScreens.PrivacyVoiceMessagesDeniedContacts,\n];\n\nconst PRIVACY_GROUP_CHATS_SCREENS = [\n  SettingsScreens.PrivacyGroupChatsAllowedContacts,\n  SettingsScreens.PrivacyGroupChatsDeniedContacts,\n];\n\nconst PRIVACY_MESSAGES_SCREENS = [\n  SettingsScreens.PrivacyNoPaidMessages,\n];\n\nexport type OwnProps = {\n  isActive: boolean;\n  currentScreen: SettingsScreens;\n  foldersState: FoldersState;\n  foldersDispatch: FolderEditDispatch;\n  onScreenSelect: (screen: SettingsScreens) => void;\n  shouldSkipTransition?: boolean;\n  onReset: (forceReturnToChatList?: true | Event) => void;\n};\n\nconst Settings: FC<OwnProps> = ({\n  isActive,\n  currentScreen,\n  foldersState,\n  foldersDispatch,\n  onScreenSelect,\n  onReset,\n  shouldSkipTransition,\n}) => {\n  const { closeShareChatFolderModal } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [twoFaState, twoFaDispatch] = useTwoFaReducer();\n  const [privacyPasscode, setPrivacyPasscode] = useState<string>('');\n\n  useMarkScrolled({\n    containerRef,\n    selector: '.settings-content',\n  }, [currentScreen]);\n\n  const handleReset = useLastCallback((forceReturnToChatList?: true | Event) => {\n    const isFromSettings = selectTabState(getGlobal()).shareFolderScreen?.isFromSettings;\n\n    if (currentScreen === SettingsScreens.FoldersShare) {\n      closeShareChatFolderModal();\n    }\n\n    if (forceReturnToChatList === true || (isFromSettings !== undefined && !isFromSettings)) {\n      onReset(true);\n      return;\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersCreateFolder\n      || currentScreen === SettingsScreens.FoldersEditFolder\n      || currentScreen === SettingsScreens.FoldersEditFolderFromChatList\n      || currentScreen === SettingsScreens.FoldersEditFolderInvites\n    ) {\n      setTimeout(() => {\n        foldersDispatch({ type: 'reset' });\n      }, TRANSITION_DURATION);\n    }\n\n    if (\n      currentScreen === SettingsScreens.FoldersIncludedChats\n      || currentScreen === SettingsScreens.FoldersExcludedChats\n    ) {\n      if (foldersState.mode === 'create') {\n        onScreenSelect(SettingsScreens.FoldersCreateFolder);\n      } else {\n        onScreenSelect(SettingsScreens.FoldersEditFolder);\n      }\n      return;\n    }\n\n    onReset();\n  });\n\n  function renderCurrentSectionContent(isScreenActive: boolean, activeScreen: SettingsScreens) {\n    const privacyAllowScreens: Record<number, boolean> = {\n      [SettingsScreens.PrivacyPhoneNumber]: PRIVACY_PHONE_NUMBER_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyLastSeen]: PRIVACY_LAST_SEEN_PHONE_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyProfilePhoto]: PRIVACY_PROFILE_PHOTO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBio]: PRIVACY_BIO_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyBirthday]: PRIVACY_BIRTHDAY_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGifts]: PRIVACY_GIFTS_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneCall]: PRIVACY_PHONE_CALL_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyPhoneP2P]: PRIVACY_PHONE_P2P_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyForwarding]: PRIVACY_FORWARDING_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyVoiceMessages]: PRIVACY_VOICE_MESSAGES_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyGroupChats]: PRIVACY_GROUP_CHATS_SCREENS.includes(activeScreen),\n      [SettingsScreens.PrivacyMessages]: PRIVACY_MESSAGES_SCREENS.includes(activeScreen),\n    };\n\n    const isTwoFaScreen = TWO_FA_SCREENS.includes(activeScreen);\n    const isPasscodeScreen = PASSCODE_SCREENS.includes(activeScreen);\n    const isFoldersScreen = FOLDERS_SCREENS.includes(activeScreen);\n    const isPrivacyScreen = PRIVACY_SCREENS.includes(activeScreen)\n      || isTwoFaScreen\n      || isPasscodeScreen\n      || Object.keys(privacyAllowScreens).map(Number).includes(activeScreen)\n      || Object.values(privacyAllowScreens).includes(true);\n\n    switch (currentScreen) {\n      case SettingsScreens.Main:\n        return (\n          <SettingsMain onScreenSelect={onScreenSelect} isActive={isActive} onReset={handleReset} />\n        );\n      case SettingsScreens.EditProfile:\n        return (\n          <SettingsEditProfile\n            isActive={isActive && isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.General:\n        return (\n          <SettingsGeneral\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive\n              || activeScreen === SettingsScreens.GeneralChatBackgroundColor\n              || activeScreen === SettingsScreens.GeneralChatBackground\n              || activeScreen === SettingsScreens.QuickReaction\n              || activeScreen === SettingsScreens.CustomEmoji\n              || isPrivacyScreen || isFoldersScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.QuickReaction:\n        return (\n          <SettingsQuickReaction isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.CustomEmoji:\n        return (\n          <SettingsCustomEmoji isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Notifications:\n        return (\n          <SettingsNotifications isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.DataStorage:\n        return (\n          <SettingsDataStorage isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Privacy:\n        return (\n          <SettingsPrivacy\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || isPrivacyScreen}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.Language:\n        return (\n          <SettingsLanguage\n            isActive={isScreenActive || activeScreen === SettingsScreens.DoNotTranslate}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n      case SettingsScreens.DoNotTranslate:\n        return (\n          <SettingsDoNotTranslate isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.Stickers:\n        return (\n          <SettingsStickers isActive={isScreenActive} onReset={handleReset} onScreenSelect={onScreenSelect} />\n        );\n      case SettingsScreens.Experimental:\n        return (\n          <SettingsExperimental isActive={isScreenActive} onReset={handleReset} />\n        );\n      case SettingsScreens.GeneralChatBackground:\n        return (\n          <SettingsGeneralBackground\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || activeScreen === SettingsScreens.GeneralChatBackgroundColor}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.GeneralChatBackgroundColor:\n        return (\n          <SettingsGeneralBackgroundColor\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveSessions:\n        return (\n          <SettingsActiveSessions\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.ActiveWebsites:\n        return (\n          <SettingsActiveWebsites\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyBlockedUsers:\n        return (\n          <SettingsPrivacyBlockedUsers\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n      case SettingsScreens.PrivacyPhoneNumber:\n      case SettingsScreens.PrivacyLastSeen:\n      case SettingsScreens.PrivacyProfilePhoto:\n      case SettingsScreens.PrivacyBio:\n      case SettingsScreens.PrivacyBirthday:\n      case SettingsScreens.PrivacyGifts:\n      case SettingsScreens.PrivacyPhoneCall:\n      case SettingsScreens.PrivacyForwarding:\n      case SettingsScreens.PrivacyVoiceMessages:\n      case SettingsScreens.PrivacyGroupChats:\n        return (\n          <SettingsPrivacyVisibility\n            screen={currentScreen}\n            onScreenSelect={onScreenSelect}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberAllowedContacts:\n      case SettingsScreens.PrivacyLastSeenAllowedContacts:\n      case SettingsScreens.PrivacyProfilePhotoAllowedContacts:\n      case SettingsScreens.PrivacyBioAllowedContacts:\n      case SettingsScreens.PrivacyBirthdayAllowedContacts:\n      case SettingsScreens.PrivacyGiftsAllowedContacts:\n      case SettingsScreens.PrivacyPhoneCallAllowedContacts:\n      case SettingsScreens.PrivacyPhoneP2PAllowedContacts:\n      case SettingsScreens.PrivacyForwardingAllowedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesAllowedContacts:\n      case SettingsScreens.PrivacyGroupChatsAllowedContacts:\n      case SettingsScreens.PrivacyNoPaidMessages:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            isAllowList\n            usersOnly={currentScreen === SettingsScreens.PrivacyNoPaidMessages}\n            withPremiumCategory={currentScreen === SettingsScreens.PrivacyGroupChatsAllowedContacts}\n            withMiniAppsCategory={currentScreen === SettingsScreens.PrivacyGiftsAllowedContacts}\n            screen={currentScreen}\n            isActive={isScreenActive || privacyAllowScreens[currentScreen]}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyPhoneNumberDeniedContacts:\n      case SettingsScreens.PrivacyLastSeenDeniedContacts:\n      case SettingsScreens.PrivacyProfilePhotoDeniedContacts:\n      case SettingsScreens.PrivacyBioDeniedContacts:\n      case SettingsScreens.PrivacyBirthdayDeniedContacts:\n      case SettingsScreens.PrivacyGiftsDeniedContacts:\n      case SettingsScreens.PrivacyPhoneCallDeniedContacts:\n      case SettingsScreens.PrivacyPhoneP2PDeniedContacts:\n      case SettingsScreens.PrivacyForwardingDeniedContacts:\n      case SettingsScreens.PrivacyVoiceMessagesDeniedContacts:\n      case SettingsScreens.PrivacyGroupChatsDeniedContacts:\n        return (\n          <SettingsPrivacyVisibilityExceptionList\n            screen={currentScreen}\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PrivacyMessages:\n        return (\n          <PrivacyMessages\n            isActive={isScreenActive}\n            onReset={handleReset}\n            onScreenSelect={onScreenSelect}\n          />\n        );\n\n      case SettingsScreens.Folders:\n      case SettingsScreens.FoldersCreateFolder:\n      case SettingsScreens.FoldersEditFolder:\n      case SettingsScreens.FoldersEditFolderFromChatList:\n      case SettingsScreens.FoldersEditFolderInvites:\n      case SettingsScreens.FoldersIncludedChats:\n      case SettingsScreens.FoldersIncludedChatsFromChatList:\n      case SettingsScreens.FoldersExcludedChats:\n      case SettingsScreens.FoldersExcludedChatsFromChatList:\n      case SettingsScreens.FoldersShare:\n        return (\n          <SettingsFolders\n            currentScreen={currentScreen}\n            shownScreen={activeScreen}\n            state={foldersState}\n            dispatch={foldersDispatch}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.TwoFaDisabled:\n      case SettingsScreens.TwoFaNewPassword:\n      case SettingsScreens.TwoFaNewPasswordConfirm:\n      case SettingsScreens.TwoFaNewPasswordHint:\n      case SettingsScreens.TwoFaNewPasswordEmail:\n      case SettingsScreens.TwoFaNewPasswordEmailCode:\n      case SettingsScreens.TwoFaCongratulations:\n      case SettingsScreens.TwoFaEnabled:\n      case SettingsScreens.TwoFaChangePasswordCurrent:\n      case SettingsScreens.TwoFaChangePasswordNew:\n      case SettingsScreens.TwoFaChangePasswordConfirm:\n      case SettingsScreens.TwoFaChangePasswordHint:\n      case SettingsScreens.TwoFaTurnOff:\n      case SettingsScreens.TwoFaRecoveryEmailCurrentPassword:\n      case SettingsScreens.TwoFaRecoveryEmail:\n      case SettingsScreens.TwoFaRecoveryEmailCode:\n        return (\n          <SettingsTwoFa\n            currentScreen={currentScreen}\n            state={twoFaState}\n            dispatch={twoFaDispatch}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.PasscodeDisabled:\n      case SettingsScreens.PasscodeNewPasscode:\n      case SettingsScreens.PasscodeNewPasscodeConfirm:\n      case SettingsScreens.PasscodeChangePasscodeCurrent:\n      case SettingsScreens.PasscodeChangePasscodeNew:\n      case SettingsScreens.PasscodeChangePasscodeConfirm:\n      case SettingsScreens.PasscodeCongratulations:\n      case SettingsScreens.PasscodeEnabled:\n      case SettingsScreens.PasscodeTurnOff:\n        return (\n          <SettingsPasscode\n            currentScreen={currentScreen}\n            passcode={privacyPasscode}\n            onSetPasscode={setPrivacyPasscode}\n            shownScreen={activeScreen}\n            isActive={isScreenActive}\n            onScreenSelect={onScreenSelect}\n            onReset={handleReset}\n          />\n        );\n\n      case SettingsScreens.Performance:\n        return (\n          <SettingsPerformance\n            isActive={isScreenActive}\n            onReset={handleReset}\n          />\n        );\n\n      default:\n        return undefined;\n    }\n  }\n\n  function renderCurrentSection(\n    isScreenActive: boolean,\n    _isFrom: boolean,\n    _currentKey: SettingsScreens,\n    activeKey: SettingsScreens,\n  ) {\n    return (\n      <>\n        <SettingsHeader\n          currentScreen={currentScreen}\n          onReset={handleReset}\n          onScreenSelect={onScreenSelect}\n          editedFolderId={foldersState.folderId}\n        />\n        {renderCurrentSectionContent(isScreenActive, activeKey)}\n      </>\n    );\n  }\n\n  return (\n    <Transition\n      ref={containerRef}\n      id=\"Settings\"\n      name={shouldSkipTransition ? 'none' : LAYERS_ANIMATION_NAME}\n      activeKey={currentScreen}\n      renderCount={TRANSITION_RENDER_COUNT}\n      shouldWrap\n      withSwipeControl\n    >\n      {renderCurrentSection}\n    </Transition>\n  );\n};\n\nexport default memo(Settings);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser, ApiUserStatus } from '../../../api/types';\nimport { StoryViewerOrigin } from '../../../types';\n\nimport { sortUserIds } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\n\nexport type OwnProps = {\n  filter: string;\n  isActive: boolean;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  contactIds?: string[];\n};\n\nconst ContactList: FC<OwnProps & StateProps> = ({\n  isActive,\n  filter,\n  usersById,\n  userStatusesById,\n  contactIds,\n  onReset,\n}) => {\n  const {\n    openChat,\n    openNewContactDialog,\n  } = getActions();\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleClick = useCallback((id: string) => {\n    openChat({ id, shouldReplaceHistory: true });\n  }, [openChat]);\n\n  const listIds = useMemo(() => {\n    if (!contactIds) {\n      return undefined;\n    }\n\n    const filteredIds = filterPeersByQuery({ ids: contactIds, query: filter, type: 'user' });\n\n    return sortUserIds(filteredIds, usersById, userStatusesById);\n  }, [contactIds, filter, usersById, userStatusesById]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, listIds, Boolean(filter));\n\n  return (\n    <InfiniteScroll items={viewportIds} onLoadMore={getMore} className=\"chat-list custom-scroll\">\n      {viewportIds?.length ? (\n        viewportIds.map((id) => (\n          <ListItem\n            key={id}\n            className=\"chat-item-clickable contact-list-item\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => handleClick(id)}\n          >\n            <PrivateChatInfo\n              userId={id}\n              forceShowSelf\n              avatarSize=\"large\"\n              withStory\n              storyViewerOrigin={StoryViewerOrigin.ChatList}\n              ripple={!isMobile}\n            />\n          </ListItem>\n        ))\n      ) : viewportIds && !viewportIds.length ? (\n        <p className=\"no-results\" key=\"no-results\" dir=\"auto\">\n          {filter.length ? 'No contacts matched your search.' : 'Contact list is empty.'}\n        </p>\n      ) : (\n        <Loading key=\"loading\" />\n      )}\n      <FloatingActionButton\n        key=\"create-new-contact\"\n        isShown\n        onClick={openNewContactDialog}\n        ariaLabel={lang('CreateNewContact')}\n      >\n        <Icon name=\"add-user-filled\" />\n      </FloatingActionButton>\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: contactIds } = global.contactList || {};\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n\n    return {\n      usersById,\n      userStatusesById,\n      contactIds,\n    };\n  },\n)(ContactList));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { isUserBot } from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  selectedMemberIds: string[];\n  onSelectedMemberIdsChange: (ids: string[]) => void;\n  onNextStep: () => void;\n  onReset: () => void;\n};\n\ntype StateProps = {\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localPeerIds?: string[];\n  globalPeerIds?: string[];\n};\n\nconst NewChatStep1: FC<OwnProps & StateProps> = ({\n  isChannel,\n  isActive,\n  selectedMemberIds,\n  localContactIds,\n  searchQuery,\n  isSearching,\n  localPeerIds,\n  globalPeerIds,\n  onSelectedMemberIdsChange,\n  onNextStep,\n  onReset,\n}) => {\n  const {\n    setGlobalSearchQuery,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleFilterChange = useCallback((query: string) => {\n    setGlobalSearchQuery({ query });\n  }, []);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const foundContactIds = localContactIds\n      ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : [];\n\n    return sortChatIds(\n      unique([\n        ...foundContactIds,\n        ...(localPeerIds || []),\n        ...(globalPeerIds || []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n\n        return user && !user.isSelf && (user.canBeInvitedToGroup || !isUserBot(user));\n      }),\n      false,\n      selectedMemberIds,\n    );\n  }, [localContactIds, searchQuery, localPeerIds, globalPeerIds, selectedMemberIds]);\n\n  const handleNextStep = useCallback(() => {\n    setGlobalSearchQuery({ query: '' });\n    onNextStep();\n  }, [onNextStep]);\n\n  return (\n    <div className=\"NewChat step-1\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to Chat List\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang('GroupAddMembers')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-1\">\n        <PeerPicker\n          itemIds={displayedIds}\n          selectedIds={selectedMemberIds}\n          filterValue={searchQuery}\n          filterPlaceholder={lang('SendMessageTo')}\n          searchInputId=\"new-group-picker-search\"\n          isLoading={isSearching}\n          isSearchable\n          allowMultiple\n          withStatus\n          itemInputType=\"checkbox\"\n          withDefaultPadding\n          onSelectedIdsChange={onSelectedMemberIdsChange}\n          onFilterChange={handleFilterChange}\n        />\n\n        <FloatingActionButton\n          isShown\n          onClick={handleNextStep}\n          ariaLabel={isChannel ? 'Continue To Channel Info' : 'Continue To Group Info'}\n        >\n          <Icon name=\"arrow-right\" />\n        </FloatingActionButton>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { userIds: localContactIds } = global.contactList || {};\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalResults,\n      localResults,\n    } = selectTabState(global).globalSearch;\n    const { peerIds: globalPeerIds } = globalResults || {};\n    const { peerIds: localPeerIds } = localResults || {};\n\n    return {\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus?.chats,\n      globalPeerIds,\n      localPeerIds,\n    };\n  },\n)(NewChatStep1));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport { ChatCreationProgress } from '../../../types';\n\nimport { getUserFirstOrLastName } from '../../../global/helpers';\nimport { selectTabState } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Button from '../../ui/Button';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\nexport type OwnProps = {\n  isChannel?: boolean;\n  isActive: boolean;\n  memberIds: string[];\n  onReset: (forceReturnToChatList?: boolean) => void;\n};\n\ntype StateProps = {\n  creationProgress?: ChatCreationProgress;\n  creationError?: string;\n  maxGroupSize?: number;\n};\n\nconst MAX_MEMBERS_FOR_GENERATE_CHAT_NAME = 4;\n\nconst NewChatStep2: FC<OwnProps & StateProps > = ({\n  isChannel,\n  isActive,\n  memberIds,\n  maxGroupSize,\n  creationProgress,\n  creationError,\n  onReset,\n}) => {\n  const {\n    createGroupChat,\n    createChannel,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const [title, setTitle] = useState('');\n  const [about, setAbout] = useState('');\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n\n  const chatTitleEmptyError = 'Chat title can\\'t be empty';\n  const channelTitleEmptyError = 'Channel title can\\'t be empty';\n  const chatTooManyUsersError = 'Sorry, creating supergroups is not yet supported';\n\n  const isLoading = creationProgress === ChatCreationProgress.InProgress;\n\n  useEffect(() => {\n    if (isChannel) {\n      return;\n    }\n    if (!memberIds.length || memberIds.length > MAX_MEMBERS_FOR_GENERATE_CHAT_NAME) {\n      setTitle('');\n      return;\n    }\n    const global = getGlobal();\n    const usersById = global.users.byId;\n    const memberFirstNames = [global.currentUserId!, ...memberIds]\n      .map((userId) => getUserFirstOrLastName(usersById[userId]))\n      .filter(Boolean);\n    const generatedChatName = memberFirstNames.slice(0, -1).join(', ')\n      + lang('CreateGroup.PeersTitleLastDelimeter')\n      + memberFirstNames[memberFirstNames.length - 1];\n    setTitle(generatedChatName);\n  }, [isChannel, memberIds, lang]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { value } = e.currentTarget;\n    const newValue = value.replace(/^\\s+/, '');\n\n    setTitle(newValue);\n\n    if (newValue !== value) {\n      e.currentTarget.value = newValue;\n    }\n  }, []);\n\n  const handleDescriptionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setAbout(e.currentTarget.value);\n  }, []);\n\n  const handleCreateGroup = useCallback(() => {\n    if (!title.length) {\n      setError(chatTitleEmptyError);\n      return;\n    }\n\n    if (maxGroupSize && memberIds.length >= maxGroupSize) {\n      setError(chatTooManyUsersError);\n      return;\n    }\n\n    createGroupChat({\n      title,\n      photo,\n      memberIds,\n    });\n  }, [title, memberIds, maxGroupSize, createGroupChat, photo]);\n\n  const handleCreateChannel = useCallback(() => {\n    if (!title.length) {\n      setError(channelTitleEmptyError);\n      return;\n    }\n\n    createChannel({\n      title,\n      about,\n      photo,\n      memberIds,\n    });\n  }, [title, createChannel, about, photo, memberIds, channelTitleEmptyError]);\n\n  useEffect(() => {\n    if (creationProgress === ChatCreationProgress.Complete) {\n      onReset(true);\n    }\n  }, [creationProgress, onReset]);\n\n  const renderedError = (creationError && lang(creationError)) || (\n    error !== chatTitleEmptyError && error !== channelTitleEmptyError\n      ? error\n      : undefined\n  );\n\n  return (\n    <div className=\"NewChat\">\n      <div className=\"left-header\">\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => onReset()}\n          ariaLabel=\"Return to member selection\"\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        <h3>{lang(isChannel ? 'NewChannel' : 'NewGroup')}</h3>\n      </div>\n      <div className=\"NewChat-inner step-2\">\n        <AvatarEditable\n          onChange={setPhoto}\n          title={lang('AddPhoto')}\n        />\n        <InputText\n          value={title}\n          onChange={handleTitleChange}\n          label={lang(isChannel ? 'EnterChannelName' : 'GroupName')}\n          error={error === chatTitleEmptyError || error === channelTitleEmptyError ? error : undefined}\n        />\n        {isChannel && (\n          <>\n            <InputText\n              value={about}\n              onChange={handleDescriptionChange}\n              label={lang('DescriptionOptionalPlaceholder')}\n            />\n            <p className=\"note\">{lang('DescriptionInfo')}</p>\n          </>\n        )}\n\n        {renderedError && (\n          <p className=\"error\">{renderedError}</p>\n        )}\n\n        {memberIds.length > 0 && (\n          <>\n            <h3 className=\"chat-members-heading\">{lang('GroupInfo.ParticipantCount', memberIds.length, 'i')}</h3>\n\n            <div className=\"chat-members-list custom-scroll\">\n              {memberIds.map((id) => (\n                <ListItem inactive className=\"chat-item-clickable\">\n                  <PrivateChatInfo userId={id} />\n                </ListItem>\n              ))}\n            </div>\n          </>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={title.length !== 0}\n        onClick={isChannel ? handleCreateChannel : handleCreateGroup}\n        disabled={isLoading}\n        ariaLabel={isChannel ? lang('ChannelIntro.CreateChannel') : 'Create Group'}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"arrow-right\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      progress: creationProgress,\n      error: creationError,\n    } = selectTabState(global).chatCreation || {};\n\n    return {\n      creationProgress,\n      creationError,\n      maxGroupSize: global.config?.maxGroupSize,\n    };\n  },\n)(NewChatStep2));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\n\nimport { LeftColumnContent } from '../../../types';\n\nimport { LAYERS_ANIMATION_NAME } from '../../../util/windowEnvironment';\n\nimport Transition from '../../ui/Transition';\nimport NewChatStep1 from './NewChatStep1';\nimport NewChatStep2 from './NewChatStep2';\n\nimport './NewChat.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isChannel?: boolean;\n  content: LeftColumnContent;\n  onContentChange: (content: LeftColumnContent) => void;\n  onReset: () => void;\n};\n\nconst RENDER_COUNT = Object.keys(LeftColumnContent).length / 2;\n\nconst NewChat: FC<OwnProps> = ({\n  isActive,\n  isChannel = false,\n  content,\n  onContentChange,\n  onReset,\n}) => {\n  const [newChatMemberIds, setNewChatMemberIds] = useState<string[]>([]);\n\n  const handleNextStep = useCallback(() => {\n    onContentChange(isChannel ? LeftColumnContent.NewChannelStep2 : LeftColumnContent.NewGroupStep2);\n  }, [isChannel, onContentChange]);\n\n  return (\n    <Transition\n      id=\"NewChat\"\n      name={LAYERS_ANIMATION_NAME}\n      renderCount={RENDER_COUNT}\n      activeKey={content}\n    >\n      {(isStepActive) => {\n        switch (content) {\n          case LeftColumnContent.NewChannelStep1:\n          case LeftColumnContent.NewGroupStep1:\n            return (\n              <NewChatStep1\n                isChannel={isChannel}\n                isActive={isActive}\n                selectedMemberIds={newChatMemberIds}\n                onSelectedMemberIdsChange={setNewChatMemberIds}\n                onNextStep={handleNextStep}\n                onReset={onReset}\n              />\n            );\n          case LeftColumnContent.NewChannelStep2:\n          case LeftColumnContent.NewGroupStep2:\n            return (\n              <NewChatStep2\n                isChannel={isChannel}\n                isActive={isStepActive && isActive}\n                memberIds={newChatMemberIds}\n                onReset={onReset}\n              />\n            );\n          default:\n            return undefined;\n        }\n      }}\n    </Transition>\n  );\n};\n\nexport default memo(NewChat);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type { GlobalState } from '../../global/types';\nimport type { FolderEditDispatch } from '../../hooks/reducers/useFoldersReducer';\nimport type { LeftColumnContent, SettingsScreens } from '../../types';\n\nimport { ANIMATION_END_DELAY } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { ANIMATION_DURATION } from '../story/helpers/ribbonAnimation';\n\nimport useForumPanelRender from '../../hooks/useForumPanelRender';\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\nimport useLeftHeaderButtonRtlForumTransition from './main/hooks/useLeftHeaderButtonRtlForumTransition';\n\nimport Icon from '../common/icons/Icon';\nimport StoryRibbon from '../story/StoryRibbon';\nimport StoryToggler from '../story/StoryToggler';\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport MenuItem from '../ui/MenuItem';\nimport ChatList from './main/ChatList';\nimport ForumPanel from './main/ForumPanel';\n\nimport './ArchivedChats.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n  isForumPanelOpen?: boolean;\n  archiveSettings: GlobalState['archiveSettings'];\n  isStoryRibbonShown?: boolean;\n  onReset: () => void;\n  onTopicSearch: NoneToVoidFunction;\n  onSettingsScreenSelect: (screen: SettingsScreens) => void;\n  foldersDispatch: FolderEditDispatch;\n  onLeftColumnContentChange: (content: LeftColumnContent) => void;\n};\n\nconst ArchivedChats: FC<OwnProps> = ({\n  isActive,\n  isForumPanelOpen,\n  archiveSettings,\n  isStoryRibbonShown,\n  onReset,\n  onTopicSearch,\n  onSettingsScreenSelect,\n  onLeftColumnContentChange,\n  foldersDispatch,\n}) => {\n  const { updateArchiveSettings } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onReset,\n  });\n\n  const handleDisplayArchiveInChats = useLastCallback(() => {\n    updateArchiveSettings({ isHidden: false });\n  });\n\n  const {\n    shouldDisableDropdownMenuTransitionRef,\n    handleDropdownMenuTransitionEnd,\n  } = useLeftHeaderButtonRtlForumTransition(isForumPanelOpen);\n\n  const {\n    shouldRender: shouldRenderTitle,\n    transitionClassNames: titleClassNames,\n  } = useShowTransitionDeprecated(!isForumPanelOpen, undefined, undefined, false);\n\n  const {\n    shouldRenderForumPanel, handleForumPanelAnimationEnd,\n    handleForumPanelAnimationStart, isAnimationStarted,\n  } = useForumPanelRender(isForumPanelOpen);\n  const isForumPanelVisible = isForumPanelOpen && isAnimationStarted;\n\n  const {\n    shouldRender: shouldRenderStoryRibbon,\n    transitionClassNames: storyRibbonClassNames,\n    isClosing: isStoryRibbonClosing,\n  } = useShowTransitionDeprecated(\n    isStoryRibbonShown, undefined, undefined, '', false, ANIMATION_DURATION + ANIMATION_END_DELAY,\n  );\n\n  return (\n    <div className=\"ArchivedChats\">\n      <div className={buildClassName('left-header', !shouldRenderStoryRibbon && 'left-header-shadow')}>\n        {lang.isRtl && <div className=\"DropdownMenuFiller\" />}\n        <Button\n          round\n          size=\"smaller\"\n          color=\"translucent\"\n          onClick={onReset}\n          ariaLabel=\"Return to chat list\"\n          className={buildClassName(\n            lang.isRtl && 'rtl',\n            isForumPanelVisible && lang.isRtl && 'right-aligned',\n            shouldDisableDropdownMenuTransitionRef.current && lang.isRtl && 'disable-transition',\n          )}\n          onTransitionEnd={handleDropdownMenuTransitionEnd}\n        >\n          <Icon name=\"arrow-left\" />\n        </Button>\n        {shouldRenderTitle && <h3 className={titleClassNames}>{lang('ArchivedChats')}</h3>}\n        <div className=\"story-toggler-wrapper\">\n          <StoryToggler canShow isArchived />\n        </div>\n        {archiveSettings.isHidden && (\n          <DropdownMenu\n            className=\"archived-chats-more-menu\"\n            positionX=\"right\"\n            onTransitionEnd={lang.isRtl ? handleDropdownMenuTransitionEnd : undefined}\n          >\n            <MenuItem icon=\"archive-from-main\" onClick={handleDisplayArchiveInChats}>\n              {lang('lng_context_archive_to_list')}\n            </MenuItem>\n          </DropdownMenu>\n        )}\n      </div>\n      <div\n        className={buildClassName(\n          'chat-list-wrapper',\n          shouldRenderStoryRibbon && 'with-story-ribbon',\n          storyRibbonClassNames,\n        )}\n      >\n        {shouldRenderStoryRibbon && (\n          <StoryRibbon isArchived className=\"left-header-shadow\" isClosing={isStoryRibbonClosing} />\n        )}\n        <ChatList\n          folderType=\"archived\"\n          isActive={isActive}\n          isForumPanelOpen={isForumPanelVisible}\n          onSettingsScreenSelect={onSettingsScreenSelect}\n          onLeftColumnContentChange={onLeftColumnContentChange}\n          foldersDispatch={foldersDispatch}\n          archiveSettings={archiveSettings}\n        />\n      </div>\n      {shouldRenderForumPanel && (\n        <ForumPanel\n          isOpen={isForumPanelOpen}\n          onTopicSearch={onTopicSearch}\n          onOpenAnimationStart={handleForumPanelAnimationStart}\n          onCloseAnimationEnd={handleForumPanelAnimationEnd}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(ArchivedChats);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChatFolder } from '../../api/types';\n\nimport { ALL_FOLDER_ID } from '../../config';\nimport buildClassName from '../../util/buildClassName';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport CheckboxGroup from '../ui/CheckboxGroup';\nimport Modal from '../ui/Modal';\n\nimport styles from './ChatFolderModal.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\ntype StateProps = {\n  foldersById?: Record<number, ApiChatFolder>;\n  folderOrderedIds?: number[];\n};\n\nconst ChatFolderModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  chatId,\n  foldersById,\n  folderOrderedIds,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const { editChatFolders } = getActions();\n\n  const lang = useOldLang();\n\n  const initialSelectedFolderIds = useMemo(() => {\n    if (!foldersById) {\n      return [];\n    }\n\n    return Object.keys(foldersById).reduce((result, folderId) => {\n      const { includedChatIds, pinnedChatIds } = foldersById[Number(folderId)];\n      if (includedChatIds.includes(chatId) || pinnedChatIds?.includes(chatId)) {\n        result.push(folderId);\n      }\n\n      return result;\n    }, [] as string[]);\n  }, [chatId, foldersById]);\n\n  const [selectedFolderIds, setSelectedFolderIds] = useState<string[]>(initialSelectedFolderIds);\n\n  const folders = useMemo(() => {\n    return folderOrderedIds?.filter((folderId) => folderId !== ALL_FOLDER_ID)\n      .map((folderId) => {\n        const folder = foldersById ? foldersById[folderId] : undefined;\n        const label = folder ? renderTextWithEntities({\n          text: folder.title.text,\n          entities: folder.title.entities,\n          noCustomEmojiPlayback: folder.noTitleAnimations,\n        }) : '';\n        return {\n          label,\n          value: String(folderId),\n        };\n      }) || [];\n  }, [folderOrderedIds, foldersById]);\n\n  const handleSubmit = useCallback(() => {\n    const idsToRemove = initialSelectedFolderIds.filter((id) => !selectedFolderIds.includes(id)).map(Number);\n    const idsToAdd = selectedFolderIds.filter((id) => !initialSelectedFolderIds.includes(id)).map(Number);\n\n    editChatFolders({ chatId, idsToRemove, idsToAdd });\n    onClose();\n  }, [chatId, editChatFolders, initialSelectedFolderIds, onClose, selectedFolderIds]);\n\n  if (!foldersById || !folderOrderedIds) {\n    return undefined;\n  }\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className={buildClassName(styles.root, 'delete')}\n      contentClassName={styles.modalContent}\n      title={lang('FilterAddTo')}\n    >\n      <div className={buildClassName(styles.main, 'custom-scroll')}>\n        <CheckboxGroup\n          options={folders}\n          selected={selectedFolderIds}\n          onChange={setSelectedFolderIds}\n        />\n      </div>\n      <div className={styles.footer}>\n        <div className=\"dialog-buttons\">\n          <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n            {lang('FilterAddTo')}\n          </Button>\n          <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { byId: foldersById, orderedIds: folderOrderedIds } = global.chatFolders;\n\n    return {\n      foldersById,\n      folderOrderedIds,\n    };\n  },\n)(ChatFolderModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"modalContent\":\"EG5lPWY1\",\"root\":\"_fJBBCCE\",\"main\":\"heYMHiUt\",\"footer\":\"_jtqAaUU\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { MAX_INT_32 } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport RadioGroup from '../ui/RadioGroup';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  topicId?: number;\n  onClose: () => void;\n  onCloseAnimationEnd?: () => void;\n};\n\nenum MuteDuration {\n  OneHour = '3600',\n  FourHours = '14400',\n  EightHours = '28800',\n  OneDay = '86400',\n  ThreeDays = '259200',\n  Forever = '-1',\n}\n\nconst MuteChatModal: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  topicId,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const [muteUntilOption, setMuteUntilOption] = useState(MuteDuration.Forever);\n  const { updateChatMutedState, updateTopicMutedState } = getActions();\n\n  const lang = useOldLang();\n\n  const muteForOptions = useMemo(() => [\n    { label: lang('MuteFor.Hours', 1), value: MuteDuration.OneHour },\n    { label: lang('MuteFor.Hours', 4), value: MuteDuration.FourHours },\n    { label: lang('MuteFor.Hours', 8), value: MuteDuration.EightHours },\n    { label: lang('MuteFor.Days', 1), value: MuteDuration.OneDay },\n    { label: lang('MuteFor.Days', 3), value: MuteDuration.ThreeDays },\n    { label: lang('MuteFor.Forever'), value: MuteDuration.Forever },\n  ], [lang]);\n\n  const handleSubmit = useCallback(() => {\n    let mutedUntil: number;\n    if (muteUntilOption === MuteDuration.Forever) {\n      mutedUntil = MAX_INT_32;\n    } else {\n      mutedUntil = Math.floor(Date.now() / 1000) + Number(muteUntilOption);\n    }\n    if (topicId) {\n      updateTopicMutedState({ chatId, topicId, mutedUntil });\n    } else {\n      updateChatMutedState({ chatId, mutedUntil });\n    }\n    onClose();\n  }, [chatId, muteUntilOption, onClose, topicId]);\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onEnter={handleSubmit}\n      className=\"delete\"\n      title={lang('Notifications')}\n    >\n      <RadioGroup\n        className=\"dialog-checkbox-group\"\n        name=\"muteFor\"\n        options={muteForOptions}\n        selected={muteUntilOption}\n        onChange={setMuteUntilOption as any}\n      />\n      <div className=\"dialog-buttons\">\n        <Button color=\"primary\" className=\"confirm-dialog-button\" isText onClick={handleSubmit}>\n          {lang('Common.Done')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>{lang('Cancel')}</Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(MuteChatModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { EMOJI_SIZE_MODAL, STICKER_SIZE_MODAL, TME_LINK_PREFIX } from '../../config';\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectPeerPaidMessagesStars,\n  selectShouldSchedule,\n  selectStickerSet,\n  selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { copyTextToClipboard } from '../../util/clipboard';\nimport renderText from './helpers/renderText';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\nimport useSchedule from '../../hooks/useSchedule';\nimport useScrolledState from '../../hooks/useScrolledState';\n\nimport Button from '../ui/Button';\nimport DropdownMenu from '../ui/DropdownMenu';\nimport Loading from '../ui/Loading';\nimport MenuItem from '../ui/MenuItem';\nimport Modal from '../ui/Modal';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\n\nimport './StickerSetModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  fromSticker?: ApiSticker;\n  stickerSetShortName?: string;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  currentMessageList?: MessageList;\n  canSendStickers?: boolean;\n  stickerSet?: ApiStickerSet;\n  canScheduleUntilOnline?: boolean;\n  shouldSchedule?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  shouldUpdateStickerSetOrder?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerSetModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  fromSticker,\n  stickerSetShortName,\n  stickerSet,\n  canSendStickers,\n  canScheduleUntilOnline,\n  shouldSchedule,\n  isSavedMessages,\n  isCurrentUserPremium,\n  shouldUpdateStickerSetOrder,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    loadStickers,\n    toggleStickerSet,\n    sendMessage,\n    showNotification,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n\n  const { isMobile } = useAppLayout();\n\n  const prevStickerSet = usePreviousDeprecated(stickerSet);\n  const renderingStickerSet = stickerSet || prevStickerSet;\n\n  const isAdded = Boolean(!renderingStickerSet?.isArchived && renderingStickerSet?.installedDate);\n  const isEmoji = renderingStickerSet?.isEmoji;\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => {\n    if (isOpen && !renderingStickerSet?.stickers) {\n      loadStickers({\n        stickerSetInfo: fromSticker ? fromSticker.stickerSetInfo : { shortName: stickerSetShortName! },\n      });\n    }\n  }, [isOpen, fromSticker, loadStickers, stickerSetShortName, renderingStickerSet]);\n\n  const handleSelect = useCallback((sticker: ApiSticker, isSilent?: boolean, isScheduleRequested?: boolean) => {\n    if (!currentMessageList) {\n      return;\n    }\n    sticker = {\n      ...sticker,\n      isPreloadedGlobally: true,\n    };\n\n    if (shouldSchedule || isScheduleRequested) {\n      requestCalendar((scheduledAt) => {\n        sendMessage({\n          messageList: currentMessageList, sticker, isSilent, scheduledAt,\n        });\n        onClose();\n      });\n    } else {\n      sendMessage({\n        messageList: currentMessageList,\n        sticker,\n        isSilent,\n        shouldUpdateStickerSetOrder: shouldUpdateStickerSetOrder && isAdded,\n      });\n      onClose();\n    }\n  }, [currentMessageList, shouldSchedule, requestCalendar, onClose, shouldUpdateStickerSetOrder, isAdded]);\n\n  const handleButtonClick = useCallback(() => {\n    if (renderingStickerSet) {\n      toggleStickerSet({ stickerSetId: renderingStickerSet.id });\n      onClose();\n    }\n  }, [onClose, renderingStickerSet, toggleStickerSet]);\n\n  const handleCopyLink = useCallback(() => {\n    if (!renderingStickerSet) return;\n    const { shortName } = renderingStickerSet;\n    const suffix = isEmoji ? 'addemoji' : 'addstickers';\n    const url = `${TME_LINK_PREFIX}${suffix}/${shortName}`;\n    copyTextToClipboard(url);\n    showNotification({\n      message: lang('LinkCopied'),\n    });\n  }, [isEmoji, lang, renderingStickerSet, showNotification]);\n\n  const renderButtonText = () => {\n    if (!renderingStickerSet) return lang('Loading');\n\n    const suffix = isEmoji ? 'Emoji' : 'Sticker';\n\n    return lang(\n      isAdded ? `StickerPack.Remove${suffix}Count` : `StickerPack.Add${suffix}Count`,\n      renderingStickerSet.count,\n      'i',\n    );\n  };\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  function renderHeader() {\n    const fullClassName = buildClassName('modal-header', !shouldHideTopBorder && 'with-top-border');\n\n    return (\n      <div className={fullClassName} dir={lang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel={lang('Close')} onClick={onClose}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">\n          {renderingStickerSet ? renderText(renderingStickerSet.title, ['emoji', 'links']) : lang('AccDescrStickerSet')}\n        </div>\n        <DropdownMenu\n          className=\"stickers-more-menu with-menu-transitions\"\n          trigger={MoreMenuButton}\n          positionX=\"right\"\n        >\n          <MenuItem icon=\"copy\" onClick={handleCopyLink}>{lang('StickersCopy')}</MenuItem>\n        </DropdownMenu>\n      </div>\n    );\n  }\n\n  return (\n    <Modal\n      className={buildClassName('StickerSetModal', isEmoji && 'custom-emoji')}\n      isOpen={isOpen}\n      onClose={onClose}\n      header={renderHeader()}\n    >\n      {renderingStickerSet?.stickers ? (\n        <>\n          <div ref={containerRef} className=\"stickers custom-scroll\" onScroll={handleContentScroll}>\n            <div className=\"shared-canvas-container stickers-grid\">\n              <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n              {renderingStickerSet.stickers.map((sticker) => (\n                <StickerButton\n                  sticker={sticker}\n                  size={isEmoji ? EMOJI_SIZE_MODAL : STICKER_SIZE_MODAL}\n                  observeIntersection={observeIntersection}\n                  onClick={canSendStickers && !isEmoji ? handleSelect : undefined}\n                  clickArg={sticker}\n                  isSavedMessages={isSavedMessages}\n                  isCurrentUserPremium={isCurrentUserPremium}\n                  sharedCanvasRef={sharedCanvasRef}\n                />\n              ))}\n            </div>\n          </div>\n          <div className=\"button-wrapper\">\n            <Button\n              size=\"smaller\"\n              fluid\n              color={isAdded ? 'danger' : 'primary'}\n              onClick={handleButtonClick}\n            >\n              {renderButtonText()}\n            </Button>\n          </div>\n        </>\n      ) : (\n        <Loading />\n      )}\n      {calendar}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { fromSticker, stickerSetShortName }): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    const { chatId, threadId } = currentMessageList || {};\n    const chat = chatId && selectChat(global, chatId);\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const sendOptions = chat ? getAllowedAttachmentOptions(chat, chatFullInfo) : undefined;\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canSendStickers = Boolean(\n      chat && threadId && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo)\n        && sendOptions?.canSendStickers,\n    );\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n\n    const stickerSetInfo = fromSticker ? fromSticker.stickerSetInfo\n      : stickerSetShortName ? { shortName: stickerSetShortName } : undefined;\n\n    const stickerSet = stickerSetInfo ? selectStickerSet(global, stickerSetInfo) : undefined;\n    const paidMessagesStars = chatId ? selectPeerPaidMessagesStars(global, chatId) : undefined;\n\n    return {\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      canSendStickers,\n      isSavedMessages,\n      shouldSchedule: !paidMessagesStars && selectShouldSchedule(global),\n      stickerSet,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      shouldUpdateStickerSetOrder: global.settings.byKey.shouldUpdateStickerSetOrder,\n      currentMessageList,\n    };\n  },\n)(StickerSetModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"nZYT4vJ3\",\"sets\":\"JzkmXjFF\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo,\n  useRef,\n} from '../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../global';\n\nimport type { ApiSticker } from '../../api/types';\n\nimport { selectCanPlayAnimatedEmojis } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\n\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Modal from '../ui/Modal';\nimport StickerSetCard from './StickerSetCard';\n\nimport styles from './CustomEmojiSetsModal.module.scss';\n\nexport type OwnProps = {\n  customEmojiSetIds?: string[];\n  onClose: () => void;\n};\n\ntype StateProps = {\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst CustomEmojiSetsModal: FC<OwnProps & StateProps> = ({\n  customEmojiSetIds,\n  canPlayAnimatedEmojis,\n  onClose,\n}) => {\n  const { openStickerSet } = getActions();\n  const lang = useOldLang();\n\n  const customEmojiSets = useMemo(() => {\n    return customEmojiSetIds?.map((id) => getGlobal().stickers.setsById[id]);\n  }, [customEmojiSetIds]);\n\n  // eslint-disable-next-line no-null/no-null\n  const customEmojiModalRef = useRef<HTMLDivElement>(null);\n  const { observe: observeIntersectionForCovers } = useIntersectionObserver({\n    rootRef: customEmojiModalRef, isDisabled: !customEmojiSets,\n  });\n\n  const prevCustomEmojiSets = usePreviousDeprecated(customEmojiSets);\n  const renderingCustomEmojiSets = customEmojiSets || prevCustomEmojiSets;\n\n  const handleSetClick = useLastCallback((sticker: ApiSticker) => {\n    openStickerSet({\n      stickerSetInfo: sticker.stickerSetInfo,\n    });\n  });\n\n  return (\n    <Modal\n      isOpen={Boolean(customEmojiSets)}\n      className={styles.root}\n      onClose={onClose}\n      hasCloseButton\n      title={lang('lng_custom_emoji_used_sets')}\n    >\n      <div className={buildClassName(styles.sets, 'custom-scroll')} ref={customEmojiModalRef} teactFastList>\n        {renderingCustomEmojiSets?.map((customEmojiSet) => {\n          return (\n            <StickerSetCard\n              key={customEmojiSet.id}\n              className={styles.setCard}\n              stickerSet={customEmojiSet}\n              onClick={handleSetClick}\n              observeIntersection={observeIntersectionForCovers}\n              noPlay={!canPlayAnimatedEmojis}\n            />\n          );\n        })}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      canPlayAnimatedEmojis: selectCanPlayAnimatedEmojis(global),\n    };\n  },\n)(CustomEmojiSetsModal));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiBotCommand, ApiChat } from '../../api/types';\nimport type { IAnchorPosition, ThreadId } from '../../types';\nimport type { IconName } from '../../types/icons';\nimport { MAIN_THREAD_ID } from '../../api/types';\n\nimport {\n  getCanAddContact,\n  getCanDeleteChat,\n  getCanManageTopic,\n  getHasAdminRight,\n  getIsSavedDialog,\n  isChatChannel,\n  isChatGroup,\n  isSystemBot,\n  isUserId,\n  isUserRightBanned,\n} from '../../global/helpers';\nimport { getIsChatMuted } from '../../global/helpers/notifications';\nimport {\n  selectBot,\n  selectCanGift,\n  selectCanManage,\n  selectCanTranslateChat,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentMessageList,\n  selectIsChatWithSelf,\n  selectIsRightColumnShown,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTabState,\n  selectTopic,\n  selectUser,\n  selectUserFullInfo,\n} from '../../global/selectors';\nimport { disableScrolling } from '../../util/scrollLock';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../hooks/useShowTransitionDeprecated';\n\nimport DeleteChatModal from '../common/DeleteChatModal';\nimport MuteChatModal from '../left/MuteChatModal.async';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport MenuSeparator from '../ui/MenuSeparator';\nimport Portal from '../ui/Portal';\n\nimport './HeaderMenuContainer.scss';\n\nconst BOT_BUTTONS: Record<string, { icon: IconName; label: string }> = {\n  settings: {\n    icon: 'bots',\n    label: 'BotSettings',\n  },\n  help: {\n    icon: 'help',\n    label: 'BotHelp',\n  },\n};\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  isOpen: boolean;\n  withExtraActions: boolean;\n  anchor: IAnchorPosition;\n  isChannel?: boolean;\n  canStartBot?: boolean;\n  canSubscribe?: boolean;\n  canSearch?: boolean;\n  canCall?: boolean;\n  canMute?: boolean;\n  canViewStatistics?: boolean;\n  canViewBoosts?: boolean;\n  canViewMonetization?: boolean;\n  canShowBoostModal?: boolean;\n  withForumActions?: boolean;\n  canLeave?: boolean;\n  canEnterVoiceChat?: boolean;\n  canCreateVoiceChat?: boolean;\n  pendingJoinRequests?: number;\n  canTranslate?: boolean;\n  onSubscribeChannel: () => void;\n  onSearchClick: () => void;\n  onAsMessagesClick: () => void;\n  onClose: () => void;\n  onCloseAnimationEnd: () => void;\n  onJoinRequestsClick?: () => void;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  botCommands?: ApiBotCommand[];\n  botPrivacyPolicyUrl?: string;\n  isPrivate?: boolean;\n  isMuted?: boolean;\n  isTopic?: boolean;\n  isForum?: boolean;\n  isForumAsMessages?: true;\n  canAddContact?: boolean;\n  canDeleteChat?: boolean;\n  canReportChat?: boolean;\n  canGift?: boolean;\n  canCreateTopic?: boolean;\n  canEditTopic?: boolean;\n  hasLinkedChat?: boolean;\n  isChatInfoShown?: boolean;\n  isRightColumnShown?: boolean;\n  canManage?: boolean;\n  canTranslate?: boolean;\n  isBlocked?: boolean;\n  isBot?: boolean;\n  isChatWithSelf?: boolean;\n  savedDialog?: ApiChat;\n};\n\nconst CLOSE_MENU_ANIMATION_DURATION = 200;\n\nconst HeaderMenuContainer: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  withExtraActions,\n  anchor,\n  isChannel,\n  botCommands,\n  botPrivacyPolicyUrl,\n  withForumActions,\n  isTopic,\n  isForum,\n  isForumAsMessages,\n  isChatInfoShown,\n  canStartBot,\n  canSubscribe,\n  canReportChat,\n  canSearch,\n  canCall,\n  canMute,\n  canViewStatistics,\n  canViewMonetization,\n  canViewBoosts,\n  pendingJoinRequests,\n  canLeave,\n  canEnterVoiceChat,\n  canCreateVoiceChat,\n  chat,\n  isPrivate,\n  isMuted,\n  canDeleteChat,\n  canGift,\n  hasLinkedChat,\n  canAddContact,\n  canCreateTopic,\n  canEditTopic,\n  canManage,\n  isRightColumnShown,\n  canTranslate,\n  isBlocked,\n  isBot,\n  isChatWithSelf,\n  savedDialog,\n  canShowBoostModal,\n  onJoinRequestsClick,\n  onSubscribeChannel,\n  onSearchClick,\n  onAsMessagesClick,\n  onClose,\n  onCloseAnimationEnd,\n}) => {\n  const {\n    updateChatMutedState,\n    enterMessageSelectMode,\n    sendBotCommand,\n    restartBot,\n    requestMasterAndJoinGroupCall,\n    createGroupCall,\n    openLinkedChat,\n    openAddContactDialog,\n    requestMasterAndRequestCall,\n    toggleStatistics,\n    openMonetizationStatistics,\n    openBoostStatistics,\n    openGiftModal,\n    openThreadWithInfo,\n    openCreateTopicPanel,\n    openEditTopicPanel,\n    openChat,\n    openUrl,\n    toggleManagement,\n    togglePeerTranslations,\n    blockUser,\n    unblockUser,\n    setViewForumAsMessages,\n    openBoostModal,\n    reportMessages,\n  } = getActions();\n\n  const { isMobile } = useAppLayout();\n  const [isMenuOpen, setIsMenuOpen] = useState(true);\n  const [shouldCloseFast, setShouldCloseFast] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [isMuteModalOpen, setIsMuteModalOpen] = useState(false);\n  const [shouldRenderMuteModal, markRenderMuteModal, unmarkRenderMuteModal] = useFlag();\n  const { x, y } = anchor;\n\n  useShowTransitionDeprecated(isOpen, onCloseAnimationEnd, undefined, false);\n  const isViewGroupInfoShown = usePrevDuringAnimation(\n    (!isChatInfoShown && isForum) ? true : undefined, CLOSE_MENU_ANIMATION_DURATION,\n  );\n\n  const closeMuteModal = useLastCallback(() => {\n    setIsMuteModalOpen(false);\n    onClose();\n  });\n\n  const handleReport = useLastCallback(() => {\n    setIsMenuOpen(false);\n    reportMessages({ chatId, messageIds: [] });\n    onClose();\n  });\n\n  const handleDelete = useLastCallback(() => {\n    setIsMenuOpen(false);\n    setIsDeleteModalOpen(true);\n  });\n\n  const closeMenu = useLastCallback(() => {\n    setIsMenuOpen(false);\n    onClose();\n  });\n\n  const handleViewGroupInfo = useLastCallback(() => {\n    openThreadWithInfo({ chatId, threadId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const closeDeleteModal = useLastCallback(() => {\n    setIsDeleteModalOpen(false);\n    onClose();\n  });\n\n  const handleStartBot = useLastCallback(() => {\n    sendBotCommand({ command: '/start' });\n  });\n\n  const handleRestartBot = useLastCallback(() => {\n    restartBot({ chatId });\n  });\n\n  const handleUnmuteClick = useLastCallback(() => {\n    updateChatMutedState({ chatId, isMuted: false });\n    closeMenu();\n  });\n\n  const handleMuteClick = useLastCallback(() => {\n    markRenderMuteModal();\n    setIsMuteModalOpen(true);\n    setIsMenuOpen(false);\n  });\n\n  const handleCreateTopicClick = useLastCallback(() => {\n    openCreateTopicPanel({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditClick = useLastCallback(() => {\n    toggleManagement({ force: true });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleEditTopicClick = useLastCallback(() => {\n    openEditTopicPanel({ chatId, topicId: Number(threadId) });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleViewAsTopicsClick = useLastCallback(() => {\n    openChat({ id: undefined });\n    setViewForumAsMessages({ chatId, isEnabled: false });\n    closeMenu();\n  });\n\n  const handleEnterVoiceChatClick = useLastCallback(() => {\n    if (canCreateVoiceChat) {\n      // TODO Show popup to schedule\n      createGroupCall({\n        chatId,\n      });\n    } else {\n      requestMasterAndJoinGroupCall({\n        chatId,\n      });\n    }\n    closeMenu();\n  });\n\n  const handleLinkedChatClick = useLastCallback(() => {\n    openLinkedChat({ id: chatId });\n    closeMenu();\n  });\n\n  const handleGiftClick = useLastCallback(() => {\n    openGiftModal({ forUserId: chatId });\n    closeMenu();\n  });\n\n  const handleAddContactClick = useLastCallback(() => {\n    openAddContactDialog({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSubscribe = useLastCallback(() => {\n    onSubscribeChannel();\n    closeMenu();\n  });\n\n  const handleVideoCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId, isVideo: true });\n    closeMenu();\n  });\n\n  const handleCall = useLastCallback(() => {\n    requestMasterAndRequestCall({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleSearch = useLastCallback(() => {\n    onSearchClick();\n    closeMenu();\n  });\n\n  const handleStatisticsClick = useLastCallback(() => {\n    toggleStatistics();\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleMonetizationClick = useLastCallback(() => {\n    openMonetizationStatistics({ chatId });\n    setShouldCloseFast(!isRightColumnShown);\n    closeMenu();\n  });\n\n  const handleBoostClick = useLastCallback(() => {\n    if (canViewBoosts) {\n      openBoostStatistics({ chatId });\n      setShouldCloseFast(!isRightColumnShown);\n    } else {\n      openBoostModal({ chatId });\n    }\n    closeMenu();\n  });\n\n  const handleEnableTranslations = useLastCallback(() => {\n    togglePeerTranslations({ chatId, isEnabled: true });\n    closeMenu();\n  });\n\n  const handleSelectMessages = useLastCallback(() => {\n    enterMessageSelectMode();\n    closeMenu();\n  });\n\n  const handleOpenAsMessages = useLastCallback(() => {\n    onAsMessagesClick();\n    closeMenu();\n  });\n\n  const handleBlock = useLastCallback(() => {\n    blockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  const handleUnblock = useLastCallback(() => {\n    unblockUser({ userId: chatId });\n    closeMenu();\n  });\n\n  useEffect(disableScrolling, []);\n\n  const lang = useOldLang();\n\n  const botButtons = useMemo(() => {\n    const commandButtons = botCommands?.map(({ command }) => {\n      const cmd = BOT_BUTTONS[command];\n      if (!cmd) return undefined;\n\n      const handleClick = () => {\n        sendBotCommand({ command: `/${command}` });\n        closeMenu();\n      };\n\n      return (\n        <MenuItem\n          key={command}\n          icon={cmd.icon}\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={handleClick}\n        >\n          {lang(cmd.label)}\n        </MenuItem>\n      );\n    });\n\n    const hasPrivacyCommand = botCommands?.some(({ command }) => command === 'privacy');\n\n    const privacyButton = isBot && (\n      <MenuItem\n        icon=\"privacy-policy\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => {\n          if (hasPrivacyCommand && !botPrivacyPolicyUrl) {\n            sendBotCommand({ command: '/privacy' });\n          } else {\n            openUrl({ url: botPrivacyPolicyUrl || lang('BotDefaultPrivacyPolicy') });\n          }\n          closeMenu();\n        }}\n      >\n        {lang('BotPrivacyPolicy')}\n      </MenuItem>\n    );\n\n    return [...commandButtons || [], privacyButton].filter(Boolean);\n  }, [botCommands, lang, botPrivacyPolicyUrl, isBot]);\n\n  const deleteTitle = useMemo(() => {\n    if (!chat) return undefined;\n\n    if (savedDialog) {\n      return lang('Delete');\n    }\n\n    if (isPrivate) {\n      return lang('DeleteChatUser');\n    }\n\n    if (canDeleteChat) {\n      return lang('GroupInfo.DeleteAndExit');\n    }\n\n    if (isChannel) {\n      return lang('LeaveChannel');\n    }\n\n    return lang('Group.LeaveGroup');\n  }, [canDeleteChat, chat, isChannel, isPrivate, savedDialog, lang]);\n\n  return (\n    <Portal>\n      <div className=\"HeaderMenuContainer\">\n        <Menu\n          isOpen={isMenuOpen}\n          positionX=\"right\"\n          style={`left: ${x}px;top: ${y}px;`}\n          onClose={closeMenu}\n          shouldCloseFast={shouldCloseFast}\n        >\n          {isMobile && canSearch && (\n            <MenuItem\n              icon=\"search\"\n              onClick={handleSearch}\n            >\n              {lang('Search')}\n            </MenuItem>\n          )}\n          {withForumActions && canCreateTopic && (\n            <>\n              <MenuItem\n                icon=\"comments\"\n                onClick={handleCreateTopicClick}\n              >\n                {lang('lng_forum_create_topic')}\n              </MenuItem>\n              <MenuSeparator />\n            </>\n          )}\n          {isViewGroupInfoShown && (\n            <MenuItem\n              icon=\"info\"\n              onClick={handleViewGroupInfo}\n            >\n              {isTopic ? lang('lng_context_view_topic') : lang('lng_context_view_group')}\n            </MenuItem>\n          )}\n          {canManage && !canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditClick}\n            >\n              {lang('Edit')}\n            </MenuItem>\n          )}\n          {canEditTopic && (\n            <MenuItem\n              icon=\"edit\"\n              onClick={handleEditTopicClick}\n            >\n              {lang('lng_forum_topic_edit')}\n            </MenuItem>\n          )}\n          {isMobile && !withForumActions && isForum && !isTopic && (\n            <MenuItem\n              icon=\"forums\"\n              onClick={handleViewAsTopicsClick}\n            >\n              {lang('Chat.ContextViewAsTopics')}\n            </MenuItem>\n          )}\n          {withForumActions && Boolean(pendingJoinRequests) && (\n            <MenuItem\n              icon=\"user\"\n              onClick={onJoinRequestsClick}\n            >\n              {isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}\n              <div className=\"right-badge\">{pendingJoinRequests}</div>\n            </MenuItem>\n          )}\n          {withForumActions && !isTopic && !isForumAsMessages && (\n            <MenuItem\n              icon=\"message\"\n              onClick={handleOpenAsMessages}\n            >\n              {lang('lng_forum_view_as_messages')}\n            </MenuItem>\n          )}\n          {withExtraActions && canStartBot && (\n            <MenuItem\n              icon=\"bots\"\n              onClick={handleStartBot}\n            >\n              {lang('BotStart')}\n            </MenuItem>\n          )}\n          {withExtraActions && canSubscribe && (\n            <MenuItem\n              icon={isChannel ? 'channel' : 'group'}\n              onClick={handleSubscribe}\n            >\n              {lang(isChannel ? 'ProfileJoinChannel' : 'ProfileJoinGroup')}\n            </MenuItem>\n          )}\n          {canShowBoostModal && !canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang(isChannel ? 'BoostingBoostChannelMenu' : 'BoostingBoostGroupMenu')}\n            </MenuItem>\n          )}\n          {canAddContact && (\n            <MenuItem\n              icon=\"add-user\"\n              onClick={handleAddContactClick}\n            >\n              {lang('AddContact')}\n            </MenuItem>\n          )}\n          {isMobile && canCall && (\n            <MenuItem\n              icon=\"phone\"\n              onClick={handleCall}\n            >\n              {lang('Call')}\n            </MenuItem>\n          )}\n          {canCall && (\n            <MenuItem\n              icon=\"video-outlined\"\n              onClick={handleVideoCall}\n            >\n              {lang('VideoCall')}\n            </MenuItem>\n          )}\n          {canMute && (isMuted ? (\n            <MenuItem\n              icon=\"unmute\"\n              onClick={handleUnmuteClick}\n            >\n              {lang('ChatsUnmute')}\n            </MenuItem>\n          )\n            : (\n              <MenuItem\n                icon=\"mute\"\n                onClick={handleMuteClick}\n              >\n                {lang('ChatsMute')}...\n              </MenuItem>\n            )\n          )}\n          {(canEnterVoiceChat || canCreateVoiceChat) && (\n            <MenuItem\n              icon=\"voice-chat\"\n              onClick={handleEnterVoiceChatClick}\n            >\n              {lang(canCreateVoiceChat ? 'StartVoipChat' : 'VoipGroupJoinCall')}\n            </MenuItem>\n          )}\n          {hasLinkedChat && (\n            <MenuItem\n              icon={isChannel ? 'comments' : 'channel'}\n              onClick={handleLinkedChatClick}\n            >\n              {lang(isChannel ? 'ViewDiscussion' : 'lng_profile_view_channel')}\n            </MenuItem>\n          )}\n          {!withForumActions && (\n            <MenuItem\n              icon=\"select\"\n              onClick={handleSelectMessages}\n            >\n              {lang('ReportSelectMessages')}\n            </MenuItem>\n          )}\n          {canViewBoosts && (\n            <MenuItem\n              icon=\"boost-outline\"\n              onClick={handleBoostClick}\n            >\n              {lang('Boosts')}\n            </MenuItem>\n          )}\n          {canViewStatistics && (\n            <MenuItem\n              icon=\"stats\"\n              onClick={handleStatisticsClick}\n            >\n              {lang('Statistics')}\n            </MenuItem>\n          )}\n          {isChannel && canViewMonetization && (\n            <MenuItem\n              icon=\"cash-circle\"\n              onClick={handleMonetizationClick}\n            >\n              {lang('lng_channel_earn_title')}\n            </MenuItem>\n          )}\n          {canTranslate && (\n            <MenuItem\n              icon=\"language\"\n              onClick={handleEnableTranslations}\n            >\n              {lang('lng_context_translate')}\n            </MenuItem>\n          )}\n          {canReportChat && (\n            <MenuItem\n              icon=\"flag\"\n              onClick={handleReport}\n            >\n              {lang('ReportPeer.Report')}\n            </MenuItem>\n          )}\n          {botButtons}\n          {canGift && (\n            <MenuItem\n              icon=\"gift\"\n              onClick={handleGiftClick}\n            >\n              {lang('ProfileSendAGift')}\n            </MenuItem>\n          )}\n          {isBot && (\n            <MenuItem\n              icon={isBlocked ? 'bots' : 'hand-stop'}\n              onClick={isBlocked ? handleRestartBot : handleBlock}\n            >\n              {isBlocked ? lang('BotRestart') : lang('Bot.Stop')}\n            </MenuItem>\n          )}\n          {isPrivate && !isChatWithSelf && !isBot && (\n            <MenuItem\n              icon={isBlocked ? 'user' : 'hand-stop'}\n              onClick={isBlocked ? handleUnblock : handleBlock}\n            >\n              {isBlocked ? lang('Unblock') : lang('BlockUser')}\n            </MenuItem>\n          )}\n          {canLeave && (\n            <>\n              <MenuSeparator />\n              <MenuItem\n                destructive\n                icon=\"delete\"\n                onClick={handleDelete}\n              >\n                {deleteTitle}\n              </MenuItem>\n            </>\n          )}\n        </Menu>\n        {chat && (\n          <DeleteChatModal\n            isOpen={isDeleteModalOpen}\n            onClose={closeDeleteModal}\n            chat={savedDialog || chat}\n            isSavedDialog={Boolean(savedDialog)}\n          />\n        )}\n        {canMute && shouldRenderMuteModal && chat?.id && (\n          <MuteChatModal\n            isOpen={isMuteModalOpen}\n            onClose={closeMuteModal}\n            onCloseAnimationEnd={unmarkRenderMuteModal}\n            chatId={chat.id}\n          />\n        )}\n      </div>\n    </Portal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, threadId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    if (!chat || chat.isRestricted) {\n      return {};\n    }\n    const isPrivate = isUserId(chat.id);\n    const user = isPrivate ? selectUser(global, chatId) : undefined;\n    const canAddContact = user && getCanAddContact(user);\n    const isMainThread = threadId === MAIN_THREAD_ID;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { chatId: currentChatId, threadId: currentThreadId } = selectCurrentMessageList(global) || {};\n    const canReportChat = isMainThread && !user && (isChatChannel(chat) || isChatGroup(chat));\n\n    const chatBot = !isSystemBot(chatId) ? selectBot(global, chatId) : undefined;\n    const userFullInfo = isPrivate ? selectUserFullInfo(global, chatId) : undefined;\n    const chatFullInfo = !isPrivate ? selectChatFullInfo(global, chatId) : undefined;\n    const fullInfo = userFullInfo || chatFullInfo;\n    const canGift = selectCanGift(global, chatId);\n\n    const topic = selectTopic(global, chatId, threadId);\n    const canCreateTopic = chat.isForum && (\n      chat.isCreator || !isUserRightBanned(chat, 'manageTopics') || getHasAdminRight(chat, 'manageTopics')\n    );\n    const canEditTopic = topic && getCanManageTopic(chat, topic);\n    const canManage = selectCanManage(global, chatId);\n    // Context menu item should only be displayed if user hid translation panel\n    const canTranslate = selectCanTranslateChat(global, chatId) && fullInfo?.isTranslationDisabled;\n\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, global.currentUserId);\n    const savedDialog = isSavedDialog ? selectChat(global, String(threadId)) : undefined;\n\n    return {\n      chat,\n      isMuted: getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id)),\n      isPrivate,\n      isTopic: chat?.isForum && !isMainThread,\n      isForum: chat?.isForum,\n      isForumAsMessages: chat?.isForumAsMessages,\n      canAddContact,\n      canDeleteChat: getCanDeleteChat(chat),\n      canReportChat,\n      canGift,\n      hasLinkedChat: Boolean(chatFullInfo?.linkedChatId),\n      botCommands: chatBot ? userFullInfo?.botInfo?.commands : undefined,\n      botPrivacyPolicyUrl: chatBot ? userFullInfo?.botInfo?.privacyPolicyUrl : undefined,\n      isChatInfoShown: selectTabState(global).isChatInfoShown\n        && currentChatId === chatId && currentThreadId === threadId,\n      canCreateTopic,\n      canEditTopic,\n      canManage,\n      isRightColumnShown: selectIsRightColumnShown(global),\n      canTranslate,\n      isBlocked: userFullInfo?.isBlocked,\n      isBot: Boolean(chatBot),\n      isChatWithSelf,\n      savedDialog,\n    };\n  },\n)(HeaderMenuContainer));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"vv5ppXel\",\"active\":\"FVgqrSSK\",\"info\":\"DboxqiZd\",\"topRow\":\"Ymu2m1PR\",\"meta\":\"A2rsvUBm\",\"subtitle\":\"qUzmwaIn\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiChat, ApiMessage, ApiPeer } from '../../../api/types';\n\nimport { getMessageSenderName } from '../../../global/helpers/peers';\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport LastMessageMeta from '../../common/LastMessageMeta';\nimport MessageSummary from '../../common/MessageSummary';\n\nimport styles from './MiddleSearchResult.module.scss';\n\ntype OwnProps = {\n  isActive?: boolean;\n  message: ApiMessage;\n  senderPeer?: ApiPeer;\n  messageChat?: ApiChat;\n  shouldShowChat?: boolean;\n  query?: string;\n  className?: string;\n  onClick: (message: ApiMessage) => void;\n};\n\nconst TRUNCATE_LENGTH = 200;\n\nconst MiddleSearchResult = ({\n  isActive,\n  message,\n  senderPeer,\n  messageChat,\n  shouldShowChat,\n  query,\n  className,\n  onClick,\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hiddenForwardTitle = message.forwardInfo?.hiddenUserName;\n\n  const peer = shouldShowChat ? messageChat : senderPeer;\n\n  const senderName = shouldShowChat ? getMessageSenderName(lang, message.chatId, senderPeer) : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(message);\n  });\n\n  return (\n    <div\n      role=\"button\"\n      tabIndex={0}\n      className={buildClassName(styles.root, isActive && styles.active, className)}\n      onClick={handleClick}\n    >\n      <Avatar\n        className={styles.avatar}\n        peer={peer}\n        text={hiddenForwardTitle}\n        size=\"medium\"\n      />\n      <div className={styles.info}>\n        <div className={styles.topRow}>\n          {(peer && <FullNameTitle peer={peer} withEmojiStatus />) || hiddenForwardTitle}\n          <LastMessageMeta className={styles.meta} message={message} />\n        </div>\n        <div className={styles.subtitle} dir=\"auto\">\n          {senderName && (\n            <>\n              <span className=\"sender-name\">{renderText(senderName)}</span>\n              <span className=\"colon\">:</span>\n            </>\n          )}\n          <MessageSummary message={message} highlight={query} truncateLength={TRUNCATE_LENGTH} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(MiddleSearchResult);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"FTMljUuX\",\"header\":\"OvmjSMwA\",\"active\":\"DEIUzXQd\",\"avatar\":\"mp1PmoMq\",\"input\":\"z2K8Q7ib\",\"mobile\":\"u0fb78AA\",\"focused\":\"dqF8dYNx\",\"withDropdown\":\"AqhBggrp\",\"adaptSearchBorders\":\"Q9RZQaTu\",\"dropdown\":\"MFGvbICO\",\"dropdownHidden\":\"Alee0CKy\",\"results\":\"RtfTOE72\",\"placeholder\":\"O1HoZFge\",\"separator\":\"_Yy43QLl\",\"savedTags\":\"BcvAfv1E\",\"wrap\":\"JkESCST6\",\"searchTags\":\"rO3pH3LI\",\"savedSearchTag\":\"qA4gov4D\",\"hash\":\"q5NOmUAM\",\"searchTypes\":\"rVYZG__K\",\"searchType\":\"nE1Xwoo7\",\"selectedType\":\"i29dP8iT\",\"footer\":\"jyS1l9yn\",\"keyboard-visible\":\"ao05jKHW\",\"keyboardVisible\":\"ao05jKHW\",\"counter\":\"NmmL_cO3\",\"mobileNavigation\":\"dLO1hlHU\",\"navigationButton\":\"Z4vLAlsu\",\"navigationDisabled\":\"IqA7R2xO\",\"jumpIn\":\"n9kXbTu6\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect,\n  useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiMessage, ApiReaction, ApiReactionKey, ApiSavedReactionTag,\n} from '../../../api/types';\nimport type {\n  CustomPeer, MiddleSearchParams, MiddleSearchType, ThreadId,\n} from '../../../types';\n\nimport { ANONYMOUS_USER_ID } from '../../../config';\nimport { requestMeasure, requestMutation, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport {\n  getIsSavedDialog, getReactionKey, isSameReaction, isSystemBot,\n} from '../../../global/helpers';\nimport {\n  selectChat,\n  selectChatMessage,\n  selectCurrentMessageList,\n  selectCurrentMiddleSearch,\n  selectForwardedSender,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n  selectSender,\n  selectTabState,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { getDayStartAt } from '../../../util/dates/dateFormat';\nimport focusEditableElement from '../../../util/focusEditableElement';\nimport { getSearchResultKey, parseSearchResultKey, type SearchResultKey } from '../../../util/keys/searchResultKey';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { debounce, fastRaf } from '../../../util/schedulers';\nimport { IS_IOS } from '../../../util/windowEnvironment';\n\nimport { useClickOutside } from '../../../hooks/events/useOutsideClick';\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport SearchInput from '../../ui/SearchInput';\nimport SavedTagButton from '../message/reactions/SavedTagButton';\nimport MiddleSearchResult from './MiddleSearchResult';\n\nimport styles from './MiddleSearch.module.scss';\n\nexport type OwnProps = {\n  isActive: boolean;\n};\n\ntype StateProps = {\n  isActive?: boolean;\n  chat?: ApiChat;\n  threadId?: ThreadId;\n  requestedQuery?: string;\n  savedTags?: Record<ApiReactionKey, ApiSavedReactionTag>;\n  savedTag?: ApiReaction;\n  totalCount?: number;\n  lastSearchQuery?: string;\n  foundIds?: SearchResultKey[];\n  isHistoryCalendarOpen?: boolean;\n  isCurrentUserPremium?: boolean;\n  isSavedMessages?: boolean;\n  fetchingQuery?: string;\n  isHashtagQuery?: boolean;\n  searchType?: MiddleSearchType;\n  currentUserId?: string;\n};\n\nconst CHANNELS_PEER: CustomPeer = {\n  isCustomPeer: true,\n  avatarIcon: 'channel-filled',\n  titleKey: 'SearchPublicPosts',\n};\nconst FOCUSED_SEARCH_TRIGGER_OFFSET = 5;\nconst HIDE_TIMEOUT = 200;\nconst RESULT_ITEM_CLASS_NAME = 'MiddleSearchResult';\n\nconst runDebouncedForSearch = debounce((cb) => cb(), 200, false);\n\nconst MiddleSearch: FC<StateProps> = ({\n  isActive,\n  chat,\n  threadId,\n  requestedQuery,\n  savedTags,\n  savedTag,\n  totalCount,\n  lastSearchQuery,\n  foundIds,\n  isHistoryCalendarOpen,\n  isCurrentUserPremium,\n  isSavedMessages,\n  fetchingQuery,\n  isHashtagQuery,\n  searchType = 'chat',\n  currentUserId,\n}) => {\n  const {\n    updateMiddleSearch,\n    resetMiddleSearch,\n    performMiddleSearch,\n    focusMessage,\n    closeMiddleSearch,\n    openHistoryCalendar,\n    openPremiumModal,\n    loadSavedReactionTags,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const shouldCancelSearchRef = useRef(false);\n\n  const { isMobile } = useAppLayout();\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [query, setQuery] = useState(requestedQuery || '');\n  const [focusedIndex, setFocusedIndex] = useState(0);\n  const canFocusNewer = foundIds && focusedIndex > 0;\n  const canFocusOlder = foundIds && focusedIndex < foundIds.length - 1;\n\n  const [isFullyHidden, setIsFullyHidden] = useState(!isActive);\n  const hiddenTimerRef = useRef<number>();\n  const maybeLongPressActiveRef = useRef(true);\n\n  const [isFocused, markFocused, markBlurred] = useFlag();\n  const [isViewAsList, setIsViewAsList] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    if (maybeLongPressActiveRef.current) return;\n    // Ignore clicks inside modals\n    if ((event.target as HTMLElement).closest('.Modal')) return;\n    markBlurred();\n  });\n  useClickOutside([ref], handleClickOutside);\n\n  const hasResultsContainer = Boolean((query && foundIds) || isHashtagQuery);\n  const isOnlyHash = isHashtagQuery && !query;\n  const areResultsEmpty = Boolean(query && foundIds && !foundIds.length && !isLoading && !isOnlyHash);\n  const hasResultsPlaceholder = areResultsEmpty || isOnlyHash;\n  const isNonFocusedDropdownForced = searchType === 'myChats' || searchType === 'channels';\n  const hasResultsDropdown = isActive && (isViewAsList || !isMobile) && (isFocused || isNonFocusedDropdownForced)\n    && Boolean(\n      hasResultsContainer || hasResultsPlaceholder || savedTags,\n    );\n\n  const hasQueryData = Boolean((query && !isOnlyHash) || savedTag);\n  const hasNavigationButtons = searchType === 'chat' && Boolean(foundIds?.length);\n\n  const handleClose = useLastCallback(() => {\n    closeMiddleSearch();\n  });\n\n  const focusInput = useLastCallback(() => {\n    requestMeasure(() => {\n      inputRef.current?.focus();\n    });\n  });\n\n  const blurInput = useLastCallback(() => {\n    inputRef.current?.blur();\n  });\n\n  // Fix for iOS keyboard\n  useEffect(() => {\n    const { visualViewport } = window;\n    if (!visualViewport) {\n      return undefined;\n    }\n\n    const mainEl = document.getElementById('Main') as HTMLDivElement;\n    const handleResize = () => {\n      const { activeElement } = document;\n      if (activeElement && (activeElement === inputRef.current)) {\n        const { pageTop, height } = visualViewport;\n\n        requestMutation(() => {\n          mainEl.style.transform = `translateY(${pageTop}px)`;\n          mainEl.style.height = `${height}px`;\n          document.documentElement.scrollTop = pageTop;\n        });\n      } else {\n        requestMutation(() => {\n          mainEl.style.transform = '';\n          mainEl.style.height = '';\n        });\n      }\n    };\n\n    visualViewport.addEventListener('resize', handleResize);\n\n    return () => {\n      visualViewport.removeEventListener('resize', handleResize);\n    };\n  }, []);\n\n  // Reset focus on query result\n  useEffect(() => {\n    setFocusedIndex(-1);\n  }, [lastSearchQuery]);\n\n  // Disable native up/down buttons on iOS\n  useLayoutEffect(() => {\n    if (!IS_IOS) return;\n\n    Array.from(document.querySelectorAll<HTMLInputElement>('input')).forEach((input) => {\n      input.disabled = Boolean(isActive && input !== inputRef.current);\n    });\n  }, [isActive]);\n\n  // Blur on exit\n  useEffect(() => {\n    if (!isActive) {\n      inputRef.current!.blur();\n      setIsViewAsList(true);\n      setFocusedIndex(0);\n      setQuery('');\n      hiddenTimerRef.current = window.setTimeout(() => setIsFullyHidden(true), HIDE_TIMEOUT);\n    } else {\n      setIsFullyHidden(false);\n      clearTimeout(hiddenTimerRef.current);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (!requestedQuery || !chat?.id) return;\n    setQuery(requestedQuery);\n    updateMiddleSearch({ chatId: chat.id, threadId, update: { requestedQuery: undefined } });\n    setIsLoading(true);\n\n    requestNextMutation(() => {\n      const input = inputRef.current;\n      if (!input) return;\n      focusEditableElement(input, true, true);\n      markFocused();\n    });\n  }, [chat?.id, requestedQuery, threadId]);\n\n  useEffectWithPrevDeps(([prevIsActive]) => {\n    if (isActive !== prevIsActive && !query && lastSearchQuery) {\n      setQuery(lastSearchQuery); // Restore query when returning back\n    }\n  }, [isActive, lastSearchQuery, query]);\n\n  useEffectWithPrevDeps(([prevIsCalendarOpen]) => {\n    if (!isActive || prevIsCalendarOpen === isHistoryCalendarOpen) return;\n    if (isHistoryCalendarOpen) {\n      blurInput();\n      markBlurred();\n    } else {\n      focusInput();\n    }\n  }, [isHistoryCalendarOpen, isActive]);\n\n  const handleReset = useLastCallback(() => {\n    if (!query?.length && !savedTag) {\n      handleClose();\n      return;\n    }\n\n    setQuery('');\n    setIsLoading(false);\n    resetMiddleSearch();\n    focusInput();\n  });\n\n  useEffect(() => (isActive ? captureEscKeyListener(handleReset) : undefined), [isActive, handleClose]);\n\n  const savedTagsArray = useMemo(() => {\n    if (!savedTags) return undefined;\n    return Object.values(savedTags);\n  }, [savedTags]);\n\n  const hasSavedTags = Boolean(savedTagsArray?.length);\n  const areSavedTagsDisabled = hasSavedTags && !isCurrentUserPremium;\n\n  useEffect(() => {\n    if (isSavedMessages && isActive) loadSavedReactionTags();\n  }, [isSavedMessages, isActive]);\n\n  const handleSearch = useLastCallback(() => {\n    const chatId = chat?.id;\n    if (!chatId) {\n      return;\n    }\n\n    runDebouncedForSearch(() => {\n      if (shouldCancelSearchRef.current) return;\n      performMiddleSearch({ chatId, threadId, query });\n    });\n  });\n\n  const handleQueryChange = useLastCallback((newQuery: string) => {\n    shouldCancelSearchRef.current = false;\n\n    if (newQuery.startsWith('#') && !isHashtagQuery) {\n      updateMiddleSearch({ chatId: chat!.id, threadId, update: { isHashtag: true } });\n      setQuery(newQuery.slice(1));\n      handleSearch();\n      return;\n    }\n\n    setQuery(newQuery);\n\n    if (!newQuery) {\n      setIsLoading(false);\n      resetMiddleSearch();\n      shouldCancelSearchRef.current = true;\n    }\n  });\n\n  useEffect(() => {\n    if (query) {\n      handleSearch();\n    }\n  }, [query]);\n\n  useEffect(() => {\n    setIsLoading(Boolean(fetchingQuery));\n  }, [fetchingQuery]);\n\n  useEffect(() => {\n    if (!foundIds?.length) return;\n    const isClose = foundIds.length - focusedIndex < FOCUSED_SEARCH_TRIGGER_OFFSET;\n    if (isClose) {\n      handleSearch();\n    }\n  }, [focusedIndex, foundIds?.length]);\n\n  useEffect(() => {\n    if (!isActive) return undefined;\n\n    maybeLongPressActiveRef.current = true;\n\n    function focus() {\n      inputRef.current?.focus();\n      markFocused();\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    function removeListeners() {\n      window.removeEventListener('touchend', focus);\n      window.removeEventListener('mouseup', focus);\n\n      fastRaf(() => {\n        maybeLongPressActiveRef.current = false;\n      });\n    }\n\n    window.addEventListener('touchend', focus);\n    window.addEventListener('mouseup', focus);\n\n    window.addEventListener('touchstart', removeListeners);\n    window.addEventListener('mousedown', removeListeners);\n\n    return () => {\n      removeListeners();\n      window.removeEventListener('touchstart', removeListeners);\n      window.removeEventListener('mousedown', removeListeners);\n    };\n  }, [isActive]);\n\n  useHistoryBack({\n    isActive,\n    onBack: handleClose,\n  });\n\n  const [viewportIds, getMore, viewportOffset = 0] = useInfiniteScroll(handleSearch, foundIds);\n\n  const viewportResults = useMemo(() => {\n    if ((!query && !savedTag) || !viewportIds?.length) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const global = getGlobal();\n\n    return viewportIds.map((searchResultKey) => {\n      const [chatId, id] = parseSearchResultKey(searchResultKey);\n      const message = selectChatMessage(global, chatId, id);\n      if (!message) {\n        return undefined;\n      }\n\n      const originalSender = (isSavedMessages || isSystemBot(chatId) || chatId === ANONYMOUS_USER_ID)\n        ? selectForwardedSender(global, message) : undefined;\n      const messageSender = selectSender(global, message);\n      const messageChat = selectChat(global, message.chatId);\n\n      const senderPeer = originalSender || messageSender;\n\n      return {\n        searchResultKey,\n        message,\n        messageChat,\n        senderPeer,\n      };\n    }).filter(Boolean);\n  }, [query, savedTag, viewportIds, isSavedMessages]);\n\n  const handleMessageClick = useLastCallback((message: ApiMessage) => {\n    const searchResultKey = getSearchResultKey(message);\n    const index = foundIds?.indexOf(searchResultKey) || 0;\n    const realIndex = index + viewportOffset;\n    setFocusedIndex(realIndex);\n\n    if (searchType === 'chat') {\n      setIsViewAsList(false);\n    }\n\n    focusMessage({\n      chatId: message.chatId,\n      messageId: message.id,\n      threadId: !isHashtagQuery ? threadId : undefined,\n    });\n\n    markBlurred();\n  });\n\n  const handleTriggerViewStyle = useLastCallback(() => {\n    setIsViewAsList((prev) => !prev);\n    markFocused();\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, hasResultsContainer, (index) => {\n    const foundResult = viewportResults?.[index === -1 ? 0 : index];\n    if (foundResult) {\n      handleMessageClick(foundResult.message);\n      setFocusedIndex(index + viewportOffset);\n    }\n  }, `.${RESULT_ITEM_CLASS_NAME}`, true);\n\n  const updateSearchParams = useLastCallback((update: Partial<MiddleSearchParams>) => {\n    updateMiddleSearch({ chatId: chat!.id, threadId, update });\n\n    handleSearch();\n  });\n\n  const activateSearchTag = useLastCallback((tag: ApiReaction) => {\n    if (areSavedTagsDisabled) {\n      openPremiumModal({\n        initialSection: 'saved_tags',\n      });\n      return;\n    }\n\n    updateSearchParams({ savedTag: tag });\n  });\n\n  const removeSearchSavedTag = useLastCallback(() => {\n    updateSearchParams({ savedTag: undefined });\n  });\n\n  const handleDeleteTag = useLastCallback(() => {\n    if (isHashtagQuery) {\n      updateSearchParams({ isHashtag: false });\n      return;\n    }\n\n    if (savedTag) {\n      removeSearchSavedTag();\n    }\n  });\n\n  const handleChangeSearchType = useLastCallback((type: MiddleSearchType) => {\n    updateSearchParams({ type });\n    setIsViewAsList(true);\n  });\n\n  const handleFocusOlder = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex + 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  const handleFocusNewer = useLastCallback(() => {\n    if (searchType !== 'chat') return;\n    markBlurred();\n    blurInput();\n    if (foundIds) {\n      const newFocusIndex = focusedIndex - 1;\n      const [chatId, messageId] = parseSearchResultKey(foundIds[newFocusIndex]);\n      focusMessage({ chatId, messageId, threadId });\n      setFocusedIndex(newFocusIndex);\n    }\n  });\n\n  function renderTypeTag(type: MiddleSearchType, isForTag?: boolean) {\n    const isSelected = !isForTag && searchType === type;\n    switch (type) {\n      case 'chat':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={chat?.id}\n            title={oldLang('SearchThisChat')}\n            clickArg=\"chat\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'myChats':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            peerId={currentUserId}\n            forceShowSelf\n            title={oldLang('SearchMyMessages')}\n            clickArg=\"myChats\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n      case 'channels':\n        return (\n          <PeerChip\n            className={buildClassName(styles.searchType, isSelected && styles.selectedType)}\n            customPeer={CHANNELS_PEER}\n            title={oldLang('SearchPublicPosts')}\n            clickArg=\"channels\"\n            onClick={isForTag ? handleDeleteTag : handleChangeSearchType}\n          />\n        );\n    }\n    return undefined;\n  }\n\n  function renderDropdown() {\n    return (\n      <div className={buildClassName(styles.dropdown, !hasResultsDropdown && styles.dropdownHidden)}>\n        {!isMobile && <div className={styles.separator} />}\n        {hasSavedTags && !isHashtagQuery && (\n          <div\n            className={buildClassName(\n              styles.savedTags,\n              !isMobile && styles.wrap,\n              'no-scrollbar',\n            )}\n          >\n            {savedTagsArray.map((tag) => {\n              const isChosen = isSameReaction(tag.reaction, savedTag);\n              return (\n                <SavedTagButton\n                  containerId=\"local-search\"\n                  key={getReactionKey(tag.reaction)}\n                  reaction={tag.reaction}\n                  tag={tag}\n                  withCount\n                  isDisabled={areSavedTagsDisabled}\n                  isChosen={isChosen}\n                  onClick={isChosen ? removeSearchSavedTag : activateSearchTag}\n                />\n              );\n            })}\n          </div>\n        )}\n        {isHashtagQuery && (\n          <div\n            className={buildClassName(styles.searchTypes, 'no-scrollbar')}\n          >\n            {renderTypeTag('chat')}\n            {renderTypeTag('myChats')}\n            {renderTypeTag('channels')}\n          </div>\n        )}\n        {hasResultsContainer && (\n          <InfiniteScroll\n            ref={containerRef}\n            className={buildClassName(styles.results, 'custom-scroll')}\n            items={viewportResults}\n            preloadBackwards={0}\n            onLoadMore={getMore}\n            onKeyDown={handleKeyDown}\n          >\n            {areResultsEmpty && (\n              <span key=\"nothing\" className={styles.placeholder}>\n                {oldLang('NoResultFoundFor', query)}\n              </span>\n            )}\n            {isOnlyHash && (\n              <span key=\"enterhash\" className={styles.placeholder}>\n                {oldLang('HashtagSearchPlaceholder')}\n              </span>\n            )}\n            {viewportResults?.map(({\n              message, senderPeer, messageChat, searchResultKey,\n            }, i) => (\n              <MiddleSearchResult\n                key={searchResultKey}\n                teactOrderKey={-message.date}\n                className={RESULT_ITEM_CLASS_NAME}\n                query={query}\n                message={message}\n                senderPeer={senderPeer}\n                messageChat={messageChat}\n                shouldShowChat={isHashtagQuery}\n                isActive={focusedIndex - viewportOffset === i}\n                onClick={handleMessageClick}\n              />\n            ))}\n          </InfiniteScroll>\n        )}\n      </div>\n    );\n  }\n\n  return (\n    <div\n      id=\"MiddleSearch\"\n      className={buildClassName(\n        styles.root,\n        isActive && styles.active,\n        !isActive && isFullyHidden && 'visually-hidden', // `display: none` would prevent focus on iOS\n        isFocused && styles.focused,\n        isMobile && styles.mobile,\n      )}\n      ref={ref}\n    >\n      <div className={styles.header}>\n        {!isMobile && (\n          <Avatar\n            className={styles.avatar}\n            peer={chat}\n            size=\"medium\"\n            isSavedMessages={isSavedMessages}\n          />\n        )}\n        <SearchInput\n          ref={inputRef}\n          value={query}\n          className={buildClassName(\n            styles.input,\n            hasResultsDropdown && styles.withDropdown,\n            hasResultsDropdown && !isMobile && styles.adaptSearchBorders,\n          )}\n          canClose={!isMobile}\n          isLoading={isLoading}\n          resultsItemSelector={`.${styles.results} .${RESULT_ITEM_CLASS_NAME}`}\n          hasUpButton={hasNavigationButtons && !isMobile}\n          hasDownButton={hasNavigationButtons && !isMobile}\n          placeholder={isHashtagQuery ? oldLang('SearchHashtagsHint') : oldLang('Search')}\n          teactExperimentControlled\n          onChange={handleQueryChange}\n          onStartBackspace={handleDeleteTag}\n          onReset={handleReset}\n          withBackIcon={isMobile}\n          onFocus={markFocused}\n          focused={isFocused}\n          onUpClick={canFocusOlder ? handleFocusOlder : undefined}\n          onDownClick={canFocusNewer ? handleFocusNewer : undefined}\n        >\n          <div className={styles.searchTags}>\n            {savedTag && (\n              <SavedTagButton\n                containerId=\"local-search-tags\"\n                className={styles.savedSearchTag}\n                reaction={savedTag}\n                tag={savedTags![getReactionKey(savedTag)]}\n                onClick={removeSearchSavedTag}\n              />\n            )}\n            {isHashtagQuery && <div className={styles.hash}>#</div>}\n          </div>\n          {!isMobile && renderDropdown()}\n        </SearchInput>\n        {!isMobile && (\n          <div className={styles.icons}>\n            <Button\n              round\n              size=\"smaller\"\n              color=\"translucent\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n              ariaLabel={oldLang('JumpToDate')}\n            >\n              <Icon name=\"calendar\" />\n            </Button>\n          </div>\n        )}\n      </div>\n      {isMobile && renderDropdown()}\n      {isMobile && (\n        <div className={styles.footer}>\n          <Button\n            round\n            size=\"smaller\"\n            color=\"translucent\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => openHistoryCalendar({ selectedAt: getDayStartAt(Date.now()) })}\n            ariaLabel={oldLang('JumpToDate')}\n          >\n            <Icon name=\"calendar\" />\n          </Button>\n          <div className={styles.counter}>\n            {hasQueryData && (\n              foundIds?.length ? (\n                oldLang('Of', [Math.max(focusedIndex + 1, 1), totalCount])\n              ) : foundIds && !foundIds.length && (\n                oldLang('NoResult')\n              )\n            )}\n          </div>\n          {searchType === 'chat' && Boolean(foundIds?.length) && (\n            <Button\n              className={styles.viewStyle}\n              size=\"smaller\"\n              isText\n              fluid\n              noForcedUpperCase\n              onClick={handleTriggerViewStyle}\n            >\n              {isViewAsList ? oldLang('SearchAsChat') : oldLang('SearchAsList')}\n            </Button>\n          )}\n          {hasNavigationButtons && !hasResultsDropdown && (\n            <div className={styles.mobileNavigation}>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusOlder && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusOlder}\n                nonInteractive={!canFocusOlder}\n                ariaLabel={lang('AriaSearchOlderResult')}\n              >\n                <Icon name=\"up\" />\n              </Button>\n              <Button\n                className={buildClassName(styles.navigationButton, !canFocusNewer && styles.navigationDisabled)}\n                round\n                size=\"smaller\"\n                color=\"secondary\"\n                onClick={handleFocusNewer}\n                nonInteractive={!canFocusNewer}\n                ariaLabel={lang('AriaSearchNewerResult')}\n              >\n                <Icon name=\"down\" />\n              </Button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const currentMessageList = selectCurrentMessageList(global);\n    if (!currentMessageList) {\n      return {};\n    }\n    const { chatId, threadId } = currentMessageList;\n\n    const chat = selectChat(global, chatId);\n    if (!chat) {\n      return {};\n    }\n\n    const {\n      requestedQuery, savedTag, results, fetchingQuery, isHashtag, type,\n    } = selectCurrentMiddleSearch(global) || {};\n    const { totalCount, foundIds, query: lastSearchQuery } = results || {};\n\n    const currentUserId = global.currentUserId;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isSavedDialog = getIsSavedDialog(chatId, threadId, currentUserId);\n\n    const savedTags = isSavedMessages && !isSavedDialog ? global.savedReactionTags?.byKey : undefined;\n\n    return {\n      chat,\n      requestedQuery,\n      totalCount,\n      threadId,\n      foundIds,\n      isHistoryCalendarOpen: Boolean(selectTabState(global).historyCalendarSelectedAt),\n      savedTags,\n      savedTag,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      isSavedMessages,\n      fetchingQuery,\n      isHashtagQuery: isHashtag,\n      currentUserId,\n      searchType: type,\n      lastSearchQuery,\n    };\n  },\n)(MiddleSearch));\n","import { useEffect } from '../../lib/teact/teact';\n\nimport useLastCallback from '../useLastCallback';\n\nexport function useClickOutside(\n  refs: React.RefObject<HTMLElement>[], callback: (event: MouseEvent) => void,\n) {\n  const handleClickOutside = useLastCallback((event: MouseEvent) => {\n    const clickedOutside = refs.every((ref) => {\n      return ref.current && !ref.current.contains(event.target as Node);\n    });\n\n    if (clickedOutside) callback(event);\n  });\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside);\n    return () => {\n      document.removeEventListener('click', handleClickOutside);\n    };\n  }, [handleClickOutside]);\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiSticker, ApiStickerSet } from '../../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent, ThreadId } from '../../../types';\n\nimport {\n  CHAT_STICKER_SET_ID,\n  EFFECT_EMOJIS_SET_ID,\n  EFFECT_STICKERS_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n} from '../../../config';\nimport { isUserId } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo, selectIsChatWithSelf, selectIsCurrentUserPremium, selectShouldLoopStickers,\n} from '../../../global/selectors';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { pickTruthy } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport { useStickerPickerObservers } from '../../common/hooks/useStickerPickerObservers';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport StickerButton from '../../common/StickerButton';\nimport StickerSet from '../../common/StickerSet';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport StickerSetCover from './StickerSetCover';\n\nimport styles from './StickerPicker.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  className: string;\n  isHidden?: boolean;\n  isTranslucent?: boolean;\n  loadAndPlay: boolean;\n  canSendStickers?: boolean;\n  noContextMenus?: boolean;\n  idPrefix: string;\n  onStickerSelect: (\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  isForEffects?: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  recentStickers: ApiSticker[];\n  favoriteStickers: ApiSticker[];\n  effectStickers?: ApiSticker[];\n  effectEmojis?: ApiSticker[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  chatStickerSetId?: string;\n  addedSetIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst HEADER_BUTTON_WIDTH = 2.5 * REM; // px (including margin)\n\nconst StickerPicker: FC<OwnProps & StateProps> = ({\n  chat,\n  threadId,\n  className,\n  isHidden,\n  isTranslucent,\n  loadAndPlay,\n  canSendStickers,\n  recentStickers,\n  favoriteStickers,\n  effectStickers,\n  effectEmojis,\n  addedSetIds,\n  stickerSetsById,\n  chatStickerSetId,\n  canAnimate,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noContextMenus,\n  idPrefix,\n  onStickerSelect,\n  isForEffects,\n}) => {\n  const {\n    loadRecentStickers,\n    addRecentSticker,\n    unfaveSticker,\n    faveSticker,\n    removeRecentSticker,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const sendMessageAction = useSendMessageAction(chat?.id, threadId);\n\n  const prefix = `${idPrefix}-sticker-set`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const lang = useOldLang();\n\n  const areAddedLoaded = Boolean(addedSetIds);\n\n  const allSets = useMemo(() => {\n    if (isForEffects && effectStickers) {\n      const effectSets: StickerSetOrReactionsSetOrRecent[] = [];\n      if (effectEmojis?.length) {\n        effectSets.push({\n          id: EFFECT_EMOJIS_SET_ID,\n          accessHash: '0',\n          title: '',\n          stickers: effectEmojis,\n          count: effectEmojis.length,\n          isEmoji: true,\n        });\n      }\n      if (effectStickers?.length) {\n        effectSets.push({\n          id: EFFECT_STICKERS_SET_ID,\n          accessHash: '0',\n          title: lang('StickerEffects'),\n          stickers: effectStickers,\n          count: effectStickers.length,\n        });\n      }\n      return effectSets;\n    }\n\n    if (!addedSetIds) {\n      return MEMO_EMPTY_ARRAY;\n    }\n\n    const defaultSets = [];\n\n    if (favoriteStickers.length) {\n      defaultSets.push({\n        id: FAVORITE_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('FavoriteStickers'),\n        stickers: favoriteStickers,\n        count: favoriteStickers.length,\n      });\n    }\n\n    if (recentStickers.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: lang('RecentStickers'),\n        stickers: recentStickers,\n        count: recentStickers.length,\n      });\n    }\n\n    const userSetIds = [...(addedSetIds || [])];\n    if (chatStickerSetId) {\n      userSetIds.unshift(chatStickerSetId);\n    }\n\n    const existingAddedSetIds = Object.values(pickTruthy(stickerSetsById, userSetIds));\n\n    return [\n      ...defaultSets,\n      ...existingAddedSetIds,\n    ];\n  }, [\n    addedSetIds,\n    stickerSetsById,\n    favoriteStickers,\n    recentStickers,\n    chatStickerSetId,\n    lang,\n    effectStickers,\n    isForEffects,\n    effectEmojis,\n  ]);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  useEffect(() => {\n    if (!loadAndPlay) return;\n    loadRecentStickers();\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  }, [canSendStickers, loadAndPlay, loadRecentStickers, sendMessageAction]);\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContents = areAddedLoaded && canRenderContents\n  && !noPopulatedSets && (canSendStickers || isForEffects);\n\n  useHorizontalScroll(headerRef, !shouldRenderContents || !headerRef.current);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onStickerSelect(sticker, isSilent, shouldSchedule, true);\n    addRecentSticker({ sticker });\n  });\n\n  const handleStickerUnfave = useLastCallback((sticker: ApiSticker) => {\n    unfaveSticker({ sticker });\n  });\n\n  const handleStickerFave = useLastCallback((sticker: ApiSticker) => {\n    faveSticker({ sticker });\n  });\n\n  const handleMouseMove = useLastCallback(() => {\n    if (!canSendStickers) return;\n    sendMessageAction({ type: 'chooseSticker' });\n  });\n\n  const handleRemoveRecentSticker = useLastCallback((sticker: ApiSticker) => {\n    removeRecentSticker({ sticker });\n  });\n\n  if (!chat) return undefined;\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(styles.stickerCover, index === activeSetIndex && styles.activated);\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n\n    if (stickerSet.id === RECENT_SYMBOL_SET_ID\n      || stickerSet.id === FAVORITE_SYMBOL_SET_ID\n      || stickerSet.id === CHAT_STICKER_SET_ID\n      || stickerSet.hasThumbnail\n      || !firstSticker\n    ) {\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === FAVORITE_SYMBOL_SET_ID}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(index)}\n        >\n          {stickerSet.id === RECENT_SYMBOL_SET_ID ? (\n            <Icon name=\"recent\" />\n          ) : stickerSet.id === FAVORITE_SYMBOL_SET_ID ? (\n            <Icon name=\"favorite\" />\n          ) : stickerSet.id === CHAT_STICKER_SET_ID ? (\n            <Avatar peer={chat} size=\"small\" />\n          ) : (\n            <StickerSetCover\n              stickerSet={stickerSet as ApiStickerSet}\n              noPlay={!canAnimate || !loadAndPlay}\n              observeIntersection={observeIntersectionForCovers}\n              sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n              forcePlayback\n            />\n          )}\n        </Button>\n      );\n    } else {\n      return (\n        <StickerButton\n          key={stickerSet.id}\n          sticker={firstSticker}\n          size={STICKER_SIZE_PICKER_HEADER}\n          title={stickerSet.title}\n          className={buttonClassName}\n          noPlay={!canAnimate || !loadAndPlay}\n          observeIntersection={observeIntersectionForCovers}\n          noContextMenu\n          isCurrentUserPremium\n          sharedCanvasRef={withSharedCanvas ? sharedCanvasRef : undefined}\n          withTranslucentThumb={isTranslucent}\n          onClick={selectStickerSet}\n          clickArg={index}\n          forcePlayback\n        />\n      );\n    }\n  }\n\n  const fullClassName = buildClassName(styles.root, className);\n\n  if (!shouldRenderContents) {\n    return (\n      <div className={fullClassName}>\n        {!canSendStickers && !isForEffects ? (\n          <div className={styles.pickerDisabled}>{lang('ErrorSendRestrictedStickersAll')}</div>\n        ) : noPopulatedSets ? (\n          <div className={styles.pickerDisabled}>{lang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    styles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && styles.headerWithBorder,\n  );\n\n  return (\n    <div className={fullClassName}>\n      { !isForEffects && (\n        <div ref={headerRef} className={headerClassName}>\n          <div className=\"shared-canvas-container\">\n            <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n            {allSets.map(renderCover)}\n          </div>\n        </div>\n      ) }\n      <div\n        ref={containerRef}\n        onMouseMove={handleMouseMove}\n        onScroll={handleContentScroll}\n        className={\n          buildClassName(\n            styles.main,\n            IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n            !isForEffects && styles.hasHeader,\n          )\n        }\n      >\n        {allSets.map((stickerSet, i) => (\n          <StickerSet\n            key={stickerSet.id}\n            stickerSet={stickerSet}\n            loadAndPlay={Boolean(canAnimate && loadAndPlay)}\n            noContextMenus={noContextMenus}\n            index={i}\n            idPrefix={prefix}\n            observeIntersection={observeIntersectionForSet}\n            observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n            observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n            isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n            favoriteStickers={favoriteStickers}\n            isSavedMessages={isSavedMessages}\n            isCurrentUserPremium={isCurrentUserPremium}\n            isTranslucent={isTranslucent}\n            isChatStickerSet={stickerSet.id === chatStickerSetId}\n            onStickerSelect={handleStickerSelect}\n            onStickerUnfave={handleStickerUnfave}\n            onStickerFave={handleStickerFave}\n            onStickerRemoveRecent={handleRemoveRecentSticker}\n            forcePlayback\n            shouldHideHeader={stickerSet.id === EFFECT_EMOJIS_SET_ID}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      setsById,\n      added,\n      recent,\n      favorite,\n      effect,\n    } = global.stickers;\n\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const chat = selectChat(global, chatId);\n    const chatStickerSetId = !isUserId(chatId) ? selectChatFullInfo(global, chatId)?.stickerSet?.id : undefined;\n\n    return {\n      chat,\n      effectStickers: effect?.stickers,\n      effectEmojis: effect?.emojis,\n      recentStickers: recent.stickers,\n      favoriteStickers: favorite.stickers,\n      stickerSetsById: setsById,\n      addedSetIds: added.setIds,\n      canAnimate: selectShouldLoopStickers(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      chatStickerSetId,\n    };\n  },\n)(StickerPicker));\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, {\n  memo,\n  useMemo, useRef,\n} from '../../../../lib/teact/teact';\nimport { withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChatReactions, ApiMessage,\n  ApiReaction,\n  ApiReactionWithPaid,\n} from '../../../../api/types';\n\nimport {\n  getReactionKey, sortReactions,\n} from '../../../../global/helpers';\nimport { selectChatFullInfo } from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport { REM } from '../../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../../hooks/useAppLayout';\nimport useWindowSize from '../../../../hooks/window/useWindowSize';\n\nimport ReactionEmoji from '../../../common/reactions/ReactionEmoji';\n\nimport styles from './ReactionPickerLimited.module.scss';\n\ntype OwnProps = {\n  chatId: string;\n  loadAndPlay: boolean;\n  selectedReactionIds?: string[];\n  message?: ApiMessage;\n  onReactionSelect: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n};\n\ntype StateProps = {\n  enabledReactions?: ApiChatReactions;\n  availableReactions?: ApiAvailableReaction[];\n  topReactions: ApiReaction[];\n  isWithPaidReaction?: boolean;\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  reactionsLimit?: number;\n  isCurrentUserPremium?: boolean;\n};\n\nconst REACTION_SIZE = 36;\nconst GRID_GAP_THRESHOLD = 600;\nconst MODAL_PADDING_SIZE_REM = 0.5;\nconst MODAL_MAX_HEIGHT_REM = 18;\nconst MODAL_MAX_WIDTH_REM = 26.25;\nconst GRID_GAP_DESKTOP_REM = 0.625;\nconst GRID_GAP_MOBILE_REM = 0.5;\n\nconst ReactionPickerLimited: FC<OwnProps & StateProps> = ({\n  loadAndPlay,\n  enabledReactions,\n  availableReactions,\n  topReactions,\n  selectedReactionIds,\n  isWithPaidReaction,\n  message,\n  reactionsLimit,\n  onReactionSelect,\n  onReactionContext,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n  const { width: windowWidth } = useWindowSize();\n  const { isTouchScreen } = useAppLayout();\n\n  const currentReactions = message?.reactions?.results;\n\n  const shouldUseCurrentReactions = reactionsLimit && currentReactions\n   && currentReactions.length >= reactionsLimit;\n\n  const allAvailableReactions = useMemo(() => {\n    if (shouldUseCurrentReactions) {\n      const reactions = currentReactions.map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactions.unshift({ type: 'paid' });\n      }\n      return reactions;\n    }\n\n    if (!enabledReactions) {\n      return [];\n    }\n\n    if (enabledReactions.type === 'all') {\n      const reactionsToSort: ApiReactionWithPaid[] = (availableReactions || []).map(({ reaction }) => reaction);\n      if (isWithPaidReaction) {\n        reactionsToSort.unshift({ type: 'paid' });\n      }\n      return sortReactions(reactionsToSort, topReactions);\n    }\n\n    const reactionsToSort: ApiReactionWithPaid[] = enabledReactions.allowed.slice();\n    if (isWithPaidReaction) {\n      reactionsToSort.unshift({ type: 'paid' });\n    }\n\n    return sortReactions(reactionsToSort, topReactions);\n  }, [\n    availableReactions, enabledReactions, topReactions, shouldUseCurrentReactions, currentReactions, isWithPaidReaction,\n  ]);\n\n  const pickerHeight = useMemo(() => {\n    const pickerWidth = Math.min(MODAL_MAX_WIDTH_REM * REM, windowWidth);\n    const gapWidth = (windowWidth > GRID_GAP_THRESHOLD ? GRID_GAP_DESKTOP_REM : GRID_GAP_MOBILE_REM) * REM;\n    const availableWidth = pickerWidth - MODAL_PADDING_SIZE_REM * REM;\n\n    const itemsInRow = Math.floor((availableWidth + gapWidth) / (REACTION_SIZE + gapWidth));\n    const rowsCount = Math.ceil(allAvailableReactions.length / itemsInRow);\n\n    const pickerMaxHeight = rowsCount * REACTION_SIZE + (rowsCount - 1) * gapWidth + MODAL_PADDING_SIZE_REM * REM * 2;\n\n    return Math.min(MODAL_MAX_HEIGHT_REM * REM, pickerMaxHeight);\n  }, [allAvailableReactions.length, windowWidth]);\n\n  return (\n    <div className={styles.root} style={`height: ${pickerHeight}px`}>\n      <div className={buildClassName(styles.wrapper, isTouchScreen ? 'no-scrollbar' : 'custom-scroll')}>\n        <div className=\"symbol-set-container shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allAvailableReactions.map((reaction) => {\n            const reactionId = getReactionKey(reaction);\n            const isSelected = reactionId ? selectedReactionIds?.includes(reactionId) : undefined;\n\n            return (\n              <ReactionEmoji\n                key={reactionId}\n                reaction={reaction}\n                isSelected={isSelected}\n                loadAndPlay={loadAndPlay}\n                availableReactions={availableReactions}\n                onClick={onReactionSelect!}\n                onContextMenu={onReactionContext}\n                sharedCanvasRef={sharedCanvasRef}\n                sharedCanvasHqRef={sharedCanvasHqRef}\n              />\n            );\n          })}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { availableReactions, topReactions } = global.reactions;\n\n    const { maxUniqueReactions } = global.appConfig || {};\n    const { enabledReactions, isPaidReactionAvailable } = selectChatFullInfo(global, chatId) || {};\n\n    return {\n      enabledReactions,\n      availableReactions,\n      topReactions,\n      reactionsLimit: maxUniqueReactions,\n      isWithPaidReaction: isPaidReactionAvailable,\n    };\n  },\n)(ReactionPickerLimited));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"MhpiTAwi\",\"wrapper\":\"NIaqmosK\"};","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo, useMemo, useRef } from '../../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../../global';\n\nimport type {\n  ApiAvailableEffect,\n  ApiMessage,\n  ApiMessageEntity,\n  ApiReaction,\n  ApiReactionWithPaid,\n  ApiSticker,\n  ApiStory,\n  ApiStorySkipped,\n} from '../../../../api/types';\nimport type { IAnchorPosition } from '../../../../types';\nimport { MAIN_THREAD_ID } from '../../../../api/types';\n\nimport { getReactionKey, getStoryKey, isUserId } from '../../../../global/helpers';\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessage,\n  selectIsContextMenuTranslucent,\n  selectIsCurrentUserPremium,\n  selectPeerStory,\n  selectTabState,\n} from '../../../../global/selectors';\nimport buildClassName from '../../../../util/buildClassName';\nimport parseHtmlAsFormattedText from '../../../../util/parseHtmlAsFormattedText';\nimport { REM } from '../../../common/helpers/mediaDimensions';\nimport { buildCustomEmojiHtml } from '../../composer/helpers/customEmoji';\n\nimport { getIsMobile } from '../../../../hooks/useAppLayout';\nimport useCurrentOrPrev from '../../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useOldLang from '../../../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../../../common/CustomEmojiPicker';\nimport Menu from '../../../ui/Menu';\nimport StickerPicker from '../../composer/StickerPicker';\nimport ReactionPickerLimited from './ReactionPickerLimited';\n\nimport styles from './ReactionPicker.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n};\n\ninterface StateProps {\n  shouldUseFullPicker?: boolean;\n  message?: ApiMessage;\n  story?: ApiStory | ApiStorySkipped;\n  isCurrentUserPremium?: boolean;\n  position?: IAnchorPosition;\n  isTranslucent?: boolean;\n  sendAsMessage?: boolean;\n  chatId?: string;\n  isForEffects?: boolean;\n  availableEffectById: Record<string, ApiAvailableEffect>;\n}\n\nconst FULL_PICKER_SHIFT_DELTA = { x: -23, y: -64 };\nconst LIMITED_PICKER_SHIFT_DELTA = { x: -21, y: -10 };\nconst REACTION_SELECTOR_WIDTH = 16.375 * REM;\n\nconst ReactionPicker: FC<OwnProps & StateProps> = ({\n  isOpen,\n  message,\n  story,\n  position,\n  isTranslucent,\n  isCurrentUserPremium,\n  shouldUseFullPicker,\n  sendAsMessage,\n  chatId,\n  isForEffects,\n  availableEffectById,\n}) => {\n  const {\n    toggleReaction, closeReactionPicker, sendMessage, showNotification, sendStoryReaction, saveEffectInDraft,\n    requestEffectInComposer, addLocalPaidReaction, openPaidReactionModal,\n  } = getActions();\n\n  const lang = useOldLang();\n\n  const renderedMessageId = useCurrentOrPrev(message?.id, true);\n  const renderedChatId = useCurrentOrPrev(message?.chatId, true);\n  const renderedStoryPeerId = useCurrentOrPrev(story?.peerId, true);\n  const renderedStoryId = useCurrentOrPrev(story?.id);\n  const storedPosition = useCurrentOrPrev(position, true);\n  // eslint-disable-next-line no-null/no-null\n  const menuRef = useRef<HTMLDivElement>(null);\n  const renderingPosition = useMemo((): IAnchorPosition | undefined => {\n    if (!storedPosition) {\n      return undefined;\n    }\n\n    if (renderedStoryId) {\n      return storedPosition;\n    }\n\n    return {\n      x: storedPosition.x + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.x : LIMITED_PICKER_SHIFT_DELTA.x),\n      y: storedPosition.y + (shouldUseFullPicker ? FULL_PICKER_SHIFT_DELTA.y : LIMITED_PICKER_SHIFT_DELTA.y),\n    };\n  }, [renderedStoryId, storedPosition, shouldUseFullPicker]);\n\n  const getMenuElement = useLastCallback(() => menuRef.current);\n  const getLayout = useLastCallback(() => ({\n    withPortal: true,\n    isDense: !renderedStoryPeerId,\n    deltaX: !getIsMobile() && menuRef.current\n      ? -(menuRef.current.offsetWidth - REACTION_SELECTOR_WIDTH) / 2 - FULL_PICKER_SHIFT_DELTA.x / 2\n      : 0,\n  }));\n\n  const handleToggleCustomReaction = useLastCallback((sticker: ApiSticker) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n    const reaction: ApiReaction = sticker.isCustomEmoji\n      ? { type: 'custom', documentId: sticker.id }\n      : { type: 'emoji', emoticon: sticker.emoji! };\n\n    toggleReaction({\n      chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n    });\n    closeReactionPicker();\n  });\n\n  const handleToggleReaction = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (!renderedChatId || !renderedMessageId) {\n      return;\n    }\n\n    if (reaction.type === 'paid') {\n      addLocalPaidReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, count: 1,\n      });\n    } else {\n      toggleReaction({\n        chatId: renderedChatId, messageId: renderedMessageId, reaction, shouldAddToRecent: true,\n      });\n    }\n    closeReactionPicker();\n  });\n\n  const handleReactionContextMenu = useLastCallback((reaction: ApiReactionWithPaid) => {\n    if (reaction.type !== 'paid') return;\n\n    openPaidReactionModal({\n      chatId: renderedChatId!,\n      messageId: renderedMessageId!,\n    });\n    closeReactionPicker();\n  });\n\n  const handleStoryReactionSelect = useLastCallback((item: ApiReactionWithPaid | ApiSticker) => {\n    if ('type' in item && item.type === 'paid') return; // Not supported for stories\n\n    const reaction = 'id' in item ? { type: 'custom', documentId: item.id } as const : item;\n\n    const sticker = 'type' in item && item.type === 'custom' ? getGlobal().customEmojis.byId[item.documentId]\n      : 'id' in item ? item : undefined;\n\n    if (sticker && !sticker.isFree && !isCurrentUserPremium) {\n      showNotification({\n        message: lang('UnlockPremiumEmojiHint'),\n        action: {\n          action: 'openPremiumModal',\n          payload: { initialSection: 'animated_emoji' },\n        },\n        actionText: lang('PremiumMore'),\n      });\n\n      closeReactionPicker();\n\n      return;\n    }\n\n    if (!sendAsMessage) {\n      sendStoryReaction({\n        peerId: renderedStoryPeerId!,\n        storyId: renderedStoryId!,\n        containerId: getStoryKey(renderedStoryPeerId!, renderedStoryId!),\n        reaction,\n        shouldAddToRecent: true,\n      });\n      closeReactionPicker();\n      return;\n    }\n\n    let text: string | undefined;\n    let entities: ApiMessageEntity[] | undefined;\n\n    if ('type' in item && item.type === 'emoji') {\n      text = item.emoticon;\n    } else {\n      const customEmojiMessage = parseHtmlAsFormattedText(buildCustomEmojiHtml(sticker!));\n      text = customEmojiMessage.text;\n      entities = customEmojiMessage.entities;\n    }\n\n    sendMessage({ text, entities, isReaction: true });\n    closeReactionPicker();\n  });\n\n  const handleStickerSelect = useLastCallback((sticker: ApiSticker) => {\n    const availableEffects = Object.values(availableEffectById);\n    const effectId = availableEffects.find((effect) => effect.effectStickerId === sticker.id)?.id;\n\n    if (chatId) saveEffectInDraft({ chatId, threadId: MAIN_THREAD_ID, effectId });\n\n    if (effectId) requestEffectInComposer({});\n    closeReactionPicker();\n  });\n\n  const selectedReactionIds = useMemo(() => {\n    return (message?.reactions?.results || []).reduce<string[]>((acc, { chosenOrder, reaction }) => {\n      if (chosenOrder !== undefined) {\n        acc.push(getReactionKey(reaction));\n      }\n\n      return acc;\n    }, []);\n  }, [message?.reactions?.results]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      ref={menuRef}\n      className={buildClassName(styles.menu, 'ReactionPicker')}\n      bubbleClassName={buildClassName(\n        styles.menuContent,\n        !shouldUseFullPicker && !renderedStoryId && styles.onlyReactions,\n        renderedStoryId && styles.storyMenu,\n      )}\n      withPortal\n      noCompact\n      anchor={renderingPosition}\n      positionY={story && 'bottom'}\n      getTriggerElement={getTriggerElement}\n      getRootElement={getRootElement}\n      getMenuElement={getMenuElement}\n      getLayout={getLayout}\n      backdropExcludedSelector=\".Modal.confirm\"\n      onClose={closeReactionPicker}\n    >\n      {isForEffects && chatId ? (\n        <StickerPicker\n          className=\"\"\n          isHidden={!isOpen}\n          loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n          idPrefix=\"message-effect\"\n          canSendStickers={false}\n          noContextMenus={false}\n          chatId={chatId}\n          isTranslucent={isTranslucent}\n          onStickerSelect={handleStickerSelect}\n          isForEffects={isForEffects}\n        />\n      ) : (\n        <>\n          <CustomEmojiPicker\n            chatId={renderedChatId}\n            idPrefix=\"message-emoji-set-\"\n            isHidden={!isOpen || !(shouldUseFullPicker || renderedStoryId)}\n            loadAndPlay={Boolean(isOpen && shouldUseFullPicker)}\n            isReactionPicker\n            className={!shouldUseFullPicker && !renderedStoryId ? styles.hidden : undefined}\n            selectedReactionIds={selectedReactionIds}\n            isTranslucent={isTranslucent}\n            onCustomEmojiSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleCustomReaction}\n            onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n            onReactionContext={handleReactionContextMenu}\n          />\n          {!shouldUseFullPicker && Boolean(renderedChatId) && (\n            <ReactionPickerLimited\n              chatId={renderedChatId}\n              loadAndPlay={isOpen}\n              onReactionSelect={renderedStoryId ? handleStoryReactionSelect : handleToggleReaction}\n              onReactionContext={handleReactionContextMenu}\n              selectedReactionIds={selectedReactionIds}\n              message={message}\n            />\n          )}\n        </>\n      )}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const state = selectTabState(global);\n  const availableEffectById = global.availableEffectById;\n  const {\n    chatId, messageId, storyPeerId, storyId, position, sendAsMessage, isForEffects,\n  } = state.reactionPicker || {};\n  const story = storyPeerId && storyId\n    ? selectPeerStory(global, storyPeerId, storyId) as ApiStory | ApiStorySkipped\n    : undefined;\n  const chat = chatId ? selectChat(global, chatId) : undefined;\n  const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n  const message = chatId && messageId ? selectChatMessage(global, chatId, messageId) : undefined;\n  const isPrivateChat = isUserId(chatId || storyPeerId || '');\n  const areSomeReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'some';\n  const { maxUniqueReactions } = global.appConfig || {};\n  const areAllReactionsAllowed = chatFullInfo?.enabledReactions?.type === 'all'\n    && chatFullInfo?.enabledReactions?.areCustomAllowed;\n\n  const currentReactions = message?.reactions?.results;\n  const shouldUseCurrentReactions = Boolean(maxUniqueReactions && currentReactions\n    && currentReactions.length >= maxUniqueReactions);\n\n  return {\n    message,\n    story,\n    position,\n    shouldUseFullPicker: (chat?.isForbidden || areSomeReactionsAllowed || shouldUseCurrentReactions) ? false\n      : (areAllReactionsAllowed || isPrivateChat),\n    isTranslucent: selectIsContextMenuTranslucent(global),\n    isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    sendAsMessage,\n    isForEffects,\n    chatId,\n    availableEffectById,\n  };\n})(ReactionPicker));\n\nfunction getTriggerElement(): HTMLElement | null {\n  return document.querySelector('body');\n}\n\nfunction getRootElement() {\n  return document.querySelector('body');\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"menu\":\"gBh4WvBC\",\"menuContent\":\"qSfKwMzX\",\"storyMenu\":\"srpBMrqr\",\"onlyReactions\":\"dRNSqkOC\",\"hidden\":\"KVwgF6DG\"};","import { fixImageContent } from '../../../../util/parseHtmlAsFormattedText';\n\nconst div = document.createElement('div');\n\nexport function getHtmlTextLength(html: string) {\n  div.innerHTML = html;\n  fixImageContent(div);\n  div.querySelectorAll('br').forEach((br) => {\n    br.replaceWith('\\n');\n  });\n  return div.textContent?.trim().length || 0;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"QucaiGVU\",\"preview\":\"SHoF85Vw\",\"duration\":\"nI2M1SBH\",\"single\":\"FjrnqGba\",\"no-grouping\":\"g0cTsM9d\",\"noGrouping\":\"g0cTsM9d\",\"file\":\"B6f6GcvN\",\"overlay\":\"bX7LdgxW\",\"action-item\":\"Zo7u5epf\",\"actionItem\":\"Zo7u5epf\",\"delete-file\":\"CYJwy9T_\",\"deleteFile\":\"CYJwy9T_\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\n\nimport type { ApiAttachment } from '../../../api/types';\n\nimport { SUPPORTED_PHOTO_CONTENT_TYPES, SUPPORTED_VIDEO_CONTENT_TYPES } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatMediaDuration } from '../../../util/dates/dateFormat';\nimport { getFileExtension } from '../../common/helpers/documentInfo';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport File from '../../common/File';\nimport Icon from '../../common/icons/Icon';\nimport MediaSpoiler from '../../common/MediaSpoiler';\n\nimport styles from './AttachmentModalItem.module.scss';\n\ntype OwnProps = {\n  attachment: ApiAttachment;\n  className?: string;\n  shouldDisplayCompressed?: boolean;\n  shouldDisplayGrouped?: boolean;\n  isSingle?: boolean;\n  index: number;\n  onDelete?: (index: number) => void;\n  onToggleSpoiler?: (index: number) => void;\n};\n\nconst BLUR_CANVAS_SIZE = 15 * REM;\n\nconst AttachmentModalItem: FC<OwnProps> = ({\n  attachment,\n  className,\n  isSingle,\n  shouldDisplayCompressed,\n  shouldDisplayGrouped,\n  index,\n  onDelete,\n  onToggleSpoiler,\n}) => {\n  const displayType = getDisplayType(attachment, shouldDisplayCompressed);\n\n  const handleSpoilerClick = useLastCallback(() => {\n    onToggleSpoiler?.(index);\n  });\n\n  const content = useMemo(() => {\n    switch (displayType) {\n      case 'photo':\n        return (\n          <img\n            className={styles.preview}\n            src={attachment.blobUrl}\n            alt=\"\"\n            draggable={false}\n          />\n        );\n      case 'video':\n        return (\n          <>\n            {Boolean(attachment.quick?.duration) && (\n              <div className={styles.duration}>{formatMediaDuration(attachment.quick!.duration)}</div>\n            )}\n            <video\n              className={styles.preview}\n              src={attachment.blobUrl}\n              autoPlay\n              muted\n              loop\n              disablePictureInPicture\n            />\n          </>\n        );\n      default:\n        return (\n          <>\n            <File\n              className={styles.file}\n              name={attachment.filename}\n              extension={getFileExtension(attachment.filename, attachment.mimeType)}\n              previewData={attachment.previewBlobUrl}\n              size={attachment.size}\n              smaller\n            />\n            {onDelete && (\n              <Icon\n                name=\"delete\"\n                className={buildClassName(styles.actionItem, styles.deleteFile)}\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => onDelete(index)}\n              />\n            )}\n          </>\n        );\n    }\n  }, [attachment, displayType, index, onDelete]);\n\n  const shouldSkipGrouping = displayType === 'file' || !shouldDisplayGrouped;\n  const shouldDisplaySpoiler = Boolean(displayType !== 'file' && attachment.shouldSendAsSpoiler);\n  const shouldRenderOverlay = displayType !== 'file';\n\n  const rootClassName = buildClassName(\n    className, styles.root, isSingle && styles.single, shouldSkipGrouping && styles.noGrouping,\n  );\n\n  return (\n    <div className={rootClassName}>\n      {content}\n      <MediaSpoiler\n        isVisible={shouldDisplaySpoiler}\n        thumbDataUri={attachment.previewBlobUrl || attachment.blobUrl}\n        width={BLUR_CANVAS_SIZE}\n        height={BLUR_CANVAS_SIZE}\n      />\n      {shouldRenderOverlay && (\n        <div className={styles.overlay}>\n          <Icon\n            name={attachment.shouldSendAsSpoiler ? 'spoiler-disable' : 'spoiler'}\n            className={styles.actionItem}\n            onClick={handleSpoilerClick}\n          />\n          {onDelete && (\n            // eslint-disable-next-line react/jsx-no-bind\n            <Icon name=\"delete\" className={styles.actionItem} onClick={() => onDelete(index)} />\n          )}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport function getDisplayType(attachment: ApiAttachment, shouldDisplayCompressed?: boolean) {\n  if (shouldDisplayCompressed && attachment.quick) {\n    if (SUPPORTED_PHOTO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'photo';\n    }\n    if (SUPPORTED_VIDEO_CONTENT_TYPES.has(attachment.mimeType)) {\n      return 'video';\n    }\n  }\n  return 'file';\n}\n\nexport default memo(AttachmentModalItem);\n","export default function isFullyVisible(container: HTMLElement, element: HTMLElement, isHorizontal = false) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n  const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  return y1 > viewportY1 && y2 < viewportY2;\n}\n","export default function findInViewport(\n  container: HTMLElement,\n  selectorOrElements: string | NodeListOf<HTMLElement> | HTMLElement[],\n  margin = 0,\n  isDense = false,\n  shouldContainBottom = false,\n  isHorizontal = false,\n) {\n  const viewportY1 = container[isHorizontal ? 'scrollLeft' : 'scrollTop'];\n  const viewportY2 = viewportY1 + container[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n  const allElements = typeof selectorOrElements === 'string'\n    ? container.querySelectorAll<HTMLElement>(selectorOrElements)\n    : selectorOrElements;\n  const { length } = allElements;\n  const visibleIndexes: number[] = [];\n  let isFound = false;\n\n  for (let i = 0; i < length; i++) {\n    const element = allElements[i];\n    const y1 = element[isHorizontal ? 'offsetLeft' : 'offsetTop'];\n    const y2 = y1 + element[isHorizontal ? 'offsetWidth' : 'offsetHeight'];\n    const isVisible = shouldContainBottom\n      ? y2 >= viewportY1 - margin && y2 <= viewportY2 + margin\n      : y1 <= viewportY2 + margin && y2 >= viewportY1 - margin;\n\n    if (isVisible) {\n      visibleIndexes.push(i);\n      isFound = true;\n    } else if (isFound && !isDense) {\n      break;\n    }\n  }\n\n  return { allElements, visibleIndexes };\n}\n","import isFullyVisible from './visibility/isFullyVisible';\nimport animateScroll from './animateScroll';\nimport findInViewport from './findInViewport';\n\nconst VIEWPORT_MARGIN = 8;\nconst SCROLL_MARGIN = 10;\n\nexport default function setTooltipItemVisible(selector: string, index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container || index < 0) {\n    return;\n  }\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    selector,\n    VIEWPORT_MARGIN,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first]))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    animateScroll({\n      container,\n      element: allElements[index],\n      position,\n      margin: SCROLL_MARGIN,\n    });\n  }\n}\n","import { useEffect, useState } from '../../../../lib/teact/teact';\n\nimport captureKeyboardListeners from '../../../../util/captureKeyboardListeners';\nimport cycleRestrict from '../../../../util/cycleRestrict';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nexport function useKeyboardNavigation({\n  isActive,\n  isHorizontal,\n  shouldSaveSelectionOnUpdateItems,\n  shouldRemoveSelectionOnReset,\n  noArrowNavigation,\n  items,\n  shouldSelectOnTab,\n  onSelect,\n  onClose,\n}: {\n  isActive: boolean;\n  isHorizontal?: boolean;\n  shouldSaveSelectionOnUpdateItems?: boolean;\n  shouldRemoveSelectionOnReset?: boolean;\n  noArrowNavigation?: boolean;\n  items?: any[];\n  shouldSelectOnTab?: boolean;\n  onSelect: (item: any) => void | boolean;\n  onClose: NoneToVoidFunction;\n}) {\n  const [selectedItemIndex, setSelectedItemIndex] = useState(-1);\n\n  const getSelectedIndex = useLastCallback((newIndex: number) => {\n    if (!items) {\n      return -1;\n    }\n\n    return cycleRestrict(items.length, newIndex);\n  });\n\n  const handleArrowKey = useLastCallback((value: number, e: KeyboardEvent) => {\n    e.preventDefault();\n    setSelectedItemIndex((index) => (getSelectedIndex(index + value)));\n  });\n\n  const handleItemSelect = useLastCallback((e: KeyboardEvent) => {\n    // Prevent action on key combinations\n    if (e.altKey || e.ctrlKey || e.metaKey || e.shiftKey) return false;\n    if (!isActive) return false;\n\n    if (items && items.length && selectedItemIndex > -1) {\n      const item = items[selectedItemIndex];\n      if (item) {\n        if (onSelect(item) === false) {\n          return false;\n        }\n\n        e.preventDefault();\n      }\n    }\n\n    return true;\n  });\n\n  useEffect(() => {\n    if (!isActive) setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n  }, [isActive, shouldRemoveSelectionOnReset]);\n\n  const isSelectionOutOfRange = !items || selectedItemIndex > items.length - 1;\n  useEffect(() => {\n    if (!shouldSaveSelectionOnUpdateItems || isSelectionOutOfRange) {\n      setSelectedItemIndex(shouldRemoveSelectionOnReset ? -1 : 0);\n    }\n  }, [isSelectionOutOfRange, shouldRemoveSelectionOnReset, shouldSaveSelectionOnUpdateItems]);\n\n  useEffect(() => (isActive ? captureKeyboardListeners({\n    onEsc: onClose,\n    onUp: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onDown: noArrowNavigation || isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onLeft: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(-1, e),\n    onRight: noArrowNavigation || !isHorizontal ? undefined : (e: KeyboardEvent) => handleArrowKey(1, e),\n    onTab: shouldSelectOnTab ? handleItemSelect : undefined,\n    onEnter: handleItemSelect,\n  }) : undefined), [\n    noArrowNavigation, handleArrowKey, handleItemSelect, isActive, isHorizontal, onClose, shouldSelectOnTab,\n  ]);\n\n  return selectedItemIndex;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\nimport './MentionTooltip.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  onClose: () => void;\n  onInsertUserName: (user: ApiUser, forceFocus?: boolean) => void;\n  filteredUsers?: ApiUser[];\n};\n\nconst MentionTooltip: FC<OwnProps> = ({\n  isOpen,\n  onClose,\n  onInsertUserName,\n  filteredUsers,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleUserSelect = useLastCallback((userId: string, forceFocus = false) => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const user = usersById[userId];\n    if (!user) {\n      return;\n    }\n\n    onInsertUserName(user, forceFocus);\n  });\n\n  const handleClick = useLastCallback((e: React.MouseEvent, id: string) => {\n    e.preventDefault();\n\n    handleUserSelect(id);\n  });\n\n  const handleSelectMention = useLastCallback((member: ApiUser) => {\n    handleUserSelect(member.id, true);\n  });\n\n  const selectedMentionIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: filteredUsers,\n    onSelect: handleSelectMention,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedMentionIndex, containerRef);\n  }, [selectedMentionIndex]);\n\n  useEffect(() => {\n    if (filteredUsers && !filteredUsers.length) {\n      onClose();\n    }\n  }, [filteredUsers, onClose]);\n\n  const prevChatMembers = usePreviousDeprecated(\n    filteredUsers?.length\n      ? filteredUsers\n      : undefined,\n    shouldRender,\n  );\n  const renderedChatMembers = filteredUsers && !filteredUsers.length\n    ? prevChatMembers\n    : filteredUsers;\n\n  if (!shouldRender || (renderedChatMembers && !renderedChatMembers.length)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'MentionTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {renderedChatMembers?.map(({ id }, index) => (\n        <ListItem\n          key={id}\n          className=\"chat-item-clickable scroll-item smaller-icon\"\n          onClick={handleClick}\n          clickArg={id}\n          focus={selectedMentionIndex === index}\n        >\n          <PrivateChatInfo\n            userId={id}\n            avatarSize=\"small\"\n            withUsername\n          />\n        </ListItem>\n      ))}\n    </div>\n  );\n};\n\nexport default memo(MentionTooltip);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"a27O2Qlr\",\"mobile\":\"khvUZbGZ\",\"symbolMenuOpen\":\"ir5kkMy1\",\"header-border\":\"Pc1k8G8s\",\"headerBorder\":\"Pc1k8G8s\",\"sendButtonStar\":\"C1OOt81o\",\"attachments\":\"_bxSIFgj\",\"attachments-bottom-padding\":\"RPVunBe2\",\"attachmentsBottomPadding\":\"RPVunBe2\",\"caption-wrapper\":\"EtmiUn2k\",\"captionWrapper\":\"EtmiUn2k\",\"caption-top-border\":\"FjjSKMYe\",\"captionTopBorder\":\"FjjSKMYe\",\"caption\":\"Te7lIfpB\",\"dropTarget\":\"AT_d9l0W\",\"dropOutlineContainer\":\"d9O65j_I\",\"dropOutline\":\"jzCBDWMw\",\"outline\":\"xjNY3Z8u\",\"hovered\":\"AnO3BgVv\",\"send-wrapper\":\"wDqWK9MD\",\"sendWrapper\":\"wDqWK9MD\",\"send\":\"kNlWmBJI\",\"is-pointer-env\":\"rYZmraWo\",\"isPointerEnv\":\"rYZmraWo\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAttachment, ApiChatMember, ApiMessage, ApiSticker,\n} from '../../../api/types';\nimport type { GlobalState } from '../../../global/types';\nimport type { MessageListType, ThreadId } from '../../../types';\nimport type { Signal } from '../../../util/signals';\n\nimport {\n  BASE_EMOJI_KEYWORD_LANG,\n  EDITABLE_INPUT_MODAL_ID,\n  SUPPORTED_AUDIO_CONTENT_TYPES,\n  SUPPORTED_PHOTO_CONTENT_TYPES,\n  SUPPORTED_VIDEO_CONTENT_TYPES,\n} from '../../../config';\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { getAttachmentMediaType, isUserId } from '../../../global/helpers';\nimport { selectChatFullInfo, selectIsChatWithSelf } from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport { validateFiles } from '../../../util/files';\nimport { formatStarsAsIcon } from '../../../util/localization/format';\nimport { removeAllSelections } from '../../../util/selection';\nimport { openSystemFilesDialog } from '../../../util/systemFilesDialog';\nimport getFilesFromDataTransferItems from './helpers/getFilesFromDataTransferItems';\nimport { getHtmlTextLength } from './helpers/getHtmlTextLength';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useContextMenuHandlers from '../../../hooks/useContextMenuHandlers';\nimport useDerivedState from '../../../hooks/useDerivedState';\nimport useEffectOnce from '../../../hooks/useEffectOnce';\nimport useFlag from '../../../hooks/useFlag';\nimport useGetSelectionRange from '../../../hooks/useGetSelectionRange';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useResizeObserver from '../../../hooks/useResizeObserver';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useCustomEmojiTooltip from './hooks/useCustomEmojiTooltip';\nimport useEmojiTooltip from './hooks/useEmojiTooltip';\nimport useMentionTooltip from './hooks/useMentionTooltip';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport DropdownMenu from '../../ui/DropdownMenu';\nimport MenuItem from '../../ui/MenuItem';\nimport Modal from '../../ui/Modal';\nimport AttachmentModalItem from './AttachmentModalItem';\nimport CustomEmojiTooltip from './CustomEmojiTooltip.async';\nimport CustomSendMenu from './CustomSendMenu.async';\nimport EmojiTooltip from './EmojiTooltip.async';\nimport MentionTooltip from './MentionTooltip';\nimport MessageInput from './MessageInput';\nimport SymbolMenuButton from './SymbolMenuButton';\n\nimport styles from './AttachmentModal.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId: ThreadId;\n  attachments: ApiAttachment[];\n  editingMessage?: ApiMessage;\n  messageListType?: MessageListType;\n  getHtml: Signal<string>;\n  canShowCustomSendMenu?: boolean;\n  isReady: boolean;\n  isForMessage?: boolean;\n  shouldSchedule?: boolean;\n  shouldSuggestCompression?: boolean;\n  shouldForceCompression?: boolean;\n  shouldForceAsFile?: boolean;\n  isForCurrentMessageList?: boolean;\n  forceDarkTheme?: boolean;\n  onCaptionUpdate: (html: string) => void;\n  onSend: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onFileAppend: (files: File[], isSpoiler?: boolean) => void;\n  onAttachmentsUpdate: (attachments: ApiAttachment[]) => void;\n  onClear: NoneToVoidFunction;\n  onSendSilent: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onSendScheduled: (sendCompressed: boolean, sendGrouped: boolean, isInvertedMedia?: true) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onRemoveSymbol: VoidFunction;\n  onEmojiSelect: (emoji: string) => void;\n  canScheduleUntilOnline?: boolean;\n  canSchedule?: boolean;\n  onSendWhenOnline?: NoneToVoidFunction;\n  paidMessagesStars?: number;\n};\n\ntype StateProps = {\n  isChatWithSelf?: boolean;\n  currentUserId?: string;\n  groupChatMembers?: ApiChatMember[];\n  recentEmojis: string[];\n  editingMessage?: ApiMessage;\n  baseEmojiKeywords?: Record<string, string[]>;\n  emojiKeywords?: Record<string, string[]>;\n  shouldSuggestCustomEmoji?: boolean;\n  customEmojiForEmoji?: ApiSticker[];\n  captionLimit: number;\n  attachmentSettings: GlobalState['attachmentSettings'];\n};\n\nconst ATTACHMENT_MODAL_INPUT_ID = 'caption-input-text';\nconst DROP_LEAVE_TIMEOUT_MS = 150;\nconst MAX_LEFT_CHARS_TO_SHOW = 100;\n\nconst AttachmentModal: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  attachments,\n  getHtml,\n  editingMessage,\n  canShowCustomSendMenu,\n  captionLimit,\n  isReady,\n  isChatWithSelf,\n  currentUserId,\n  groupChatMembers,\n  recentEmojis,\n  baseEmojiKeywords,\n  emojiKeywords,\n  isForMessage,\n  shouldSchedule,\n  shouldSuggestCustomEmoji,\n  customEmojiForEmoji,\n  attachmentSettings,\n  shouldSuggestCompression,\n  shouldForceCompression,\n  shouldForceAsFile,\n  isForCurrentMessageList,\n  forceDarkTheme,\n  onAttachmentsUpdate,\n  onCaptionUpdate,\n  onSend,\n  onFileAppend,\n  onClear,\n  onSendSilent,\n  onSendScheduled,\n  onCustomEmojiSelect,\n  onRemoveSymbol,\n  onEmojiSelect,\n  canScheduleUntilOnline,\n  canSchedule,\n  onSendWhenOnline,\n  paidMessagesStars,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const svgRef = useRef<SVGSVGElement>(null);\n  const { addRecentCustomEmoji, addRecentEmoji, updateAttachmentSettings } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  // eslint-disable-next-line no-null/no-null\n  const mainButtonRef = useRef<HTMLButtonElement | null>(null);\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLDivElement>(null);\n\n  const hideTimeoutRef = useRef<number>();\n  const prevAttachments = usePreviousDeprecated(attachments);\n  const renderingAttachments = attachments.length ? attachments : prevAttachments;\n  const { isMobile } = useAppLayout();\n\n  const isEditing = editingMessage && Boolean(editingMessage);\n  const isInAlbum = editingMessage && editingMessage?.groupedId;\n  const isEditingMessageFile = isEditing && attachments?.length && getAttachmentMediaType(attachments[0]);\n  const notEditingFile = isEditingMessageFile !== 'file';\n\n  const [isSymbolMenuOpen, openSymbolMenu, closeSymbolMenu] = useFlag();\n\n  const [shouldSendCompressed, setShouldSendCompressed] = useState(\n    shouldSuggestCompression ?? attachmentSettings.shouldCompress,\n  );\n  const isSendingCompressed = Boolean(\n    (shouldSendCompressed || shouldForceCompression || isInAlbum) && !shouldForceAsFile,\n  );\n  const [shouldSendGrouped, setShouldSendGrouped] = useState(attachmentSettings.shouldSendGrouped);\n  const isInvertedMedia = attachmentSettings.isInvertedMedia;\n\n  const {\n    handleScroll: handleAttachmentsScroll,\n    isAtBeginning: areAttachmentsNotScrolled,\n    isAtEnd: areAttachmentsScrolledToBottom,\n  } = useScrolledState();\n\n  const { handleScroll: handleCaptionScroll, isAtBeginning: isCaptionNotScrolled } = useScrolledState();\n\n  const isOpen = Boolean(attachments.length);\n  const renderingIsOpen = Boolean(renderingAttachments?.length);\n  const [isHovered, markHovered, unmarkHovered] = useFlag();\n\n  useEffect(() => {\n    if (!isOpen) {\n      closeSymbolMenu();\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [closeSymbolMenu, isOpen]);\n\n  const [hasMedia, hasOnlyMedia] = useMemo(() => {\n    const onlyMedia = Boolean(renderingAttachments?.every((a) => a.quick || a.audio));\n    if (onlyMedia) return [true, true];\n    const oneMedia = Boolean(renderingAttachments?.some((a) => a.quick || a.audio));\n    return [oneMedia, false];\n  }, [renderingAttachments]);\n\n  const [hasSpoiler, isEverySpoiler] = useMemo(() => {\n    const areAllSpoilers = Boolean(renderingAttachments?.every((a) => a.shouldSendAsSpoiler));\n    if (areAllSpoilers) return [true, true];\n    const hasOneSpoiler = Boolean(renderingAttachments?.some((a) => a.shouldSendAsSpoiler));\n    return [hasOneSpoiler, false];\n  }, [renderingAttachments]);\n\n  const getSelectionRange = useGetSelectionRange(`#${EDITABLE_INPUT_MODAL_ID}`);\n\n  const {\n    isEmojiTooltipOpen,\n    filteredEmojis,\n    filteredCustomEmojis,\n    insertEmoji,\n    closeEmojiTooltip,\n  } = useEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    EDITABLE_INPUT_MODAL_ID,\n    recentEmojis,\n    baseEmojiKeywords,\n    emojiKeywords,\n  );\n\n  const {\n    isCustomEmojiTooltipOpen,\n    insertCustomEmoji,\n    closeCustomEmojiTooltip,\n  } = useCustomEmojiTooltip(\n    Boolean(isReady && (isForCurrentMessageList || !isForMessage) && renderingIsOpen && shouldSuggestCustomEmoji),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    customEmojiForEmoji,\n  );\n\n  const {\n    isMentionTooltipOpen,\n    closeMentionTooltip,\n    insertMention,\n    mentionFilteredUsers,\n  } = useMentionTooltip(\n    Boolean(isReady && isForCurrentMessageList && renderingIsOpen),\n    getHtml,\n    onCaptionUpdate,\n    getSelectionRange,\n    inputRef,\n    groupChatMembers,\n    undefined,\n    currentUserId,\n  );\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setShouldSendCompressed(shouldSuggestCompression ?? attachmentSettings.shouldCompress);\n      setShouldSendGrouped(attachmentSettings.shouldSendGrouped);\n    }\n  }, [attachmentSettings, isOpen, shouldSuggestCompression]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      updateAttachmentSettings({ isInvertedMedia: undefined });\n    }\n  }, [updateAttachmentSettings, isOpen, shouldSuggestCompression]);\n\n  function setIsInvertedMedia(value?: true) {\n    updateAttachmentSettings({ isInvertedMedia: value });\n  }\n\n  useEffect(() => {\n    if (isOpen && isMobile) {\n      removeAllSelections();\n    }\n  }, [isMobile, isOpen]);\n\n  const {\n    isContextMenuOpen: isCustomSendMenuOpen,\n    handleContextMenu,\n    handleContextMenuClose,\n    handleContextMenuHide,\n  } = useContextMenuHandlers(mainButtonRef, !canShowCustomSendMenu || !isOpen);\n\n  const sendAttachments = useLastCallback((isSilent?: boolean, shouldSendScheduled?: boolean) => {\n    if (isOpen) {\n      const send = ((shouldSchedule || shouldSendScheduled) && isForMessage && !editingMessage) ? onSendScheduled\n        : isSilent ? onSendSilent : onSend;\n      send(isSendingCompressed, shouldSendGrouped, isInvertedMedia);\n      updateAttachmentSettings({\n        shouldCompress: shouldSuggestCompression === undefined ? isSendingCompressed : undefined,\n        shouldSendGrouped,\n        isInvertedMedia,\n      });\n    }\n  });\n\n  const handleSendSilent = useLastCallback(() => {\n    sendAttachments(true);\n  });\n\n  const handleSendClick = useLastCallback(() => {\n    sendAttachments();\n  });\n\n  const handleScheduleClick = useLastCallback(() => {\n    sendAttachments(false, true);\n  });\n\n  const handleDragLeave = (e: React.DragEvent<HTMLElement>) => {\n    const { relatedTarget: toTarget, target: fromTarget } = e;\n\n    // Esc button pressed during drag event\n    if ((fromTarget as HTMLDivElement).matches(`.${styles.dropTarget}`) && !toTarget) {\n      hideTimeoutRef.current = window.setTimeout(unmarkHovered, DROP_LEAVE_TIMEOUT_MS);\n    }\n\n    // Prevent DragLeave event from firing when the pointer moves inside the AttachmentModal drop target\n    if (fromTarget && (fromTarget as HTMLElement).closest(`.${styles.hovered}`)) {\n      return;\n    }\n\n    if (toTarget) {\n      e.stopPropagation();\n    }\n\n    unmarkHovered();\n  };\n\n  const handleFilesDrop = useLastCallback(async (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    unmarkHovered();\n\n    const { dataTransfer } = e;\n\n    const files = await getFilesFromDataTransferItems(dataTransfer.items);\n    if (files?.length) {\n      onFileAppend(files, isEverySpoiler);\n    }\n  });\n\n  function handleDragOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>) {\n    e.preventDefault();\n\n    if (hideTimeoutRef.current) {\n      window.clearTimeout(hideTimeoutRef.current);\n      hideTimeoutRef.current = undefined;\n    }\n  }\n\n  const handleFileSelect = useLastCallback((e: Event) => {\n    const { files } = e.target as HTMLInputElement;\n    const validatedFiles = validateFiles(files);\n\n    if (validatedFiles?.length) {\n      onFileAppend(validatedFiles, isEverySpoiler);\n    }\n  });\n\n  const handleDocumentSelect = useLastCallback(() => {\n    openSystemFilesDialog('*', (e) => handleFileSelect(e));\n  });\n\n  const handleDelete = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.filter((a, i) => i !== index));\n  });\n\n  const handleEnableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({\n      ...a,\n      shouldSendAsSpoiler: true,\n    })));\n  });\n\n  const handleDisableSpoilers = useLastCallback(() => {\n    onAttachmentsUpdate(attachments.map((a) => ({ ...a, shouldSendAsSpoiler: undefined })));\n  });\n\n  const handleToggleSpoiler = useLastCallback((index: number) => {\n    onAttachmentsUpdate(attachments.map((attachment, i) => {\n      if (i === index) {\n        return {\n          ...attachment,\n          shouldSendAsSpoiler: !attachment.shouldSendAsSpoiler || undefined,\n        };\n      }\n\n      return attachment;\n    }));\n  });\n\n  const handleResize = useLastCallback(() => {\n    const svg = svgRef.current;\n    if (!svg) {\n      return;\n    }\n\n    const { width, height } = svg.getBoundingClientRect();\n    svg.viewBox.baseVal.width = width;\n    svg.viewBox.baseVal.height = height;\n  });\n\n  // Can't listen for SVG resize\n  useResizeObserver(ref, handleResize);\n\n  useEffectOnce(handleResize);\n\n  useEffect(() => {\n    const mainButton = mainButtonRef.current;\n    const input = document.getElementById(ATTACHMENT_MODAL_INPUT_ID);\n\n    if (!mainButton || !input) return;\n\n    const { width } = mainButton.getBoundingClientRect();\n\n    requestMutation(() => {\n      input.style.setProperty('--margin-for-scrollbar', `${width}px`);\n    });\n  }, [oldLang, isOpen]);\n\n  const MoreMenuButton: FC<{ onTrigger: () => void; isOpen?: boolean }> = useMemo(() => {\n    return ({ onTrigger, isOpen: isMenuOpen }) => (\n      <Button\n        round\n        ripple={!isMobile}\n        size=\"smaller\"\n        color=\"translucent\"\n        className={isMenuOpen ? 'active' : ''}\n        onClick={onTrigger}\n        ariaLabel=\"More actions\"\n      >\n        <Icon name=\"more\" />\n      </Button>\n    );\n  }, [isMobile]);\n\n  const leftChars = useDerivedState(() => {\n    if (!renderingIsOpen) return undefined;\n\n    const leftCharsBeforeLimit = captionLimit - getHtmlTextLength(getHtml());\n    return leftCharsBeforeLimit <= MAX_LEFT_CHARS_TO_SHOW ? leftCharsBeforeLimit : undefined;\n  }, [captionLimit, getHtml, renderingIsOpen]);\n\n  const isQuickGallery = isSendingCompressed && hasOnlyMedia;\n\n  const [areAllPhotos, areAllVideos, areAllAudios] = useMemo(() => {\n    if (!isQuickGallery || !renderingAttachments) return [false, false, false];\n    const everyPhoto = renderingAttachments.every((a) => SUPPORTED_PHOTO_CONTENT_TYPES.has(a.mimeType));\n    const everyVideo = renderingAttachments.every((a) => SUPPORTED_VIDEO_CONTENT_TYPES.has(a.mimeType));\n    const everyAudio = renderingAttachments.every((a) => SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n    return [everyPhoto, everyVideo, everyAudio];\n  }, [renderingAttachments, isQuickGallery]);\n\n  const hasAnySpoilerable = useMemo(() => {\n    if (!renderingAttachments) return false;\n    return renderingAttachments.some((a) => !SUPPORTED_AUDIO_CONTENT_TYPES.has(a.mimeType));\n  }, [renderingAttachments]);\n\n  if (!renderingAttachments) {\n    return undefined;\n  }\n\n  const isMultiple = renderingAttachments.length > 1;\n\n  const canInvertMedia = (() => {\n    if (isEditing) return false;\n    if (!hasMedia) return false;\n    if (!shouldForceAsFile && !shouldForceCompression && !isSendingCompressed) return false;\n    if (isMultiple && shouldSendGrouped) return false;\n    return true;\n  })();\n\n  let title = '';\n  const attachmentsLength = renderingAttachments.length;\n  if (areAllPhotos) {\n    title = oldLang(isEditing ? 'EditMessageReplacePhoto' : 'PreviewSender.SendPhoto', attachmentsLength, 'i');\n  } else if (areAllVideos) {\n    title = oldLang(isEditing ? 'EditMessageReplaceVideo' : 'PreviewSender.SendVideo', attachmentsLength, 'i');\n  } else if (areAllAudios) {\n    title = oldLang(isEditing ? 'EditMessageReplaceAudio' : 'PreviewSender.SendAudio', attachmentsLength, 'i');\n  } else {\n    title = oldLang(isEditing ? 'EditMessageReplaceFile' : 'PreviewSender.SendFile', attachmentsLength, 'i');\n  }\n\n  function renderHeader() {\n    if (!renderingAttachments) {\n      return undefined;\n    }\n\n    return (\n      <div className=\"modal-header-condensed\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel attachments\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{title}</div>\n        {notEditingFile && !isInAlbum\n          && (\n            <DropdownMenu\n              className=\"attachmeneditingMessaget-modal-more-menu with-menu-transitions\"\n              trigger={MoreMenuButton}\n              positionX=\"right\"\n            >\n              {Boolean(!editingMessage) && (\n                <MenuItem icon=\"add\" onClick={handleDocumentSelect}>{oldLang('Add')}</MenuItem>\n              )}\n              {hasMedia && (\n                <>\n                  {\n                    canInvertMedia && (!isInvertedMedia ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-up\" onClick={() => setIsInvertedMedia(true)}>\n                        {oldLang('PreviewSender.MoveTextUp')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"move-caption-down\" onClick={() => setIsInvertedMedia(undefined)}>\n                        {oldLang(('PreviewSender.MoveTextDown'))}\n                      </MenuItem>\n                    ))\n                  }\n                  {\n                    !shouldForceAsFile && !shouldForceCompression && (isSendingCompressed ? (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"document\" onClick={() => setShouldSendCompressed(false)}>\n                        {oldLang(isMultiple ? 'Attachment.SendAsFiles' : 'Attachment.SendAsFile')}\n                      </MenuItem>\n                    ) : (\n                      // eslint-disable-next-line react/jsx-no-bind\n                      <MenuItem icon=\"photo\" onClick={() => setShouldSendCompressed(true)}>\n                        {isMultiple ? 'Send All as Media' : 'Send as Media'}\n                      </MenuItem>\n                    ))\n                  }\n                  {isSendingCompressed && hasAnySpoilerable && Boolean(!editingMessage) && (\n                    hasSpoiler ? (\n                      <MenuItem icon=\"spoiler-disable\" onClick={handleDisableSpoilers}>\n                        {oldLang('Attachment.DisableSpoiler')}\n                      </MenuItem>\n                    ) : (\n                      <MenuItem icon=\"spoiler\" onClick={handleEnableSpoilers}>\n                        {oldLang('Attachment.EnableSpoiler')}\n                      </MenuItem>\n                    )\n                  )}\n                </>\n              )}\n              {isMultiple && (\n                shouldSendGrouped ? (\n                  <MenuItem\n                    icon=\"grouped-disable\"\n                    // eslint-disable-next-line react/jsx-no-bind\n                    onClick={() => setShouldSendGrouped(false)}\n                  >\n                    Ungroup All Media\n                  </MenuItem>\n                ) : (\n                  // eslint-disable-next-line react/jsx-no-bind\n                  <MenuItem icon=\"grouped\" onClick={() => setShouldSendGrouped(true)}>\n                    Group All Media\n                  </MenuItem>\n                )\n              )}\n            </DropdownMenu>\n          )}\n      </div>\n    );\n  }\n\n  const isBottomDividerShown = !areAttachmentsScrolledToBottom || !isCaptionNotScrolled;\n  const buttonSendCaption = paidMessagesStars ? formatStarsAsIcon(lang,\n    attachmentsLength * paidMessagesStars,\n    {\n      className: styles.sendButtonStar,\n      asFont: true,\n    }) : oldLang('Send');\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      onClose={onClear}\n      header={renderHeader()}\n      className={buildClassName(\n        styles.root,\n        isHovered && styles.hovered,\n        !areAttachmentsNotScrolled && styles.headerBorder,\n        isMobile && styles.mobile,\n        isSymbolMenuOpen && styles.symbolMenuOpen,\n        forceDarkTheme && 'component-theme-dark',\n      )}\n      noBackdropClose\n      isLowStackPriority\n    >\n      <div\n        className={styles.dropTarget}\n        onDragEnter={markHovered}\n        onDrop={handleFilesDrop}\n        onDragOver={handleDragOver}\n        onDragLeave={handleDragLeave}\n        onClick={unmarkHovered}\n        data-attach-description={oldLang('Preview.Dragging.AddItems', 10)}\n        data-dropzone\n      >\n        <svg className={styles.dropOutlineContainer}>\n          <rect className={styles.dropOutline} x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" rx=\"8\" />\n        </svg>\n        <div\n          className={buildClassName(\n            styles.attachments,\n            'custom-scroll',\n            isBottomDividerShown && styles.attachmentsBottomPadding,\n          )}\n          onScroll={handleAttachmentsScroll}\n        >\n          {renderingAttachments.map((attachment, i) => (\n            <AttachmentModalItem\n              attachment={attachment}\n              shouldDisplayCompressed={isSendingCompressed}\n              shouldDisplayGrouped={shouldSendGrouped}\n              isSingle={renderingAttachments.length === 1}\n              index={i}\n              key={attachment.uniqueId || i}\n              onDelete={handleDelete}\n              onToggleSpoiler={handleToggleSpoiler}\n            />\n          ))}\n        </div>\n        <div\n          className={buildClassName(\n            styles.captionWrapper,\n            isBottomDividerShown && styles.captionTopBorder,\n          )}\n        >\n          <MentionTooltip\n            isOpen={isMentionTooltipOpen}\n            filteredUsers={mentionFilteredUsers}\n            onInsertUserName={insertMention}\n            onClose={closeMentionTooltip}\n          />\n          <EmojiTooltip\n            isOpen={isEmojiTooltipOpen}\n            emojis={filteredEmojis}\n            customEmojis={filteredCustomEmojis}\n            addRecentEmoji={addRecentEmoji}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onEmojiSelect={insertEmoji}\n            onCustomEmojiSelect={insertEmoji}\n            onClose={closeEmojiTooltip}\n          />\n          <CustomEmojiTooltip\n            chatId={chatId}\n            isOpen={isCustomEmojiTooltipOpen}\n            addRecentCustomEmoji={addRecentCustomEmoji}\n            onCustomEmojiSelect={insertCustomEmoji}\n            onClose={closeCustomEmojiTooltip}\n          />\n          <div className={styles.caption}>\n            <SymbolMenuButton\n              chatId={chatId}\n              threadId={threadId}\n              isMobile={isMobile}\n              isReady={isReady}\n              isSymbolMenuOpen={isSymbolMenuOpen}\n              openSymbolMenu={openSymbolMenu}\n              closeSymbolMenu={closeSymbolMenu}\n              onCustomEmojiSelect={onCustomEmojiSelect}\n              onRemoveSymbol={onRemoveSymbol}\n              onEmojiSelect={onEmojiSelect}\n              isAttachmentModal\n              canSendPlainText\n              className=\"attachment-modal-symbol-menu with-menu-transitions\"\n              idPrefix=\"attachment\"\n              forceDarkTheme={forceDarkTheme}\n            />\n            <MessageInput\n              ref={inputRef}\n              id={ATTACHMENT_MODAL_INPUT_ID}\n              chatId={chatId}\n              threadId={threadId}\n              isAttachmentModalInput\n              customEmojiPrefix=\"attachment\"\n              isReady={isReady}\n              isActive={isOpen}\n              getHtml={getHtml}\n              editableInputId={EDITABLE_INPUT_MODAL_ID}\n              placeholder={oldLang('AddCaption')}\n              onUpdate={onCaptionUpdate}\n              onSend={handleSendClick}\n              onScroll={handleCaptionScroll}\n              canAutoFocus={Boolean(isReady && isForCurrentMessageList && attachments.length)}\n              captionLimit={leftChars}\n              shouldSuppressFocus={isMobile && isSymbolMenuOpen}\n              onSuppressedFocus={closeSymbolMenu}\n            />\n            <div className={styles.sendWrapper}>\n              <Button\n                ref={mainButtonRef}\n                className={styles.send}\n                onClick={handleSendClick}\n                onContextMenu={canShowCustomSendMenu ? handleContextMenu : undefined}\n              >\n                {shouldSchedule && !editingMessage ? oldLang('Next')\n                  : editingMessage ? oldLang('Save') : buttonSendCaption}\n              </Button>\n              {canShowCustomSendMenu && (\n                <CustomSendMenu\n                  isOpen={isCustomSendMenuOpen}\n                  canSchedule={canSchedule && isForMessage}\n                  onSendSilent={!isChatWithSelf ? handleSendSilent : undefined}\n                  onSendSchedule={handleScheduleClick}\n                  onClose={handleContextMenuClose}\n                  onCloseAnimationEnd={handleContextMenuHide}\n                  isSavedMessages={isChatWithSelf}\n                  onSendWhenOnline={onSendWhenOnline}\n                  canScheduleUntilOnline={canScheduleUntilOnline}\n                />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const {\n      currentUserId,\n      recentEmojis,\n      customEmojis,\n      attachmentSettings,\n    } = global;\n\n    const chatFullInfo = !isUserId(chatId) ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithSelf = selectIsChatWithSelf(global, chatId);\n    const { language, shouldSuggestCustomEmoji } = global.settings.byKey;\n    const baseEmojiKeywords = global.emojiKeywords[BASE_EMOJI_KEYWORD_LANG];\n    const emojiKeywords = language !== BASE_EMOJI_KEYWORD_LANG ? global.emojiKeywords[language] : undefined;\n\n    return {\n      isChatWithSelf,\n      currentUserId,\n      groupChatMembers: chatFullInfo?.members,\n      recentEmojis,\n      baseEmojiKeywords: baseEmojiKeywords?.keywords,\n      emojiKeywords: emojiKeywords?.keywords,\n      shouldSuggestCustomEmoji,\n      customEmojiForEmoji: customEmojis.forEmoji.stickers,\n      captionLimit: selectCurrentLimit(global, 'captionLength'),\n      attachmentSettings,\n    };\n  },\n)(AttachmentModal));\n","import type { ChangeEvent, RefObject } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { ApiNewPoll } from '../../../api/types';\n\nimport { requestMeasure, requestNextMutation } from '../../../lib/fasterdom/fasterdom';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport parseHtmlAsFormattedText from '../../../util/parseHtmlAsFormattedText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport InputText from '../../ui/InputText';\nimport Modal from '../../ui/Modal';\nimport RadioGroup from '../../ui/RadioGroup';\nimport TextArea from '../../ui/TextArea';\n\nimport './PollModal.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  shouldBeAnonymous?: boolean;\n  isQuiz?: boolean;\n  onSend: (pollSummary: ApiNewPoll) => void;\n  onClear: () => void;\n};\n\nconst MAX_LIST_HEIGHT = 320;\nconst MAX_OPTIONS_COUNT = 10;\nconst MAX_OPTION_LENGTH = 100;\nconst MAX_QUESTION_LENGTH = 255;\nconst MAX_SOLUTION_LENGTH = 200;\n\nconst PollModal: FC<OwnProps> = ({\n  isOpen, isQuiz, shouldBeAnonymous, onSend, onClear,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const questionInputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const optionsListRef = useRef<HTMLDivElement>(null);\n\n  const [question, setQuestion] = useState<string>('');\n  const [options, setOptions] = useState<string[]>(['']);\n  const [isAnonymous, setIsAnonymous] = useState(true);\n  const [isMultipleAnswers, setIsMultipleAnswers] = useState(false);\n  const [isQuizMode, setIsQuizMode] = useState(isQuiz || false);\n  const [solution, setSolution] = useState<string>('');\n  const [correctOption, setCorrectOption] = useState<number | undefined>();\n  const [hasErrors, setHasErrors] = useState<boolean>(false);\n\n  const lang = useOldLang();\n\n  const handleSolutionChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setSolution(e.target.value);\n  });\n\n  const focusInput = useLastCallback((ref: RefObject<HTMLInputElement>) => {\n    if (isOpen && ref.current) {\n      ref.current.focus();\n    }\n  });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClear) : undefined), [isOpen, onClear]);\n  useEffect(() => {\n    if (!isOpen) {\n      setQuestion('');\n      setOptions(['']);\n      setIsAnonymous(true);\n      setIsMultipleAnswers(false);\n      setIsQuizMode(isQuiz || false);\n      setSolution('');\n      setCorrectOption(undefined);\n      setHasErrors(false);\n    }\n  }, [isQuiz, isOpen]);\n\n  useEffect(() => focusInput(questionInputRef), [focusInput, isOpen]);\n\n  const addNewOption = useLastCallback((newOptions: string[] = []) => {\n    setOptions([...newOptions, '']);\n\n    requestNextMutation(() => {\n      const list = optionsListRef.current;\n      if (!list) {\n        return;\n      }\n\n      requestMeasure(() => {\n        list.scrollTo({ top: list.scrollHeight, behavior: 'smooth' });\n      });\n    });\n  });\n\n  const handleCreate = useLastCallback(() => {\n    setHasErrors(false);\n    if (!isOpen) {\n      return;\n    }\n\n    const isNoCorrectOptionError = isQuizMode && (correctOption === undefined || !options[correctOption].trim());\n\n    const answers = options\n      .map((text, index) => {\n        text = text.trim();\n\n        if (!text) return undefined;\n\n        return {\n          text: {\n            text,\n          },\n          option: String(index),\n          ...(index === correctOption && { correct: true }),\n        };\n      }).filter(Boolean);\n\n    const questionTrimmed = question.trim().substring(0, MAX_QUESTION_LENGTH);\n    if (!questionTrimmed || answers.length < 2) {\n      setQuestion(questionTrimmed);\n      if (answers.length) {\n        const optionsTrimmed = options.map((o) => o.trim().substring(0, MAX_OPTION_LENGTH)).filter(Boolean);\n        if (optionsTrimmed.length < 2) {\n          addNewOption(optionsTrimmed);\n        } else {\n          setOptions(optionsTrimmed);\n        }\n      } else {\n        addNewOption();\n      }\n      setHasErrors(true);\n      return;\n    }\n\n    if (isNoCorrectOptionError) {\n      setHasErrors(true);\n      return;\n    }\n\n    const payload: ApiNewPoll = {\n      summary: {\n        question: {\n          text: questionTrimmed,\n        },\n        answers,\n        ...(!isAnonymous && { isPublic: true }),\n        ...(isMultipleAnswers && { multipleChoice: true }),\n        ...(isQuizMode && { quiz: true }),\n      },\n    };\n\n    if (isQuizMode) {\n      const { text, entities } = (solution && parseHtmlAsFormattedText(solution.substring(0, MAX_SOLUTION_LENGTH)))\n        || {};\n\n      payload.quiz = {\n        correctAnswers: [String(correctOption)],\n        ...(text && { solution: text }),\n        ...(entities && { solutionEntities: entities }),\n      };\n    }\n\n    onSend(payload);\n  });\n\n  const updateOption = useLastCallback((index: number, text: string) => {\n    const newOptions = [...options];\n    newOptions[index] = text;\n    if (newOptions[newOptions.length - 1].trim().length && newOptions.length < MAX_OPTIONS_COUNT) {\n      addNewOption(newOptions);\n    } else {\n      setOptions(newOptions);\n    }\n  });\n\n  const removeOption = useLastCallback((index: number) => {\n    const newOptions = [...options];\n    newOptions.splice(index, 1);\n    setOptions(newOptions);\n\n    if (correctOption !== undefined) {\n      if (correctOption === index) {\n        setCorrectOption(undefined);\n      } else if (index < correctOption) {\n        setCorrectOption(correctOption - 1);\n      }\n    }\n\n    requestNextMutation(() => {\n      if (!optionsListRef.current) {\n        return;\n      }\n\n      optionsListRef.current.classList.toggle('overflown', optionsListRef.current.scrollHeight > MAX_LIST_HEIGHT);\n    });\n  });\n\n  const handleCorrectOptionChange = useLastCallback((newValue: string) => {\n    setCorrectOption(Number(newValue));\n  });\n\n  const handleIsAnonymousChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsAnonymous(e.target.checked);\n  });\n\n  const handleMultipleAnswersChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsMultipleAnswers(e.target.checked);\n  });\n\n  const handleQuizModeChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsQuizMode(e.target.checked);\n  });\n\n  const handleKeyPress = useLastCallback((e: React.KeyboardEvent<HTMLDivElement>) => {\n    if (e.keyCode === 13) {\n      handleCreate();\n    }\n  });\n\n  const handleQuestionChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setQuestion(e.target.value);\n  });\n\n  const getQuestionError = useLastCallback(() => {\n    if (hasErrors && !question.trim().length) {\n      return lang('lng_polls_choose_question');\n    }\n\n    return undefined;\n  });\n\n  const getOptionsError = useLastCallback((index: number) => {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n    if (hasErrors && optionsTrimmed.length < 2 && !options[index].trim().length) {\n      return lang('lng_polls_choose_answers');\n    }\n    return undefined;\n  });\n\n  function renderHeader() {\n    return (\n      <div className=\"modal-header-condensed\">\n        <Button round color=\"translucent\" size=\"smaller\" ariaLabel=\"Cancel poll creation\" onClick={onClear}>\n          <Icon name=\"close\" />\n        </Button>\n        <div className=\"modal-title\">{lang('NewPoll')}</div>\n        <Button\n          color=\"primary\"\n          size=\"smaller\"\n          className=\"modal-action-button\"\n          onClick={handleCreate}\n        >\n          {lang('Create')}\n        </Button>\n      </div>\n    );\n  }\n\n  function renderOptions() {\n    return options.map((option, index) => (\n      <div className=\"option-wrapper\">\n        <InputText\n          maxLength={MAX_OPTION_LENGTH}\n          label={index !== options.length - 1 || options.length === MAX_OPTIONS_COUNT\n            ? lang('OptionHint')\n            : lang('CreatePoll.AddOption')}\n          error={getOptionsError(index)}\n          value={option}\n          // eslint-disable-next-line react/jsx-no-bind\n          onChange={(e) => updateOption(index, e.currentTarget.value)}\n          onKeyPress={handleKeyPress}\n        />\n        {index !== options.length - 1 && (\n          <Button\n            className=\"option-remove-button\"\n            round\n            color=\"translucent\"\n            size=\"smaller\"\n            ariaLabel={lang('Delete')}\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={() => removeOption(index)}\n          >\n            <Icon name=\"close\" />\n          </Button>\n        )}\n      </div>\n    ));\n  }\n\n  function renderRadioOptions() {\n    return renderOptions()\n      .map((label, index) => ({ value: String(index), label, hidden: !options[index].trim() }));\n  }\n\n  function renderQuizNoOptionError() {\n    const optionsTrimmed = options.map((o) => o.trim()).filter((o) => o.length);\n\n    return isQuizMode && (correctOption === undefined || !optionsTrimmed[correctOption]) && (\n      <p className=\"poll-error\">{lang('lng_polls_choose_correct')}</p>\n    );\n  }\n\n  return (\n    <Modal isOpen={isOpen} onClose={onClear} header={renderHeader()} className=\"PollModal\">\n      <InputText\n        ref={questionInputRef}\n        label={lang('AskAQuestion')}\n        value={question}\n        error={getQuestionError()}\n        onChange={handleQuestionChange}\n        onKeyPress={handleKeyPress}\n      />\n      <div className=\"options-divider\" />\n\n      <div className=\"options-list custom-scroll\" ref={optionsListRef}>\n        <h3 className=\"options-header\">{lang('PollOptions')}</h3>\n\n        {hasErrors && renderQuizNoOptionError()}\n        {isQuizMode ? (\n          <RadioGroup\n            name=\"correctOption\"\n            options={renderRadioOptions()}\n            selected={String(correctOption)}\n            onChange={handleCorrectOptionChange}\n          />\n        ) : (\n          renderOptions()\n        )}\n\n      </div>\n\n      <div className=\"options-divider\" />\n\n      <div className=\"quiz-mode\">\n        <div className=\"dialog-checkbox-group\">\n          {!shouldBeAnonymous && (\n            <Checkbox\n              label={lang('PollAnonymous')}\n              checked={isAnonymous}\n              onChange={handleIsAnonymousChange}\n            />\n          )}\n          <Checkbox\n            label={lang('PollMultiple')}\n            checked={isMultipleAnswers}\n            disabled={isQuizMode}\n            onChange={handleMultipleAnswersChange}\n          />\n          <Checkbox\n            label={lang('PollQuiz')}\n            checked={isQuizMode}\n            disabled={isMultipleAnswers || isQuiz !== undefined}\n            onChange={handleQuizModeChange}\n          />\n        </div>\n        {isQuizMode && (\n          <>\n            <h3 className=\"options-header\">{lang('lng_polls_solution_title')}</h3>\n            <TextArea\n              value={solution}\n              onChange={handleSolutionChange}\n              noReplaceNewlines\n            />\n            <div className=\"note\">{lang('CreatePoll.ExplanationInfo')}</div>\n          </>\n        )}\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(PollModal);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport { EMOJI_SIZE_PICKER, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport buildClassName from '../../../util/buildClassName';\nimport windowSize from '../../../util/windowSize';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport { useOnIntersect } from '../../../hooks/useIntersectionObserver';\nimport useMediaTransitionDeprecated from '../../../hooks/useMediaTransitionDeprecated';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport EmojiButton from './EmojiButton';\n\nconst EMOJIS_PER_ROW_ON_DESKTOP = 8;\nconst EMOJI_MARGIN = 0.625 * REM;\nconst EMOJI_VERTICAL_MARGIN = 0.25 * REM;\nconst EMOJI_VERTICAL_MARGIN_MOBILE = 0.5 * REM;\nconst MOBILE_CONTAINER_PADDING = 0.5 * REM;\n\ntype OwnProps = {\n  category: EmojiCategory;\n  index: number;\n  allEmojis: AllEmojis;\n  observeIntersection: ObserveFn;\n  shouldRender: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\nconst EmojiCategory: FC<OwnProps> = ({\n  category, index, allEmojis, observeIntersection, shouldRender, onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  useOnIntersect(ref, observeIntersection);\n\n  const transitionClassNames = useMediaTransitionDeprecated(shouldRender);\n\n  const lang = useOldLang();\n  const { isMobile } = useAppLayout();\n\n  const emojisPerRow = isMobile\n    ? Math.floor(\n      (windowSize.get().width - MOBILE_CONTAINER_PADDING + EMOJI_MARGIN) / (EMOJI_SIZE_PICKER + EMOJI_MARGIN),\n    )\n    : EMOJIS_PER_ROW_ON_DESKTOP;\n  const height = Math.ceil(category.emojis.length / emojisPerRow)\n    * (EMOJI_SIZE_PICKER + (isMobile ? EMOJI_VERTICAL_MARGIN_MOBILE : EMOJI_VERTICAL_MARGIN));\n\n  return (\n    <div\n      ref={ref}\n      key={category.id}\n      id={`emoji-category-${index}`}\n      className=\"symbol-set\"\n    >\n      <div className=\"symbol-set-header\">\n        <p className=\"symbol-set-name\" dir=\"auto\">\n          {lang(category.id === RECENT_SYMBOL_SET_ID ? 'RecentStickers' : `Emoji${index}`)}\n        </p>\n      </div>\n      <div\n        className={buildClassName('symbol-set-container', transitionClassNames)}\n        style={`height: ${height}px;`}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {shouldRender && category.emojis.map((name) => {\n          const emoji = allEmojis[name];\n          // Recent emojis may contain emoticons that are no longer in the list\n          if (!emoji) {\n            return undefined;\n          }\n          // Some emojis have multiple skins and are represented as an Object with emojis for all skins.\n          // For now, we select only the first emoji with 'neutral' skin.\n          const displayedEmoji = 'id' in emoji ? emoji : emoji[1];\n\n          return (\n            <EmojiButton\n              key={displayedEmoji.id}\n              emoji={displayedEmoji}\n              onClick={onEmojiSelect}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(EmojiCategory);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n  useState,\n} from '../../lib/teact/teact';\nimport { getGlobal, withGlobal } from '../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiEmojiStatusType,\n  ApiReaction, ApiReactionWithPaid, ApiSticker, ApiStickerSet,\n} from '../../api/types';\nimport type { StickerSetOrReactionsSetOrRecent } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport {\n  COLLECTIBLE_STATUS_SET_ID,\n  EMOJI_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n  RECENT_SYMBOL_SET_ID,\n  SLIDE_TRANSITION_DURATION,\n  STICKER_PICKER_MAX_SHARED_COVERS,\n  STICKER_SIZE_PICKER_HEADER,\n  TOP_SYMBOL_SET_ID,\n} from '../../config';\nimport { isSameReaction } from '../../global/helpers';\nimport {\n  selectCanPlayAnimatedEmojis,\n  selectChatFullInfo,\n  selectIsAlwaysHighPriorityEmoji,\n  selectIsChatWithSelf,\n  selectIsCurrentUserPremium,\n} from '../../global/selectors';\nimport animateHorizontalScroll from '../../util/animateHorizontalScroll';\nimport animateScroll from '../../util/animateScroll';\nimport buildClassName from '../../util/buildClassName';\nimport {\n  type EmojiData, type EmojiModule, type EmojiRawData, uncompressEmoji,\n} from '../../util/emoji/emoji';\nimport { pickTruthy, unique, uniqueByField } from '../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { REM } from './helpers/mediaDimensions';\n\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePrevDuringAnimation from '../../hooks/usePrevDuringAnimation';\nimport useScrolledState from '../../hooks/useScrolledState';\nimport useAsyncRendering from '../right/hooks/useAsyncRendering';\nimport { useStickerPickerObservers } from './hooks/useStickerPickerObservers';\n\nimport EmojiCategory from '../middle/composer/EmojiCategory';\nimport StickerSetCover from '../middle/composer/StickerSetCover';\nimport Button from '../ui/Button';\nimport Loading from '../ui/Loading';\nimport Icon from './icons/Icon';\nimport StickerButton from './StickerButton';\nimport StickerSet from './StickerSet';\n\nimport pickerStyles from '../middle/composer/StickerPicker.module.scss';\nimport styles from './AllEmojiPicker.module.scss';\n\ntype OwnProps = {\n  chatId?: string;\n  className?: string;\n  pickerListClassName?: string;\n  isHidden?: boolean;\n  loadAndPlay: boolean;\n  idPrefix?: string;\n  withDefaultTopicIcons?: boolean;\n  selectedReactionIds?: string[];\n  isStatusPicker?: boolean;\n  isReactionPicker?: boolean;\n  isTranslucent?: boolean;\n  onEmojiSelect: (emoji: string, name: string) => void;\n  onCustomEmojiSelect: (sticker: ApiSticker) => void;\n  onReactionSelect?: (reaction: ApiReactionWithPaid) => void;\n  onReactionContext?: (reaction: ApiReactionWithPaid) => void;\n  onContextMenuOpen?: NoneToVoidFunction;\n  onContextMenuClose?: NoneToVoidFunction;\n  onContextMenuClick?: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  customEmojisById?: Record<string, ApiSticker>;\n  recentCustomEmojiIds?: string[];\n  recentStatusEmojis?: ApiSticker[];\n  collectibleStatuses?: ApiEmojiStatusType[];\n  chatEmojiSetId?: string;\n  topReactions?: ApiReaction[];\n  recentReactions?: ApiReaction[];\n  defaultTagReactions?: ApiReaction[];\n  stickerSetsById: Record<string, ApiStickerSet>;\n  availableReactions?: ApiAvailableReaction[];\n  addedCustomEmojiIds?: string[];\n  defaultTopicIconsId?: string;\n  defaultStatusIconsId?: string;\n  customEmojiFeaturedIds?: string[];\n  canAnimate?: boolean;\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n  isWithPaidReaction?: boolean;\n  recentEmojis: string[];\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst DEFAULT_ID_PREFIX = 'custom-emoji-set';\nconst TOP_REACTIONS_COUNT = 16;\nconst RECENT_REACTIONS_COUNT = 32;\nconst RECENT_DEFAULT_STATUS_COUNT = 7;\nconst FADED_BUTTON_SET_IDS = new Set([\n  RECENT_SYMBOL_SET_ID, FAVORITE_SYMBOL_SET_ID, POPULAR_SYMBOL_SET_ID, EMOJI_SYMBOL_SET_ID,\n]);\nconst STICKER_SET_IDS_WITH_COVER = new Set([\n  RECENT_SYMBOL_SET_ID,\n  FAVORITE_SYMBOL_SET_ID,\n  POPULAR_SYMBOL_SET_ID,\n]);\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, IconName> = {\n  recent: 'recent',\n  people: 'smile',\n  nature: 'animals',\n  foods: 'eats',\n  activity: 'sport',\n  places: 'car',\n  objects: 'lamp',\n  symbols: 'language',\n  flags: 'flag',\n};\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst AllEmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  pickerListClassName,\n  isHidden,\n  loadAndPlay,\n  addedCustomEmojiIds,\n  customEmojisById,\n  recentCustomEmojiIds,\n  selectedReactionIds,\n  recentStatusEmojis,\n  collectibleStatuses,\n  stickerSetsById,\n  chatEmojiSetId,\n  topReactions,\n  recentReactions,\n  availableReactions,\n  idPrefix = DEFAULT_ID_PREFIX,\n  customEmojiFeaturedIds,\n  canAnimate,\n  isReactionPicker,\n  isStatusPicker,\n  isTranslucent,\n  isSavedMessages,\n  isCurrentUserPremium,\n  withDefaultTopicIcons,\n  defaultTopicIconsId,\n  defaultStatusIconsId,\n  defaultTagReactions,\n  isWithPaidReaction,\n  onCustomEmojiSelect,\n  onEmojiSelect,\n  onReactionSelect,\n  onReactionContext,\n  onContextMenuOpen,\n  onContextMenuClose,\n  onContextMenuClick,\n  recentEmojis,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasHqRef = useRef<HTMLCanvasElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const recentCustomEmojis = useMemo(() => {\n    return isStatusPicker\n      ? recentStatusEmojis\n      : Object.values(pickTruthy(customEmojisById!, recentCustomEmojiIds!));\n  }, [customEmojisById, isStatusPicker, recentCustomEmojiIds, recentStatusEmojis]);\n\n  const collectibleStatusEmojis = useMemo(() => {\n    const collectibleStatusEmojiIds = collectibleStatuses?.map((status) => status.documentId);\n    return customEmojisById && collectibleStatusEmojiIds?.map((id) => customEmojisById[id]).filter(Boolean);\n  }, [customEmojisById, collectibleStatuses]);\n\n  const prefix = `${idPrefix}-custom-emoji`;\n  const {\n    activeSetIndex,\n    observeIntersectionForSet,\n    observeIntersectionForPlayingItems,\n    observeIntersectionForShowingItems,\n    observeIntersectionForCovers,\n    selectStickerSet,\n  } = useStickerPickerObservers(containerRef, headerRef, prefix, isHidden);\n\n  const canLoadAndPlay = usePrevDuringAnimation(loadAndPlay || undefined, SLIDE_TRANSITION_DURATION);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const areAddedLoaded = Boolean(addedCustomEmojiIds);\n\n  const allSets = useMemo(() => {\n    const defaultSets: StickerSetOrReactionsSetOrRecent[] = [];\n\n    if (isReactionPicker && isSavedMessages) {\n      if (defaultTagReactions?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('PremiumPreviewTags'),\n          reactions: defaultTagReactions,\n          count: defaultTagReactions.length,\n          isEmoji: true,\n        });\n      }\n    }\n\n    if (isReactionPicker && !isSavedMessages) {\n      const topReactionsSlice: ApiReactionWithPaid[] = topReactions?.slice(0, TOP_REACTIONS_COUNT) || [];\n      if (isWithPaidReaction) {\n        topReactionsSlice.unshift({ type: 'paid' });\n      }\n      if (topReactionsSlice?.length) {\n        defaultSets.push({\n          id: TOP_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang('Reactions'),\n          reactions: topReactionsSlice,\n          count: topReactionsSlice.length,\n          isEmoji: true,\n        });\n      }\n\n      const cleanRecentReactions = (recentReactions || [])\n        .filter((reaction) => !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction)))\n        .slice(0, RECENT_REACTIONS_COUNT);\n      const cleanAvailableReactions = (availableReactions || [])\n        .filter(({ isInactive }) => !isInactive)\n        .map(({ reaction }) => reaction)\n        .filter((reaction) => {\n          return !topReactionsSlice.some((topReaction) => isSameReaction(topReaction, reaction))\n            && !cleanRecentReactions.some((topReaction) => isSameReaction(topReaction, reaction));\n        });\n      if (cleanAvailableReactions?.length || cleanRecentReactions?.length) {\n        const isPopular = !cleanRecentReactions?.length;\n        const allRecentReactions = cleanRecentReactions.concat(cleanAvailableReactions);\n        defaultSets.push({\n          id: isPopular ? POPULAR_SYMBOL_SET_ID : RECENT_SYMBOL_SET_ID,\n          accessHash: '',\n          title: oldLang(isPopular ? 'PopularReactions' : 'RecentStickers'),\n          reactions: allRecentReactions,\n          count: allRecentReactions.length,\n          isEmoji: true,\n        });\n      }\n    } else if (isStatusPicker) {\n      const defaultStatusIconsPack = stickerSetsById[defaultStatusIconsId!];\n      if (defaultStatusIconsPack?.stickers?.length) {\n        const stickers = uniqueByField(defaultStatusIconsPack.stickers\n          .slice(0, RECENT_DEFAULT_STATUS_COUNT)\n          .concat(recentCustomEmojis || []), 'id');\n        defaultSets.push({\n          ...defaultStatusIconsPack,\n          stickers,\n          count: stickers.length,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n          isEmoji: true,\n        });\n      }\n      if (collectibleStatusEmojis?.length) {\n        defaultSets.push({\n          id: COLLECTIBLE_STATUS_SET_ID,\n          accessHash: '',\n          count: collectibleStatusEmojis.length,\n          stickers: collectibleStatusEmojis,\n          title: lang('CollectibleStatusesCategory'),\n          isEmoji: true,\n        });\n      }\n    } else if (withDefaultTopicIcons) {\n      const defaultTopicIconsPack = stickerSetsById[defaultTopicIconsId!];\n      if (defaultTopicIconsPack.stickers?.length) {\n        defaultSets.push({\n          ...defaultTopicIconsPack,\n          id: RECENT_SYMBOL_SET_ID,\n          title: oldLang('RecentStickers'),\n        });\n      }\n    } else if (recentCustomEmojis?.length || recentEmojis?.length) {\n      defaultSets.push({\n        id: RECENT_SYMBOL_SET_ID,\n        accessHash: '0',\n        title: oldLang('RecentStickers'),\n        stickers: recentCustomEmojis,\n        count: (recentCustomEmojis?.length ?? 0) + (recentEmojis?.length ?? 0),\n        isEmoji: true,\n      });\n    }\n\n    defaultSets.push({\n      id: EMOJI_SYMBOL_SET_ID,\n      accessHash: '0',\n      title: oldLang('RecentStickers'),\n      stickers: undefined,\n      count: emojis ? Object.entries(emojis).length : 0,\n      isEmoji: true,\n    });\n\n    const userSetIds = [...(addedCustomEmojiIds || [])];\n    if (chatEmojiSetId) {\n      userSetIds.unshift(chatEmojiSetId);\n    }\n\n    const setIdsToDisplay = unique(userSetIds.concat(customEmojiFeaturedIds || []));\n\n    const setsToDisplay = Object.values(pickTruthy(stickerSetsById, setIdsToDisplay));\n\n    return [\n      ...defaultSets,\n      ...setsToDisplay,\n    ];\n  // eslint-disable-next-line max-len\n  }, [isReactionPicker, isSavedMessages, isStatusPicker, withDefaultTopicIcons, recentCustomEmojis, recentEmojis?.length, oldLang, emojis, addedCustomEmojiIds, chatEmojiSetId, customEmojiFeaturedIds, stickerSetsById, defaultTagReactions, topReactions, isWithPaidReaction, recentReactions, availableReactions, defaultStatusIconsId, collectibleStatusEmojis, lang, defaultTopicIconsId]);\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    // if (recentEmojis?.length) {\n    //   themeCategories.unshift({\n    //     id: RECENT_SYMBOL_SET_ID,\n    //     name: lang('RecentStickers'),\n    //     emojis: recentEmojis,\n    //   });\n    // }\n\n    return themeCategories;\n  }, [categories]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const noPopulatedSets = useMemo(() => (\n    areAddedLoaded\n    && allSets.filter((set) => set.stickers?.length).length === 0\n  ), [allSets, areAddedLoaded]);\n\n  const canRenderContent = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n  const shouldRenderContent = areAddedLoaded && canRenderContent && !noPopulatedSets;\n\n  useHorizontalScroll(headerRef, isMobile || !shouldRenderContent);\n\n  // Scroll container and header when active set changes\n  useEffect(() => {\n    if (!areAddedLoaded) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeSetIndex * HEADER_BUTTON_WIDTH - (header.offsetWidth / 2 - HEADER_BUTTON_WIDTH / 2);\n\n    animateHorizontalScroll(header, newLeft);\n  }, [areAddedLoaded, activeSetIndex]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll({\n      container: containerRef.current!,\n      element: categoryEl,\n      position: 'start',\n      margin: FOCUS_MARGIN,\n      maxDistance: SMOOTH_SCROLL_DISTANCE,\n    });\n  });\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <Icon name={icon} />\n      </Button>\n    );\n  }\n\n  function renderCover(stickerSet: StickerSetOrReactionsSetOrRecent, index: number) {\n    const firstSticker = stickerSet.stickers?.[0];\n    const buttonClassName = buildClassName(\n      pickerStyles.stickerCover,\n      index === activeSetIndex && styles.activated,\n    );\n\n    const withSharedCanvas = index < STICKER_PICKER_MAX_SHARED_COVERS;\n    const isHq = selectIsAlwaysHighPriorityEmoji(getGlobal(), stickerSet as ApiStickerSet);\n\n    if (stickerSet.id === TOP_SYMBOL_SET_ID) {\n      return undefined;\n    }\n\n    if (STICKER_SET_IDS_WITH_COVER.has(stickerSet.id) || stickerSet.hasThumbnail || !firstSticker) {\n      const isEmoji = stickerSet.id === EMOJI_SYMBOL_SET_ID;\n      const isRecent = stickerSet.id === RECENT_SYMBOL_SET_ID || stickerSet.id === POPULAR_SYMBOL_SET_ID;\n      const isFaded = FADED_BUTTON_SET_IDS.has(stickerSet.id);\n      return (\n        <Button\n          key={stickerSet.id}\n          className={buttonClassName}\n          ariaLabel={stickerSet.title}\n          round\n          faded={isFaded}\n          color=\"translucent\"\n          // eslint-disable-next-line react/jsx-no-bind\n          onClick={() => selectStickerSet(isRecent ? 0 : index)}\n        >\n          {isRecent ? (\n            <Icon name=\"recent\" />\n          ) : (\n            isEmoji ? (\n              <Icon name=\"smile\" />\n            ) : (\n              <StickerSetCover\n                stickerSet={stickerSet as ApiStickerSet}\n                noPlay={!canAnimate || !canLoadAndPlay}\n                forcePlayback\n                observeIntersection={observeIntersectionForCovers}\n                sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n              />\n            )\n          )}\n        </Button>\n      );\n    }\n\n    return (\n      <StickerButton\n        key={stickerSet.id}\n        sticker={firstSticker}\n        size={STICKER_SIZE_PICKER_HEADER}\n        title={stickerSet.title}\n        className={buttonClassName}\n        noPlay={!canAnimate || !canLoadAndPlay}\n        observeIntersection={observeIntersectionForCovers}\n        noContextMenu\n        isCurrentUserPremium\n        sharedCanvasRef={withSharedCanvas ? (isHq ? sharedCanvasHqRef : sharedCanvasRef) : undefined}\n        withTranslucentThumb={isTranslucent}\n        onClick={selectStickerSet}\n        clickArg={index}\n        forcePlayback\n      />\n    );\n  }\n\n  const fullClassName = buildClassName('StickerPicker', styles.root, className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={fullClassName}>\n        {noPopulatedSets ? (\n          <div className={pickerStyles.pickerDisabled}>{oldLang('NoStickers')}</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    pickerStyles.header,\n    'no-scrollbar',\n    !shouldHideTopBorder && pickerStyles.headerWithBorder,\n  );\n  const listClassName = buildClassName(\n    pickerStyles.main,\n    pickerStyles.main_customEmoji,\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    pickerListClassName,\n    pickerStyles.hasHeader,\n  );\n\n  return (\n    <div className={fullClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n      >\n        <div className=\"shared-canvas-container\">\n          <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n          <canvas ref={sharedCanvasHqRef} className=\"shared-canvas\" />\n          {allSets.map(renderCover)}\n        </div>\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={listClassName}\n      >\n        {allSets.map((stickerSet, i) => {\n          const shouldHideHeader = stickerSet.id === TOP_SYMBOL_SET_ID\n            || (stickerSet.id === RECENT_SYMBOL_SET_ID && (withDefaultTopicIcons || isStatusPicker));\n          const isChatEmojiSet = stickerSet.id === chatEmojiSetId;\n\n          if (stickerSet.id === EMOJI_SYMBOL_SET_ID) {\n            return (\n              <div id={`messageList-custom-emoji-${i}`}>\n                {allCategories.map((category, j) => (\n                  <EmojiCategory\n                    category={category}\n                    index={j + 1}\n                    allEmojis={emojis!}\n                    observeIntersection={observeIntersection}\n                    shouldRender={activeCategoryIndex >= j - 1 && activeCategoryIndex <= j + 1}\n                    onEmojiSelect={handleEmojiSelect}\n                  />\n                ))}\n              </div>\n            );\n          }\n\n          return (\n            <StickerSet\n              key={stickerSet.id}\n              stickerSet={stickerSet}\n              loadAndPlay={Boolean(canAnimate && canLoadAndPlay)}\n              index={i}\n              idPrefix={prefix}\n              observeIntersection={observeIntersectionForSet}\n              observeIntersectionForPlayingItems={observeIntersectionForPlayingItems}\n              observeIntersectionForShowingItems={observeIntersectionForShowingItems}\n              isNearActive={activeSetIndex >= i - 1 && activeSetIndex <= i + 1}\n              isSavedMessages={isSavedMessages}\n              isStatusPicker={isStatusPicker}\n              isReactionPicker={isReactionPicker}\n              shouldHideHeader={shouldHideHeader}\n              withDefaultTopicIcon={withDefaultTopicIcons && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              withDefaultStatusIcon={isStatusPicker && stickerSet.id === RECENT_SYMBOL_SET_ID}\n              isChatEmojiSet={isChatEmojiSet}\n              isCurrentUserPremium={isCurrentUserPremium}\n              selectedReactionIds={selectedReactionIds}\n              availableReactions={availableReactions}\n              isTranslucent={isTranslucent}\n              onReactionSelect={onReactionSelect}\n              onReactionContext={onReactionContext}\n              onStickerSelect={handleCustomEmojiSelect}\n              onContextMenuOpen={onContextMenuOpen}\n              onContextMenuClose={onContextMenuClose}\n              onContextMenuClick={onContextMenuClick}\n              forcePlayback\n              recentEmojis={stickerSet.id === RECENT_SYMBOL_SET_ID ? recentEmojis : undefined}\n              allEmojis={stickerSet.id === RECENT_SYMBOL_SET_ID ? emojis : undefined}\n              onEmojiSelect={stickerSet.id === RECENT_SYMBOL_SET_ID ? handleEmojiSelect : undefined}\n            />\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isStatusPicker, isReactionPicker }): StateProps => {\n    const {\n      stickers: {\n        setsById: stickerSetsById,\n      },\n      customEmojis: {\n        byId: customEmojisById,\n        featuredIds: customEmojiFeaturedIds,\n        statusRecent: {\n          emojis: recentStatusEmojis,\n        },\n      },\n      recentCustomEmojis: recentCustomEmojiIds,\n      reactions: {\n        availableReactions,\n        recentReactions,\n        topReactions,\n        defaultTags,\n      },\n      recentEmojis,\n    } = global;\n\n    const isSavedMessages = Boolean(chatId && selectIsChatWithSelf(global, chatId));\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const collectibleStatuses = global.collectibleEmojiStatuses?.statuses;\n\n    return {\n      customEmojisById,\n      recentEmojis,\n      recentCustomEmojiIds: !isStatusPicker ? recentCustomEmojiIds : undefined,\n      recentStatusEmojis: isStatusPicker ? recentStatusEmojis : undefined,\n      collectibleStatuses: isStatusPicker ? collectibleStatuses : undefined,\n      stickerSetsById,\n      addedCustomEmojiIds: global.customEmojis.added.setIds,\n      canAnimate: selectCanPlayAnimatedEmojis(global),\n      isSavedMessages,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n      customEmojiFeaturedIds,\n      defaultTopicIconsId: global.defaultTopicIconsId,\n      defaultStatusIconsId: global.defaultStatusIconsId,\n      topReactions: isReactionPicker ? topReactions : undefined,\n      recentReactions: isReactionPicker ? recentReactions : undefined,\n      chatEmojiSetId: chatFullInfo?.emojiSet?.id,\n      isWithPaidReaction: isReactionPicker && chatFullInfo?.isPaidReactionAvailable,\n      availableReactions: isReactionPicker ? availableReactions : undefined,\n      defaultTagReactions: isReactionPicker ? defaultTags : undefined,\n    };\n  },\n)(AllEmojiPicker));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"eO4FlI71\",\"activated\":\"FKGTGD39\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { GlobalState } from '../../../global/types';\nimport type { IconName } from '../../../types/icons';\nimport type {\n  EmojiData,\n  EmojiModule,\n  EmojiRawData,\n} from '../../../util/emoji/emoji';\n\nimport { MENU_TRANSITION_DURATION, RECENT_SYMBOL_SET_ID } from '../../../config';\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport animateScroll from '../../../util/animateScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport { uncompressEmoji } from '../../../util/emoji/emoji';\nimport { pick } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\nimport { REM } from '../../common/helpers/mediaDimensions';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useScrolledState from '../../../hooks/useScrolledState';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Loading from '../../ui/Loading';\nimport EmojiCategory from './EmojiCategory';\n\nimport './EmojiPicker.scss';\n\ntype OwnProps = {\n  className?: string;\n  onEmojiSelect: (emoji: string, name: string) => void;\n};\n\ntype StateProps = Pick<GlobalState, 'recentEmojis'>;\n\ntype EmojiCategoryData = { id: string; name: string; emojis: string[] };\n\nconst ICONS_BY_CATEGORY: Record<string, IconName> = {\n  recent: 'recent',\n  people: 'smile',\n  nature: 'animals',\n  foods: 'eats',\n  activity: 'sport',\n  places: 'car',\n  objects: 'lamp',\n  symbols: 'language',\n  flags: 'flag',\n};\n\nconst OPEN_ANIMATION_DELAY = 200;\nconst SMOOTH_SCROLL_DISTANCE = 100;\nconst FOCUS_MARGIN = 3.25 * REM;\nconst HEADER_BUTTON_WIDTH = 2.625 * REM; // Includes margins\nconst INTERSECTION_THROTTLE = 200;\n\nconst categoryIntersections: boolean[] = [];\n\nlet emojiDataPromise: Promise<EmojiModule>;\nlet emojiRawData: EmojiRawData;\nlet emojiData: EmojiData;\n\nconst EmojiPicker: FC<OwnProps & StateProps> = ({\n  className,\n  recentEmojis,\n  onEmojiSelect,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const headerRef = useRef<HTMLDivElement>(null);\n\n  const [categories, setCategories] = useState<EmojiCategoryData[]>();\n  const [emojis, setEmojis] = useState<AllEmojis>();\n  const [activeCategoryIndex, setActiveCategoryIndex] = useState(0);\n  const { isMobile } = useAppLayout();\n  const {\n    handleScroll: handleContentScroll,\n    isAtBeginning: shouldHideTopBorder,\n  } = useScrolledState();\n\n  const { observe: observeIntersection } = useIntersectionObserver({\n    rootRef: containerRef,\n    throttleMs: INTERSECTION_THROTTLE,\n  }, (entries) => {\n    entries.forEach((entry) => {\n      const { id } = entry.target as HTMLDivElement;\n      if (!id || !id.startsWith('emoji-category-')) {\n        return;\n      }\n\n      const index = Number(id.replace('emoji-category-', ''));\n      categoryIntersections[index] = entry.isIntersecting;\n    });\n\n    const minIntersectingIndex = categoryIntersections.reduce((lowestIndex, isIntersecting, index) => {\n      return isIntersecting && index < lowestIndex ? index : lowestIndex;\n    }, Infinity);\n\n    if (minIntersectingIndex === Infinity) {\n      return;\n    }\n\n    setActiveCategoryIndex(minIntersectingIndex);\n  });\n\n  const canRenderContents = useAsyncRendering([], MENU_TRANSITION_DURATION);\n  const shouldRenderContent = emojis && canRenderContents;\n\n  useHorizontalScroll(headerRef, !(isMobile && shouldRenderContent));\n\n  // Scroll header when active set updates\n  useEffect(() => {\n    if (!categories) {\n      return;\n    }\n\n    const header = headerRef.current;\n    if (!header) {\n      return;\n    }\n\n    const newLeft = activeCategoryIndex * HEADER_BUTTON_WIDTH - header.offsetWidth / 2 + HEADER_BUTTON_WIDTH / 2;\n\n    animateHorizontalScroll(header, newLeft);\n  }, [categories, activeCategoryIndex]);\n\n  const lang = useOldLang();\n\n  const allCategories = useMemo(() => {\n    if (!categories) {\n      return MEMO_EMPTY_ARRAY;\n    }\n    const themeCategories = [...categories];\n    if (recentEmojis?.length) {\n      themeCategories.unshift({\n        id: RECENT_SYMBOL_SET_ID,\n        name: lang('RecentStickers'),\n        emojis: recentEmojis,\n      });\n    }\n\n    return themeCategories;\n  }, [categories, lang, recentEmojis]);\n\n  // Initialize data on first render.\n  useEffect(() => {\n    setTimeout(() => {\n      const exec = () => {\n        setCategories(emojiData.categories);\n\n        setEmojis(emojiData.emojis as AllEmojis);\n      };\n\n      if (emojiData) {\n        exec();\n      } else {\n        ensureEmojiData()\n          .then(exec);\n      }\n    }, OPEN_ANIMATION_DELAY);\n  }, []);\n\n  const selectCategory = useLastCallback((index: number) => {\n    setActiveCategoryIndex(index);\n    const categoryEl = containerRef.current!.closest<HTMLElement>('.SymbolMenu-main')!\n      .querySelector(`#emoji-category-${index}`)! as HTMLElement;\n    animateScroll({\n      container: containerRef.current!,\n      element: categoryEl,\n      position: 'start',\n      margin: FOCUS_MARGIN,\n      maxDistance: SMOOTH_SCROLL_DISTANCE,\n    });\n  });\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    onEmojiSelect(emoji, name);\n  });\n\n  function renderCategoryButton(category: EmojiCategoryData, index: number) {\n    const icon = ICONS_BY_CATEGORY[category.id];\n\n    return icon && (\n      <Button\n        className={`symbol-set-button ${index === activeCategoryIndex ? 'activated' : ''}`}\n        round\n        faded\n        color=\"translucent\"\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => selectCategory(index)}\n        ariaLabel={category.name}\n      >\n        <Icon name={icon} />\n      </Button>\n    );\n  }\n\n  const containerClassName = buildClassName('EmojiPicker', className);\n\n  if (!shouldRenderContent) {\n    return (\n      <div className={containerClassName}>\n        <Loading />\n      </div>\n    );\n  }\n\n  const headerClassName = buildClassName(\n    'EmojiPicker-header',\n    !shouldHideTopBorder && 'with-top-border',\n  );\n\n  return (\n    <div className={containerClassName}>\n      <div\n        ref={headerRef}\n        className={headerClassName}\n        dir={lang.isRtl ? 'rtl' : undefined}\n      >\n        {allCategories.map(renderCategoryButton)}\n      </div>\n      <div\n        ref={containerRef}\n        onScroll={handleContentScroll}\n        className={buildClassName('EmojiPicker-main', IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {allCategories.map((category, i) => (\n          <EmojiCategory\n            category={category}\n            index={i}\n            allEmojis={emojis}\n            observeIntersection={observeIntersection}\n            shouldRender={activeCategoryIndex >= i - 1 && activeCategoryIndex <= i + 1}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nasync function ensureEmojiData() {\n  if (!emojiDataPromise) {\n    emojiDataPromise = import('emoji-data-ios/emoji-data.json');\n    emojiRawData = (await emojiDataPromise).default;\n\n    emojiData = uncompressEmoji(emojiRawData);\n  }\n\n  return emojiDataPromise;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => pick(global, ['recentEmojis']),\n)(EmojiPicker));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../lib/teact/teact';\n\nimport type { ApiVideo } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { getVideoMediaHash, getVideoPreviewMediaHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\nimport { preventMessageInputBlurWithBubbling } from '../middle/helpers/preventMessageInputBlur';\n\nimport useBuffering from '../../hooks/useBuffering';\nimport useCanvasBlur from '../../hooks/useCanvasBlur';\nimport useContextMenuHandlers from '../../hooks/useContextMenuHandlers';\nimport { useIsIntersecting } from '../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useMedia from '../../hooks/useMedia';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Menu from '../ui/Menu';\nimport MenuItem from '../ui/MenuItem';\nimport OptimizedVideo from '../ui/OptimizedVideo';\nimport Spinner from '../ui/Spinner';\nimport Icon from './icons/Icon';\n\nimport './GifButton.scss';\n\ntype OwnProps = {\n  gif: ApiVideo;\n  observeIntersection: ObserveFn;\n  isDisabled?: boolean;\n  className?: string;\n  onClick?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onUnsaveClick?: (gif: ApiVideo) => void;\n  isSavedMessages?: boolean;\n};\n\nconst GifButton: FC<OwnProps> = ({\n  gif,\n  isDisabled,\n  className,\n  observeIntersection,\n  onClick,\n  onUnsaveClick,\n  isSavedMessages,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const ref = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const isIntersecting = useIsIntersecting(ref, observeIntersection);\n  const loadAndPlay = isIntersecting && !isDisabled;\n  const previewHash = !gif.hasVideoPreview && gif.thumbnail && getVideoMediaHash(gif, 'pictogram');\n  const previewBlobUrl = useMedia(previewHash, !loadAndPlay);\n\n  const [withThumb] = useState(gif.thumbnail?.dataUri && !previewBlobUrl);\n  const thumbRef = useCanvasBlur(gif.thumbnail?.dataUri, !withThumb);\n\n  const videoHash = getVideoPreviewMediaHash(gif) || getVideoMediaHash(gif, 'full');\n  const videoData = useMedia(videoHash, !loadAndPlay);\n\n  const shouldRenderVideo = Boolean(loadAndPlay && videoData);\n  const { isBuffered, bufferingHandlers } = useBuffering(true);\n  const shouldRenderSpinner = loadAndPlay && !isBuffered;\n  const isVideoReady = loadAndPlay && isBuffered;\n\n  const {\n    isContextMenuOpen, contextMenuAnchor,\n    handleBeforeContextMenu, handleContextMenu,\n    handleContextMenuClose, handleContextMenuHide,\n  } = useContextMenuHandlers(ref);\n\n  const getTriggerElement = useLastCallback(() => ref.current);\n  const getRootElement = useLastCallback(() => ref.current!.closest('.custom-scroll, .no-scrollbar'));\n  const getMenuElement = useLastCallback(() => ref.current!.querySelector('.gif-context-menu .bubble'));\n\n  const handleClick = useLastCallback(() => {\n    if (isContextMenuOpen || !onClick) return;\n    onClick({\n      ...gif,\n      blobUrl: videoData,\n    });\n  });\n\n  const handleUnsaveClick = useLastCallback((e: React.MouseEvent) => {\n    e.stopPropagation();\n    e.preventDefault();\n    onUnsaveClick!(gif);\n  });\n\n  const handleContextDelete = useLastCallback(() => {\n    onUnsaveClick?.(gif);\n  });\n\n  const handleSendQuiet = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, true);\n  });\n\n  const handleSendScheduled = useLastCallback(() => {\n    onClick!({\n      ...gif,\n      blobUrl: videoData,\n    }, undefined, true);\n  });\n\n  const handleMouseDown = useLastCallback((e: React.MouseEvent<HTMLElement>) => {\n    preventMessageInputBlurWithBubbling(e);\n    handleBeforeContextMenu(e);\n  });\n\n  useEffect(() => {\n    if (isDisabled) handleContextMenuClose();\n  }, [handleContextMenuClose, isDisabled]);\n\n  const fullClassName = buildClassName(\n    'GifButton',\n    gif.width && gif.height && gif.width < gif.height ? 'vertical' : 'horizontal',\n    onClick && 'interactive',\n    className,\n  );\n\n  return (\n    <div\n      ref={ref}\n      className={fullClassName}\n      onMouseDown={handleMouseDown}\n      onClick={handleClick}\n      onContextMenu={handleContextMenu}\n    >\n      {!IS_TOUCH_ENV && onUnsaveClick && (\n        <Button\n          className=\"gif-unsave-button\"\n          color=\"dark\"\n          pill\n          noFastClick\n          onClick={handleUnsaveClick}\n        >\n          <Icon name=\"close\" className=\"gif-unsave-button-icon\" />\n        </Button>\n      )}\n      {withThumb && (\n        <canvas\n          ref={thumbRef}\n          className=\"thumbnail\"\n        />\n      )}\n      {previewBlobUrl && !isVideoReady && (\n        <img\n          src={previewBlobUrl}\n          alt=\"\"\n          className=\"preview\"\n          draggable={false}\n        />\n      )}\n      {shouldRenderVideo && (\n        <OptimizedVideo\n          canPlay\n          src={videoData}\n          autoPlay\n          loop\n          muted\n          disablePictureInPicture\n          playsInline\n          preload=\"none\"\n          // eslint-disable-next-line react/jsx-props-no-spreading\n          {...bufferingHandlers}\n        />\n      )}\n      {shouldRenderSpinner && (\n        <Spinner color={previewBlobUrl || withThumb ? 'white' : 'black'} />\n      )}\n      {onClick && contextMenuAnchor !== undefined && (\n        <Menu\n          isOpen={isContextMenuOpen}\n          anchor={contextMenuAnchor}\n          getTriggerElement={getTriggerElement}\n          getRootElement={getRootElement}\n          getMenuElement={getMenuElement}\n          className=\"gif-context-menu\"\n          autoClose\n          onClose={handleContextMenuClose}\n          onCloseAnimationEnd={handleContextMenuHide}\n        >\n          {!isSavedMessages && <MenuItem onClick={handleSendQuiet} icon=\"mute\">{lang('SendWithoutSound')}</MenuItem>}\n          <MenuItem onClick={handleSendScheduled} icon=\"calendar\">\n            {lang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n          {onUnsaveClick && (\n            <MenuItem destructive icon=\"delete\" onClick={handleContextDelete}>{lang('Delete')}</MenuItem>\n          )}\n        </Menu>\n      )}\n    </div>\n  );\n};\n\nexport default memo(GifButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiVideo } from '../../../api/types';\n\nimport { SLIDE_TRANSITION_DURATION } from '../../../config';\nimport { selectCurrentMessageList, selectIsChatWithSelf } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useAsyncRendering from '../../right/hooks/useAsyncRendering';\n\nimport GifButton from '../../common/GifButton';\nimport Loading from '../../ui/Loading';\n\nimport './GifPicker.scss';\n\ntype OwnProps = {\n  className: string;\n  loadAndPlay: boolean;\n  canSendGifs?: boolean;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\ntype StateProps = {\n  savedGifs?: ApiVideo[];\n  isSavedMessages?: boolean;\n};\n\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifPicker: FC<OwnProps & StateProps> = ({\n  className,\n  loadAndPlay,\n  canSendGifs,\n  savedGifs,\n  isSavedMessages,\n  onGifSelect,\n}) => {\n  const { loadSavedGifs, saveGif } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  useEffect(() => {\n    if (loadAndPlay) {\n      loadSavedGifs();\n    }\n  }, [loadAndPlay, loadSavedGifs]);\n\n  const handleUnsaveClick = useLastCallback((gif: ApiVideo) => {\n    saveGif({ gif, shouldUnsave: true });\n  });\n\n  const canRenderContents = useAsyncRendering([], SLIDE_TRANSITION_DURATION);\n\n  return (\n    <div>\n      <div\n        ref={containerRef}\n        className={buildClassName('GifPicker', className, IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll')}\n      >\n        {!canSendGifs ? (\n          <div className=\"picker-disabled\">Sending GIFs is not allowed in this chat.</div>\n        ) : canRenderContents && savedGifs && savedGifs.length ? (\n          savedGifs.map((gif) => (\n            <GifButton\n              key={gif.id}\n              gif={gif}\n              observeIntersection={observeIntersection}\n              isDisabled={!loadAndPlay}\n              onClick={canSendGifs ? onGifSelect : undefined}\n              onUnsaveClick={handleUnsaveClick}\n              isSavedMessages={isSavedMessages}\n            />\n          ))\n        ) : canRenderContents && savedGifs ? (\n          <div className=\"picker-disabled\">No saved GIFs.</div>\n        ) : (\n          <Loading />\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { chatId } = selectCurrentMessageList(global) || {};\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    return {\n      savedGifs: global.gifs.saved.gifs,\n      isSavedMessages,\n    };\n  },\n)(GifPicker));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\ntype OwnProps = {\n  activeTab: SymbolMenuTabs;\n  onSwitchTab: (tab: SymbolMenuTabs) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n  canSearch?: boolean;\n};\n\nexport enum SymbolMenuTabs {\n  'AllEmoji',\n  'Emoji',\n  'CustomEmoji',\n  'Stickers',\n  'GIFs',\n}\n\nexport const SYMBOL_MENU_TAB_TITLES: Record<SymbolMenuTabs, string> = {\n  [SymbolMenuTabs.AllEmoji]: 'Emoji',\n  [SymbolMenuTabs.Emoji]: 'Emoji',\n  [SymbolMenuTabs.CustomEmoji]: 'StickersList.EmojiItem',\n  [SymbolMenuTabs.Stickers]: 'AccDescrStickers',\n  [SymbolMenuTabs.GIFs]: 'GifsTab',\n};\n\nconst SYMBOL_MENU_TAB_ICONS = {\n  [SymbolMenuTabs.AllEmoji]: 'icon-smile',\n  [SymbolMenuTabs.Emoji]: 'icon-smile',\n  [SymbolMenuTabs.CustomEmoji]: 'icon-favorite',\n  [SymbolMenuTabs.Stickers]: 'icon-stickers',\n  [SymbolMenuTabs.GIFs]: 'icon-gifs',\n};\n\nconst SymbolMenuFooter: FC<OwnProps> = ({\n  activeTab, onSwitchTab, onRemoveSymbol, onSearchOpen, isAttachmentModal,\n  canSendPlainText, canSearch,\n}) => {\n  const lang = useOldLang();\n\n  function renderTabButton(tab: SymbolMenuTabs) {\n    return (\n      <Button\n        className={`symbol-tab-button ${activeTab === tab ? 'activated' : ''}`}\n        // eslint-disable-next-line react/jsx-no-bind\n        onClick={() => onSwitchTab(tab)}\n        ariaLabel={lang(SYMBOL_MENU_TAB_TITLES[tab])}\n        round\n        faded\n        color=\"translucent\"\n      >\n        <i className={buildClassName('icon', SYMBOL_MENU_TAB_ICONS[tab])} />\n      </Button>\n    );\n  }\n\n  const handleSearchOpen = useLastCallback(() => {\n    onSearchOpen(activeTab === SymbolMenuTabs.Stickers ? 'stickers' : 'gifs');\n  });\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  return (\n    <div className=\"SymbolMenu-footer\" onClick={stopPropagation} dir={lang.isRtl ? 'rtl' : undefined}>\n      {activeTab !== SymbolMenuTabs.Emoji && activeTab !== SymbolMenuTabs.CustomEmoji && canSearch && (\n        <Button\n          className=\"symbol-search-button\"\n          ariaLabel={activeTab === SymbolMenuTabs.Stickers ? 'Search Stickers' : 'Search GIFs'}\n          round\n          faded\n          color=\"translucent\"\n          onClick={handleSearchOpen}\n        >\n          <Icon name=\"search\" />\n        </Button>\n      )}\n\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.AllEmoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.Emoji)}\n      {canSendPlainText && renderTabButton(SymbolMenuTabs.CustomEmoji)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.Stickers)}\n      {!isAttachmentModal && renderTabButton(SymbolMenuTabs.GIFs)}\n\n      {(activeTab === SymbolMenuTabs.Emoji\n      || activeTab === SymbolMenuTabs.CustomEmoji\n      || activeTab === SymbolMenuTabs.AllEmoji) && (\n        <Button\n          className=\"symbol-delete-button\"\n          onClick={onRemoveSymbol}\n          ariaLabel=\"Remove Symbol\"\n          round\n          faded\n          color=\"translucent\"\n        >\n          <Icon name=\"delete-left\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(SymbolMenuFooter);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useLayoutEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker, ApiVideo } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\nimport type { ThreadId } from '../../../types';\nimport type { MenuPositionOptions } from '../../ui/Menu';\n\nimport { requestMutation } from '../../../lib/fasterdom/fasterdom';\nimport { selectIsContextMenuTranslucent, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport AllEmojiPicker from '../../common/AllEmojiPicker';\nimport CustomEmojiPicker from '../../common/CustomEmojiPicker';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Menu from '../../ui/Menu';\nimport Portal from '../../ui/Portal';\nimport Transition from '../../ui/Transition';\nimport EmojiPicker from './EmojiPicker';\nimport GifPicker from './GifPicker';\nimport StickerPicker from './StickerPicker';\nimport SymbolMenuFooter, { SYMBOL_MENU_TAB_TITLES, SymbolMenuTabs } from './SymbolMenuFooter';\n\nimport './SymbolMenu.scss';\n\nconst ANIMATION_DURATION = 350;\nconst STICKERS_TAB_INDEX = 2;\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  canSendStickers?: boolean;\n  canSendGifs?: boolean;\n  isMessageComposer?: boolean;\n  idPrefix: string;\n  onLoad: () => void;\n  onClose: () => void;\n  onEmojiSelect: (emoji: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onStickerSelect?: (\n    sticker: ApiSticker,\n    isSilent?: boolean,\n    shouldSchedule?: boolean,\n    shouldPreserveInput?: boolean,\n    canUpdateStickerSetsOrder?: boolean,\n  ) => void;\n  onGifSelect?: (gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onRemoveSymbol: () => void;\n  onSearchOpen: (type: 'stickers' | 'gifs') => void;\n  addRecentEmoji: GlobalActions['addRecentEmoji'];\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  className?: string;\n  isAttachmentModal?: boolean;\n  canSendPlainText?: boolean;\n}\n& MenuPositionOptions;\n\ntype StateProps = {\n  isLeftColumnShown: boolean;\n  isBackgroundTranslucent?: boolean;\n};\n\nlet isActivated = false;\n\nconst SymbolMenu: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  canSendStickers,\n  canSendGifs,\n  isMessageComposer,\n  isLeftColumnShown,\n  idPrefix,\n  isAttachmentModal,\n  canSendPlainText,\n  className,\n  isBackgroundTranslucent,\n  onLoad,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  onStickerSelect,\n  onGifSelect,\n  onRemoveSymbol,\n  onSearchOpen,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n  ...menuPositionOptions\n}) => {\n  const [activeTab, setActiveTab] = useState<number>(0);\n  const [recentEmojis, setRecentEmojis] = useState<string[]>([]);\n  const [recentCustomEmojis, setRecentCustomEmojis] = useState<string[]>([]);\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, onClose, false, false);\n\n  const lang = useOldLang();\n\n  if (!isActivated && isOpen) {\n    isActivated = true;\n  }\n\n  useEffect(() => {\n    onLoad();\n  }, [onLoad]);\n\n  // If we can't send plain text, we should always show the stickers tab\n  useEffect(() => {\n    if (canSendPlainText) return;\n    setActiveTab(STICKERS_TAB_INDEX);\n  }, [canSendPlainText]);\n\n  useLayoutEffect(() => {\n    if (!isMobile || !isOpen || isAttachmentModal) {\n      return undefined;\n    }\n\n    document.body.classList.add('enable-symbol-menu-transforms');\n    document.body.classList.add('is-symbol-menu-open');\n\n    return () => {\n      document.body.classList.remove('is-symbol-menu-open');\n\n      setTimeout(() => {\n        requestMutation(() => {\n          document.body.classList.remove('enable-symbol-menu-transforms');\n        });\n      }, ANIMATION_DURATION);\n    };\n  }, [isAttachmentModal, isMobile, isOpen]);\n\n  const recentEmojisRef = useRef(recentEmojis);\n  recentEmojisRef.current = recentEmojis;\n  useEffect(() => {\n    if (!recentEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentEmojisRef.current.forEach((name) => {\n      addRecentEmoji({ emoji: name });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentEmoji]);\n\n  const handleEmojiSelect = useLastCallback((emoji: string, name: string) => {\n    setRecentEmojis((emojis) => [...emojis, name]);\n\n    onEmojiSelect(emoji);\n  });\n\n  const recentCustomEmojisRef = useRef(recentCustomEmojis);\n  recentCustomEmojisRef.current = recentCustomEmojis;\n  useEffect(() => {\n    if (!recentCustomEmojisRef.current.length || isOpen) {\n      return;\n    }\n\n    recentCustomEmojisRef.current.forEach((documentId) => {\n      addRecentCustomEmoji({\n        documentId,\n      });\n    });\n\n    setRecentEmojis([]);\n  }, [isOpen, addRecentCustomEmoji]);\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    setRecentCustomEmojis((ids) => [...ids, emoji.id]);\n\n    onCustomEmojiSelect(emoji);\n  });\n\n  const handleSearch = useLastCallback((type: 'stickers' | 'gifs') => {\n    onClose();\n    onSearchOpen(type);\n  });\n\n  const handleStickerSelect = useLastCallback((\n    sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean, canUpdateStickerSetsOrder?: boolean,\n  ) => {\n    onStickerSelect?.(sticker, isSilent, shouldSchedule, true, canUpdateStickerSetsOrder);\n  });\n\n  function renderContent(isActive: boolean, isFrom: boolean) {\n    switch (activeTab) {\n      case SymbolMenuTabs.AllEmoji:\n        return (\n          <AllEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Emoji:\n        return (\n          <EmojiPicker\n            className=\"picker-tab\"\n            onEmojiSelect={handleEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.CustomEmoji:\n        return (\n          <CustomEmojiPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            idPrefix={idPrefix}\n            loadAndPlay={isOpen && (isActive || isFrom)}\n            chatId={chatId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n          />\n        );\n      case SymbolMenuTabs.Stickers:\n        return (\n          <StickerPicker\n            className=\"picker-tab\"\n            isHidden={!isOpen || !isActive}\n            loadAndPlay={canSendStickers ? isOpen && (isActive || isFrom) : false}\n            idPrefix={idPrefix}\n            canSendStickers={canSendStickers}\n            noContextMenus={!isMessageComposer}\n            chatId={chatId}\n            threadId={threadId}\n            isTranslucent={!isMobile && isBackgroundTranslucent}\n            onStickerSelect={handleStickerSelect}\n          />\n        );\n      case SymbolMenuTabs.GIFs:\n        return (\n          <GifPicker\n            className=\"picker-tab\"\n            loadAndPlay={canSendGifs ? isOpen && (isActive || isFrom) : false}\n            canSendGifs={canSendGifs}\n            onGifSelect={onGifSelect}\n          />\n        );\n    }\n\n    return undefined;\n  }\n\n  function stopPropagation(event: any) {\n    event.stopPropagation();\n  }\n\n  const content = (\n    <>\n      <div className=\"SymbolMenu-main\" onClick={stopPropagation}>\n        {isActivated && (\n          <Transition\n            name=\"slide\"\n            activeKey={activeTab}\n            renderCount={Object.values(SYMBOL_MENU_TAB_TITLES).length}\n          >\n            {renderContent}\n          </Transition>\n        )}\n      </div>\n      {isMobile && (\n        <Button\n          round\n          faded\n          color=\"translucent\"\n          ariaLabel={lang('Close')}\n          className=\"symbol-close-button\"\n          size=\"tiny\"\n          onClick={onClose}\n        >\n          <Icon name=\"close\" />\n        </Button>\n      )}\n      <SymbolMenuFooter\n        activeTab={activeTab}\n        onSwitchTab={setActiveTab}\n        onRemoveSymbol={onRemoveSymbol}\n        canSearch={isMessageComposer}\n        onSearchOpen={handleSearch}\n        isAttachmentModal={isAttachmentModal}\n        canSendPlainText={canSendPlainText}\n      />\n    </>\n  );\n\n  if (isMobile) {\n    if (!shouldRender) {\n      return undefined;\n    }\n\n    const mobileClassName = buildClassName(\n      'SymbolMenu mobile-menu',\n      transitionClassNames,\n      isLeftColumnShown && 'left-column-open',\n      isAttachmentModal && 'in-attachment-modal',\n      isMessageComposer && 'in-middle-column',\n    );\n\n    if (isAttachmentModal) {\n      return (\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      );\n    }\n\n    return (\n      <Portal>\n        <div className={mobileClassName}>\n          {content}\n        </div>\n      </Portal>\n    );\n  }\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      onClose={onClose}\n      withPortal={isAttachmentModal}\n      className={buildClassName('SymbolMenu', className)}\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...(isAttachmentModal ? menuPositionOptions : {\n        positionX: 'left',\n        positionY: 'bottom',\n      })}\n    >\n      {content}\n    </Menu>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    return {\n      isLeftColumnShown: selectTabState(global).isLeftColumnShown,\n      isBackgroundTranslucent: selectIsContextMenuTranslucent(global),\n    };\n  },\n)(SymbolMenu));\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport ListItem from '../../ui/ListItem';\n\nimport './ChatCommand.scss';\n\ntype OwnProps<T = undefined> = {\n  command: string;\n  description: string;\n  peer?: ApiUser;\n  withAvatar?: boolean;\n  focus?: boolean;\n  clickArg: T;\n  onClick: (arg: T) => void;\n};\n\n// eslint-disable-next-line @typescript-eslint/comma-dangle\nconst ChatCommand = <T,>({\n  withAvatar,\n  focus,\n  command,\n  description,\n  peer,\n  clickArg,\n  onClick,\n}: OwnProps<T>) => {\n  const handleClick = useLastCallback(() => {\n    onClick(clickArg);\n  });\n\n  return (\n    <ListItem\n      key={command}\n      className={buildClassName('BotCommand chat-item-clickable scroll-item', withAvatar && 'with-avatar')}\n      multiline\n      onClick={handleClick}\n      focus={focus}\n    >\n      {withAvatar && (\n        <Avatar size=\"small\" peer={peer} />\n      )}\n      <div className=\"content-inner\">\n        <span className=\"title\">/{command}</span>\n        <span className=\"subtitle\">{renderText(description)}</span>\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(ChatCommand);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type {\n  ApiBotCommand, ApiMessage, ApiQuickReply, ApiUser,\n} from '../../../api/types';\nimport type { Signal } from '../../../util/signals';\n\nimport buildClassName from '../../../util/buildClassName';\nimport freezeWhenClosed from '../../../util/hoc/freezeWhenClosed';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport ChatCommand from './ChatCommand';\n\nimport styles from './ChatCommandTooltip.module.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId: string;\n  withUsername?: boolean;\n  botCommands?: ApiBotCommand[];\n  quickReplies?: ApiQuickReply[];\n  quickReplyMessages?: Record<number, ApiMessage>;\n  self: ApiUser;\n  getHtml: Signal<string>;\n  onClick: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n};\n\ntype QuickReplyWithDescription = {\n  id: number;\n  command: string;\n  description: string;\n};\n\nconst ChatCommandTooltip: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  withUsername,\n  botCommands,\n  quickReplies,\n  quickReplyMessages,\n  self,\n  getHtml,\n  onClick,\n  onClose,\n}) => {\n  const { sendBotCommand, sendQuickReply } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n\n  const handleSendCommand = useLastCallback(({ botId, command }: ApiBotCommand) => {\n    // No need for expensive global updates on users and chats, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const bot = usersById[botId];\n\n    sendBotCommand({\n      command: `/${command}${withUsername && bot ? `@${bot.usernames![0].username}` : ''}`,\n    });\n    onClick();\n  });\n\n  const handleSendQuickReply = useLastCallback((id: number) => {\n    sendQuickReply({ chatId, quickReplyId: id });\n    onClick();\n  });\n\n  const quickRepliesWithDescription = useMemo(() => {\n    if (!quickReplies?.length || !quickReplyMessages) return undefined;\n    return quickReplies.map((reply) => {\n      const message = quickReplyMessages[reply.topMessageId];\n      return {\n        id: reply.id,\n        command: reply.shortcut,\n        description: message?.content.text?.text || '',\n      } satisfies QuickReplyWithDescription;\n    });\n  }, [quickReplies, quickReplyMessages]);\n\n  const handleKeyboardSelect = useLastCallback((item: ApiBotCommand | QuickReplyWithDescription) => {\n    if (!item.command.startsWith(getHtml().slice(1))) {\n      return false;\n    }\n\n    if ('id' in item) {\n      handleSendQuickReply(item.id);\n    } else {\n      handleSendCommand(item);\n    }\n\n    return true;\n  });\n\n  const keyboardNavigationItems = useMemo(() => {\n    if (!botCommands && !quickRepliesWithDescription) return undefined;\n    return ([] as (ApiBotCommand | QuickReplyWithDescription)[])\n      .concat(quickRepliesWithDescription || [], botCommands || []);\n  }, [botCommands, quickRepliesWithDescription]);\n\n  const selectedCommandIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: keyboardNavigationItems,\n    onSelect: handleKeyboardSelect,\n    onClose,\n  });\n\n  const isEmpty = (botCommands && !botCommands.length) || (quickReplies && !quickReplies.length);\n\n  useEffect(() => {\n    if (isEmpty) {\n      onClose();\n    }\n  }, [isEmpty, onClose]);\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedCommandIndex, containerRef);\n  }, [selectedCommandIndex]);\n\n  if (!shouldRender || isEmpty) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll',\n    transitionClassNames,\n  );\n\n  return (\n    <div className={className} ref={containerRef}>\n      {quickRepliesWithDescription?.map((reply, index) => (\n        <ChatCommand\n          key={`quickReply_${reply.id}`}\n          command={reply.command}\n          description={reply.description}\n          peer={self}\n          withAvatar\n          clickArg={reply.id}\n          onClick={handleSendQuickReply}\n          focus={selectedCommandIndex === index}\n        />\n      ))}\n      {botCommands?.map((command, index) => (\n        <ChatCommand\n          key={`${command.botId}_${command.command}`}\n          command={command.command}\n          description={command.description}\n          // No need for expensive global updates on users and chats, so we avoid them\n          peer={getGlobal().users.byId[command.botId]}\n          withAvatar\n          clickArg={command}\n          onClick={handleSendCommand}\n          focus={selectedCommandIndex + (quickRepliesWithDescription?.length || 0) === index}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default memo(freezeWhenClosed(ChatCommandTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"iaTB59vy\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiBotCommand } from '../../../api/types';\n\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useAppLayout from '../../../hooks/useAppLayout';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\n\nimport Menu from '../../ui/Menu';\nimport ChatCommand from './ChatCommand';\n\nimport './BotCommandMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botCommands: ApiBotCommand[];\n  onClose: NoneToVoidFunction;\n};\n\nconst BotCommandMenu: FC<OwnProps> = ({\n  isOpen, botCommands, onClose,\n}) => {\n  const { sendBotCommand } = getActions();\n  const { isMobile } = useAppLayout();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose, undefined, isMobile);\n\n  const handleClick = useLastCallback((command: string) => {\n    sendBotCommand({\n      command: `/${command}`,\n    });\n    onClose();\n  });\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"BotCommandMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      {botCommands.map((botCommand) => (\n        <ChatCommand\n          key={botCommand.command}\n          command={botCommand.command}\n          description={botCommand.description}\n          clickArg={botCommand.command}\n          onClick={handleClick}\n        />\n      ))}\n    </Menu>\n  );\n};\n\nexport default memo(BotCommandMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ThreadId } from '../../../types';\n\nimport { STICKER_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useSendMessageAction from '../../../hooks/useSendMessageAction';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport './StickerTooltip.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  threadId?: ThreadId;\n  isOpen: boolean;\n  onStickerSelect: (sticker: ApiSticker, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  stickers?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst StickerTooltip: FC<OwnProps & StateProps> = ({\n  chatId,\n  threadId,\n  isOpen,\n  onStickerSelect,\n  onClose,\n  stickers,\n  isSavedMessages,\n  isCurrentUserPremium,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(stickers, true);\n  const displayedStickers = stickers || prevStickers;\n  const sendMessageAction = useSendMessageAction(chatId, threadId);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleMouseMove = () => {\n    sendMessageAction({ type: 'chooseSticker' });\n  };\n\n  const className = buildClassName(\n    'StickerTooltip composer-tooltip custom-scroll',\n    transitionClassNames,\n    !(displayedStickers?.length) && 'hidden',\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      onMouseMove={handleMouseMove}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            size={STICKER_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={isOpen ? onStickerSelect : undefined}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers } = global.stickers.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n    return { stickers, isSavedMessages, isCurrentUserPremium };\n  },\n)(StickerTooltip));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"_8sFuAomM\",\"emojiButton\":\"crWzZ2jr\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { GlobalActions } from '../../../global';\n\nimport { COMPOSER_EMOJI_SIZE_PICKER } from '../../../config';\nimport { selectIsChatWithSelf, selectIsCurrentUserPremium } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\n\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport StickerButton from '../../common/StickerButton';\nimport Loading from '../../ui/Loading';\n\nimport styles from './CustomEmojiTooltip.module.scss';\n\nexport type OwnProps = {\n  chatId: string;\n  isOpen: boolean;\n  addRecentCustomEmoji: GlobalActions['addRecentCustomEmoji'];\n  onCustomEmojiSelect: (customEmoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  noPlay?: boolean;\n};\n\ntype StateProps = {\n  customEmoji?: ApiSticker[];\n  isSavedMessages?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst CustomEmojiTooltip: FC<OwnProps & StateProps> = ({\n  isOpen,\n  addRecentCustomEmoji,\n  onCustomEmojiSelect,\n  onClose,\n  customEmoji,\n  isSavedMessages,\n  isCurrentUserPremium,\n  noPlay,\n}) => {\n  const { clearCustomEmojiForEmoji } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const prevStickers = usePreviousDeprecated(customEmoji, true);\n  const displayedStickers = customEmoji || prevStickers;\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n\n  const handleCustomEmojiSelect = useLastCallback((ce: ApiSticker) => {\n    if (!isOpen) return;\n    onCustomEmojiSelect(ce);\n    addRecentCustomEmoji({\n      documentId: ce.id,\n    });\n    clearCustomEmojiForEmoji();\n  });\n\n  const className = buildClassName(\n    styles.root,\n    'composer-tooltip custom-scroll-x',\n    transitionClassNames,\n    !displayedStickers?.length && styles.hidden,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && displayedStickers ? (\n        displayedStickers.map((sticker) => (\n          <StickerButton\n            key={sticker.id}\n            sticker={sticker}\n            className={styles.emojiButton}\n            size={COMPOSER_EMOJI_SIZE_PICKER}\n            observeIntersection={observeIntersection}\n            onClick={handleCustomEmojiSelect}\n            clickArg={sticker}\n            isSavedMessages={isSavedMessages}\n            canViewSet\n            isCurrentUserPremium={isCurrentUserPremium}\n            noPlay={noPlay}\n          />\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { stickers: customEmoji } = global.customEmojis.forEmoji;\n    const isSavedMessages = selectIsChatWithSelf(global, chatId);\n    const isCurrentUserPremium = selectIsCurrentUserPremium(global);\n\n    return { customEmoji, isSavedMessages, isCurrentUserPremium };\n  },\n)(CustomEmojiTooltip));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiAvailableReaction,\n  ApiReaction,\n} from '../../../api/types';\nimport type { IAnchorPosition } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Menu from '../../ui/Menu';\nimport MenuItem from '../../ui/MenuItem';\nimport ReactionSelector from '../message/reactions/ReactionSelector';\n\nimport './CustomSendMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  isOpenToBottom?: boolean;\n  isSavedMessages?: boolean;\n  canSchedule?: boolean;\n  canScheduleUntilOnline?: boolean;\n  onSendSilent?: NoneToVoidFunction;\n  onSendSchedule?: NoneToVoidFunction;\n  onSendWhenOnline?: NoneToVoidFunction;\n  onRemoveEffect?: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  onCloseAnimationEnd?: NoneToVoidFunction;\n  chatId?: string;\n  withEffects?: boolean;\n  hasCurrentEffect?: boolean;\n  effectReactions?: ApiReaction[];\n  allAvailableReactions?: ApiAvailableReaction[];\n  onToggleReaction?: (reaction: ApiReaction) => void;\n  canBuyPremium?: boolean;\n  isCurrentUserPremium?: boolean;\n  isInSavedMessages?: boolean;\n  isInStoryViewer?: boolean;\n  canPlayAnimatedEmojis?: boolean;\n};\n\nconst ANIMATION_DURATION = 200;\n\nconst CustomSendMenu: FC<OwnProps> = ({\n  isOpen,\n  isOpenToBottom = false,\n  isSavedMessages,\n  canSchedule,\n  canScheduleUntilOnline,\n  onSendSilent,\n  onSendSchedule,\n  onSendWhenOnline,\n  onRemoveEffect,\n  onClose,\n  onCloseAnimationEnd,\n  chatId,\n  withEffects,\n  hasCurrentEffect,\n  effectReactions,\n  allAvailableReactions,\n  onToggleReaction,\n  canBuyPremium,\n  isCurrentUserPremium,\n  isInSavedMessages,\n  isInStoryViewer,\n  canPlayAnimatedEmojis,\n}) => {\n  const {\n    openEffectPicker,\n  } = getActions();\n\n  const [handleMouseEnter, handleMouseLeave] = useMouseInside(isOpen, onClose);\n  const [displayScheduleUntilOnline, setDisplayScheduleUntilOnline] = useState(false);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const [areItemsHidden, hideItems, showItems] = useFlag();\n\n  useEffectWithPrevDeps(([prevIsOpen]) => {\n    // Avoid context menu item shuffling when opened\n    if (isOpen && !prevIsOpen) {\n      showItems();\n      setDisplayScheduleUntilOnline(Boolean(canScheduleUntilOnline));\n    }\n  }, [isOpen, canScheduleUntilOnline]);\n\n  const [isReady, markIsReady, unmarkIsReady] = useFlag();\n\n  const handleOpenMessageEffectsPicker = useLastCallback((position: IAnchorPosition) => {\n    hideItems();\n    if (chatId) openEffectPicker({ chatId, position });\n  });\n\n  useEffect(() => {\n    if (!isOpen) {\n      unmarkIsReady();\n      return;\n    }\n\n    setTimeout(() => {\n      markIsReady();\n    }, ANIMATION_DURATION);\n  }, [isOpen, markIsReady, unmarkIsReady]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      autoClose\n      positionX=\"right\"\n      positionY={isOpenToBottom ? 'top' : 'bottom'}\n      className={buildClassName(\n        'CustomSendMenu', 'fluid', 'with-menu-transitions', withEffects && 'with-effects',\n      )}\n      onClose={onClose}\n      onCloseAnimationEnd={onCloseAnimationEnd}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n    >\n\n      {withEffects && !isInStoryViewer && (\n        <ReactionSelector\n          allAvailableReactions={allAvailableReactions}\n          effectReactions={effectReactions}\n          currentReactions={undefined}\n          onToggleReaction={onToggleReaction!}\n          isPrivate\n          isReady={isReady}\n          canBuyPremium={canBuyPremium}\n          isCurrentUserPremium={isCurrentUserPremium}\n          isInSavedMessages={isInSavedMessages}\n          isForEffects\n          canPlayAnimatedEmojis={canPlayAnimatedEmojis}\n          onShowMore={handleOpenMessageEffectsPicker}\n          onClose={onClose}\n          className={buildClassName(areItemsHidden && 'ReactionSelector-hidden')}\n        />\n      )}\n\n      <div\n        className={buildClassName(\n          'CustomSendMenu_items',\n          areItemsHidden && 'CustomSendMenu_items-hidden',\n        )}\n        dir={oldLang.isRtl ? 'rtl' : undefined}\n      >\n        {onSendSilent && <MenuItem icon=\"mute\" onClick={onSendSilent}>{oldLang('SendWithoutSound')}</MenuItem>}\n        {canSchedule && onSendSchedule && (\n          <MenuItem icon=\"schedule\" onClick={onSendSchedule}>\n            {oldLang(isSavedMessages ? 'SetReminder' : 'ScheduleMessage')}\n          </MenuItem>\n        )}\n        {canSchedule && onSendSchedule && displayScheduleUntilOnline && (\n          <MenuItem icon=\"user-online\" onClick={onSendWhenOnline}>\n            {oldLang('SendWhenOnline')}\n          </MenuItem>\n        )}\n        {withEffects && hasCurrentEffect && (\n          <MenuItem icon=\"delete\" onClick={onRemoveEffect}>\n            {lang('RemoveEffect')}\n          </MenuItem>\n        )}\n      </div>\n    </Menu>\n  );\n};\n\nexport default memo(CustomSendMenu);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\n\nimport type { IAnchorPosition } from '../../../types';\nimport { ApiMessageEntityTypes } from '../../../api/types';\n\nimport { EDITABLE_INPUT_ID } from '../../../config';\nimport { ensureProtocol } from '../../../util/browser/url';\nimport buildClassName from '../../../util/buildClassName';\nimport captureEscKeyListener from '../../../util/captureEscKeyListener';\nimport getKeyFromEvent from '../../../util/getKeyFromEvent';\nimport stopEvent from '../../../util/stopEvent';\nimport { INPUT_CUSTOM_EMOJI_SELECTOR } from './helpers/customEmoji';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport useVirtualBackdrop from '../../../hooks/useVirtualBackdrop';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\n\nimport './TextFormatter.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  anchorPosition?: IAnchorPosition;\n  selectedRange?: Range;\n  setSelectedRange: (range: Range) => void;\n  onClose: () => void;\n};\n\ninterface ISelectedTextFormats {\n  bold?: boolean;\n  italic?: boolean;\n  underline?: boolean;\n  strikethrough?: boolean;\n  monospace?: boolean;\n  spoiler?: boolean;\n  blockquote?: boolean;\n}\n\nconst TEXT_FORMAT_BY_TAG_NAME: Record<string, keyof ISelectedTextFormats> = {\n  B: 'bold',\n  STRONG: 'bold',\n  I: 'italic',\n  EM: 'italic',\n  U: 'underline',\n  DEL: 'strikethrough',\n  CODE: 'monospace',\n  SPAN: 'spoiler',\n  BLOCKQUOTE: 'blockquote',\n};\nconst fragmentEl = document.createElement('div');\n\nconst TextFormatter: FC<OwnProps> = ({\n  isOpen,\n  anchorPosition,\n  selectedRange,\n  setSelectedRange,\n  onClose,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const linkUrlInputRef = useRef<HTMLInputElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen);\n  const [isLinkControlOpen, openLinkControl, closeLinkControl] = useFlag();\n  const [linkUrl, setLinkUrl] = useState('');\n  const [isEditingLink, setIsEditingLink] = useState(false);\n  const [inputClassName, setInputClassName] = useState<string | undefined>();\n  const [selectedTextFormats, setSelectedTextFormats] = useState<ISelectedTextFormats>({});\n\n  useEffect(() => (isOpen ? captureEscKeyListener(onClose) : undefined), [isOpen, onClose]);\n  useVirtualBackdrop(\n    isOpen,\n    containerRef,\n    onClose,\n    true,\n  );\n\n  useEffect(() => {\n    if (isLinkControlOpen) {\n      linkUrlInputRef.current!.focus();\n    } else {\n      setLinkUrl('');\n      setIsEditingLink(false);\n    }\n  }, [isLinkControlOpen]);\n\n  useEffect(() => {\n    if (!shouldRender) {\n      closeLinkControl();\n      setSelectedTextFormats({});\n      setInputClassName(undefined);\n    }\n  }, [closeLinkControl, shouldRender]);\n\n  useEffect(() => {\n    if (!isOpen || !selectedRange) {\n      return;\n    }\n\n    const selectedFormats: ISelectedTextFormats = {};\n    let { parentElement } = selectedRange.commonAncestorContainer;\n    while (parentElement && parentElement.id !== EDITABLE_INPUT_ID) {\n      const textFormat = TEXT_FORMAT_BY_TAG_NAME[parentElement.tagName];\n      if (textFormat) {\n        selectedFormats[textFormat] = true;\n      }\n\n      parentElement = parentElement.parentElement;\n    }\n\n    setSelectedTextFormats(selectedFormats);\n  }, [isOpen, selectedRange, openLinkControl]);\n\n  const restoreSelection = useLastCallback(() => {\n    if (!selectedRange) {\n      return;\n    }\n\n    const selection = window.getSelection();\n    if (selection) {\n      selection.removeAllRanges();\n      selection.addRange(selectedRange);\n    }\n  });\n\n  const updateSelectedRange = useLastCallback(() => {\n    const selection = window.getSelection();\n    if (selection) {\n      setSelectedRange(selection.getRangeAt(0));\n    }\n  });\n\n  const getSelectedText = useLastCallback((shouldDropCustomEmoji?: boolean) => {\n    if (!selectedRange) {\n      return undefined;\n    }\n    fragmentEl.replaceChildren(selectedRange.cloneContents());\n    if (shouldDropCustomEmoji) {\n      fragmentEl.querySelectorAll(INPUT_CUSTOM_EMOJI_SELECTOR).forEach((el) => {\n        el.replaceWith(el.getAttribute('alt')!);\n      });\n    }\n    return fragmentEl.innerHTML;\n  });\n\n  const getSelectedElement = useLastCallback(() => {\n    if (!selectedRange) {\n      return undefined;\n    }\n\n    return selectedRange.commonAncestorContainer.parentElement;\n  });\n\n  function updateInputStyles() {\n    const input = linkUrlInputRef.current;\n    if (!input) {\n      return;\n    }\n\n    const { offsetWidth, scrollWidth, scrollLeft } = input;\n    if (scrollWidth <= offsetWidth) {\n      setInputClassName(undefined);\n      return;\n    }\n\n    let className = '';\n    if (scrollLeft < scrollWidth - offsetWidth) {\n      className = 'mask-right';\n    }\n    if (scrollLeft > 0) {\n      className += ' mask-left';\n    }\n\n    setInputClassName(className);\n  }\n\n  function handleLinkUrlChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setLinkUrl(e.target.value);\n    updateInputStyles();\n  }\n\n  function getFormatButtonClassName(key: keyof ISelectedTextFormats) {\n    if (selectedTextFormats[key]) {\n      return 'active';\n    }\n\n    if (['monospace', 'strikethrough', 'blockquote'].includes(key)) {\n      if (Object.keys(selectedTextFormats).some(\n        (fKey) => fKey !== key && Boolean(selectedTextFormats[fKey as keyof ISelectedTextFormats]),\n      )) {\n        return 'disabled';\n      }\n    } else if (selectedTextFormats.monospace || selectedTextFormats.strikethrough) {\n      return 'disabled';\n    }\n\n    return undefined;\n  }\n\n  const handleSpoilerText = useLastCallback(() => {\n    if (selectedTextFormats.spoiler) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.dataset.entityType !== ApiMessageEntityTypes.Spoiler\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        spoiler: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand(\n      'insertHTML', false, `<span class=\"spoiler\" data-entity-type=\"${ApiMessageEntityTypes.Spoiler}\">${text}</span>`,\n    );\n    onClose();\n  });\n\n  const handleBoldText = useLastCallback(() => {\n    setSelectedTextFormats((selectedFormats) => {\n      // Somehow re-applying 'bold' command to already bold text doesn't work\n      document.execCommand(selectedFormats.bold ? 'removeFormat' : 'bold');\n      Object.keys(selectedFormats).forEach((key) => {\n        if ((key === 'italic' || key === 'underline') && Boolean(selectedFormats[key])) {\n          document.execCommand(key);\n        }\n      });\n\n      updateSelectedRange();\n      return {\n        ...selectedFormats,\n        bold: !selectedFormats.bold,\n      };\n    });\n  });\n\n  const handleItalicText = useLastCallback(() => {\n    document.execCommand('italic');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      italic: !selectedFormats.italic,\n    }));\n  });\n\n  const handleUnderlineText = useLastCallback(() => {\n    document.execCommand('underline');\n    updateSelectedRange();\n    setSelectedTextFormats((selectedFormats) => ({\n      ...selectedFormats,\n      underline: !selectedFormats.underline,\n    }));\n  });\n\n  const handleStrikethroughText = useLastCallback(() => {\n    if (selectedTextFormats.strikethrough) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'DEL'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        strikethrough: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText();\n    document.execCommand('insertHTML', false, `<del>${text}</del>`);\n    onClose();\n  });\n\n  const handleMonospaceText = useLastCallback(() => {\n    if (selectedTextFormats.monospace) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'CODE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        monospace: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<code class=\"text-entity-code\" dir=\"auto\">${text}</code>`);\n    onClose();\n  });\n\n  const handleBlockquoteText = useLastCallback(() => {\n    if (selectedTextFormats.blockquote) {\n      const element = getSelectedElement();\n      if (\n        !selectedRange\n        || !element\n        || element.tagName !== 'BLOCKQUOTE'\n        || !element.textContent\n      ) {\n        return;\n      }\n\n      element.replaceWith(element.textContent);\n      setSelectedTextFormats((selectedFormats) => ({\n        ...selectedFormats,\n        blockquote: false,\n      }));\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    document.execCommand('insertHTML', false, `<blockquote class=\"blockquote\" dir=\"auto\">${text}</blockquote>`);\n    onClose();\n  });\n\n  const handleLinkUrlConfirm = useLastCallback(() => {\n    const formattedLinkUrl = (ensureProtocol(linkUrl) || '').split('%').map(encodeURI).join('%');\n\n    if (isEditingLink) {\n      const element = getSelectedElement();\n      if (!element || element.tagName !== 'A') {\n        return;\n      }\n\n      (element as HTMLAnchorElement).href = formattedLinkUrl;\n\n      onClose();\n\n      return;\n    }\n\n    const text = getSelectedText(true);\n    restoreSelection();\n    document.execCommand(\n      'insertHTML',\n      false,\n      `<a href=${formattedLinkUrl} class=\"text-entity-link\" dir=\"auto\">${text}</a>`,\n    );\n    onClose();\n  });\n\n  const handleKeyDown = useLastCallback((e: KeyboardEvent) => {\n    const HANDLERS_BY_KEY: Record<string, AnyToVoidFunction> = {\n      k: openLinkControl,\n      b: handleBoldText,\n      u: handleUnderlineText,\n      i: handleItalicText,\n      m: handleMonospaceText,\n      s: handleStrikethroughText,\n      p: handleSpoilerText,\n    };\n\n    const handler = HANDLERS_BY_KEY[getKeyFromEvent(e)];\n\n    if (\n      e.altKey\n      || !(e.ctrlKey || e.metaKey)\n      || !handler\n    ) {\n      return;\n    }\n\n    e.preventDefault();\n    e.stopPropagation();\n    handler();\n  });\n\n  useEffect(() => {\n    if (isOpen) {\n      document.addEventListener('keydown', handleKeyDown);\n    }\n\n    return () => document.removeEventListener('keydown', handleKeyDown);\n  }, [isOpen, handleKeyDown]);\n\n  const lang = useOldLang();\n\n  function handleContainerKeyDown(e: React.KeyboardEvent<HTMLDivElement>) {\n    if (e.key === 'Enter' && isLinkControlOpen) {\n      handleLinkUrlConfirm();\n      e.preventDefault();\n    }\n  }\n\n  if (!shouldRender) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'TextFormatter',\n    transitionClassNames,\n    isLinkControlOpen && 'link-control-shown',\n  );\n\n  const linkUrlConfirmClassName = buildClassName(\n    'TextFormatter-link-url-confirm',\n    Boolean(linkUrl.length) && 'shown',\n  );\n\n  const style = anchorPosition\n    ? `left: ${anchorPosition.x}px; top: ${anchorPosition.y}px;--text-formatter-left: ${anchorPosition.x}px;`\n    : '';\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n      style={style}\n      onKeyDown={handleContainerKeyDown}\n      // Prevents focus loss when clicking on the toolbar\n      onMouseDown={stopEvent}\n    >\n      <div className=\"TextFormatter-buttons\">\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Spoiler text\"\n          className={getFormatButtonClassName('spoiler')}\n          onClick={handleSpoilerText}\n        >\n          <Icon name=\"eye-crossed\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Bold text\"\n          className={getFormatButtonClassName('bold')}\n          onClick={handleBoldText}\n        >\n          <Icon name=\"bold\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Italic text\"\n          className={getFormatButtonClassName('italic')}\n          onClick={handleItalicText}\n        >\n          <Icon name=\"italic\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Underlined text\"\n          className={getFormatButtonClassName('underline')}\n          onClick={handleUnderlineText}\n        >\n          <Icon name=\"underlined\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Strikethrough text\"\n          className={getFormatButtonClassName('strikethrough')}\n          onClick={handleStrikethroughText}\n        >\n          <Icon name=\"strikethrough\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Monospace text\"\n          className={getFormatButtonClassName('monospace')}\n          onClick={handleMonospaceText}\n        >\n          <Icon name=\"monospace\" />\n        </Button>\n        <Button\n          color=\"translucent\"\n          ariaLabel=\"Blockquote text\"\n          className={getFormatButtonClassName('blockquote')}\n          onClick={handleBlockquoteText}\n        >\n          <Icon name=\"quote-text\" />\n        </Button>\n        <div className=\"TextFormatter-divider\" />\n        <Button color=\"translucent\" ariaLabel={lang('TextFormat.AddLinkTitle')} onClick={openLinkControl}>\n          <Icon name=\"link\" />\n        </Button>\n      </div>\n\n      <div className=\"TextFormatter-link-control\">\n        <div className=\"TextFormatter-buttons\">\n          <Button color=\"translucent\" ariaLabel={lang('Cancel')} onClick={closeLinkControl}>\n            <Icon name=\"arrow-left\" />\n          </Button>\n          <div className=\"TextFormatter-divider\" />\n\n          <div\n            className={buildClassName('TextFormatter-link-url-input-wrapper', inputClassName)}\n          >\n            <input\n              ref={linkUrlInputRef}\n              className=\"TextFormatter-link-url-input\"\n              type=\"text\"\n              value={linkUrl}\n              placeholder=\"Enter URL...\"\n              autoComplete=\"off\"\n              inputMode=\"url\"\n              dir=\"auto\"\n              onChange={handleLinkUrlChange}\n              onScroll={updateInputStyles}\n            />\n          </div>\n\n          <div className={linkUrlConfirmClassName}>\n            <div className=\"TextFormatter-divider\" />\n            <Button\n              color=\"translucent\"\n              ariaLabel={lang('Save')}\n              className=\"color-primary\"\n              onClick={handleLinkUrlConfirm}\n            >\n              <Icon name=\"check\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(TextFormatter);\n","export default function getKeyFromEvent(e: KeyboardEvent) {\n  const key = e.key || e.code;\n\n  return key.startsWith('Key') ? key.slice(3).toLowerCase() : key;\n}\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\nimport type { ObserveFn } from '../../../hooks/useIntersectionObserver';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport CustomEmoji from '../../common/CustomEmoji';\n\nimport './EmojiButton.scss';\n\nconst CUSTOM_EMOJI_SIZE = 32;\n\ntype OwnProps = {\n  emoji: ApiSticker;\n  focus?: boolean;\n  onClick?: (emoji: ApiSticker) => void;\n  observeIntersection?: ObserveFn;\n};\n\nconst CustomEmojiButton: FC<OwnProps> = ({\n  emoji, focus, onClick, observeIntersection,\n}) => {\n  const handleClick = useLastCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n    // Preventing safari from losing focus on Composer MessageInput\n    e.preventDefault();\n\n    onClick?.(emoji);\n  });\n\n  const className = buildClassName(\n    'EmojiButton',\n    focus && 'focus',\n  );\n\n  return (\n    <div\n      className={className}\n      onMouseDown={handleClick}\n      title={emoji.emoji}\n    >\n      <CustomEmoji\n        documentId={emoji.id}\n        size={CUSTOM_EMOJI_SIZE}\n        withSharedAnimation\n        shouldPreloadPreview\n        observeIntersectionForPlaying={observeIntersection}\n      />\n    </div>\n  );\n};\n\nexport default memo(CustomEmojiButton);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useRef } from '../../../lib/teact/teact';\n\nimport type { ApiSticker } from '../../../api/types';\n\nimport animateHorizontalScroll from '../../../util/animateHorizontalScroll';\nimport buildClassName from '../../../util/buildClassName';\nimport findInViewport from '../../../util/findInViewport';\nimport isFullyVisible from '../../../util/visibility/isFullyVisible';\n\nimport useEffectWithPrevDeps from '../../../hooks/useEffectWithPrevDeps';\nimport useHorizontalScroll from '../../../hooks/useHorizontalScroll';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePrevDuringAnimation from '../../../hooks/usePrevDuringAnimation';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Loading from '../../ui/Loading';\nimport CustomEmojiButton from './CustomEmojiButton';\nimport EmojiButton from './EmojiButton';\n\nimport './EmojiTooltip.scss';\n\nconst VIEWPORT_MARGIN = 8;\nconst EMOJI_BUTTON_WIDTH = 44;\nconst CLOSE_DURATION = 350;\n\nfunction setItemVisible(index: number, containerRef: Record<string, any>) {\n  const container = containerRef.current!;\n  if (!container) {\n    return;\n  }\n\n  const { visibleIndexes, allElements } = findInViewport(\n    container,\n    '.EmojiButton',\n    VIEWPORT_MARGIN,\n    true,\n    true,\n    true,\n  );\n\n  if (!allElements.length || !allElements[index]) {\n    return;\n  }\n  const first = visibleIndexes[0];\n  if (!visibleIndexes.includes(index)\n    || (index === first && !isFullyVisible(container, allElements[first], true))) {\n    const position = index > visibleIndexes[visibleIndexes.length - 1] ? 'start' : 'end';\n    const newLeft = position === 'start' ? index * EMOJI_BUTTON_WIDTH : 0;\n\n    animateHorizontalScroll(container, newLeft);\n  }\n}\n\nexport type OwnProps = {\n  isOpen: boolean;\n  emojis: Emoji[];\n  customEmojis: ApiSticker[];\n  onEmojiSelect: (text: string) => void;\n  onCustomEmojiSelect: (emoji: ApiSticker) => void;\n  onClose: NoneToVoidFunction;\n  addRecentEmoji: ({ emoji }: { emoji: string }) => void;\n  addRecentCustomEmoji: ({ documentId }: { documentId: string }) => void;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst EmojiTooltip: FC<OwnProps> = ({\n  isOpen,\n  emojis,\n  customEmojis,\n  onClose,\n  onEmojiSelect,\n  onCustomEmojiSelect,\n  addRecentEmoji,\n  addRecentCustomEmoji,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const listEmojis: (Emoji | ApiSticker)[] = usePrevDuringAnimation(\n    emojis.length ? [...customEmojis, ...emojis] : undefined, CLOSE_DURATION,\n  ) || [];\n\n  useHorizontalScroll(containerRef);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE, isDisabled: !isOpen });\n\n  const handleSelectEmoji = useLastCallback((emoji: Emoji) => {\n    onEmojiSelect(emoji.native);\n    addRecentEmoji({ emoji: emoji.id });\n  });\n\n  const handleCustomEmojiSelect = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const handleSelect = useLastCallback((emoji: Emoji | ApiSticker) => {\n    if ('native' in emoji) {\n      handleSelectEmoji(emoji);\n    } else {\n      handleCustomEmojiSelect(emoji);\n    }\n  });\n\n  const handleClick = useLastCallback((native: string, id: string) => {\n    onEmojiSelect(native);\n    addRecentEmoji({ emoji: id });\n  });\n\n  const handleCustomEmojiClick = useLastCallback((emoji: ApiSticker) => {\n    onCustomEmojiSelect(emoji);\n    addRecentCustomEmoji({ documentId: emoji.id });\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    isHorizontal: true,\n    items: listEmojis,\n    shouldRemoveSelectionOnReset: true,\n    onSelect: handleSelect,\n    onClose,\n  });\n\n  useEffectWithPrevDeps(([prevSelectedIndex]) => {\n    if (prevSelectedIndex === undefined || prevSelectedIndex === -1) {\n      return;\n    }\n\n    setItemVisible(selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const className = buildClassName(\n    'EmojiTooltip composer-tooltip custom-scroll-x',\n    transitionClassNames,\n  );\n\n  return (\n    <div\n      ref={containerRef}\n      className={className}\n    >\n      {shouldRender && listEmojis ? (\n        listEmojis.map((emoji, index) => (\n          'native' in emoji ? (\n            <EmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleClick}\n            />\n          ) : (\n            <CustomEmojiButton\n              key={emoji.id}\n              emoji={emoji}\n              focus={selectedIndex === index}\n              onClick={handleCustomEmojiClick}\n              observeIntersection={observeIntersection}\n            />\n          )\n        ))\n      ) : shouldRender ? (\n        <Loading />\n      ) : undefined}\n    </div>\n  );\n};\n\nexport default memo(EmojiTooltip);\n","import type { FC, TeactNode } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiWebDocument } from '../../../../api/types';\n\nimport { getWebDocumentHash } from '../../../../global/helpers';\nimport { getFirstLetters } from '../../../../util/textFormat';\nimport renderText from '../../../common/helpers/renderText';\nimport { preventMessageInputBlurWithBubbling } from '../../helpers/preventMessageInputBlur';\n\nimport useMedia from '../../../../hooks/useMedia';\n\nimport ListItem from '../../../ui/ListItem';\n\nimport './BaseResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  thumbnail?: ApiWebDocument;\n  thumbUrl?: string;\n  title?: string;\n  description?: string;\n  transitionClassNames?: string;\n  onClick: NoneToVoidFunction;\n};\n\nconst BaseResult: FC<OwnProps> = ({\n  title,\n  description,\n  thumbnail,\n  thumbUrl,\n  focus,\n  transitionClassNames = '',\n  onClick,\n}) => {\n  let content: TeactNode | undefined;\n\n  const thumbnailDataUrl = useMedia(thumbnail ? getWebDocumentHash(thumbnail) : undefined);\n  thumbUrl = thumbUrl || thumbnailDataUrl;\n\n  if (thumbUrl) {\n    content = (\n      <img src={thumbUrl} className={transitionClassNames} alt=\"\" decoding=\"async\" draggable={false} />\n    );\n  } else if (title) {\n    content = getFirstLetters(title, 1);\n  }\n\n  return (\n    <ListItem\n      focus={focus}\n      className=\"BaseResult chat-item-clickable\"\n      onMouseDown={preventMessageInputBlurWithBubbling}\n      onClick={onClick}\n    >\n      <span className=\"thumb\">\n        {typeof content === 'string' ? renderText(content) : content}\n      </span>\n      <div className=\"content-inner\">\n        {title && (<div className=\"title\">{title}</div>)}\n        {description && (<div className=\"description\">{description}</div>)}\n      </div>\n    </ListItem>\n  );\n};\n\nexport default memo(BaseResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiBotInlineResult } from '../../../../api/types';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport BaseResult from './BaseResult';\n\nexport type OwnProps = {\n  focus?: boolean;\n  inlineResult: ApiBotInlineResult | ApiBotInlineMediaResult;\n  onClick: (result: ApiBotInlineResult | ApiBotInlineMediaResult) => void;\n};\n\nconst ArticleResult: FC<OwnProps> = ({ focus, inlineResult, onClick }) => {\n  const {\n    title, description,\n  } = inlineResult;\n\n  const url = 'url' in inlineResult ? inlineResult.url : undefined;\n  const webThumbnail = 'webThumbnail' in inlineResult ? inlineResult.webThumbnail : undefined;\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      title={title || url}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(ArticleResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult, ApiVideo } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\n\nimport GifButton from '../../../common/GifButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineMediaResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n};\n\nconst GifResult: FC<OwnProps> = ({\n  inlineResult, isSavedMessages, canSendGifs, observeIntersection, onClick,\n}) => {\n  const { gif } = inlineResult;\n\n  const handleClick = useLastCallback((_gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    onClick(inlineResult, isSilent, shouldSchedule);\n  });\n\n  if (!gif) {\n    return undefined;\n  }\n\n  return (\n    <GifButton\n      gif={gif}\n      observeIntersection={observeIntersection}\n      className=\"chat-item-clickable\"\n      onClick={canSendGifs ? handleClick : undefined}\n      isSavedMessages={isSavedMessages}\n    />\n  );\n};\n\nexport default memo(GifResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiPhoto, ApiThumbnail, ApiWebDocument,\n} from '../../../../api/types';\n\nimport { getPhotoMediaHash, getWebDocumentHash } from '../../../../global/helpers';\nimport buildClassName from '../../../../util/buildClassName';\n\nimport useLastCallback from '../../../../hooks/useLastCallback';\nimport useMedia from '../../../../hooks/useMedia';\nimport useMediaTransitionDeprecated from '../../../../hooks/useMediaTransitionDeprecated';\n\nimport BaseResult from './BaseResult';\n\nimport './MediaResult.scss';\n\nexport type OwnProps = {\n  focus?: boolean;\n  isForGallery?: boolean;\n  inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult;\n  onClick: (result: ApiBotInlineMediaResult | ApiBotInlineResult) => void;\n};\n\nconst MediaResult: FC<OwnProps> = ({\n  focus, isForGallery, inlineResult, onClick,\n}) => {\n  let photo: ApiPhoto | undefined;\n  let thumbnail: ApiThumbnail | undefined;\n  let webThumbnail: ApiWebDocument | undefined;\n\n  if ('photo' in inlineResult) {\n    photo = inlineResult.photo;\n  }\n  // For results with type=video (for example @stikstokbot)\n  if ('thumbnail' in inlineResult) {\n    thumbnail = inlineResult.thumbnail;\n  }\n  if ('webThumbnail' in inlineResult) {\n    webThumbnail = inlineResult.webThumbnail;\n  }\n\n  const thumbnailBlobUrl = useMedia(getWebDocumentHash(webThumbnail));\n  const mediaBlobUrl = useMedia(photo && getPhotoMediaHash(photo, 'pictogram'));\n  const transitionClassNames = useMediaTransitionDeprecated(mediaBlobUrl || thumbnailBlobUrl);\n\n  const handleClick = useLastCallback(() => {\n    onClick(inlineResult);\n  });\n\n  if (isForGallery) {\n    return (\n      <div className=\"MediaResult chat-item-clickable\" onClick={handleClick}>\n        <img src={(photo?.thumbnail?.dataUri) || thumbnailBlobUrl} alt=\"\" draggable={false} />\n        <img\n          src={mediaBlobUrl}\n          className={buildClassName('full-media', transitionClassNames)}\n          alt=\"\"\n          draggable={false}\n        />\n      </div>\n    );\n  }\n\n  const { title, description } = inlineResult;\n\n  return (\n    <BaseResult\n      focus={focus}\n      thumbnail={webThumbnail}\n      thumbUrl={mediaBlobUrl || thumbnail?.dataUri}\n      transitionClassNames={transitionClassNames}\n      title={title}\n      description={description}\n      onClick={handleClick}\n    />\n  );\n};\n\nexport default memo(MediaResult);\n","import type { FC } from '../../../../lib/teact/teact';\nimport React, { memo } from '../../../../lib/teact/teact';\n\nimport type { ApiBotInlineMediaResult } from '../../../../api/types';\nimport type { ObserveFn } from '../../../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_INLINE_BOT_RESULT } from '../../../../config';\n\nimport StickerButton from '../../../common/StickerButton';\n\ntype OwnProps = {\n  inlineResult: ApiBotInlineMediaResult;\n  isSavedMessages?: boolean;\n  observeIntersection: ObserveFn;\n  onClick: (result: ApiBotInlineMediaResult, isSilent?: boolean, shouldSchedule?: boolean) => void;\n  isCurrentUserPremium?: boolean;\n};\n\nconst StickerResult: FC<OwnProps> = ({\n  inlineResult,\n  isSavedMessages,\n  observeIntersection,\n  onClick,\n  isCurrentUserPremium,\n}) => {\n  const { sticker } = inlineResult;\n\n  if (!sticker) {\n    return undefined;\n  }\n\n  return (\n    <StickerButton\n      sticker={sticker}\n      size={STICKER_SIZE_INLINE_BOT_RESULT}\n      observeIntersection={observeIntersection}\n      title={sticker.emoji}\n      className=\"chat-item-clickable\"\n      onClick={onClick}\n      clickArg={inlineResult}\n      isSavedMessages={isSavedMessages}\n      canViewSet\n      noShowPremium\n      isCurrentUserPremium={isCurrentUserPremium}\n    />\n  );\n};\n\nexport default memo(StickerResult);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiBotInlineMediaResult, ApiBotInlineResult, ApiBotInlineSwitchPm, ApiBotInlineSwitchWebview,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { throttle } from '../../../util/schedulers';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { extractCurrentThemeParams } from '../../../util/themeStyle';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport { useIntersectionObserver } from '../../../hooks/useIntersectionObserver';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport ListItem from '../../ui/ListItem';\nimport ArticleResult from './inlineResults/ArticleResult';\nimport GifResult from './inlineResults/GifResult';\nimport MediaResult from './inlineResults/MediaResult';\nimport StickerResult from './inlineResults/StickerResult';\n\nimport './InlineBotTooltip.scss';\n\nconst INTERSECTION_DEBOUNCE_MS = 200;\nconst runThrottled = throttle((cb) => cb(), 500, true);\n\nexport type OwnProps = {\n  isOpen: boolean;\n  botId?: string;\n  isGallery?: boolean;\n  inlineBotResults?: (ApiBotInlineResult | ApiBotInlineMediaResult)[];\n  switchPm?: ApiBotInlineSwitchPm;\n  switchWebview?: ApiBotInlineSwitchWebview;\n  isSavedMessages?: boolean;\n  canSendGifs?: boolean;\n  onSelectResult: (\n    inlineResult: ApiBotInlineMediaResult | ApiBotInlineResult, isSilent?: boolean, shouldSchedule?: boolean,\n  ) => void;\n  loadMore: NoneToVoidFunction;\n  onClose: NoneToVoidFunction;\n  isCurrentUserPremium?: boolean;\n};\n\nconst InlineBotTooltip: FC<OwnProps> = ({\n  isOpen,\n  botId,\n  isGallery,\n  inlineBotResults,\n  switchPm,\n  switchWebview,\n  isSavedMessages,\n  canSendGifs,\n  loadMore,\n  onClose,\n  onSelectResult,\n  isCurrentUserPremium,\n}) => {\n  const {\n    openChat,\n    startBot,\n    requestSimpleWebView,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const { shouldRender, transitionClassNames } = useShowTransitionDeprecated(isOpen, undefined, undefined, false);\n  const renderedIsGallery = useCurrentOrPrev(isGallery, shouldRender);\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({\n    rootRef: containerRef,\n    debounceMs: INTERSECTION_DEBOUNCE_MS,\n    isDisabled: !isOpen,\n  });\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards) {\n      runThrottled(loadMore);\n    }\n  });\n\n  const selectedIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    shouldRemoveSelectionOnReset: renderedIsGallery,\n    noArrowNavigation: renderedIsGallery,\n    items: inlineBotResults,\n    onSelect: onSelectResult,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedIndex, containerRef);\n  }, [selectedIndex]);\n\n  const handleSendPm = useLastCallback(() => {\n    openChat({ id: botId });\n    startBot({ botId: botId!, param: switchPm!.startParam });\n  });\n\n  const handleOpenWebview = useLastCallback(() => {\n    const theme = extractCurrentThemeParams();\n\n    requestSimpleWebView({\n      botId: botId!,\n      url: switchWebview!.url,\n      buttonText: switchWebview!.text,\n      theme,\n      isFromSwitchWebView: true,\n    });\n  });\n\n  const prevInlineBotResults = usePreviousDeprecated(\n    inlineBotResults?.length\n      ? inlineBotResults\n      : undefined,\n    shouldRender,\n  );\n  const renderedInlineBotResults = inlineBotResults?.length ? inlineBotResults : prevInlineBotResults;\n\n  if (!shouldRender || !(renderedInlineBotResults?.length || switchPm)) {\n    return undefined;\n  }\n\n  const className = buildClassName(\n    'InlineBotTooltip composer-tooltip',\n    IS_TOUCH_ENV ? 'no-scrollbar' : 'custom-scroll',\n    renderedIsGallery && 'gallery',\n    transitionClassNames,\n  );\n\n  function renderSwitchPm() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleSendPm}>\n        <span className=\"title\">{switchPm!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderSwitchWebview() {\n    return (\n      <ListItem ripple className=\"switch-pm scroll-item\" onClick={handleOpenWebview}>\n        <span className=\"title\">{switchWebview!.text}</span>\n      </ListItem>\n    );\n  }\n\n  function renderContent() {\n    return renderedInlineBotResults!.map((inlineBotResult, index) => {\n      switch (inlineBotResult.type) {\n        case 'gif':\n          return (\n            <GifResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              canSendGifs={canSendGifs}\n            />\n          );\n\n        case 'photo':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              isForGallery={renderedIsGallery}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        case 'sticker':\n          return (\n            <StickerResult\n              key={inlineBotResult.id}\n              inlineResult={inlineBotResult}\n              observeIntersection={observeIntersection}\n              onClick={onSelectResult}\n              isSavedMessages={isSavedMessages}\n              isCurrentUserPremium={isCurrentUserPremium}\n            />\n          );\n\n        case 'video':\n        case 'file':\n        case 'game':\n          return (\n            <MediaResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n        case 'article':\n        case 'audio':\n        case 'voice':\n          return (\n            <ArticleResult\n              key={inlineBotResult.id}\n              focus={selectedIndex === index}\n              inlineResult={inlineBotResult}\n              onClick={onSelectResult}\n            />\n          );\n\n        default:\n          return undefined;\n      }\n    });\n  }\n\n  return (\n    <InfiniteScroll\n      ref={containerRef}\n      className={className}\n      items={renderedInlineBotResults}\n      itemSelector=\".chat-item-clickable\"\n      noFastList\n      onLoadMore={handleLoadMore}\n      sensitiveArea={160}\n    >\n      {switchPm && renderSwitchPm()}\n      {switchWebview && renderSwitchWebview()}\n      {Boolean(renderedInlineBotResults?.length) && renderContent()}\n    </InfiniteScroll>\n  );\n};\n\nexport default memo(InlineBotTooltip);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect, useRef } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { ApiSendAsPeerId } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport setTooltipItemVisible from '../../../util/setTooltipItemVisible';\nimport { IS_TOUCH_ENV } from '../../../util/windowEnvironment';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMouseInside from '../../../hooks/useMouseInside';\nimport useOldLang from '../../../hooks/useOldLang';\nimport { useKeyboardNavigation } from './hooks/useKeyboardNavigation';\n\nimport Avatar from '../../common/Avatar';\nimport FullNameTitle from '../../common/FullNameTitle';\nimport Icon from '../../common/icons/Icon';\nimport ListItem from '../../ui/ListItem';\nimport Menu from '../../ui/Menu';\n\nimport './SendAsMenu.scss';\n\nexport type OwnProps = {\n  isOpen: boolean;\n  chatId?: string;\n  selectedSendAsId?: string;\n  sendAsPeerIds?: ApiSendAsPeerId[];\n  isCurrentUserPremium?: boolean;\n  onClose: () => void;\n};\n\nconst SendAsMenu: FC<OwnProps> = ({\n  isOpen,\n  chatId,\n  selectedSendAsId,\n  sendAsPeerIds,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { saveDefaultSendAs, showNotification } = getActions();\n\n  // No need for expensive global updates on users and chats, so we avoid them\n  const usersById = getGlobal().users.byId;\n  const chatsById = getGlobal().chats.byId;\n\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [handleMouseEnter, handleMouseLeave, markMouseInside] = useMouseInside(isOpen, onClose, undefined);\n\n  useEffect(() => {\n    if (isOpen) {\n      markMouseInside();\n    }\n  }, [isOpen, markMouseInside]);\n\n  const handleUserSelect = useLastCallback((id: string) => {\n    onClose();\n    saveDefaultSendAs({ chatId: chatId!, sendAsId: id });\n  });\n\n  const selectedSendAsIndex = useKeyboardNavigation({\n    isActive: isOpen,\n    items: sendAsPeerIds,\n    onSelect: handleUserSelect,\n    shouldSelectOnTab: true,\n    shouldSaveSelectionOnUpdateItems: true,\n    onClose,\n  });\n\n  useEffect(() => {\n    setTooltipItemVisible('.chat-item-clickable', selectedSendAsIndex, containerRef);\n  }, [selectedSendAsIndex]);\n\n  useEffect(() => {\n    if (sendAsPeerIds && !sendAsPeerIds.length) {\n      onClose();\n    }\n  }, [sendAsPeerIds, onClose]);\n\n  return (\n    <Menu\n      isOpen={isOpen}\n      positionX=\"left\"\n      positionY=\"bottom\"\n      onClose={onClose}\n      className=\"SendAsMenu\"\n      onCloseAnimationEnd={onClose}\n      onMouseEnter={!IS_TOUCH_ENV ? handleMouseEnter : undefined}\n      onMouseLeave={!IS_TOUCH_ENV ? handleMouseLeave : undefined}\n      noCloseOnBackdrop={!IS_TOUCH_ENV}\n      noCompact\n    >\n      <div className=\"send-as-title\" dir=\"auto\">{lang('SendMessageAsTitle')}</div>\n      {usersById && chatsById && sendAsPeerIds?.map(({ id, isPremium }, index) => {\n        const user = usersById[id];\n        const chat = chatsById[id];\n        const peer = user || chat;\n\n        const handleClick = () => {\n          if (!isPremium || isCurrentUserPremium) {\n            handleUserSelect(id);\n          } else {\n            showNotification({\n              message: lang('SelectSendAsPeerPremiumHint'),\n              actionText: lang('Open'),\n              action: {\n                action: 'openPremiumModal',\n                payload: {},\n              },\n            });\n          }\n        };\n\n        const avatarClassName = buildClassName(selectedSendAsId === id && 'selected');\n\n        return (\n          <ListItem\n            key={id}\n            className=\"SendAsItem chat-item-clickable scroll-item with-avatar\"\n            // eslint-disable-next-line react/jsx-no-bind\n            onClick={handleClick}\n            focus={selectedSendAsIndex === index}\n            rightElement={!isCurrentUserPremium && isPremium\n              && <Icon name=\"lock-badge\" className=\"send-as-icon-locked\" />}\n          >\n            <Avatar\n              size=\"small\"\n              peer={peer}\n              className={avatarClassName}\n            />\n            <div className=\"info\">\n              {peer && <FullNameTitle peer={peer} noFake />}\n              <span className=\"subtitle\">{user\n                ? lang('VoipGroupPersonalAccount')\n                : lang('Subscribers', chat?.membersCount, 'i')}\n              </span>\n            </div>\n          </ListItem>\n        );\n      })}\n    </Menu>\n  );\n};\n\nexport default memo(SendAsMenu);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiSticker, ApiStickerSet } from '../../api/types';\nimport type { ObserveFn } from '../../hooks/useIntersectionObserver';\n\nimport { STICKER_SIZE_SEARCH } from '../../config';\nimport { selectIsCurrentUserPremium, selectShouldLoopStickers, selectStickerSet } from '../../global/selectors';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport StickerButton from '../common/StickerButton';\nimport Button from '../ui/Button';\nimport Spinner from '../ui/Spinner';\n\ntype OwnProps = {\n  stickerSetId: string;\n  observeIntersection: ObserveFn;\n  isModalOpen?: boolean;\n};\n\ntype StateProps = {\n  set?: ApiStickerSet;\n  shouldPlay?: boolean;\n  isCurrentUserPremium?: boolean;\n};\n\nconst PREMIUM_STICKERS_TO_DISPLAY = 3;\nconst STICKERS_TO_DISPLAY = 5;\n\nconst StickerSetResult: FC<OwnProps & StateProps> = ({\n  stickerSetId, observeIntersection, set, shouldPlay,\n  isModalOpen, isCurrentUserPremium,\n}) => {\n  const { loadStickers, toggleStickerSet, openStickerSet } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const sharedCanvasRef = useRef<HTMLCanvasElement>(null);\n\n  const lang = useOldLang();\n  const isAdded = set && !set.isArchived && Boolean(set.installedDate);\n  const areStickersLoaded = Boolean(set?.stickers);\n\n  const displayedStickers = useMemo(() => {\n    if (!set) {\n      return [];\n    }\n\n    const premiumStickerIds = (set.stickers?.filter(({ hasEffect }) => hasEffect) ?? [])\n      .slice(0, PREMIUM_STICKERS_TO_DISPLAY);\n    const coverStickerIds = (set.covers || []).map(({ id }) => id);\n    const otherStickers = set.stickers ? set.stickers.filter(({ id }) => !coverStickerIds.includes(id)) : [];\n\n    return [...premiumStickerIds, ...(set.covers || []), ...otherStickers].slice(0, STICKERS_TO_DISPLAY);\n  }, [set]);\n\n  useEffect(() => {\n    // Featured stickers are initialized with one sticker in collection (cover of SickerSet)\n    if (!areStickersLoaded && displayedStickers.length < STICKERS_TO_DISPLAY && set) {\n      loadStickers({\n        stickerSetInfo: {\n          shortName: set.shortName,\n        },\n      });\n    }\n  }, [areStickersLoaded, displayedStickers.length, loadStickers, set, stickerSetId]);\n\n  const handleAddClick = useCallback(() => {\n    toggleStickerSet({ stickerSetId });\n  }, [toggleStickerSet, stickerSetId]);\n\n  const handleStickerClick = useCallback((sticker: ApiSticker) => {\n    openStickerSet({ stickerSetInfo: sticker.stickerSetInfo });\n  }, [openStickerSet]);\n\n  if (!set) {\n    return undefined;\n  }\n\n  const canRenderStickers = displayedStickers.length > 0;\n\n  return (\n    <div key={set.id} className=\"sticker-set\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <div className=\"sticker-set-header\">\n        <div className=\"title-wrapper\">\n          <h3 className=\"title\" dir=\"auto\">{set.title}</h3>\n          <p className=\"count\" dir=\"auto\">{lang('Stickers', set.count, 'i')}</p>\n        </div>\n        <Button\n          className={isAdded ? 'is-added' : undefined}\n          color=\"primary\"\n          size=\"tiny\"\n          pill\n          fluid\n          onClick={handleAddClick}\n        >\n          {lang(isAdded ? 'Stickers.Installed' : 'Stickers.Install')}\n        </Button>\n      </div>\n      <div className=\"sticker-set-main shared-canvas-container\">\n        <canvas ref={sharedCanvasRef} className=\"shared-canvas\" />\n        {!canRenderStickers && <Spinner />}\n        {canRenderStickers && displayedStickers.map((sticker) => (\n          <StickerButton\n            sticker={sticker}\n            size={STICKER_SIZE_SEARCH}\n            observeIntersection={observeIntersection}\n            noPlay={!shouldPlay || isModalOpen}\n            clickArg={sticker}\n            onClick={handleStickerClick}\n            noContextMenu\n            isCurrentUserPremium={isCurrentUserPremium}\n            sharedCanvasRef={sharedCanvasRef}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { stickerSetId }): StateProps => {\n    return {\n      set: selectStickerSet(global, stickerSetId),\n      shouldPlay: selectShouldLoopStickers(global),\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(StickerSetResult));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useRef,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport { selectCurrentStickerSearch, selectTabState } from '../../global/selectors';\nimport { throttle } from '../../util/schedulers';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport StickerSetResult from './StickerSetResult';\n\nimport './StickerSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  featuredIds?: string[];\n  resultIds?: string[];\n  isModalOpen: boolean;\n};\n\nconst INTERSECTION_THROTTLE = 200;\n\nconst runThrottled = throttle((cb) => cb(), 60000, true);\n\nconst StickerSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  featuredIds,\n  resultIds,\n  isModalOpen,\n  onClose,\n}) => {\n  const { loadFeaturedStickers } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const lang = useOldLang();\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, throttleMs: INTERSECTION_THROTTLE });\n\n  // Due to the parent Transition, this component never gets unmounted,\n  // that's why we use throttled API call on every update.\n  useEffect(() => {\n    runThrottled(() => {\n      loadFeaturedStickers();\n    });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!query && featuredIds) {\n      return featuredIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    if (resultIds) {\n      if (!resultIds.length) {\n        return <p className=\"helper-text\" dir=\"auto\">Nothing found.</p>;\n      }\n\n      return resultIds.map((id) => (\n        <StickerSetResult\n          key={id}\n          stickerSetId={id}\n          observeIntersection={observeIntersection}\n          isModalOpen={isModalOpen}\n        />\n      ));\n    }\n\n    return <Loading />;\n  }\n\n  return (\n    <div ref={containerRef} className=\"StickerSearch custom-scroll\" dir={lang.isRtl ? 'rtl' : undefined}>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentStickerSearch(global);\n    const { query, resultIds } = currentSearch || {};\n    const { featured } = global.stickers;\n\n    return {\n      query,\n      featuredIds: featured.setIds,\n      resultIds,\n      isModalOpen: Boolean(selectTabState(global).openedStickerSetShortName),\n    };\n  },\n)(StickerSearch));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useRef } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiChatFullInfo, ApiVideo } from '../../api/types';\nimport type { MessageList } from '../../types';\n\nimport { getAllowedAttachmentOptions, getCanPostInChat } from '../../global/helpers';\nimport {\n  selectCanScheduleUntilOnline,\n  selectChat,\n  selectChatFullInfo,\n  selectCurrentGifSearch,\n  selectCurrentMessageList,\n  selectIsChatWithBot,\n  selectIsChatWithSelf, selectThreadInfo,\n  selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { IS_TOUCH_ENV } from '../../util/windowEnvironment';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport { useIntersectionObserver } from '../../hooks/useIntersectionObserver';\nimport useOldLang from '../../hooks/useOldLang';\nimport useSchedule from '../../hooks/useSchedule';\n\nimport GifButton from '../common/GifButton';\nimport InfiniteScroll from '../ui/InfiniteScroll';\nimport Loading from '../ui/Loading';\n\nimport './GifSearch.scss';\n\ntype OwnProps = {\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  query?: string;\n  results?: ApiVideo[];\n  chat?: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  isChatWithBot?: boolean;\n  canScheduleUntilOnline?: boolean;\n  isSavedMessages?: boolean;\n  canPostInChat?: boolean;\n  currentMessageList?: MessageList;\n};\n\nconst PRELOAD_BACKWARDS = 96; // GIF Search bot results are multiplied by 24\nconst INTERSECTION_DEBOUNCE = 300;\n\nconst GifSearch: FC<OwnProps & StateProps> = ({\n  isActive,\n  query,\n  results,\n  chat,\n  chatFullInfo,\n  isChatWithBot,\n  canScheduleUntilOnline,\n  isSavedMessages,\n  canPostInChat,\n  currentMessageList,\n  onClose,\n}) => {\n  const {\n    searchMoreGifs,\n    sendMessage,\n    setGifSearchQuery,\n  } = getActions();\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [requestCalendar, calendar] = useSchedule(canScheduleUntilOnline);\n\n  const {\n    observe: observeIntersection,\n  } = useIntersectionObserver({ rootRef: containerRef, debounceMs: INTERSECTION_DEBOUNCE });\n\n  const canSendGifs = canPostInChat && getAllowedAttachmentOptions(chat, chatFullInfo, isChatWithBot).canSendGifs;\n\n  const handleGifClick = useCallback((gif: ApiVideo, isSilent?: boolean, shouldSchedule?: boolean) => {\n    if (canSendGifs) {\n      if (!currentMessageList) {\n        return;\n      }\n\n      if (shouldSchedule) {\n        requestCalendar((scheduledAt) => {\n          sendMessage({\n            messageList: currentMessageList,\n            gif,\n            scheduledAt,\n            isSilent,\n          });\n        });\n      } else {\n        sendMessage({ messageList: currentMessageList, gif, isSilent });\n      }\n    }\n\n    if (IS_TOUCH_ENV) {\n      setGifSearchQuery({ query: undefined });\n    }\n  }, [canSendGifs, currentMessageList, requestCalendar]);\n\n  const handleSearchMoreGifs = useCallback(() => {\n    searchMoreGifs();\n  }, [searchMoreGifs]);\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function renderContent() {\n    if (query === undefined) {\n      return undefined;\n    }\n\n    if (!results) {\n      return (\n        <Loading />\n      );\n    }\n\n    if (!results.length) {\n      return (\n        <p className=\"helper-text\" dir=\"auto\">{lang('NoGIFsFound')}</p>\n      );\n    }\n\n    return results.map((gif) => (\n      <GifButton\n        key={gif.id}\n        gif={gif}\n        observeIntersection={observeIntersection}\n        onClick={canSendGifs ? handleGifClick : undefined}\n        isSavedMessages={isSavedMessages}\n      />\n    ));\n  }\n\n  const hasResults = Boolean(query !== undefined && results && results.length);\n\n  return (\n    <div className=\"GifSearch\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <InfiniteScroll\n        ref={containerRef}\n        className={buildClassName('gif-container custom-scroll', hasResults && 'grid')}\n        items={results}\n        itemSelector=\".GifButton\"\n        preloadBackwards={PRELOAD_BACKWARDS}\n        noFastList\n        onLoadMore={handleSearchMoreGifs}\n      >\n        {renderContent()}\n      </InfiniteScroll>\n      {calendar}\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const currentSearch = selectCurrentGifSearch(global);\n    const { query, results } = currentSearch || {};\n    const { chatId, threadId } = selectCurrentMessageList(global) || {};\n    const chat = chatId ? selectChat(global, chatId) : undefined;\n    const chatFullInfo = chatId ? selectChatFullInfo(global, chatId) : undefined;\n    const isChatWithBot = chat ? selectIsChatWithBot(global, chat) : undefined;\n    const isSavedMessages = Boolean(chatId) && selectIsChatWithSelf(global, chatId);\n    const threadInfo = chatId && threadId ? selectThreadInfo(global, chatId, threadId) : undefined;\n    const isMessageThread = Boolean(!threadInfo?.isCommentsInfo && threadInfo?.fromChannelId);\n    const topic = chatId && threadId ? selectTopic(global, chatId, threadId) : undefined;\n    const canPostInChat = Boolean(chat) && Boolean(threadId)\n      && getCanPostInChat(chat, topic, isMessageThread, chatFullInfo);\n\n    return {\n      query,\n      results,\n      chat,\n      isChatWithBot,\n      isSavedMessages,\n      canPostInChat,\n      canScheduleUntilOnline: Boolean(chatId) && selectCanScheduleUntilOnline(global, chatId),\n      currentMessageList: selectCurrentMessageList(global),\n    };\n  },\n)(GifSearch));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"OAKzmAva\",\"withImage\":\"BQ6HUOqN\",\"imageContainer\":\"TmJvv2A6\",\"image\":\"U96CW2I7\",\"round\":\"yxjDeIct\",\"circle\":\"cdfiLmXo\",\"withStoryCircle\":\"BOfHPv20\",\"summary\":\"vXi2JQlj\",\"title\":\"bi3fL59p\",\"info\":\"GUK4ajPK\",\"meta\":\"YH6jeZIh\",\"metaWithIcon\":\"q1LnuIUn\",\"metaIcon\":\"PJZzyVLK\",\"date\":\"C7NpG5Y9\"};","import React, { memo } from '../../../lib/teact/teact';\n\nimport type { StatisticsMessageInteractionCounter, StatisticsStoryInteractionCounter } from '../../../api/types';\n\nimport { formatIntegerCompact } from '../../../util/textFormat';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\ninterface OwnProps {\n  postStatistic: StatisticsStoryInteractionCounter | StatisticsMessageInteractionCounter;\n}\n\nfunction StatisticsRecentPostMeta({ postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  return (\n    <div className={styles.meta}>\n      {postStatistic.reactionsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"heart-outline\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.reactionsCount)}\n        </span>\n      )}\n\n      {postStatistic.forwardsCount > 0 && (\n        <span className={styles.metaWithIcon}>\n          <Icon name=\"forward\" className={styles.metaIcon} />\n          {formatIntegerCompact(postStatistic.forwardsCount)}\n        </span>\n      )}\n\n      {!postStatistic.forwardsCount && !postStatistic.reactionsCount\n        && lang('ChannelStats.SharesCount_ZeroValueHolder')}\n    </div>\n  );\n}\n\nexport default memo(StatisticsRecentPostMeta);\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessage, StatisticsMessageInteractionCounter } from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport {\n  getMessageMediaHash,\n  getMessageMediaThumbDataUri,\n  getMessageRoundVideo,\n  getMessageVideo,\n} from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\nimport { renderMessageSummary } from '../../common/helpers/renderMessageText';\n\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  postStatistic: StatisticsMessageInteractionCounter;\n  message: ApiMessage;\n};\n\nconst StatisticsRecentMessage: FC<OwnProps> = ({ postStatistic, message }) => {\n  const lang = useOldLang();\n  const { toggleMessageStatistics } = getActions();\n\n  const mediaThumbnail = getMessageMediaThumbDataUri(message);\n  const mediaBlobUrl = useMedia(getMessageMediaHash(message, 'micro'));\n  const isRoundVideo = Boolean(getMessageRoundVideo(message));\n\n  const handleClick = useCallback(() => {\n    toggleMessageStatistics({ messageId: message.id });\n  }, [toggleMessageStatistics, message.id]);\n\n  return (\n    <div\n      className={buildClassName(\n        styles.root,\n        Boolean(mediaBlobUrl || mediaThumbnail) && styles.withImage,\n      )}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, message, mediaBlobUrl || mediaThumbnail, isRoundVideo)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {formatDateTimeToString(message.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n};\n\nfunction renderSummary(lang: OldLangFn, message: ApiMessage, blobUrl?: string, isRoundVideo?: boolean) {\n  if (!blobUrl) {\n    return renderMessageSummary(lang, message);\n  }\n\n  return (\n    <span>\n      <img\n        src={blobUrl}\n        alt=\"\"\n        draggable={false}\n        className={buildClassName(styles.image, isRoundVideo && styles.round)}\n      />\n      {getMessageVideo(message) && <Icon name=\"play\" />}\n      {renderMessageSummary(lang, message, true)}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentMessage);\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiTypeStory,\n  StatisticsStoryInteractionCounter,\n} from '../../../api/types';\nimport type { OldLangFn } from '../../../hooks/useOldLang';\n\nimport { getStoryMediaHash } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\nimport { formatDateTimeToString } from '../../../util/dates/dateFormat';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport StatisticsRecentPostMeta from './StatisticsRecentPostMeta';\n\nimport styles from './StatisticsRecentPost.module.scss';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  story?: ApiTypeStory;\n  postStatistic: StatisticsStoryInteractionCounter;\n};\n\nfunction StatisticsRecentStory({ chat, story, postStatistic }: OwnProps) {\n  const lang = useOldLang();\n  const { toggleStoryStatistics } = getActions();\n  const isLoaded = story && 'content' in story;\n\n  const video = isLoaded ? story.content.video : undefined;\n  const imageHash = isLoaded ? getStoryMediaHash(story) : undefined;\n  const imgBlobUrl = useMedia(imageHash);\n  const mediaThumbnail = imgBlobUrl || video?.thumbnail?.dataUri;\n\n  const handleClick = useLastCallback(() => {\n    toggleStoryStatistics({ storyId: postStatistic.storyId });\n  });\n\n  return (\n    <div\n      className={buildClassName(styles.root, styles.withImage)}\n      onClick={handleClick}\n    >\n      <div className={styles.title}>\n        <div className={styles.summary}>\n          {renderSummary(lang, chat, imgBlobUrl || mediaThumbnail)}\n        </div>\n        <div className={styles.meta}>\n          {lang('ChannelStats.ViewsCount', postStatistic.viewsCount, 'i')}\n        </div>\n      </div>\n\n      <div className={styles.info}>\n        <div className={styles.date}>\n          {isLoaded && Boolean(story.date) && formatDateTimeToString(story.date * 1000, lang.code)}\n        </div>\n        <StatisticsRecentPostMeta postStatistic={postStatistic} />\n      </div>\n    </div>\n  );\n}\n\nfunction renderSummary(lang: OldLangFn, chat: ApiChat, blobUrl?: string) {\n  return (\n    <span>\n      {blobUrl ? (\n        <span className={styles.imageContainer}>\n          <img\n            src={blobUrl}\n            alt=\"\"\n            draggable={false}\n            className={buildClassName(styles.image, styles.circle, styles.withStoryCircle)}\n          />\n        </span>\n      ) : (\n        <Avatar\n          peer={chat}\n          size=\"small\"\n          className={styles.image}\n          withStorySolid\n          forceUnreadStorySolid\n        />\n      )}\n\n      {lang('Story')}\n    </span>\n  );\n}\n\nexport default memo(StatisticsRecentStory);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"T1l_4J8z\",\"pie-slim-in\":\"EgyLOizu\",\"pieSlimIn\":\"EgyLOizu\",\"pie-slim-out\":\"TBiNdFb4\",\"pieSlimOut\":\"TBiNdFb4\",\"messages\":\"suY9dEIz\",\"publicForwards\":\"S1x1ovkC\",\"messages-title\":\"evQIkAqx\",\"messagesTitle\":\"evQIkAqx\",\"publicForwards-title\":\"WxL3i5PM\",\"publicForwardsTitle\":\"WxL3i5PM\",\"ready\":\"aUrozL5_\",\"graph\":\"QQHwjG88\",\"hidden\":\"QGctP1Nk\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n  useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChannelStatistics,\n  ApiChat,\n  ApiGroupStatistics,\n  ApiMessage,\n  ApiTypeStory,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport {\n  selectChat,\n  selectChatFullInfo,\n  selectChatMessages,\n  selectPeerStories,\n  selectStatistics,\n} from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Loading from '../../ui/Loading';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsRecentMessage from './StatisticsRecentMessage';\nimport StatisticsRecentStory from './StatisticsRecentStory';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst CHANNEL_GRAPHS_TITLES = {\n  growthGraph: 'ChannelStats.Graph.Growth',\n  followersGraph: 'ChannelStats.Graph.Followers',\n  muteGraph: 'ChannelStats.Graph.Notifications',\n  topHoursGraph: 'ChannelStats.Graph.ViewsByHours',\n  viewsBySourceGraph: 'ChannelStats.Graph.ViewsBySource',\n  newFollowersBySourceGraph: 'ChannelStats.Graph.NewFollowersBySource',\n  languagesGraph: 'ChannelStats.Graph.Language',\n  interactionsGraph: 'ChannelStats.Graph.Interactions',\n  reactionsByEmotionGraph: 'ChannelStats.Graph.Reactions',\n  storyInteractionsGraph: 'ChannelStats.Graph.Stories',\n  storyReactionsByEmotionGraph: 'ChannelStats.Graph.StoriesReactions',\n};\nconst CHANNEL_GRAPHS = Object.keys(CHANNEL_GRAPHS_TITLES) as (keyof ApiChannelStatistics)[];\n\nconst GROUP_GRAPHS_TITLES = {\n  growthGraph: 'Stats.GroupGrowthTitle',\n  membersGraph: 'Stats.GroupMembersTitle',\n  languagesGraph: 'Stats.GroupLanguagesTitle',\n  messagesGraph: 'Stats.GroupMessagesTitle',\n  actionsGraph: 'Stats.GroupActionsTitle',\n  topHoursGraph: 'Stats.GroupTopHoursTitle',\n};\nconst GROUP_GRAPHS = Object.keys(GROUP_GRAPHS_TITLES) as (keyof ApiGroupStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n};\n\nexport type StateProps = {\n  chat?: ApiChat;\n  statistics: ApiChannelStatistics | ApiGroupStatistics;\n  dcId?: number;\n  isGroup: boolean;\n  messagesById: Record<string, ApiMessage>;\n  storiesById?: Record<string, ApiTypeStory>;\n};\n\nconst Statistics: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  statistics,\n  dcId,\n  isGroup,\n  messagesById,\n  storiesById,\n}) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStatistics, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    loadStatistics({ chatId, isGroup });\n  }, [chatId, loadStatistics, isGroup]);\n\n  const graphs = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS : CHANNEL_GRAPHS;\n  }, [isGroup]);\n\n  const graphTitles = useMemo(() => {\n    return isGroup ? GROUP_GRAPHS_TITLES : CHANNEL_GRAPHS_TITLES;\n  }, [isGroup]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    graphs.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({\n          name,\n          chatId,\n          token: graph,\n          // Hardcode percentage for languages graph, since API does not return `percentage` flag\n          isPercentage: name === 'languagesGraph',\n        });\n      }\n    });\n  }, [graphs, chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      graphs.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((graphTitles as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n\n        containerRef.current!.children[index].classList.remove(styles.hidden);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    graphs, graphTitles, isReady, statistics, lang, chatId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  return (\n    <div className={buildClassName(styles.root, 'panel-content custom-scroll', isReady && styles.ready)}>\n      {statistics && (\n        <StatisticsOverview\n          statistics={statistics}\n          type={isGroup ? 'group' : 'channel'}\n          title={lang('StatisticOverview')}\n        />\n      )}\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {graphs.map((graph) => (\n          <div key={graph} className={buildClassName(styles.graph, styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean((statistics as ApiChannelStatistics)?.recentPosts?.length) && (\n        <div className={styles.messages}>\n          <h2 className={styles.messagesTitle}>{lang('ChannelStats.Recent.Header')}</h2>\n\n          {(statistics as ApiChannelStatistics).recentPosts.map((postStatistic) => {\n            if ('msgId' in postStatistic) {\n              const message = messagesById[postStatistic.msgId];\n              if (!message || !('content' in message)) return undefined;\n\n              return (\n                <StatisticsRecentMessage\n                  key={`statistic_message_${postStatistic.msgId}`}\n                  message={message}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            if ('storyId' in postStatistic && chat) {\n              const story = storiesById?.[postStatistic.storyId];\n\n              return (\n                <StatisticsRecentStory\n                  key={`statistic_story_${postStatistic.storyId}`}\n                  chat={chat}\n                  story={story}\n                  postStatistic={postStatistic}\n                />\n              );\n            }\n\n            return undefined;\n          })}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const statistics = selectStatistics(global, chatId);\n    const chat = selectChat(global, chatId);\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const isGroup = chat?.type === 'chatTypeSuperGroup';\n    const messagesById = selectChatMessages(global, chatId);\n    const storiesById = selectPeerStories(global, chatId)?.byId;\n\n    return {\n      statistics, dcId, isGroup, chat, messagesById, storiesById,\n    };\n  },\n)(Statistics));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"oXLpD4Y4\",\"title\":\"paQ2VBe_\",\"views\":\"WvFuOAIf\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiMessagePublicForward } from '../../../api/types';\n\nimport { getMainUsername } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiMessagePublicForward;\n};\n\nconst StatisticsMessagePublicForward: FC<OwnProps> = ({ data }) => {\n  const lang = useOldLang();\n  const { openChatByUsername } = getActions();\n\n  const username = useMemo(() => (data.chat ? getMainUsername(data.chat) : undefined), [data.chat]);\n  const handleClick = useCallback(() => {\n    openChatByUsername({ username: username!, messageId: data.messageId });\n  }, [data.messageId, openChatByUsername, username]);\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={data.chat} />\n\n      <div>\n        <div className={styles.title}>\n          {data.title}\n        </div>\n\n        <div className={styles.views}>\n          {lang('ChannelStats.ViewsCount', data.views, 'i')}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiMessagePublicForward,\n  ApiPostStatistics,\n  StatisticsGraph,\n} from '../../../api/types';\nimport { LoadMoreDirection } from '../../../types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.MessageInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  messageId?: number;\n  dcId?: number;\n};\n\nfunction Statistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  messageId,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadMessageStatistics, loadMessagePublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (messageId) {\n      loadMessageStatistics({ chatId, messageId });\n    }\n  }, [chatId, loadMessageStatistics, messageId]);\n\n  useEffect(() => {\n    if (!isActive || messageId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, messageId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, messageId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(({ direction }: { direction: LoadMoreDirection }) => {\n    if (direction === LoadMoreDirection.Backwards && messageId) {\n      loadMessagePublicForwards({ chatId, messageId });\n    }\n  });\n\n  if (!isReady || !statistics || !messageId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"message\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {(statistics.publicForwardsData as ApiMessagePublicForward[]).map((item) => (\n              <StatisticsMessagePublicForward key={item.messageId} data={item} />\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentMessage;\n    const messageId = tabState.statistics.currentMessageId;\n\n    return { statistics, dcId, messageId };\n  },\n)(Statistics));\n","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type {\n  ApiChat, ApiStoryPublicForward, ApiUser,\n} from '../../../api/types';\n\nimport { getChatTitle, getUserFullName } from '../../../global/helpers';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\n\nimport styles from './StatisticsPublicForward.module.scss';\n\nexport type OwnProps = {\n  data: ApiStoryPublicForward;\n  usersById: Record<string, ApiUser>;\n  chatsById: Record<string, ApiChat>;\n};\n\nfunction StatisticsMessagePublicForward({ data, chatsById, usersById }: OwnProps) {\n  const lang = useOldLang();\n  const { openChat } = getActions();\n  const user = usersById[data.peerId];\n  const chat = chatsById[data.peerId];\n\n  const handleClick = useLastCallback(() => {\n    openChat({ id: user.id });\n  });\n\n  return (\n    <div className={buildClassName(styles.root, 'statistic-public-forward')} onClick={handleClick}>\n      <Avatar size=\"medium\" peer={user || chat} withStorySolid forceUnreadStorySolid />\n\n      <div>\n        <div className={styles.title}>\n          {user ? getUserFullName(user) : getChatTitle(lang, chat)}\n        </div>\n\n        <div className={styles.views}>\n          {data.viewsCount ? lang('ChannelStats.ViewsCount', data.viewsCount, 'i') : lang('NoViews')}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default memo(StatisticsMessagePublicForward);\n","import React, {\n  memo, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat,\n  ApiPostStatistics,\n  ApiUser,\n  StatisticsGraph,\n} from '../../../api/types';\n\nimport { STATISTICS_PUBLIC_FORWARDS_LIMIT } from '../../../config';\nimport { selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\nimport { callApi } from '../../../api/gramjs';\n\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport Loading from '../../ui/Loading';\nimport StatisticsMessagePublicForward from './StatisticsMessagePublicForward';\nimport StatisticsOverview from './StatisticsOverview';\nimport StatisticsStoryPublicForward from './StatisticsStoryPublicForward';\n\nimport styles from './Statistics.module.scss';\n\ntype ILovelyChart = { create: Function };\nlet lovelyChartPromise: Promise<ILovelyChart>;\nlet LovelyChart: ILovelyChart;\n\nasync function ensureLovelyChart() {\n  if (!lovelyChartPromise) {\n    lovelyChartPromise = import('../../../lib/lovely-chart/LovelyChart') as Promise<ILovelyChart>;\n    LovelyChart = await lovelyChartPromise;\n  }\n\n  return lovelyChartPromise;\n}\n\nconst GRAPH_TITLES = {\n  viewsGraph: 'Stats.StoryInteractionsTitle',\n  reactionsGraph: 'ReactionsByEmotionChartTitle',\n};\nconst GRAPHS = Object.keys(GRAPH_TITLES) as (keyof ApiPostStatistics)[];\n\nexport type OwnProps = {\n  chatId: string;\n  isActive: boolean;\n};\n\nexport type StateProps = {\n  statistics?: ApiPostStatistics;\n  storyId?: number;\n  dcId?: number;\n  chatsById: Record<string, ApiChat>;\n  usersById: Record<string, ApiUser>;\n};\n\nfunction StoryStatistics({\n  chatId,\n  isActive,\n  statistics,\n  dcId,\n  storyId,\n  chatsById,\n  usersById,\n}: OwnProps & StateProps) {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isReady, setIsReady] = useState(false);\n  const loadedCharts = useRef<string[]>([]);\n\n  const { loadStoryStatistics, loadStoryPublicForwards, loadStatisticsAsyncGraph } = getActions();\n  const forceUpdate = useForceUpdate();\n\n  useEffect(() => {\n    if (storyId) {\n      loadStoryStatistics({ chatId, storyId });\n    }\n  }, [chatId, storyId]);\n\n  useEffect(() => {\n    if (!isActive || storyId) {\n      loadedCharts.current = [];\n      setIsReady(false);\n    }\n  }, [isActive, storyId]);\n\n  // Load async graphs\n  useEffect(() => {\n    if (!statistics) {\n      return;\n    }\n\n    GRAPHS.forEach((name) => {\n      const graph = statistics[name as keyof typeof statistics];\n      const isAsync = typeof graph === 'string';\n\n      if (isAsync) {\n        loadStatisticsAsyncGraph({ name, chatId, token: graph });\n      }\n    });\n  }, [chatId, statistics, loadStatisticsAsyncGraph]);\n\n  useEffect(() => {\n    (async () => {\n      await ensureLovelyChart();\n\n      if (!isReady) {\n        setIsReady(true);\n        return;\n      }\n\n      if (!statistics || !containerRef.current) {\n        return;\n      }\n\n      GRAPHS.forEach((name, index: number) => {\n        const graph = statistics[name as keyof typeof statistics];\n        const isAsync = typeof graph === 'string';\n\n        if (isAsync || loadedCharts.current.includes(name)) {\n          return;\n        }\n\n        if (!graph) {\n          loadedCharts.current.push(name);\n\n          return;\n        }\n\n        const { zoomToken } = graph as StatisticsGraph;\n\n        LovelyChart.create(\n          containerRef.current!.children[index],\n          {\n            title: lang((GRAPH_TITLES as Record<string, string>)[name]),\n            ...zoomToken ? {\n              onZoom: (x: number) => callApi('fetchStatisticsAsyncGraph', { token: zoomToken, x, dcId }),\n              zoomOutLabel: lang('Graph.ZoomOut'),\n            } : {},\n            ...graph as StatisticsGraph,\n          },\n        );\n\n        loadedCharts.current.push(name);\n      });\n\n      forceUpdate();\n    })();\n  }, [\n    isReady, statistics, lang, chatId, storyId, loadStatisticsAsyncGraph, dcId, forceUpdate,\n  ]);\n\n  const handleLoadMore = useLastCallback(() => {\n    if (!storyId) return;\n\n    loadStoryPublicForwards({ chatId, storyId });\n  });\n\n  if (!isReady || !statistics || !storyId) {\n    return <Loading />;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, 'custom-scroll', isReady && styles.ready)}>\n      <StatisticsOverview statistics={statistics} type=\"story\" title={lang('StatisticOverview')} />\n\n      {!loadedCharts.current.length && <Loading />}\n\n      <div ref={containerRef}>\n        {GRAPHS.map((graph) => (\n          <div className={buildClassName(styles.graph, !loadedCharts.current.includes(graph) && styles.hidden)} />\n        ))}\n      </div>\n\n      {Boolean(statistics.publicForwards) && (\n        <div className={styles.publicForwards}>\n          <h2 className={styles.publicForwardsTitle}>{lang('Stats.Message.PublicShares')}</h2>\n\n          <InfiniteScroll\n            items={statistics.publicForwardsData}\n            itemSelector=\".statistic-public-forward\"\n            onLoadMore={handleLoadMore}\n            preloadBackwards={STATISTICS_PUBLIC_FORWARDS_LIMIT}\n            noFastList\n          >\n            {statistics.publicForwardsData!.map((item) => {\n              if ('messageId' in item) {\n                return (\n                  <StatisticsMessagePublicForward key={`message_${item.messageId}`} data={item} />\n                );\n              }\n\n              return (\n                <StatisticsStoryPublicForward\n                  key={`story_${item.storyId}`}\n                  data={item}\n                  chatsById={chatsById}\n                  usersById={usersById}\n                />\n              );\n            })}\n          </InfiniteScroll>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const dcId = selectChatFullInfo(global, chatId)?.statisticsDcId;\n    const tabState = selectTabState(global);\n    const statistics = tabState.statistics.currentStory;\n    const storyId = tabState.statistics.currentStoryId;\n    const { byId: usersById } = global.users;\n    const { byId: chatsById } = global.chats;\n\n    return {\n      statistics, dcId, storyId, usersById, chatsById,\n    };\n  },\n)(StoryStatistics));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat,\n  ApiMessage,\n  ApiPollAnswer,\n  ApiPollResult,\n} from '../../api/types';\n\nimport { isUserId } from '../../global/helpers';\nimport { selectTabState } from '../../global/selectors';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport GroupChatInfo from '../common/GroupChatInfo';\nimport PrivateChatInfo from '../common/PrivateChatInfo';\nimport ListItem from '../ui/ListItem';\nimport Loading from '../ui/Loading';\nimport ShowMoreButton from '../ui/ShowMoreButton';\n\nimport './PollAnswerResults.scss';\n\ntype OwnProps = {\n  chat: ApiChat;\n  message: ApiMessage;\n  answer: ApiPollAnswer;\n  answerVote: ApiPollResult;\n  totalVoters: number;\n};\n\ntype StateProps = {\n  voters?: string[];\n  offset: string;\n};\n\nconst INITIAL_LIMIT = 4;\nconst VIEW_MORE_LIMIT = 50;\n\nconst PollAnswerResults: FC<OwnProps & StateProps> = ({\n  chat,\n  message,\n  answer,\n  answerVote,\n  totalVoters,\n  voters,\n  offset,\n}) => {\n  const {\n    loadPollOptionResults,\n    openChat,\n    closePollResults,\n  } = getActions();\n\n  const prevVotersCount = usePreviousDeprecated<number>(answerVote.votersCount);\n  const [isLoading, setIsLoading] = useState<boolean>(true);\n  const areVotersLoaded = Boolean(voters);\n  const { option, text } = answer;\n  const lang = useOldLang();\n\n  useEffect(() => {\n    // For update when new votes arrive or when the user takes back his vote\n    if (!areVotersLoaded || prevVotersCount !== answerVote.votersCount) {\n      loadPollOptionResults({\n        chat, messageId: message.id, option, offset, limit: INITIAL_LIMIT, shouldResetVoters: true,\n      });\n    }\n    // eslint-disable-next-line\n  }, [answerVote.votersCount, areVotersLoaded]);\n\n  const handleViewMoreClick = useCallback(() => {\n    setIsLoading(true);\n    loadPollOptionResults({\n      chat, messageId: message.id, option, offset, limit: VIEW_MORE_LIMIT,\n    });\n  }, [chat, loadPollOptionResults, message.id, offset, option]);\n\n  useEffect(() => {\n    setIsLoading(false);\n  }, [voters]);\n\n  const handleMemberClick = useCallback((id: string) => {\n    openChat({ id });\n    closePollResults();\n  }, [closePollResults, openChat]);\n\n  function renderViewMoreButton() {\n    const leftVotersCount = answerVote.votersCount - voters!.length;\n\n    return answerVote.votersCount > INITIAL_LIMIT && leftVotersCount > 0 && (\n      <ShowMoreButton\n        count={leftVotersCount}\n        itemName=\"voter\"\n        isLoading={isLoading}\n        onClick={handleViewMoreClick}\n      />\n    );\n  }\n\n  return (\n    <div className=\"PollAnswerResults\">\n      <div className=\"poll-voters\">\n        {voters\n          ? voters.map((id) => (\n            <ListItem\n              key={id}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleMemberClick(id)}\n            >\n              {isUserId(id) ? (\n                <PrivateChatInfo\n                  avatarSize=\"tiny\"\n                  userId={id}\n                  forceShowSelf\n                  noStatusOrTyping\n                />\n              ) : (\n                <GroupChatInfo\n                  avatarSize=\"tiny\"\n                  chatId={id}\n                  noStatusOrTyping\n                />\n              )}\n            </ListItem>\n          ))\n          : <Loading />}\n        {voters && renderViewMoreButton()}\n      </div>\n      <div className=\"answer-head\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <span className=\"answer-title\" dir=\"auto\">\n          {renderTextWithEntities({\n            text: text.text,\n            entities: text.entities,\n          })}\n        </span>\n        <span className=\"answer-percent\" dir={lang.isRtl ? 'auto' : undefined}>\n          {getPercentage(answerVote.votersCount, totalVoters)}%\n        </span>\n      </div>\n    </div>\n  );\n};\n\nfunction getPercentage(value: number, total: number) {\n  return total > 0 ? ((value / total) * 100).toFixed() : 0;\n}\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { answer }: OwnProps): StateProps => {\n    const { voters, offsets } = selectTabState(global).pollResults;\n\n    return {\n      voters: voters?.[answer.option],\n      offset: (offsets?.[answer.option]) || '',\n    };\n  },\n)(PollAnswerResults));\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiChat, ApiMessage, ApiPoll } from '../../api/types';\n\nimport {\n  selectChat, selectChatMessage, selectPollFromMessage, selectTabState,\n} from '../../global/selectors';\nimport { buildCollectionByKey } from '../../util/iteratees';\nimport { renderTextWithEntities } from '../common/helpers/renderTextWithEntities';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Loading from '../ui/Loading';\nimport PollAnswerResults from './PollAnswerResults';\n\nimport './PollResults.scss';\n\ntype OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  message?: ApiMessage;\n  poll?: ApiPoll;\n};\n\nconst PollResults: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  message,\n  poll,\n  onClose,\n}) => {\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  if (!message || !poll || !chat) {\n    return <Loading />;\n  }\n\n  const { summary, results } = poll;\n  if (!results.results) {\n    return undefined;\n  }\n\n  const resultsByOption = buildCollectionByKey(results.results, 'option');\n\n  return (\n    <div className=\"PollResults\" dir={lang.isRtl ? 'rtl' : undefined}>\n      <h3 className=\"poll-question\" dir=\"auto\">\n        {renderTextWithEntities({\n          text: summary.question.text,\n          entities: summary.question.entities,\n        })}\n      </h3>\n      <div className=\"poll-results-list custom-scroll\">\n        {summary.answers.map((answer) => (\n          <PollAnswerResults\n            key={`${poll.id}-${answer.option}`}\n            chat={chat}\n            message={message}\n            answer={answer}\n            answerVote={resultsByOption[answer.option]}\n            totalVoters={results.totalVoters!}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const {\n      pollResults: { chatId, messageId },\n    } = selectTabState(global);\n\n    if (!chatId || !messageId) {\n      return {};\n    }\n\n    const chat = selectChat(global, chatId);\n    const message = selectChatMessage(global, chatId, messageId);\n    const poll = message && selectPollFromMessage(global, message);\n\n    return {\n      chat,\n      message,\n      poll,\n    };\n  },\n)(PollResults));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"xrnUE4e6\",\"content\":\"z7kF7tij\",\"section\":\"T6wFpdQO\",\"general\":\"YftUWqqw\",\"top\":\"CWsWIKQ1\",\"bottom\":\"KBl0ycLl\",\"iconWrapper\":\"iJ1U9kDD\",\"icon\":\"Rk6PT_yc\",\"clickable\":\"K1CTKtBS\",\"heading\":\"qlo3vSEw\",\"icon-picker\":\"r06zwL42\",\"iconPicker\":\"r06zwL42\"};","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID } from '../../config';\nimport { selectChat, selectIsCurrentUserPremium, selectTabState } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport cycleRestrict from '../../util/cycleRestrict';\nimport { getTopicColors } from '../../util/forumColors';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  createTopicPanel?: TabState['createTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst CreateTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  createTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { createTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconColorIndex, setIconColorIndex] = useState(0);\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isTouched = Boolean(title);\n  const isLoading = Boolean(createTopicPanel?.isLoading);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleIconClick = useCallback(() => {\n    setIconColorIndex((prev) => cycleRestrict(getTopicColors().length, prev + 1));\n  }, []);\n\n  const handleCreateTopic = useCallback(() => {\n    createTopic({\n      chatId: chat!.id,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    });\n  }, [chat, createTopic, iconColorIndex, iconEmojiId, title]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(undefined);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      id: 0,\n      title,\n      iconColor: getTopicColors()[iconColorIndex],\n      iconEmojiId,\n    };\n  }, [iconColorIndex, iconEmojiId, title]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        <div className={buildClassName(styles.section, styles.top)}>\n          <span className={styles.heading}>{lang('CreateTopicTitle')}</span>\n          <Transition\n            name=\"zoomFade\"\n            activeKey={Number(dummyTopic.iconEmojiId) || 0}\n            shouldCleanup\n            direction={1}\n            className={styles.iconWrapper}\n          >\n            <TopicIcon\n              topic={dummyTopic}\n              className={buildClassName(styles.icon, styles.clickable)}\n              onClick={handleIconClick}\n              size={ICON_SIZE}\n              noLoopLimit\n            />\n          </Transition>\n          <InputText\n            value={title}\n            onChange={handleTitleChange}\n            label={lang('lng_forum_topic_title')}\n            disabled={isLoading}\n            teactExperimentControlled\n          />\n        </div>\n        <div className={buildClassName(styles.section, styles.bottom)}>\n          <CustomEmojiPicker\n            idPrefix=\"create-topic-icons-set-\"\n            isHidden={!isActive}\n            loadAndPlay={isActive}\n            onCustomEmojiSelect={handleCustomEmojiSelect}\n            className={styles.iconPicker}\n            pickerListClassName=\"fab-padding-bottom\"\n            withDefaultTopicIcons\n          />\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleCreateTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { createTopicPanel } = selectTabState(global);\n    return {\n      chat: createTopicPanel?.chatId ? selectChat(global, createTopicPanel.chatId) : undefined,\n      createTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(CreateTopic));\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiChat, ApiSticker, ApiTopic } from '../../api/types';\nimport type { TabState } from '../../global/types';\n\nimport { DEFAULT_TOPIC_ICON_STICKER_ID, GENERAL_TOPIC_ID } from '../../config';\nimport {\n  selectChat, selectIsCurrentUserPremium, selectTabState, selectTopic,\n} from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport { REM } from '../common/helpers/mediaDimensions';\n\nimport useHistoryBack from '../../hooks/useHistoryBack';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport CustomEmojiPicker from '../common/CustomEmojiPicker';\nimport Icon from '../common/icons/Icon';\nimport TopicIcon from '../common/TopicIcon';\nimport FloatingActionButton from '../ui/FloatingActionButton';\nimport InputText from '../ui/InputText';\nimport Loading from '../ui/Loading';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\n\nimport styles from './ManageTopic.module.scss';\n\nconst ICON_SIZE = 5 * REM;\nconst RESET_ICON_ID = '0';\n\nexport type OwnProps = {\n  isActive: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  topic?: ApiTopic;\n  editTopicPanel?: TabState['editTopicPanel'];\n  isCurrentUserPremium?: boolean;\n};\n\nconst EditTopic: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  topic,\n  editTopicPanel,\n  isCurrentUserPremium,\n  onClose,\n}) => {\n  const { editTopic, openPremiumModal } = getActions();\n  const [title, setTitle] = useState('');\n  const [iconEmojiId, setIconEmojiId] = useState<string | undefined>(undefined);\n  const lang = useOldLang();\n\n  const isLoading = Boolean(editTopicPanel?.isLoading);\n  const isGeneral = topic?.id === GENERAL_TOPIC_ID;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!isActive) {\n      setTitle('');\n      setIconEmojiId(undefined);\n    }\n  }, [isActive]);\n\n  useEffect(() => {\n    if (topic?.title || topic?.iconEmojiId) {\n      setTitle(topic.title);\n      setIconEmojiId(topic.iconEmojiId);\n    }\n  }, [topic]);\n\n  const isTouched = useMemo(() => {\n    return title !== topic?.title || iconEmojiId !== topic?.iconEmojiId;\n  }, [iconEmojiId, title, topic?.iconEmojiId, topic?.title]);\n\n  const handleTitleChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const newTitle = e.target.value;\n    setTitle(newTitle);\n  }, []);\n\n  const handleEditTopic = useCallback(() => {\n    editTopic({\n      chatId: chat!.id,\n      title,\n      topicId: topic!.id,\n      iconEmojiId,\n    });\n  }, [chat, editTopic, iconEmojiId, title, topic]);\n\n  const handleCustomEmojiSelect = useCallback((emoji: ApiSticker) => {\n    if (!emoji.isFree && !isCurrentUserPremium && emoji.id !== DEFAULT_TOPIC_ICON_STICKER_ID) {\n      openPremiumModal({ initialSection: 'animated_emoji' });\n      return;\n    }\n\n    if (emoji.id === DEFAULT_TOPIC_ICON_STICKER_ID) {\n      setIconEmojiId(RESET_ICON_ID);\n      return;\n    }\n\n    setIconEmojiId(emoji.id);\n  }, [isCurrentUserPremium, openPremiumModal]);\n\n  const dummyTopic = useMemo(() => {\n    return {\n      ...topic!,\n      title,\n      iconEmojiId,\n    };\n  }, [iconEmojiId, title, topic]);\n\n  if (!chat?.isForum) {\n    return undefined;\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={buildClassName(styles.content, 'custom-scroll')}>\n        {!topic && <Loading />}\n        {topic && (\n          <>\n            <div className={buildClassName(styles.section, styles.top, isGeneral && styles.general)}>\n              <span className={styles.heading}>{lang(isGeneral ? 'CreateGeneralTopicTitle' : 'CreateTopicTitle')}</span>\n              <Transition\n                name=\"zoomFade\"\n                activeKey={Number(dummyTopic.iconEmojiId) || 0}\n                shouldCleanup\n                direction={1}\n                className={styles.iconWrapper}\n              >\n                <TopicIcon\n                  topic={dummyTopic}\n                  className={styles.icon}\n                  size={ICON_SIZE}\n                  noLoopLimit\n                />\n              </Transition>\n              <InputText\n                value={title}\n                onChange={handleTitleChange}\n                label={lang('lng_forum_topic_title')}\n                disabled={isLoading}\n                teactExperimentControlled\n              />\n            </div>\n            {!isGeneral && (\n              <div className={buildClassName(styles.section, styles.bottom)}>\n                <CustomEmojiPicker\n                  idPrefix=\"edit-topic-icons-set-\"\n                  isHidden={!isActive}\n                  loadAndPlay={isActive}\n                  onCustomEmojiSelect={handleCustomEmojiSelect}\n                  className={styles.iconPicker}\n                  pickerListClassName=\"fab-padding-bottom\"\n                  withDefaultTopicIcons\n                />\n              </div>\n            )}\n          </>\n        )}\n      </div>\n      <FloatingActionButton\n        isShown={isTouched}\n        disabled={isLoading}\n        onClick={handleEditTopic}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal(\n  (global): StateProps => {\n    const { editTopicPanel } = selectTabState(global);\n    const chat = editTopicPanel?.chatId ? selectChat(global, editTopicPanel.chatId) : undefined;\n    const topic = editTopicPanel?.chatId && editTopicPanel?.topicId\n      ? selectTopic(global, editTopicPanel.chatId, editTopicPanel.topicId) : undefined;\n\n    return {\n      chat,\n      topic,\n      editTopicPanel,\n      isCurrentUserPremium: selectIsCurrentUserPremium(global),\n    };\n  },\n)(EditTopic));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiBotInfo, ApiUser } from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport {\n  getChatAvatarHash, getMainUsername, getUserFirstOrLastName,\n} from '../../../global/helpers';\nimport {\n  selectBot,\n  selectTabState,\n  selectUserFullInfo,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  userId?: string;\n  user?: ApiUser;\n  chatBot?: ApiBotInfo;\n  currentBio?: string;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  maxBioLength: number;\n};\n\nconst ERROR_NAME_MISSING = 'Please provide name';\n\nconst ManageBot: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  onClose,\n  currentBio,\n  isActive,\n  maxBioLength,\n}) => {\n  const {\n    setBotInfo,\n    uploadProfilePhoto,\n    uploadContactProfilePhoto,\n    startBotFatherConversation,\n  } = getActions();\n\n  const [isFieldTouched, markFieldTouched, unmarkProfileTouched] = useFlag(false);\n  const [isAvatarTouched, markAvatarTouched, unmarkAvatarTouched] = useFlag(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  const username = useMemo(() => (user ? getMainUsername(user) : undefined), [user]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentName = user ? getUserFirstOrLastName(user) : '';\n\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [name, setName] = useState(currentName || '');\n  const [bio, setBio] = useState(currentBio || '');\n\n  const currentAvatarHash = user && getChatAvatarHash(user);\n  const currentAvatarBlobUrl = useMedia(currentAvatarHash, false, ApiMediaFormat.BlobUrl);\n\n  useEffect(() => {\n    unmarkProfileTouched();\n    unmarkAvatarTouched();\n  }, [userId]);\n\n  useEffect(() => {\n    setName(currentName || '');\n    setBio(currentBio || '');\n  }, [currentName, currentBio, user]);\n\n  useEffect(() => {\n    setPhoto(undefined);\n  }, [currentAvatarBlobUrl]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      unmarkProfileTouched();\n      unmarkAvatarTouched();\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleNameChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n    markFieldTouched();\n\n    if (error === ERROR_NAME_MISSING) {\n      setError(undefined);\n    }\n  });\n\n  const handleBioChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setBio(e.target.value);\n    markFieldTouched();\n  });\n\n  const handlePhotoChange = useLastCallback((newPhoto: File) => {\n    setPhoto(newPhoto);\n    markAvatarTouched();\n  });\n\n  const handleProfileSave = useLastCallback(() => {\n    const trimmedName = name.trim();\n    const trimmedBio = bio.trim();\n\n    if (!trimmedName.length) {\n      setError(ERROR_NAME_MISSING);\n      return;\n    }\n\n    setBotInfo({\n      ...(isFieldTouched && {\n        bot: user,\n        name: trimmedName,\n        description: trimmedBio,\n      }),\n    });\n\n    if (photo) {\n      uploadProfilePhoto({\n        file: photo,\n        ...(isAvatarTouched && { bot: user }),\n      });\n    }\n  });\n\n  const handleChangeEditIntro = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-intro` });\n  });\n\n  const handleChangeEditCommands = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}-commands` });\n  });\n\n  const handleChangeSettings = useLastCallback(() => {\n    startBotFatherConversation({ param: `${username}` });\n  });\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSelectAvatar = useLastCallback((file: File) => {\n    markAvatarTouched();\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  });\n\n  if (!user) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handlePhotoChange}\n            title={lang('ChatSetPhotoOrVideo')}\n            disabled={isLoading}\n          />\n          <InputText\n            id=\"user-name\"\n            label={lang('PaymentCheckoutName')}\n            onChange={handleNameChange}\n            value={name}\n            error={error === ERROR_NAME_MISSING ? error : undefined}\n            teactExperimentControlled\n          />\n          <TextArea\n            value={bio}\n            onChange={handleBioChange}\n            label={lang('DescriptionPlaceholder')}\n            disabled={isLoading}\n            maxLength={maxBioLength}\n            maxLengthIndicator={maxBioLength ? (maxBioLength - bio.length).toString() : undefined}\n          />\n        </div>\n        <div className=\"section\">\n          <div className=\"dialog-buttons\">\n            <ListItem icon=\"bot-commands-filled\" ripple onClick={handleChangeEditIntro}>\n              <span>{lang('BotEditIntro')}</span>\n            </ListItem>\n            <ListItem icon=\"bot-command\" ripple onClick={handleChangeEditCommands}>\n              <span>{lang('BotEditCommands')}</span>\n            </ListItem>\n            <ListItem icon=\"bots\" ripple onClick={handleChangeSettings}>\n              <span>{lang('BotChangeSettings')}</span>\n            </ListItem>\n            <div className=\"section-info section-info_push\">\n              {renderText(lang('BotManageInfo'), ['links'])}\n            </div>\n          </div>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isFieldTouched || isAvatarTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectBot(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const maxBioLength = selectCurrentLimit(global, 'aboutLength');\n\n    return {\n      userId,\n      user,\n      progress,\n      currentBio: userFullInfo?.bio,\n      maxBioLength,\n    };\n  },\n)(ManageBot));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport { getChatAvatarHash, getHasAdminRight, isChatPublic } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { formatInteger } from '../../../util/textFormat';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  canChangeInfo?: boolean;\n  canInvite?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst CHANNEL_TITLE_EMPTY = 'Channel title can\\'t be empty';\nconst CHANNEL_MAX_DESCRIPTION = 255;\n\nconst ManageChannel: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  canChangeInfo,\n  canInvite,\n  exportedInvites,\n  isActive,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    updateChat,\n    closeManagement,\n    leaveChannel,\n    deleteChannel,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n  } = getActions();\n\n  const currentTitle = chat?.title || '';\n  const currentAbout = chatFullInfo?.about || '';\n  const hasLinkedChat = Boolean(chatFullInfo?.linkedChatId);\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const imageHash = chat && getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!canInvite) return;\n    loadExportedChatInvites({ chatId });\n    loadExportedChatInvites({ chatId, isRevoked: true });\n    loadChatJoinRequests({ chatId });\n  }, [chatId, canInvite]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n  const removedUsersCount = chatFullInfo?.kickedMembers?.length || 0;\n\n  const handleClickEditType = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  }, [onScreenSelect]);\n\n  const handleClickDiscussion = useCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  }, [onScreenSelect]);\n\n  const handleClickReactions = useCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  }, [onScreenSelect]);\n\n  const handleClickAdministrators = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  }, [onScreenSelect]);\n\n  const handleClickInvites = useCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  }, [onScreenSelect]);\n\n  const handleClickRequests = useCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  }, [onScreenSelect]);\n\n  const handleSetPhoto = useCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleAboutChange = useCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleUpdateChannel = useCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(CHANNEL_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  }, [about, chatId, photo, title, updateChat]);\n\n  const handleClickSubscribers = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelSubscribers);\n  }, [onScreenSelect]);\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.ChannelRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleDeleteChannel = useCallback(() => {\n    if (chat.isCreator) {\n      deleteChannel({ chatId: chat.id });\n    } else {\n      leaveChannel({ chatId: chat.id });\n    }\n\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  }, [chat.isCreator, chat.id, closeDeleteDialog, closeManagement, leaveChannel, deleteChannel, openChat]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength ? `${enabledLength} / ${totalLength}` : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n  const isChannelPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"channel-title\"\n              label={lang('EnterChannelName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === CHANNEL_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"channel-about\"\n              label={lang('DescriptionPlaceholder')}\n              onChange={handleAboutChange}\n              value={about}\n              maxLength={CHANNEL_MAX_DESCRIPTION}\n              maxLengthIndicator={(CHANNEL_MAX_DESCRIPTION - about.length).toString()}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('ChannelType')}</span>\n              <span className=\"subtitle\">{isChannelPublic ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"message\"\n            multiline\n            onClick={handleClickDiscussion}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Discussion')}</span>\n            <span className=\"subtitle\">{hasLinkedChat ? lang('DiscussionUnlink') : lang('Add')}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('SubscribeRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{adminsCount}</span>\n          </ListItem>\n          <ListItem\n            icon=\"group\"\n            multiline\n            onClick={handleClickSubscribers}\n          >\n            <span className=\"title\" dir=\"auto\">{lang('ChannelSubscribers')}</span>\n            <span className=\"subtitle\" dir=\"auto\">{formatInteger(chat.membersCount!)}</span>\n          </ListItem>\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateChannel}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={chat.isCreator ? lang('ChannelDeleteAlert') : lang('ChannelLeaveAlert')}\n        confirmLabel={chat.isCreator ? lang('ChannelDelete') : lang('LeaveChannel')}\n        confirmHandler={handleDeleteChannel}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { management } = selectTabState(global);\n    const { progress } = management;\n    const { invites } = management.byChatId[chatId] || {};\n\n    return {\n      chat,\n      chatFullInfo: selectChatFullInfo(global, chatId),\n      progress,\n      canChangeInfo: getHasAdminRight(chat, 'changeInfo'),\n      canInvite: getHasAdminRight(chat, 'inviteUsers'),\n      exportedInvites: invites,\n      availableReactions: global.reactions.availableReactions,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageChannel));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useMemo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  isChannel?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n};\n\nconst ManageChatAdministrators: FC<OwnProps & StateProps> = ({\n  isActive,\n  chat,\n  isChannel,\n  currentUserId,\n  adminMembersById,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n}) => {\n  const { toggleSignatures } = getActions();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const areSignaturesEnabled = Boolean(chat?.areSignaturesShown);\n  const areProfilesEnabled = Boolean(chat?.areProfilesShown);\n\n  const canAddNewAdmins = Boolean(chat?.isCreator || (chat && getHasAdminRight(chat, 'addAdmins')));\n  const canToggleSignatures = isChannel && getHasAdminRight(chat!, 'postMessages');\n\n  const adminMembers = useMemo(() => {\n    if (!adminMembersById) {\n      return [];\n    }\n\n    const [owner, admins] = partition(Object.values(adminMembersById), (member) => member.isOwner);\n\n    return [...owner, ...admins];\n  }, [adminMembersById]);\n\n  const handleAdminMemberClick = useLastCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.ChatAdminRights);\n  });\n\n  const handleToggleSignatures = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled,\n      areSignaturesEnabled: !areSignaturesEnabled,\n    });\n  });\n\n  const handleToggleProfiles = useLastCallback(() => {\n    toggleSignatures({\n      chatId: chat!.id,\n      areProfilesEnabled: !areProfilesEnabled,\n      areSignaturesEnabled,\n    });\n  });\n\n  const handleAddAdminClick = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupAddAdmins);\n  });\n\n  const getMemberStatus = useLastCallback((member: ApiChatMember) => {\n    if (member.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const promotedByUser = member.promotedByUserId ? usersById[member.promotedByUserId] : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  });\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <ListItem\n            icon=\"recent\"\n            multiline\n            disabled\n          >\n            <span className=\"title\">{lang('EventLog')}</span>\n            <span className=\"subtitle\">{lang(isChannel ? 'EventLogInfoDetailChannel' : 'EventLogInfoDetail')}</span>\n          </ListItem>\n        </div>\n\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\" dir=\"auto\">\n            {lang(isChannel\n              ? 'Channel.Management.AddModeratorHelp'\n              : 'Group.Management.AddModeratorHelp')}\n          </p>\n\n          {adminMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleAdminMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberStatus(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n\n          <FloatingActionButton\n            isShown={canAddNewAdmins}\n            onClick={handleAddAdminClick}\n            ariaLabel={lang('Channel.Management.AddModerator')}\n          >\n            <Icon name=\"add-user-filled\" />\n          </FloatingActionButton>\n        </div>\n\n        {canToggleSignatures && (\n          <div className=\"section\">\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={areSignaturesEnabled}\n                label={lang('ChannelSignMessages')}\n                onChange={handleToggleSignatures}\n              />\n            </div>\n            {areSignaturesEnabled && (\n              <>\n                <div className=\"ListItem narrow\">\n                  <Checkbox\n                    checked={areProfilesEnabled}\n                    label={lang('ChannelSignMessagesWithProfile')}\n                    onChange={handleToggleProfiles}\n                  />\n                </div>\n                <p className=\"section-info section-info_push\">\n                  {lang('ChannelSignProfilesInfo')}\n                </p>\n              </>\n            )}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      isChannel: chat && isChatChannel(chat),\n      adminMembersById: selectChatFullInfo(global, chatId)?.adminMembersById,\n    };\n  },\n)(ManageChatAdministrators));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { PURCHASE_USERNAME, TME_LINK_PREFIX, USERNAME_PURCHASE_ERROR } from '../../../config';\nimport { isChatChannel, isChatPublic } from '../../../global/helpers';\nimport {\n  selectChat, selectChatFullInfo,\n  selectManagement, selectTabState,\n} from '../../../global/selectors';\nimport { selectCurrentLimit } from '../../../global/selectors/limits';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../../hooks/usePreviousDeprecated';\n\nimport Icon from '../../common/icons/Icon';\nimport LinkField from '../../common/LinkField';\nimport ManageUsernames from '../../common/ManageUsernames';\nimport SafeLink from '../../common/SafeLink';\nimport UsernameInput from '../../common/UsernameInput';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport RadioGroup from '../../ui/RadioGroup';\nimport Spinner from '../../ui/Spinner';\n\ntype PrivacyType = 'private' | 'public';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  isChannel: boolean;\n  progress?: ManagementProgress;\n  isUsernameAvailable?: boolean;\n  checkedUsername?: string;\n  error?: string;\n  isProtected?: boolean;\n  maxPublicLinks: number;\n  privateInviteLink?: string;\n};\n\nconst ManageChatPrivacyType: FC<OwnProps & StateProps> = ({\n  chat,\n  isActive,\n  isChannel,\n  progress,\n  isUsernameAvailable,\n  checkedUsername,\n  error,\n  isProtected,\n  maxPublicLinks,\n  privateInviteLink,\n  onClose,\n}) => {\n  const {\n    updatePublicLink,\n    updatePrivateLink,\n    toggleIsProtected,\n    openLimitReachedModal,\n    resetManagementError,\n  } = getActions();\n\n  const firstEditableUsername = useMemo(() => chat.usernames?.find(({ isEditable }) => isEditable), [chat.usernames]);\n  const currentUsername = firstEditableUsername?.username || '';\n  const isPublic = useMemo(() => isChatPublic(chat), [chat]);\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [privacyType, setPrivacyType] = useState<PrivacyType>(isPublic ? 'public' : 'private');\n  const [editableUsername, setEditableUsername] = useState<string>();\n  const [isRevokeConfirmDialogOpen, openRevokeConfirmDialog, closeRevokeConfirmDialog] = useFlag();\n  const [isUsernameLostDialogOpen, openUsernameLostDialog, closeUsernameLostDialog] = useFlag();\n\n  const previousIsUsernameAvailable = usePreviousDeprecated(isUsernameAvailable);\n  const renderingIsUsernameAvailable = isUsernameAvailable ?? previousIsUsernameAvailable;\n\n  const canUpdate = isProfileFieldsTouched && Boolean(\n    (privacyType === 'public'\n      && (editableUsername || (currentUsername && editableUsername === ''))\n      && renderingIsUsernameAvailable)\n    || (privacyType === 'private' && isPublic),\n  );\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n  }, [currentUsername]);\n\n  useEffect(() => {\n    if (privacyType && !privateInviteLink) {\n      updatePrivateLink();\n    }\n  }, [privacyType, privateInviteLink, updatePrivateLink]);\n\n  const handleUsernameChange = useCallback((value: string) => {\n    setEditableUsername(value);\n    setIsProfileFieldsTouched(true);\n\n    if (error) {\n      resetManagementError({\n        chatId: chat.id,\n      });\n    }\n  }, [chat.id, error]);\n\n  const handleOptionChange = useCallback((value: string, e: ChangeEvent<HTMLInputElement>) => {\n    const myChats = Object.values(getGlobal().chats.byId)\n      .filter(({ isCreator, usernames }) => isCreator && usernames?.some((c) => c.isActive));\n\n    if (myChats.length >= maxPublicLinks && value === 'public') {\n      openLimitReachedModal({ limit: 'channelsPublic' });\n      const radioGroup = e.currentTarget.closest('.radio-group') as HTMLDivElement;\n      // Patch for Teact bug with controlled inputs\n      // TODO Teact support added, this can now be removed\n      (radioGroup.querySelector('[value=public]') as HTMLInputElement).checked = false;\n      (radioGroup.querySelector('[value=private]') as HTMLInputElement).checked = true;\n      return;\n    }\n    setPrivacyType(value as PrivacyType);\n    setIsProfileFieldsTouched(true);\n  }, [maxPublicLinks, openLimitReachedModal]);\n\n  const handleForwardingOptionChange = useCallback((value: string) => {\n    toggleIsProtected({\n      chatId: chat.id,\n      isProtected: value === 'protected',\n    });\n  }, [chat.id, toggleIsProtected]);\n\n  const handleSave = useCallback(() => {\n    if (isPublic && privacyType === 'private') {\n      openUsernameLostDialog();\n    } else {\n      updatePublicLink({ username: privacyType === 'public' ? (editableUsername || '') : '' });\n    }\n  }, [isPublic, openUsernameLostDialog, privacyType, updatePublicLink, editableUsername]);\n\n  const handleMakeChannelPrivateConfirm = useCallback(() => {\n    updatePublicLink({ username: '', shouldDisableUsernames: true });\n    closeUsernameLostDialog();\n  }, [closeUsernameLostDialog, updatePublicLink]);\n\n  const handleRevokePrivateLink = useCallback(() => {\n    closeRevokeConfirmDialog();\n    updatePrivateLink();\n  }, [closeRevokeConfirmDialog, updatePrivateLink]);\n\n  const lang = useOldLang();\n  const langPrefix1 = isChannel ? 'Channel' : 'Mega';\n  const langPrefix2 = isChannel ? 'Channel' : 'Group';\n\n  const options = [\n    { value: 'private', label: lang(`${langPrefix1}Private`), subLabel: lang(`${langPrefix1}PrivateInfo`) },\n    { value: 'public', label: lang(`${langPrefix1}Public`), subLabel: lang(`${langPrefix1}PublicInfo`) },\n  ];\n\n  const forwardingOptions = [{\n    value: 'allowed',\n    label: lang('ChannelVisibility.Forwarding.Enabled'),\n  }, {\n    value: 'protected',\n    label: lang('ChannelVisibility.Forwarding.Disabled'),\n  }];\n\n  const isLoading = progress === ManagementProgress.InProgress;\n  const shouldRenderUsernamesManage = privacyType === 'public' && chat.usernames && chat.usernames.length > 0;\n\n  function renderPurchaseLink() {\n    const purchaseInfoLink = `${TME_LINK_PREFIX}${PURCHASE_USERNAME}`;\n\n    return (\n      <p className=\"section-info\" dir=\"auto\">\n        {(lang('lng_username_purchase_available') as string)\n          .replace('{link}', '%PURCHASE_LINK%')\n          .split('%')\n          .map((s) => {\n            return (s === 'PURCHASE_LINK' ? <SafeLink url={purchaseInfoLink} text={`@${PURCHASE_USERNAME}`} /> : s);\n          })}\n      </p>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">{lang(`${langPrefix2}Type`)}</h3>\n          <RadioGroup\n            selected={privacyType}\n            name=\"channel-type\"\n            options={options}\n            onChange={handleOptionChange}\n          />\n        </div>\n        {privacyType === 'private' ? (\n          <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n            {privateInviteLink ? (\n              <>\n                <LinkField link={privateInviteLink} className=\"invite-link\" />\n                <p className=\"section-info\" dir={lang.isRtl ? 'rtl' : undefined}>\n                  {lang(`${langPrefix1}PrivateLinkHelp`)}\n                </p>\n\n                <ListItem icon=\"delete\" ripple destructive onClick={openRevokeConfirmDialog}>\n                  {lang('RevokeLink')}\n                </ListItem>\n                <ConfirmDialog\n                  isOpen={isRevokeConfirmDialogOpen}\n                  onClose={closeRevokeConfirmDialog}\n                  text={lang('RevokeAlert')}\n                  confirmLabel={lang('RevokeButton')}\n                  confirmHandler={handleRevokePrivateLink}\n                  confirmIsDestructive\n                />\n              </>\n            ) : (\n              <Loading />\n            )}\n          </div>\n        ) : (\n          <div className=\"section no-border\">\n            <div className=\"settings-input\">\n              <UsernameInput\n                asLink\n                currentUsername={currentUsername}\n                isLoading={isLoading}\n                isUsernameAvailable={isUsernameAvailable}\n                checkedUsername={checkedUsername}\n                onChange={handleUsernameChange}\n              />\n            </div>\n            {error === USERNAME_PURCHASE_ERROR && renderPurchaseLink()}\n            <p className=\"section-info\" dir=\"auto\">\n              {lang(`${langPrefix2}.Username.CreatePublicLinkHelp`)}\n            </p>\n          </div>\n        )}\n        {shouldRenderUsernamesManage && (\n          <ManageUsernames\n            chatId={chat.id}\n            usernames={chat.usernames!}\n            onEditUsername={handleUsernameChange}\n          />\n        )}\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <h3 className=\"section-heading\">\n            {lang(isChannel ? 'ChannelVisibility.Forwarding.ChannelTitle' : 'ChannelVisibility.Forwarding.GroupTitle')}\n          </h3>\n          <RadioGroup\n            selected={isProtected ? 'protected' : 'allowed'}\n            name=\"forwarding-type\"\n            options={forwardingOptions}\n            onChange={handleForwardingOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {isChannel\n              ? lang('ChannelVisibility.Forwarding.ChannelInfo')\n              : lang('ChannelVisibility.Forwarding.GroupInfo')}\n          </p>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={canUpdate}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n        onClick={handleSave}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isUsernameLostDialogOpen}\n        onClose={closeUsernameLostDialog}\n        text={lang('ChannelVisibility.Confirm.MakePrivate.Channel', currentUsername)}\n        confirmHandler={handleMakeChannelPrivateConfirm}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { isUsernameAvailable, checkedUsername, error } = selectManagement(global, chatId)!;\n\n    return {\n      chat,\n      isChannel: isChatChannel(chat),\n      progress: selectTabState(global).management.progress,\n      error,\n      isUsernameAvailable,\n      checkedUsername,\n      isProtected: chat?.isProtected,\n      maxPublicLinks: selectCurrentLimit(global, 'channelsPublic'),\n      privateInviteLink: selectChatFullInfo(global, chatId)?.inviteLink,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId) && selectManagement(global, chatId));\n  },\n)(ManageChatPrivacyType));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember } from '../../../api/types';\n\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChatFullInfo } from '../../../global/selectors';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport ChatOrUserPicker from '../../common/pickers/ChatOrUserPicker';\n\nexport type OwnProps = {\n  chat: ApiChat;\n  isOpen: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  currentUserId?: string;\n  chatMembers?: ApiChatMember[];\n};\n\nconst RemoveGroupUserModal: FC<OwnProps & StateProps> = ({\n  chat,\n  currentUserId,\n  chatMembers,\n  isOpen,\n  onClose,\n}) => {\n  const {\n    loadMoreMembers,\n    deleteChatMember,\n  } = getActions();\n\n  const lang = useOldLang();\n  const [search, setSearch] = useState('');\n\n  const usersId = useMemo(() => {\n    const availableMemberIds = (chatMembers || [])\n      .reduce((acc: string[], member) => {\n        if (!member.isAdmin && !member.isOwner && member.userId !== currentUserId) {\n          acc.push(member.userId);\n        }\n        return acc;\n      }, []);\n\n    return filterPeersByQuery({ ids: availableMemberIds, query: search, type: 'user' });\n  }, [chatMembers, currentUserId, search]);\n\n  const handleRemoveUser = useCallback((userId: string) => {\n    deleteChatMember({ chatId: chat.id, userId });\n    onClose();\n  }, [chat.id, deleteChatMember, onClose]);\n\n  return (\n    <ChatOrUserPicker\n      isOpen={isOpen}\n      chatOrUserIds={usersId}\n      searchPlaceholder={lang('ChannelBlockUser')}\n      search={search}\n      onSearchChange={setSearch}\n      loadMore={loadMoreMembers}\n      onSelectChatOrUser={handleRemoveUser}\n      onClose={onClose}\n    />\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chat }): StateProps => {\n    const { currentUserId } = global;\n\n    return {\n      currentUserId,\n      chatMembers: selectChatFullInfo(global, chat.id)?.members,\n    };\n  },\n)(RemoveGroupUserModal));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatMember, ApiUser } from '../../../api/types';\n\nimport { getHasAdminRight, getUserFullName, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport RemoveGroupUserModal from './RemoveGroupUserModal';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  usersById: Record<string, ApiUser>;\n  removedMembers: ApiChatMember[];\n  canDeleteMembers?: boolean;\n  isChannel?: boolean;\n};\n\nconst ManageChatRemovedUsers: FC<OwnProps & StateProps> = ({\n  chat,\n  usersById,\n  canDeleteMembers,\n  removedMembers,\n  isChannel,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const lang = useOldLang();\n  const [isRemoveUserModalOpen, openRemoveUserModal, closeRemoveUserModal] = useFlag();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const getRemovedBy = useCallback((member: ApiChatMember) => {\n    if (!member.kickedByUserId) {\n      return undefined;\n    }\n\n    const kickedByUser = usersById[member.kickedByUserId];\n    if (!kickedByUser) {\n      return undefined;\n    }\n\n    return lang('UserRemovedBy', getUserFullName(kickedByUser));\n  }, [lang, usersById]);\n\n  const getContextActions = useCallback((member: ApiChatMember): MenuItemContextAction[] | undefined => {\n    if (!chat) {\n      return undefined;\n    }\n\n    return [{\n      title: lang('Unblock'),\n      icon: 'delete',\n      destructive: true,\n      handler: () => updateChatMemberBannedRights({\n        chatId: chat.id,\n        userId: member.userId,\n        bannedRights: {},\n      }),\n    }];\n  }, [lang, chat, updateChatMemberBannedRights]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\" dir={lang.isRtl ? 'rtl' : undefined}>\n          <p className=\"section-help\">{lang(isChannel ? 'NoBlockedChannel2' : 'NoBlockedGroup2')}</p>\n\n          {removedMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable\"\n              ripple\n              contextActions={getContextActions(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getRemovedBy(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n          {canDeleteMembers && (\n            <FloatingActionButton\n              isShown\n              onClick={openRemoveUserModal}\n              ariaLabel={lang('Channel.EditAdmin.Permission.BanUsers')}\n            >\n              <Icon name=\"add-user-filled\" />\n            </FloatingActionButton>\n          )}\n          {chat && canDeleteMembers && (\n            <RemoveGroupUserModal\n              chat={chat}\n              isOpen={isRemoveUserModalOpen}\n              onClose={closeRemoveUserModal}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById } = global.users;\n    const canDeleteMembers = chat && (getHasAdminRight(chat, 'banUsers') || chat.isCreator);\n\n    return {\n      chat,\n      usersById,\n      canDeleteMembers,\n      removedMembers: selectChatFullInfo(global, chatId)?.kickedMembers || MEMO_EMPTY_ARRAY,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageChatRemovedUsers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_DISCUSSION_GROUPS } from '../../../config';\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Avatar from '../../common/Avatar';\nimport GroupChatInfo from '../../common/GroupChatInfo';\nimport NothingFound from '../../common/NothingFound';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  chatsByIds: Record<string, ApiChat>;\n  linkedChat?: ApiChat;\n  forDiscussionIds?: string[];\n  isChannel?: boolean;\n};\n\nconst ManageDiscussion: FC<OwnProps & StateProps> = ({\n  chat,\n  onClose,\n  isActive,\n  chatId,\n  chatsByIds,\n  linkedChat,\n  forDiscussionIds,\n  isChannel,\n  onScreenSelect,\n}) => {\n  const {\n    loadGroupsForDiscussion,\n    linkDiscussionGroup,\n    unlinkDiscussionGroup,\n    toggleJoinRequest,\n    toggleJoinToSend,\n  } = getActions();\n\n  const [linkedGroupId, setLinkedGroupId] = useState<string>();\n  const [isConfirmUnlinkGroupDialogOpen, openConfirmUnlinkGroupDialog, closeConfirmUnlinkGroupDialog] = useFlag();\n  const [isConfirmLinkGroupDialogOpen, openConfirmLinkGroupDialog, closeConfirmLinkGroupDialog] = useFlag();\n  const [isJoinToSend, setIsJoinToSend] = useState(Boolean(linkedChat?.isJoinToSend));\n  const [isJoinRequest, setIsJoinRequest] = useState(Boolean(linkedChat?.isJoinRequest));\n  const lang = useOldLang();\n  const linkedChatId = linkedChat?.id;\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    loadGroupsForDiscussion();\n  }, [loadGroupsForDiscussion]);\n\n  useEffect(() => {\n    if (isActive) {\n      setIsJoinToSend(linkedChat?.isJoinToSend || false);\n      setIsJoinRequest(linkedChat?.isJoinRequest || false);\n    }\n  }, [linkedChat, isActive]);\n\n  const handleUnlinkGroupSessions = useCallback(() => {\n    closeConfirmUnlinkGroupDialog();\n    unlinkDiscussionGroup({ channelId: isChannel ? chatId : linkedChatId! });\n    if (!isChannel) {\n      onScreenSelect(ManagementScreens.Initial);\n    }\n  }, [closeConfirmUnlinkGroupDialog, unlinkDiscussionGroup, isChannel, chatId, linkedChatId, onScreenSelect]);\n\n  const handleLinkGroupSessions = useCallback(() => {\n    closeConfirmLinkGroupDialog();\n    linkDiscussionGroup({ channelId: chatId, chatId: linkedGroupId! });\n  }, [closeConfirmLinkGroupDialog, linkDiscussionGroup, chatId, linkedGroupId]);\n\n  const handleJoinToSendCheck = useCallback((checked: boolean) => {\n    setIsJoinToSend(checked);\n    toggleJoinToSend({ chatId: linkedChatId!, isEnabled: checked });\n    if (!checked) {\n      setIsJoinRequest(false);\n    }\n  }, [linkedChatId, toggleJoinToSend]);\n\n  const handleJoinRequestCheck = useCallback((checked: boolean) => {\n    setIsJoinRequest(checked);\n    toggleJoinRequest({ chatId: linkedChatId!, isEnabled: checked });\n  }, [linkedChatId, toggleJoinRequest]);\n\n  const onDiscussionClick = (groupId: string) => {\n    setLinkedGroupId(groupId);\n    openConfirmLinkGroupDialog();\n  };\n\n  function renderUnlinkGroupHeader() {\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedChat}\n        />\n        <div className=\"modal-title\">\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupHeader() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    return (\n      <div className=\"modal-header\">\n        <Avatar\n          size=\"tiny\"\n          peer={linkedGroup}\n        />\n        <div className=\"modal-title\">\n          {lang('Channel.DiscussionGroup.LinkGroup')}\n        </div>\n      </div>\n    );\n  }\n\n  function renderLinkGroupConfirmText() {\n    if (!linkedGroupId) return undefined;\n    const linkedGroup = chatsByIds[linkedGroupId];\n    if (!linkedGroup) return undefined;\n\n    if (linkedGroup.hasPrivateLink) {\n      return renderText(\n        `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?`,\n        ['br', 'simple_markdown'],\n      );\n    }\n\n    return renderText(\n      // eslint-disable-next-line max-len\n      `Do you want to make **${linkedGroup.title}** the discussion board for **${chat!.title}**?\\n\\nAnyone from the channel will be able to see messages in this group.`,\n      ['br', 'simple_markdown'],\n    );\n  }\n\n  function renderLinkedGroup() {\n    return (\n      <div>\n        <ListItem\n          className=\"chat-item-clickable\"\n          inactive\n        >\n          <GroupChatInfo chatId={linkedChat!.id} />\n        </ListItem>\n        <ListItem\n          icon=\"delete\"\n          ripple\n          destructive\n          onClick={openConfirmUnlinkGroupDialog}\n        >\n          {lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n        </ListItem>\n        <ConfirmDialog\n          isOpen={isConfirmUnlinkGroupDialogOpen}\n          onClose={closeConfirmUnlinkGroupDialog}\n          header={renderUnlinkGroupHeader()}\n          textParts={renderText(\n            lang(isChannel ? 'DiscussionUnlinkChannelAlert' : 'DiscussionUnlinkGroupAlert', linkedChat!.title),\n            ['br', 'simple_markdown'],\n          )}\n          confirmLabel={lang(isChannel ? 'DiscussionUnlinkGroup' : 'DiscussionUnlinkChannel')}\n          confirmHandler={handleUnlinkGroupSessions}\n          confirmIsDestructive\n        />\n      </div>\n    );\n  }\n\n  function renderDiscussionGroups() {\n    return (\n      <div>\n        <p className=\"section-help\" dir=\"auto\">{lang('DiscussionChannelHelp')}</p>\n\n        <div teactFastList>\n          <ListItem\n            key=\"create-group\"\n            icon=\"group\"\n            ripple\n            teactOrderKey={0}\n            disabled\n          >\n            {lang('DiscussionCreateGroup')}\n          </ListItem>\n          {forDiscussionIds ? (\n            forDiscussionIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i + 1}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => {\n                  onDiscussionClick(id);\n                }}\n              >\n                <GroupChatInfo chatId={id} />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound key=\"nothing-found\" teactOrderKey={0} text=\"No discussion groups found\" />\n          )}\n        </div>\n        <p className=\"mt-4 mb-0 section-help\" dir=\"auto\">{lang('DiscussionChannelHelp2')}</p>\n        <ConfirmDialog\n          isOpen={isConfirmLinkGroupDialogOpen}\n          onClose={closeConfirmLinkGroupDialog}\n          header={renderLinkGroupHeader()}\n          textParts={renderLinkGroupConfirmText()}\n          confirmLabel={lang('DiscussionLinkGroup')}\n          confirmHandler={handleLinkGroupSessions}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.DiscussionGroups}\n            size={STICKER_SIZE_DISCUSSION_GROUPS}\n            className=\"section-icon\"\n          />\n          {linkedChat && renderLinkedGroup()}\n          {!linkedChat && renderDiscussionGroups()}\n        </div>\n        {linkedChat && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">{lang('ChannelSettingsJoinTitle')}</h3>\n            <div className=\"ListItem narrow\">\n              <Checkbox\n                checked={isJoinToSend}\n                onCheck={handleJoinToSendCheck}\n                label={lang('ChannelSettingsJoinToSend')}\n              />\n            </div>\n            {isJoinToSend && (\n              <div className=\"ListItem narrow\">\n                <Checkbox\n                  checked={isJoinRequest}\n                  onCheck={handleJoinRequestCheck}\n                  label={lang('ChannelSettingsJoinRequest')}\n                />\n              </div>\n            )}\n            <p className=\"section-info section-info_push\">\n              {isJoinToSend ? lang('ChannelSettingsJoinRequestInfo') : lang('ChannelSettingsJoinToSendInfo')}\n            </p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { linkedChatId } = selectChatFullInfo(global, chatId) || {};\n    const { forDiscussionIds, byId: chatsByIds } = global.chats;\n    const linkedChat = linkedChatId ? selectChat(global, linkedChatId) : undefined;\n\n    return {\n      chat,\n      chatsByIds,\n      forDiscussionIds,\n      linkedChat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageDiscussion));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatBannedRights, ApiChatFullInfo, ApiExportedInvite,\n} from '../../../api/types';\nimport { ApiMediaFormat } from '../../../api/types';\nimport { ManagementProgress, ManagementScreens } from '../../../types';\n\nimport {\n  getChatAvatarHash,\n  getHasAdminRight,\n  isChatBasicGroup,\n  isChatPublic,\n} from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { debounce } from '../../../util/schedulers';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useMedia from '../../../hooks/useMedia';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport AvatarEditable from '../../ui/AvatarEditable';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\nimport Switcher from '../../ui/Switcher';\nimport TextArea from '../../ui/TextArea';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  chatFullInfo?: ApiChatFullInfo;\n  progress?: ManagementProgress;\n  isBasicGroup: boolean;\n  hasLinkedChannel: boolean;\n  canChangeInfo?: boolean;\n  canBanUsers?: boolean;\n  canInvite?: boolean;\n  canEditForum?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  isChannelsPremiumLimitReached: boolean;\n  availableReactions?: ApiAvailableReaction[];\n};\n\nconst GROUP_TITLE_EMPTY = 'Group title can\\'t be empty';\nconst GROUP_MAX_DESCRIPTION = 255;\n\nconst ALL_PERMISSIONS: Array<keyof ApiChatBannedRights> = [\n  'sendMessages',\n  'embedLinks',\n  'sendPolls',\n  'changeInfo',\n  'inviteUsers',\n  'pinMessages',\n  'manageTopics',\n  'sendPhotos',\n  'sendVideos',\n  'sendRoundvideos',\n  'sendVoices',\n  'sendAudios',\n  'sendDocs',\n];\n// Some checkboxes control multiple rights, and some rights are not controlled from Permissions screen,\n// so we need to define the amount manually\nconst TOTAL_PERMISSIONS_COUNT = ALL_PERMISSIONS.length + 1;\n\nconst runDebounced = debounce((cb) => cb(), 500, false);\n\nconst ManageGroup: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  chatFullInfo,\n  progress,\n  isBasicGroup,\n  hasLinkedChannel,\n  canChangeInfo,\n  canBanUsers,\n  canInvite,\n  canEditForum,\n  isActive,\n  exportedInvites,\n  isChannelsPremiumLimitReached,\n  availableReactions,\n  onScreenSelect,\n  onClose,\n}) => {\n  const {\n    togglePreHistoryHidden,\n    updateChat,\n    deleteChat,\n    leaveChannel,\n    deleteChannel,\n    closeManagement,\n    openChat,\n    loadExportedChatInvites,\n    loadChatJoinRequests,\n    toggleForum,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const currentTitle = chat.title;\n  const currentAbout = chatFullInfo?.about || '';\n\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [title, setTitle] = useState(currentTitle);\n  const [about, setAbout] = useState(currentAbout);\n  const [photo, setPhoto] = useState<File | undefined>();\n  const [error, setError] = useState<string | undefined>();\n  const [isForumEnabled, setIsForumEnabled] = useState(chat.isForum);\n  const imageHash = getChatAvatarHash(chat);\n  const currentAvatarBlobUrl = useMedia(imageHash, false, ApiMediaFormat.BlobUrl);\n  const isPublicGroup = useMemo(() => isChatPublic(chat), [chat]);\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const isPreHistoryHiddenCheckboxRef = useRef<HTMLDivElement>(null);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (canInvite) {\n      loadExportedChatInvites({ chatId });\n      loadExportedChatInvites({ chatId, isRevoked: true });\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chatId, canInvite]);\n\n  // Resetting `isForum` switch on flood wait error\n  useEffect(() => {\n    setIsForumEnabled(Boolean(chat.isForum));\n  }, [chat.isForum]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n    }\n  }, [progress]);\n\n  const handleClickEditType = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatPrivacyType);\n  });\n\n  const handleClickDiscussion = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Discussion);\n  });\n\n  const handleClickReactions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Reactions);\n  });\n\n  const handleClickPermissions = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupPermissions);\n  });\n\n  const handleClickAdministrators = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.ChatAdministrators);\n  });\n\n  const handleClickInvites = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.Invites);\n  });\n\n  const handleClickRequests = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.JoinRequests);\n  });\n\n  const handleSetPhoto = useLastCallback((file: File) => {\n    setPhoto(file);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleTitleChange = useLastCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleAboutChange = useLastCallback((e: ChangeEvent<HTMLTextAreaElement>) => {\n    setAbout(e.target.value);\n    setIsProfileFieldsTouched(true);\n  });\n\n  const handleUpdateGroup = useLastCallback(() => {\n    const trimmedTitle = title.trim();\n    const trimmedAbout = about.trim();\n\n    if (!trimmedTitle.length) {\n      setError(GROUP_TITLE_EMPTY);\n      return;\n    }\n\n    updateChat({\n      chatId,\n      title: trimmedTitle,\n      about: trimmedAbout,\n      photo,\n    });\n  });\n\n  const handleClickMembers = useLastCallback(() => {\n    onScreenSelect(ManagementScreens.GroupMembers);\n  });\n\n  const handleTogglePreHistory = useLastCallback(() => {\n    if (!chatFullInfo) {\n      return;\n    }\n\n    const { isPreHistoryHidden } = chatFullInfo;\n\n    togglePreHistoryHidden({ chatId: chat.id, isEnabled: !isPreHistoryHidden });\n  });\n\n  const handleForumToggle = useLastCallback(() => {\n    setIsForumEnabled((current) => {\n      const newIsForumEnabled = !current;\n\n      runDebounced(() => {\n        toggleForum({ chatId, isEnabled: newIsForumEnabled });\n      });\n\n      return newIsForumEnabled;\n    });\n  });\n\n  useEffect(() => {\n    if (!isChannelsPremiumLimitReached) {\n      return;\n    }\n\n    // Teact does not have full support of controlled form components, we need to \"disable\" input value change manually\n    // TODO Teact support added, this can now be removed\n    const checkbox = isPreHistoryHiddenCheckboxRef.current?.querySelector('input') as HTMLInputElement;\n    checkbox.checked = !chatFullInfo?.isPreHistoryHidden;\n  }, [isChannelsPremiumLimitReached, chatFullInfo?.isPreHistoryHidden]);\n\n  const chatReactionsDescription = useMemo(() => {\n    if (!chatFullInfo?.enabledReactions) {\n      return lang('ReactionsOff');\n    }\n\n    if (chatFullInfo.enabledReactions.type === 'all') {\n      return lang('ReactionsAll');\n    }\n\n    const enabledLength = chatFullInfo.enabledReactions.allowed.length;\n    const totalLength = availableReactions?.filter((reaction) => !reaction.isInactive).length || 0;\n\n    return totalLength\n      ? `${enabledLength} / ${totalLength}`\n      : `${enabledLength}`;\n  }, [availableReactions, chatFullInfo?.enabledReactions, lang]);\n\n  const enabledPermissionsCount = useMemo(() => {\n    if (!chat.defaultBannedRights) {\n      return 0;\n    }\n\n    let totalCount = ALL_PERMISSIONS.filter(\n      (key) => {\n        if (key === 'manageTopics' && !isForumEnabled) return false;\n        return !chat.defaultBannedRights![key as keyof ApiChatBannedRights];\n      },\n    ).length;\n\n    const { sendStickers, sendGifs } = chat.defaultBannedRights;\n\n    // These two rights are controlled with a single checkbox\n    if (!sendStickers && !sendGifs) {\n      totalCount += 1;\n    }\n\n    return totalCount;\n  }, [chat.defaultBannedRights, isForumEnabled]);\n\n  const adminsCount = useMemo(() => {\n    return Object.keys(chatFullInfo?.adminMembersById || {}).length;\n  }, [chatFullInfo?.adminMembersById]);\n\n  const handleDeleteGroup = useLastCallback(() => {\n    if (isBasicGroup) {\n      deleteChat({ chatId: chat.id });\n    } else if (!chat.isCreator) {\n      leaveChannel({ chatId: chat.id });\n    } else {\n      deleteChannel({ chatId: chat.id });\n    }\n    closeDeleteDialog();\n    closeManagement();\n    openChat({ id: undefined });\n  });\n\n  if (chat.isRestricted || chat.isForbidden) {\n    return undefined;\n  }\n\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AvatarEditable\n            isForForum={isForumEnabled}\n            currentAvatarBlobUrl={currentAvatarBlobUrl}\n            onChange={handleSetPhoto}\n            disabled={!canChangeInfo}\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"group-title\"\n              label={lang('GroupName')}\n              onChange={handleTitleChange}\n              value={title}\n              error={error === GROUP_TITLE_EMPTY ? error : undefined}\n              disabled={!canChangeInfo}\n            />\n            <TextArea\n              id=\"group-about\"\n              label={lang('DescriptionPlaceholder')}\n              maxLength={GROUP_MAX_DESCRIPTION}\n              maxLengthIndicator={(GROUP_MAX_DESCRIPTION - about.length).toString()}\n              onChange={handleAboutChange}\n              value={about}\n              disabled={!canChangeInfo}\n              noReplaceNewlines\n            />\n          </div>\n          {chat.isCreator && (\n            <ListItem icon=\"lock\" multiline onClick={handleClickEditType}>\n              <span className=\"title\">{lang('GroupType')}</span>\n              <span className=\"subtitle\">{isPublicGroup ? lang('TypePublic') : lang('TypePrivate')}</span>\n            </ListItem>\n          )}\n          {hasLinkedChannel && (\n            <ListItem\n              icon=\"message\"\n              multiline\n              onClick={handleClickDiscussion}\n            >\n              <span className=\"title\">{lang('LinkedChannel')}</span>\n              <span className=\"subtitle\">{lang('DiscussionUnlink')}</span>\n            </ListItem>\n          )}\n          <ListItem\n            icon=\"permissions\"\n            multiline\n            onClick={handleClickPermissions}\n            disabled={!canBanUsers}\n          >\n            <span className=\"title\">{lang('ChannelPermissions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {enabledPermissionsCount}/{TOTAL_PERMISSIONS_COUNT - (isForumEnabled ? 0 : 1)}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"heart-outline\"\n            multiline\n            onClick={handleClickReactions}\n            disabled={!canChangeInfo}\n          >\n            <span className=\"title\">{lang('Reactions')}</span>\n            <span className=\"subtitle\" dir=\"auto\">\n              {chatReactionsDescription}\n            </span>\n          </ListItem>\n          <ListItem\n            icon=\"admin\"\n            multiline\n            onClick={handleClickAdministrators}\n          >\n            <span className=\"title\">{lang('ChannelAdministrators')}</span>\n            <span className=\"subtitle\">{formatInteger(adminsCount)}</span>\n          </ListItem>\n          {canInvite && (\n            <ListItem\n              icon=\"link\"\n              onClick={handleClickInvites}\n              multiline\n              disabled={!exportedInvites}\n            >\n              <span className=\"title\">{lang('GroupInfo.InviteLinks')}</span>\n              <span className=\"subtitle\">\n                {exportedInvites ? formatInteger(exportedInvites.length) : lang('Loading')}\n              </span>\n            </ListItem>\n          )}\n          {Boolean(chat.joinRequests?.length) && (\n            <ListItem\n              icon=\"add-user-filled\"\n              onClick={handleClickRequests}\n              multiline\n            >\n              <span className=\"title\">{lang('MemberRequests')}</span>\n              <span className=\"subtitle\">\n                {formatInteger(chat.joinRequests!.length)}\n              </span>\n            </ListItem>\n          )}\n          {canEditForum && (\n            <>\n              <ListItem icon=\"forums\" ripple onClick={handleForumToggle}>\n                <span>{lang('ChannelTopics')}</span>\n                <Switcher\n                  id=\"group-notifications\"\n                  label={lang('ChannelTopics')}\n                  checked={isForumEnabled}\n                  inactive\n                />\n              </ListItem>\n              <div className=\"section-info section-info_push\">{lang('ForumToggleDescription')}</div>\n            </>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"group\" multiline onClick={handleClickMembers}>\n            <span className=\"title\">{lang('GroupMembers')}</span>\n            <span className=\"subtitle\">{formatInteger(chat.membersCount ?? 0)}</span>\n          </ListItem>\n\n          {!isPublicGroup && !hasLinkedChannel && Boolean(chatFullInfo) && (\n            <div className=\"ListItem narrow\" ref={isPreHistoryHiddenCheckboxRef}>\n              <Checkbox\n                checked={!chatFullInfo.isPreHistoryHidden}\n                label={lang('ChatHistory')}\n                onChange={handleTogglePreHistory}\n                subLabel={\n                  chatFullInfo.isPreHistoryHidden ? lang('ChatHistoryHiddenInfo2') : lang('ChatHistoryVisibleInfo')\n                }\n                disabled={!canBanUsers}\n              />\n            </div>\n          )}\n        </div>\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteMega')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleUpdateGroup}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        textParts={renderText(\n          isBasicGroup || !chat.isCreator\n            ? lang('AreYouSureDeleteAndExit')\n            : lang('AreYouSureDeleteThisChatWithGroup', chat.title),\n          ['br', 'simple_markdown'],\n        )}\n        confirmLabel={isBasicGroup || !chat.isCreator ? lang('DeleteMega') : lang('DeleteGroupForAll')}\n        confirmHandler={handleDeleteGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const { management, limitReachedModal } = selectTabState(global);\n    const { progress } = management;\n    const hasLinkedChannel = Boolean(chatFullInfo?.linkedChatId);\n    const isBasicGroup = isChatBasicGroup(chat);\n    const { invites } = management.byChatId[chatId] || {};\n    const canEditForum = !hasLinkedChannel && (getHasAdminRight(chat, 'changeInfo') || chat.isCreator);\n    const canChangeInfo = chat.isCreator || getHasAdminRight(chat, 'changeInfo');\n    const canBanUsers = chat.isCreator || getHasAdminRight(chat, 'banUsers');\n    const canInvite = chat.isCreator || getHasAdminRight(chat, 'inviteUsers');\n\n    return {\n      chat,\n      chatFullInfo,\n      progress,\n      isBasicGroup,\n      hasLinkedChannel,\n      canChangeInfo,\n      canBanUsers,\n      canInvite,\n      exportedInvites: invites,\n      isChannelsPremiumLimitReached: limitReachedModal?.limit === 'channels',\n      availableReactions: global.reactions.availableReactions,\n      canEditForum,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroup));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type {\n  ApiChat, ApiChatAdminRights, ApiChatMember, ApiUser,\n} from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { getUserFullName, isChatBasicGroup, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedUserId?: string;\n  isPromotedByCurrentUser?: boolean;\n  isNewAdmin?: boolean;\n  isActive: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  chat: ApiChat;\n  usersById: Record<string, ApiUser>;\n  adminMembersById?: Record<string, ApiChatMember>;\n  hasFullInfo: boolean;\n  currentUserId?: string;\n  isChannel: boolean;\n  isFormFullyDisabled: boolean;\n  isForum?: boolean;\n  defaultRights?: ApiChatAdminRights;\n};\n\nconst CUSTOM_TITLE_MAX_LENGTH = 16;\n\nconst ManageGroupAdminRights: FC<OwnProps & StateProps> = ({\n  isActive,\n  isNewAdmin,\n  selectedUserId,\n  defaultRights,\n  chat,\n  usersById,\n  currentUserId,\n  adminMembersById,\n  hasFullInfo,\n  isChannel,\n  isForum,\n  isFormFullyDisabled,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { updateChatAdmin } = getActions();\n\n  const [permissions, setPermissions] = useState<ApiChatAdminRights>({});\n  const [isTouched, setIsTouched] = useState(Boolean(isNewAdmin));\n  const [isLoading, setIsLoading] = useState(false);\n  const [isDismissConfirmationDialogOpen, openDismissConfirmationDialog, closeDismissConfirmationDialog] = useFlag();\n  const [customTitle, setCustomTitle] = useState('');\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const selectedChatMember = useMemo(() => {\n    const selectedAdminMember = selectedUserId ? adminMembersById?.[selectedUserId] : undefined;\n\n    // If `selectedAdminMember` variable is filled with a value, then we have already saved the administrator,\n    // so now we need to return to the list of administrators\n    if (isNewAdmin && (selectedAdminMember || !selectedUserId)) {\n      return undefined;\n    }\n\n    if (isNewAdmin) {\n      const user = getGlobal().users.byId[selectedUserId!];\n\n      return user ? {\n        userId: user.id,\n        adminRights: defaultRights,\n        customTitle: lang('ChannelAdmin'),\n        isOwner: false,\n        promotedByUserId: undefined,\n      } : undefined;\n    }\n\n    return selectedAdminMember;\n  }, [adminMembersById, defaultRights, isNewAdmin, lang, selectedUserId]);\n\n  useEffect(() => {\n    if (hasFullInfo && selectedUserId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.ChatAdministrators);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedUserId]);\n\n  useEffect(() => {\n    setPermissions(selectedChatMember?.adminRights || {});\n    setCustomTitle((selectedChatMember?.customTitle || '').substr(0, CUSTOM_TITLE_MAX_LENGTH));\n    setIsTouched(Boolean(isNewAdmin));\n    setIsLoading(false);\n  }, [defaultRights, isNewAdmin, selectedChatMember]);\n\n  const handlePermissionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name } = e.target;\n\n    function getUpdatedPermissionValue(value: true | undefined) {\n      return value ? undefined : true;\n    }\n\n    setPermissions((p) => ({\n      ...p,\n      [name]: getUpdatedPermissionValue(p[name as keyof ApiChatAdminRights]),\n    }));\n    setIsTouched(true);\n  }, []);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: permissions,\n      customTitle,\n    });\n  }, [selectedUserId, updateChatAdmin, chat.id, permissions, customTitle]);\n\n  const handleDismissAdmin = useCallback(() => {\n    if (!selectedUserId) {\n      return;\n    }\n\n    updateChatAdmin({\n      chatId: chat.id,\n      userId: selectedUserId,\n      adminRights: {},\n    });\n    closeDismissConfirmationDialog();\n  }, [chat.id, closeDismissConfirmationDialog, selectedUserId, updateChatAdmin]);\n\n  const getControlIsDisabled = useCallback((key: keyof ApiChatAdminRights) => {\n    if (isChatBasicGroup(chat)) {\n      return false;\n    }\n\n    if (isFormFullyDisabled || !chat.adminRights) {\n      return true;\n    }\n\n    if (chat.isCreator) {\n      return false;\n    }\n\n    return !chat.adminRights![key];\n  }, [chat, isFormFullyDisabled]);\n\n  const memberStatus = useMemo(() => {\n    if (isNewAdmin || !selectedChatMember) {\n      return undefined;\n    }\n\n    if (selectedChatMember.isOwner) {\n      return lang('ChannelCreator');\n    }\n\n    const promotedByUser = selectedChatMember.promotedByUserId\n      ? usersById[selectedChatMember.promotedByUserId]\n      : undefined;\n\n    if (promotedByUser) {\n      return lang('EditAdminPromotedBy', getUserFullName(promotedByUser));\n    }\n\n    return lang('ChannelAdmin');\n  }, [isNewAdmin, selectedChatMember, usersById, lang]);\n\n  const handleCustomTitleChange = useCallback((e) => {\n    const { value } = e.target;\n    setCustomTitle(value);\n    setIsTouched(true);\n  }, []);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo\n              userId={selectedChatMember.userId}\n              status={memberStatus}\n              forceShowSelf\n            />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{lang('EditAdminWhatCanDo')}</h3>\n\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"changeInfo\"\n              checked={Boolean(permissions.changeInfo)}\n              label={lang(isChannel ? 'EditAdminChangeChannelInfo' : 'EditAdminChangeGroupInfo')}\n              blocking\n              disabled={getControlIsDisabled('changeInfo')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"postMessages\"\n                checked={Boolean(permissions.postMessages)}\n                label={lang('EditAdminPostMessages')}\n                blocking\n                disabled={getControlIsDisabled('postMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"editMessages\"\n                checked={Boolean(permissions.editMessages)}\n                label={lang('EditAdminEditMessages')}\n                blocking\n                disabled={getControlIsDisabled('editMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteMessages\"\n              checked={Boolean(permissions.deleteMessages)}\n              label={lang(isChannel ? 'EditAdminDeleteMessages' : 'EditAdminGroupDeleteMessages')}\n              blocking\n              disabled={getControlIsDisabled('deleteMessages')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"postStories\"\n              checked={Boolean(permissions.postStories)}\n              label={lang('EditAdminPostStories')}\n              blocking\n              disabled={getControlIsDisabled('postStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"editStories\"\n              checked={Boolean(permissions.editStories)}\n              label={lang('EditAdminEditStories')}\n              blocking\n              disabled={getControlIsDisabled('editStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"deleteStories\"\n              checked={Boolean(permissions.deleteStories)}\n              label={lang('EditAdminDeleteStories')}\n              blocking\n              disabled={getControlIsDisabled('deleteStories')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"banUsers\"\n                checked={Boolean(permissions.banUsers)}\n                label={lang('EditAdminBanUsers')}\n                blocking\n                disabled={getControlIsDisabled('banUsers')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"inviteUsers\"\n              checked={Boolean(permissions.inviteUsers)}\n              label={lang('EditAdminAddUsers')}\n              blocking\n              disabled={getControlIsDisabled('inviteUsers')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"pinMessages\"\n                checked={Boolean(permissions.pinMessages)}\n                label={lang('EditAdminPinMessages')}\n                blocking\n                disabled={getControlIsDisabled('pinMessages')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"addAdmins\"\n              checked={Boolean(permissions.addAdmins)}\n              label={lang('EditAdminAddAdmins')}\n              blocking\n              disabled={getControlIsDisabled('addAdmins')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          <div className=\"ListItem\">\n            <Checkbox\n              name=\"manageCall\"\n              checked={Boolean(permissions.manageCall)}\n              label={lang('StartVoipChatPermission')}\n              blocking\n              disabled={getControlIsDisabled('manageCall')}\n              onChange={handlePermissionChange}\n            />\n          </div>\n          {isForum && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"manageTopics\"\n                checked={Boolean(permissions.manageTopics)}\n                label={lang('ManageTopicsPermission')}\n                blocking\n                disabled={getControlIsDisabled('manageTopics')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n          {!isChannel && (\n            <div className=\"ListItem\">\n              <Checkbox\n                name=\"anonymous\"\n                checked={Boolean(permissions.anonymous)}\n                label={lang('EditAdminSendAnonymously')}\n                blocking\n                disabled={getControlIsDisabled('anonymous')}\n                onChange={handlePermissionChange}\n              />\n            </div>\n          )}\n\n          {isFormFullyDisabled && (\n            <p className=\"section-info mb-4\" dir=\"auto\">\n              {lang('Channel.EditAdmin.CannotEdit')}\n            </p>\n          )}\n\n          {!isChannel && (\n            <InputText\n              id=\"admin-title\"\n              label={lang('EditAdminRank')}\n              onChange={handleCustomTitleChange}\n              value={customTitle}\n              disabled={isFormFullyDisabled}\n              maxLength={CUSTOM_TITLE_MAX_LENGTH}\n            />\n          )}\n\n          {currentUserId !== selectedUserId && !isFormFullyDisabled && !isNewAdmin && (\n            <ListItem icon=\"delete\" ripple destructive onClick={openDismissConfirmationDialog}>\n              {lang('EditAdminRemoveAdmin')}\n            </ListItem>\n          )}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      {!isNewAdmin && (\n        <ConfirmDialog\n          isOpen={isDismissConfirmationDialogOpen}\n          onClose={closeDismissConfirmationDialog}\n          text=\"Are you sure you want to dismiss this admin?\"\n          confirmLabel={lang('Channel.Admin.Dismiss')}\n          confirmHandler={handleDismissAdmin}\n          confirmIsDestructive\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const { byId: usersById } = global.users;\n    const { currentUserId } = global;\n    const isChannel = isChatChannel(chat);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n    const isForum = chat.isForum;\n\n    return {\n      chat,\n      usersById,\n      currentUserId,\n      isChannel,\n      isForum,\n      isFormFullyDisabled,\n      defaultRights: chat.adminRights,\n      hasFullInfo: Boolean(fullInfo),\n      adminMembersById: fullInfo?.adminMembersById,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupAdminRights));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useMemo, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens, NewChatMembersProgress } from '../../../types';\n\nimport {\n  getHasAdminRight, isChatBasicGroup,\n  isChatChannel, isUserBot, isUserRightBanned, sortUserIds,\n} from '../../../global/helpers';\nimport { filterPeersByQuery } from '../../../global/helpers/peers';\nimport { selectChat, selectChatFullInfo, selectTabState } from '../../../global/selectors';\nimport { unique } from '../../../util/iteratees';\nimport sortChatIds from '../../common/helpers/sortChatIds';\n\nimport usePeerStoriesPolling from '../../../hooks/polling/usePeerStoriesPolling';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useInfiniteScroll from '../../../hooks/useInfiniteScroll';\nimport useKeyboardListNavigation from '../../../hooks/useKeyboardListNavigation';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InfiniteScroll from '../../ui/InfiniteScroll';\nimport InputText from '../../ui/InputText';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\nimport Loading from '../../ui/Loading';\nimport Switcher from '../../ui/Switcher';\nimport DeleteMemberModal from '../DeleteMemberModal';\n\ntype OwnProps = {\n  chatId: string;\n  isActive: boolean;\n  noAdmins?: boolean;\n  onClose: NoneToVoidFunction;\n  onScreenSelect?: (screen: ManagementScreens) => void;\n  onChatMemberSelect?: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n};\n\ntype StateProps = {\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  canAddMembers?: boolean;\n  adminMembersById?: Record<string, ApiChatMember>;\n  isChannel?: boolean;\n  localContactIds?: string[];\n  searchQuery?: string;\n  isSearching?: boolean;\n  localUserIds?: string[];\n  globalUserIds?: string[];\n  currentUserId?: string;\n  canDeleteMembers?: boolean;\n  areParticipantsHidden?: boolean;\n  canHideParticipants?: boolean;\n};\n\nconst ManageGroupMembers: FC<OwnProps & StateProps> = ({\n  chatId,\n  noAdmins,\n  members,\n  canAddMembers,\n  adminMembersById,\n  userStatusesById,\n  isChannel,\n  isActive,\n  globalUserIds,\n  localContactIds,\n  localUserIds,\n  isSearching,\n  searchQuery,\n  currentUserId,\n  canDeleteMembers,\n  areParticipantsHidden,\n  canHideParticipants,\n  onClose,\n  onScreenSelect,\n  onChatMemberSelect,\n}) => {\n  const {\n    openChat, setUserSearchQuery, closeManagement,\n    toggleParticipantsHidden, setNewChatMembersDialogState, toggleManagement,\n  } = getActions();\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const [deletingUserId, setDeletingUserId] = useState<string | undefined>();\n\n  const adminIds = useMemo(() => {\n    return noAdmins && adminMembersById ? Object.keys(adminMembersById) : [];\n  }, [adminMembersById, noAdmins]);\n\n  const memberIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    if (!members || !usersById) {\n      return [];\n    }\n\n    const userIds = sortUserIds(\n      members.map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n\n    return noAdmins ? userIds.filter((userId) => !adminIds.includes(userId)) : userIds;\n  }, [members, userStatusesById, noAdmins, adminIds]);\n\n  usePeerStoriesPolling(memberIds);\n\n  const displayedIds = useMemo(() => {\n    // No need for expensive global updates on users, so we avoid them\n    const usersById = getGlobal().users.byId;\n    const shouldUseSearchResults = Boolean(searchQuery);\n    const listedIds = !shouldUseSearchResults\n      ? memberIds\n      : (localContactIds ? filterPeersByQuery({ ids: localContactIds, query: searchQuery, type: 'user' }) : []);\n\n    return sortChatIds(\n      unique([\n        ...listedIds,\n        ...(shouldUseSearchResults ? localUserIds || [] : []),\n        ...(shouldUseSearchResults ? globalUserIds || [] : []),\n      ]).filter((contactId) => {\n        const user = usersById[contactId];\n        if (!user) {\n          return true;\n        }\n\n        return (isChannel || user.canBeInvitedToGroup || !isUserBot(user))\n          && (!noAdmins || !adminIds.includes(contactId));\n      }),\n      true,\n    );\n  }, [memberIds, localContactIds, searchQuery, localUserIds, globalUserIds, isChannel, noAdmins, adminIds]);\n\n  const [viewportIds, getMore] = useInfiniteScroll(undefined, displayedIds, Boolean(searchQuery));\n\n  const handleMemberClick = useLastCallback((id: string) => {\n    if (noAdmins) {\n      onChatMemberSelect!(id, true);\n      onScreenSelect!(ManagementScreens.ChatNewAdminRights);\n    } else {\n      closeManagement();\n      openChat({ id });\n    }\n  });\n\n  const handleFilterChange = useLastCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setUserSearchQuery({ query: e.target.value });\n  });\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isActive, (index) => {\n    if (viewportIds && viewportIds.length > 0) {\n      handleMemberClick(viewportIds[index === -1 ? 0 : index]);\n    }\n  }, '.ListItem-button', true);\n\n  const handleDeleteMembersModalClose = useLastCallback(() => {\n    setDeletingUserId(undefined);\n  });\n\n  const handleToggleParticipantsHidden = useLastCallback(() => {\n    toggleParticipantsHidden({ chatId, isEnabled: !areParticipantsHidden });\n  });\n\n  const handleNewMemberDialogOpen = useLastCallback(() => {\n    toggleManagement();\n    setNewChatMembersDialogState({ newChatMembersProgress: NewChatMembersProgress.InProgress });\n  });\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  function getMemberContextAction(memberId: string): MenuItemContextAction[] | undefined {\n    return memberId === currentUserId || !canDeleteMembers ? undefined : [{\n      title: lang('lng_context_remove_from_group'),\n      icon: 'stop',\n      handler: () => {\n        setDeletingUserId(memberId);\n      },\n    }];\n  }\n\n  function renderSearchField() {\n    return (\n      <div className=\"Management__filter\" dir={lang.isRtl ? 'rtl' : undefined}>\n        <InputText\n          ref={inputRef}\n          value={searchQuery}\n          onChange={handleFilterChange}\n          placeholder={lang('Search')}\n        />\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"Management\">\n      {noAdmins && renderSearchField()}\n      <div className=\"panel-content custom-scroll\">\n        {canHideParticipants && !isChannel && (\n          <div className=\"section\">\n            <ListItem icon=\"group\" ripple onClick={handleToggleParticipantsHidden}>\n              <span>{lang('ChannelHideMembers')}</span>\n              <Switcher label={lang('ChannelHideMembers')} checked={areParticipantsHidden} />\n            </ListItem>\n            <p className=\"section-info\">\n              {lang(areParticipantsHidden ? 'GroupMembers.MembersHiddenOn' : 'GroupMembers.MembersHiddenOff')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          {viewportIds?.length ? (\n            <InfiniteScroll\n              className=\"picker-list custom-scroll\"\n              items={displayedIds}\n              onLoadMore={getMore}\n              noScrollRestore={Boolean(searchQuery)}\n              ref={containerRef}\n              onKeyDown={handleKeyDown}\n            >\n              {viewportIds.map((id) => (\n                <ListItem\n                  key={id}\n                  className=\"chat-item-clickable scroll-item\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => handleMemberClick(id)}\n                  contextActions={getMemberContextAction(id)}\n                  withPortalForMenu\n                >\n                  <PrivateChatInfo userId={id} forceShowSelf withStory />\n                </ListItem>\n              ))}\n            </InfiniteScroll>\n          ) : !isSearching && viewportIds && !viewportIds.length ? (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          ) : (\n            <Loading />\n          )}\n        </div>\n      </div>\n      {canAddMembers && (\n        <FloatingActionButton\n          isShown\n          onClick={handleNewMemberDialogOpen}\n          ariaLabel={lang('lng_channel_add_users')}\n        >\n          <Icon name=\"add-user-filled\" />\n        </FloatingActionButton>\n      )}\n      {canDeleteMembers && (\n        <DeleteMemberModal\n          isOpen={Boolean(deletingUserId)}\n          userId={deletingUserId}\n          onClose={handleDeleteMembersModalClose}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { statusesById: userStatusesById } = global.users;\n    const { members, adminMembersById, areParticipantsHidden } = selectChatFullInfo(global, chatId) || {};\n    const isChannel = chat && isChatChannel(chat);\n    const { userIds: localContactIds } = global.contactList || {};\n    const hiddenMembersMinCount = global.appConfig?.hiddenMembersMinCount;\n\n    const canDeleteMembers = chat && (chat.isCreator || getHasAdminRight(chat, 'banUsers'));\n\n    const canHideParticipants = canDeleteMembers && !isChatBasicGroup(chat) && chat.membersCount !== undefined\n    && hiddenMembersMinCount !== undefined && chat.membersCount >= hiddenMembersMinCount;\n\n    const canAddMembers = chat && ((getHasAdminRight(chat, 'inviteUsers')\n        || (!isChannel && !isUserRightBanned(chat, 'inviteUsers')))\n      || chat.isCreator\n    );\n\n    const {\n      query: searchQuery,\n      fetchingStatus,\n      globalUserIds,\n      localUserIds,\n    } = selectTabState(global).userSearch;\n\n    return {\n      areParticipantsHidden: Boolean(chat && areParticipantsHidden),\n      members,\n      canAddMembers,\n      adminMembersById,\n      userStatusesById,\n      isChannel,\n      localContactIds,\n      searchQuery,\n      isSearching: fetchingStatus,\n      globalUserIds,\n      localUserIds,\n      canDeleteMembers,\n      currentUserId: global.currentUserId,\n      canHideParticipants,\n    };\n  },\n)(ManageGroupMembers));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  currentUserId?: string;\n  removedUsersCount: number;\n  members?: ApiChatMember[];\n};\n\nconst ITEM_HEIGHT = 48;\nconst BEFORE_ITEMS_COUNT = 2;\nconst ITEMS_COUNT = 9;\n\nfunction getLangKeyForBannedRightKey(key: keyof ApiChatBannedRights) {\n  switch (key) {\n    case 'sendMessages':\n      return 'UserRestrictionsNoSend';\n    case 'sendMedia':\n      return 'UserRestrictionsNoSendMedia';\n    case 'sendStickers':\n      return 'UserRestrictionsNoSendStickers';\n    case 'embedLinks':\n      return 'UserRestrictionsNoEmbedLinks';\n    case 'sendPolls':\n      return 'UserRestrictionsNoSendPolls';\n    case 'changeInfo':\n      return 'UserRestrictionsNoChangeInfo';\n    case 'inviteUsers':\n      return 'UserRestrictionsInviteUsers';\n    case 'pinMessages':\n      return 'UserRestrictionsPinMessages';\n    case 'manageTopics':\n      return 'GroupPermission.NoManageTopics';\n    case 'sendPlain':\n      return 'UserRestrictionsNoSendText';\n    case 'sendDocs':\n      return 'UserRestrictionsNoSendDocs';\n    case 'sendRoundvideos':\n      return 'UserRestrictionsNoSendRound';\n    case 'sendVoices':\n      return 'UserRestrictionsNoSendVoice';\n    case 'sendAudios':\n      return 'UserRestrictionsNoSendMusic';\n    case 'sendVideos':\n      return 'UserRestrictionsNoSendVideos';\n    case 'sendPhotos':\n      return 'UserRestrictionsNoSendPhotos';\n    default:\n      return undefined;\n  }\n}\n\nconst ManageGroupPermissions: FC<OwnProps & StateProps> = ({\n  onScreenSelect,\n  onChatMemberSelect,\n  chat,\n  currentUserId,\n  removedUsersCount,\n  members,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatDefaultBannedRights } = getActions();\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(chat?.defaultBannedRights);\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const handleRemovedUsersClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupRemovedUsers);\n  }, [onScreenSelect]);\n\n  const handleAddExceptionClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.GroupUserPermissionsCreate);\n  }, [onScreenSelect]);\n\n  const handleExceptionMemberClick = useCallback((member: ApiChatMember) => {\n    onChatMemberSelect(member.userId, member.promotedByUserId === currentUserId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [currentUserId, onChatMemberSelect, onScreenSelect]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatDefaultBannedRights({ chatId: chat.id, bannedRights: permissions });\n  }, [chat, permissions, setIsLoading, updateChatDefaultBannedRights]);\n\n  const exceptionMembers = useMemo(() => {\n    if (!members) {\n      return [];\n    }\n\n    return members.filter(({ bannedRights }) => Boolean(bannedRights));\n  }, [members]);\n\n  const getMemberExceptions = useCallback((member: ApiChatMember) => {\n    const { bannedRights } = member;\n    if (!bannedRights || !chat) {\n      return undefined;\n    }\n\n    const { defaultBannedRights } = chat;\n\n    return Object.keys(bannedRights).reduce((result, k) => {\n      const key = k as keyof ApiChatBannedRights;\n      if (\n        !bannedRights[key]\n        || (defaultBannedRights?.[key])\n        || key === 'sendInline' || key === 'viewMessages' || key === 'sendGames'\n      ) {\n        return result;\n      }\n\n      const langKey = getLangKeyForBannedRightKey(key);\n\n      if (!langKey) {\n        return result;\n      }\n\n      const translatedString = lang(langKey);\n\n      return `${result}${!result.length ? translatedString : `, ${translatedString}`}`;\n    }, '');\n  }, [chat, lang]);\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT}px;`\n        + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT}px;`}\n    >\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('ChannelPermissionsHeader')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            dropdownClassName=\"DropdownListTrap\"\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n          />\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <ListItem\n            icon=\"delete-user\"\n            multiline\n            narrow\n            onClick={handleRemovedUsersClick}\n          >\n            <span className=\"title\">{lang('ChannelBlockedUsers')}</span>\n            <span className=\"subtitle\">{removedUsersCount}</span>\n          </ListItem>\n        </div>\n\n        <div\n          className={buildClassName(\n            'section',\n            isMediaDropdownOpen && 'shifted',\n          )}\n        >\n          <h3 className=\"section-heading\" dir=\"auto\">{lang('PrivacyExceptions')}</h3>\n\n          <ListItem\n            icon=\"add-user\"\n            onClick={handleAddExceptionClick}\n          >\n            {lang('ChannelAddException')}\n          </ListItem>\n\n          {exceptionMembers.map((member) => (\n            <ListItem\n              key={member.userId}\n              className=\"chat-item-clickable exceptions-member\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => handleExceptionMemberClick(member)}\n            >\n              <PrivateChatInfo\n                userId={member.userId}\n                status={getMemberExceptions(member)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </div>\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const fullInfo = selectChatFullInfo(global, chatId);\n\n    return {\n      chat,\n      currentUserId: global.currentUserId,\n      removedUsersCount: fullInfo?.kickedMembers?.length || 0,\n      members: fullInfo?.members,\n    };\n  },\n)(ManageGroupPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiChatBannedRights, ApiChatMember } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useManagePermissions from '../hooks/useManagePermissions';\n\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport PermissionCheckboxList from '../../main/PermissionCheckboxList';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  hasFullInfo?: boolean;\n  members?: ApiChatMember[];\n  isFormFullyDisabled?: boolean;\n};\n\nconst ITEM_HEIGHT = 48;\nconst SHIFT_HEIGHT_MINUS = 1;\nconst BEFORE_ITEMS_COUNT = 2;\nconst BEFORE_USER_INFO_HEIGHT = 96;\nconst ITEMS_COUNT = 9;\n\nconst ManageGroupUserPermissions: FC<OwnProps & StateProps> = ({\n  chat,\n  selectedChatMemberId,\n  hasFullInfo,\n  members,\n  onScreenSelect,\n  isFormFullyDisabled,\n  onClose,\n  isActive,\n}) => {\n  const { updateChatMemberBannedRights } = getActions();\n\n  const selectedChatMember = useMemo(() => {\n    if (!members) {\n      return undefined;\n    }\n\n    return members.find(({ userId }) => userId === selectedChatMemberId);\n  }, [members, selectedChatMemberId]);\n\n  const {\n    permissions, havePermissionChanged, isLoading, handlePermissionChange, setIsLoading,\n  } = useManagePermissions(selectedChatMember?.bannedRights || chat?.defaultBannedRights);\n  const [isBanConfirmationDialogOpen, openBanConfirmationDialog, closeBanConfirmationDialog] = useFlag();\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (hasFullInfo && selectedChatMemberId && !selectedChatMember) {\n      onScreenSelect(ManagementScreens.GroupPermissions);\n    }\n  }, [chat, hasFullInfo, onScreenSelect, selectedChatMember, selectedChatMemberId]);\n\n  const handleSavePermissions = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    setIsLoading(true);\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: permissions,\n    });\n  }, [chat, selectedChatMemberId, setIsLoading, updateChatMemberBannedRights, permissions]);\n\n  const handleBanFromGroup = useCallback(() => {\n    if (!chat || !selectedChatMemberId) {\n      return;\n    }\n\n    updateChatMemberBannedRights({\n      chatId: chat.id,\n      userId: selectedChatMemberId,\n      bannedRights: {\n        viewMessages: true,\n      },\n    });\n  }, [chat, selectedChatMemberId, updateChatMemberBannedRights]);\n\n  const getControlIsDisabled = useCallback((key: Exclude<keyof ApiChatBannedRights, 'untilDate'>) => {\n    if (isFormFullyDisabled) {\n      return true;\n    }\n\n    if (!chat || !chat.defaultBannedRights) {\n      return false;\n    }\n\n    return chat.defaultBannedRights[key];\n  }, [chat, isFormFullyDisabled]);\n\n  const [isMediaDropdownOpen, setIsMediaDropdownOpen] = useState(false);\n\n  if (!selectedChatMember) {\n    return undefined;\n  }\n\n  return (\n    <div\n      className=\"Management with-shifted-dropdown\"\n      style={`--shift-height: ${ITEMS_COUNT * ITEM_HEIGHT - SHIFT_HEIGHT_MINUS}px;`\n           + `--before-shift-height: ${BEFORE_ITEMS_COUNT * ITEM_HEIGHT + BEFORE_USER_INFO_HEIGHT}px;`}\n    >\n      <div className=\"custom-scroll\">\n        <div className=\"section without-bottom-shadow\">\n          <ListItem inactive className=\"chat-item-clickable\">\n            <PrivateChatInfo userId={selectedChatMember.userId} forceShowSelf />\n          </ListItem>\n\n          <h3 className=\"section-heading mt-4\" dir=\"auto\">{oldLang('UserRestrictionsCanDo')}</h3>\n          <PermissionCheckboxList\n            chatId={chat?.id}\n            isMediaDropdownOpen={isMediaDropdownOpen}\n            setIsMediaDropdownOpen={setIsMediaDropdownOpen}\n            handlePermissionChange={handlePermissionChange}\n            permissions={permissions}\n            className={buildClassName(\n              'DropdownList',\n              isMediaDropdownOpen && 'DropdownList--open',\n            )}\n            dropdownClassName=\"DropdownListTrap\"\n            shiftedClassName={buildClassName('part', isMediaDropdownOpen && 'shifted')}\n            getControlIsDisabled={getControlIsDisabled}\n          />\n        </div>\n\n        {!isFormFullyDisabled && (\n          <div\n            className={buildClassName(\n              'section',\n              isMediaDropdownOpen && 'shifted',\n            )}\n          >\n            <ListItem icon=\"delete-user\" ripple destructive onClick={openBanConfirmationDialog}>\n              {oldLang('UserRestrictionsBlock')}\n            </ListItem>\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={havePermissionChanged}\n        onClick={handleSavePermissions}\n        ariaLabel={oldLang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n\n      <ConfirmDialog\n        isOpen={isBanConfirmationDialogOpen}\n        onClose={closeBanConfirmationDialog}\n        text={lang('GroupManagementBanUserConfirm')}\n        confirmLabel=\"Remove\"\n        confirmHandler={handleBanFromGroup}\n        confirmIsDestructive\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId, isPromotedByCurrentUser }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const fullInfo = selectChatFullInfo(global, chatId);\n    const isFormFullyDisabled = !(chat.isCreator || isPromotedByCurrentUser);\n\n    return {\n      chat,\n      isFormFullyDisabled,\n      hasFullInfo: Boolean(fullInfo),\n      members: fullInfo?.members,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageGroupUserPermissions));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ApiChatMember, ApiUser, ApiUserStatus } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { isChatChannel, sortUserIds } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\n\nimport NothingFound from '../../common/NothingFound';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  usersById: Record<string, ApiUser>;\n  userStatusesById: Record<string, ApiUserStatus>;\n  members?: ApiChatMember[];\n  isChannel?: boolean;\n};\n\nconst ManageGroupUserPermissionsCreate: FC<OwnProps & StateProps> = ({\n  usersById,\n  userStatusesById,\n  members,\n  isChannel,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n}) => {\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const memberIds = useMemo(() => {\n    if (!members || !usersById) {\n      return undefined;\n    }\n\n    return sortUserIds(\n      members.filter((member) => !member.isOwner).map(({ userId }) => userId),\n      usersById,\n      userStatusesById,\n    );\n  }, [members, usersById, userStatusesById]);\n\n  const handleExceptionMemberClick = useCallback((memberId: string) => {\n    onChatMemberSelect(memberId);\n    onScreenSelect(ManagementScreens.GroupUserPermissions);\n  }, [onChatMemberSelect, onScreenSelect]);\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\" teactFastList>\n          {memberIds ? (\n            memberIds.map((id, i) => (\n              <ListItem\n                key={id}\n                teactOrderKey={i}\n                className=\"chat-item-clickable scroll-item\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => handleExceptionMemberClick(id)}\n              >\n                <PrivateChatInfo userId={id} forceShowSelf />\n              </ListItem>\n            ))\n          ) : (\n            <NothingFound\n              teactOrderKey={0}\n              key=\"nothing-found\"\n              text={isChannel ? 'No subscribers found' : 'No members found'}\n            />\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n    const { byId: usersById, statusesById: userStatusesById } = global.users;\n    const members = selectChatFullInfo(global, chatId)?.members;\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      members,\n      usersById,\n      userStatusesById,\n      isChannel,\n    };\n  },\n)(ManageGroupUserPermissionsCreate));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useState } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useSyncEffect from '../../../hooks/useSyncEffect';\n\nimport CalendarModal from '../../common/CalendarModal';\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport RadioGroup from '../../ui/RadioGroup';\n\nconst DEFAULT_USAGE_LIMITS = [1, 10, 100];\nconst DEFAULT_EXPIRE_DATE = {\n  hour: 3600000,\n  day: 86400000,\n  week: 604800000,\n};\nconst DEFAULT_CUSTOM_EXPIRE_DATE = DEFAULT_EXPIRE_DATE.hour;\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  editingInvite?: ApiExportedInvite;\n};\n\nconst ManageInvite: FC<OwnProps & StateProps> = ({\n  chatId,\n  editingInvite,\n  isActive,\n  onClose,\n  onScreenSelect,\n}) => {\n  const { editExportedChatInvite, exportChatInvite } = getActions();\n\n  const lang = useOldLang();\n  const [isCalendarOpened, openCalendar, closeCalendar] = useFlag();\n  const [isRequestNeeded, setIsRequestNeeded] = useState(false);\n  const [title, setTitle] = useState('');\n  const [customExpireDate, setCustomExpireDate] = useState<number>(Date.now() + DEFAULT_CUSTOM_EXPIRE_DATE);\n  const [selectedExpireOption, setSelectedExpireOption] = useState('unlimited');\n  const [customUsageLimit, setCustomUsageLimit] = useState<number | undefined>(10);\n  const [selectedUsageOption, setSelectedUsageOption] = useState('0');\n  const [isSubmitBlocked, setIsSubmitBlocked] = useState(false);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useSyncEffect(([oldEditingInvite]) => {\n    if (oldEditingInvite === editingInvite) return;\n    if (!editingInvite) {\n      setTitle('');\n      setSelectedExpireOption('unlimited');\n      setSelectedUsageOption('0');\n      setCustomExpireDate(getServerTime() * 1000 + DEFAULT_CUSTOM_EXPIRE_DATE);\n      setCustomUsageLimit(10);\n      setIsRequestNeeded(false);\n    } else {\n      const {\n        title: editingTitle, usageLimit, expireDate, isRequestNeeded: editingIsRequestNeeded,\n      } = editingInvite;\n      if (editingTitle) setTitle(editingTitle);\n      if (usageLimit) {\n        setSelectedUsageOption(DEFAULT_USAGE_LIMITS.includes(usageLimit) ? usageLimit.toString() : 'custom');\n        setCustomUsageLimit(usageLimit);\n      }\n      if (expireDate) {\n        const minSafeDate = getServerTime() + DEFAULT_CUSTOM_EXPIRE_DATE;\n        setSelectedExpireOption('custom');\n        setCustomExpireDate(Math.max(expireDate, minSafeDate) * 1000);\n      }\n      if (editingIsRequestNeeded) {\n        setIsRequestNeeded(true);\n      }\n    }\n  }, [editingInvite]);\n\n  const handleIsRequestChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsRequestNeeded(e.target.checked);\n  }, []);\n\n  const handleTitleChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setTitle(e.target.value);\n  }, []);\n\n  const handleCustomUsageLimitChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setCustomUsageLimit(Number.parseInt(e.target.value, 10));\n  }, []);\n\n  const handleExpireDateChange = useCallback((date: Date) => {\n    setCustomExpireDate(date.getTime());\n    closeCalendar();\n  }, [closeCalendar]);\n\n  const handleSaveClick = useCallback(() => {\n    setIsSubmitBlocked(true);\n    const usageLimit = selectedUsageOption === 'custom' ? customUsageLimit : Number(selectedUsageOption);\n    let expireDate;\n    switch (selectedExpireOption) {\n      case 'custom':\n        expireDate = getServerTime() + (customExpireDate - Date.now()) / 1000;\n        break;\n      case 'hour':\n      case 'day':\n      case 'week':\n        expireDate = getServerTime() + DEFAULT_EXPIRE_DATE[selectedExpireOption] / 1000;\n        break;\n      case 'unlimited':\n        expireDate = 0;\n        break;\n      default:\n        expireDate = undefined;\n    }\n\n    if (editingInvite) {\n      editExportedChatInvite({\n        link: editingInvite.link,\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    } else {\n      exportChatInvite({\n        chatId,\n        title,\n        isRequestNeeded,\n        expireDate,\n        usageLimit,\n      });\n    }\n    onScreenSelect(ManagementScreens.Invites);\n  }, [\n    chatId, customExpireDate, customUsageLimit, editExportedChatInvite, editingInvite,\n    exportChatInvite, isRequestNeeded, selectedExpireOption, selectedUsageOption, title, onScreenSelect,\n  ]);\n\n  return (\n    <div className=\"Management ManageInvite\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <Checkbox\n            label={lang('ApproveNewMembers')}\n            subLabel={lang('ApproveNewMembersDescription')}\n            checked={isRequestNeeded}\n            onChange={handleIsRequestChange}\n          />\n        </div>\n        <div className=\"section\">\n          <InputText\n            className=\"link-name\"\n            placeholder={lang('LinkNameHint')}\n            value={title}\n            onChange={handleTitleChange}\n          />\n          <p className=\"section-help hint\">{lang('LinkNameHelp')}</p>\n        </div>\n        <div className=\"section\">\n          <div className=\"section-heading\">{lang('LimitByPeriod')}</div>\n          <RadioGroup\n            name=\"expireOptions\"\n            options={[\n              {\n                value: 'hour',\n                label: lang('Hours', 1),\n              },\n              {\n                value: 'day',\n                label: lang('Days', 1),\n              },\n              {\n                value: 'week',\n                label: lang('Weeks', 1),\n              },\n              {\n                value: 'unlimited',\n                label: lang('NoLimit'),\n              },\n              {\n                value: 'custom',\n                label: lang('lng_group_invite_expire_custom'),\n              },\n            ]}\n            onChange={setSelectedExpireOption}\n            selected={selectedExpireOption}\n          />\n          {selectedExpireOption === 'custom' && (\n            <Button className=\"expire-limit\" isText onClick={openCalendar}>\n              {formatFullDate(lang, customExpireDate)} {formatTime(lang, customExpireDate)}\n            </Button>\n          )}\n          <p className=\"section-help hint\">{lang('TimeLimitHelp')}</p>\n        </div>\n        {!isRequestNeeded && (\n          <div className=\"section\">\n            <div className=\"section-heading\">{lang('LimitNumberOfUses')}</div>\n            <RadioGroup\n              name=\"usageOptions\"\n              options={[\n                ...DEFAULT_USAGE_LIMITS.map((n) => ({ value: n.toString(), label: n })),\n                {\n                  value: '0',\n                  label: lang('NoLimit'),\n                },\n                {\n                  value: 'custom',\n                  label: lang('lng_group_invite_usage_custom'),\n                },\n              ]}\n              onChange={setSelectedUsageOption}\n              selected={selectedUsageOption}\n            />\n            {selectedUsageOption === 'custom' && (\n              <input\n                className=\"form-control usage-limit\"\n                type=\"number\"\n                min=\"1\"\n                max=\"99999\"\n                value={customUsageLimit}\n                onChange={handleCustomUsageLimitChange}\n              />\n            )}\n            <p className=\"section-help hint\">{lang('UsesLimitHelp')}</p>\n          </div>\n        )}\n        <FloatingActionButton\n          isShown\n          onClick={handleSaveClick}\n          disabled={isSubmitBlocked}\n          ariaLabel={editingInvite ? lang('SaveLink') : lang('CreateLink')}\n        >\n          <Icon name=\"check\" />\n        </FloatingActionButton>\n      </div>\n      <CalendarModal\n        isOpen={isCalendarOpened}\n        isFutureMode\n        withTimePicker\n        onClose={closeCalendar}\n        onSubmit={handleExpireDateChange}\n        selectedAt={customExpireDate}\n        submitButtonLabel={lang('Save')}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { editingInvite } = selectTabState(global).management.byChatId[chatId] || {};\n\n    return {\n      editingInvite,\n    };\n  },\n)(ManageInvite));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChatInviteImporter, ApiExportedInvite, ApiUser } from '../../../api/types';\n\nimport { isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { formatFullDate, formatMediaDateTime, formatTime } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport LinkField from '../../common/LinkField';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport ListItem from '../../ui/ListItem';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  invite?: ApiExportedInvite;\n  importers?: ApiChatInviteImporter[];\n  requesters?: ApiChatInviteImporter[];\n  admin?: ApiUser;\n  isChannel?: boolean;\n};\n\nconst BULLET = '\\u2022';\n\nconst ManageInviteInfo: FC<OwnProps & StateProps> = ({\n  chatId,\n  invite,\n  importers,\n  requesters,\n  isChannel,\n  isActive,\n  onClose,\n}) => {\n  const {\n    loadChatInviteImporters,\n    loadChatInviteRequesters,\n    openChat,\n  } = getActions();\n\n  const lang = useOldLang();\n  const {\n    usage = 0, usageLimit, link, adminId,\n  } = invite || {};\n  const expireDate = invite?.expireDate && (invite.expireDate - getServerTime()) * 1000 + Date.now();\n  const isExpired = ((invite?.expireDate || 0) - getServerTime()) < 0;\n\n  useEffect(() => {\n    if (link) {\n      loadChatInviteImporters({ chatId, link });\n      loadChatInviteRequesters({ chatId, link });\n    }\n  }, [chatId, link, loadChatInviteImporters, loadChatInviteRequesters]);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const renderImporters = () => {\n    if (!importers?.length && requesters?.length) return undefined;\n    if (!importers) return <Spinner />;\n    return (\n      <div className=\"section\">\n        <p className=\"section-heading\">{importers.length ? lang('PeopleJoined', usage) : lang('NoOneJoined')}</p>\n        <p className=\"section-help\">\n          {!importers.length && (\n            usageLimit ? lang('PeopleCanJoinViaLinkCount', usageLimit - usage) : lang('NoOneJoinedYet')\n          )}\n          {importers.map((importer) => {\n            const joinTime = formatMediaDateTime(lang, importer.date * 1000, true);\n            const status = importer.isFromChatList ? `${joinTime} ${BULLET} ${lang('JoinedViaFolder')}` : joinTime;\n            return (\n              <ListItem\n                className=\"chat-item-clickable scroll-item small-icon\"\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => openChat({ id: importer.userId })}\n              >\n                <PrivateChatInfo\n                  userId={importer.userId}\n                  status={status}\n                  forceShowSelf\n                />\n              </ListItem>\n            );\n          })}\n        </p>\n      </div>\n    );\n  };\n\n  const renderRequesters = () => {\n    if (invite?.isRevoked) return undefined;\n    if (!requesters && importers) return <Spinner />;\n    if (!requesters?.length) return undefined;\n    return (\n      <div className=\"section\">\n        <p className=\"section-heading\">{isChannel ? lang('SubscribeRequests') : lang('MemberRequests')}</p>\n        <p className=\"section-help\">\n          {requesters.map((requester) => (\n            <ListItem\n              className=\"chat-item-clickable scroll-item small-icon\"\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => openChat({ id: requester.userId })}\n            >\n              <PrivateChatInfo\n                userId={requester.userId}\n                status={formatMediaDateTime(lang, requester.date * 1000, true)}\n                forceShowSelf\n              />\n            </ListItem>\n          ))}\n        </p>\n      </div>\n    );\n  };\n\n  return (\n    <div className=\"Management ManageInviteInfo\">\n      <div className=\"panel-content custom-scroll\">\n        {!invite && (\n          <p className=\"section-help\">{lang('Loading')}</p>\n        )}\n        {invite && (\n          <>\n            <div className=\"section\">\n              <LinkField title={invite.title} link={invite.link} className=\"invite-link\" />\n              {Boolean(expireDate) && (\n                <p className=\"section-help\">\n                  {isExpired\n                    ? lang('ExpiredLink')\n                    : lang('LinkExpiresIn', `${formatFullDate(lang, expireDate)} ${formatTime(lang, expireDate)}`)}\n                </p>\n              )}\n            </div>\n            {adminId && (\n              <div className=\"section\">\n                <p className=\"section-heading\">{lang('LinkCreatedeBy')}</p>\n                <ListItem\n                  className=\"chat-item-clickable scroll-item small-icon\"\n                  // eslint-disable-next-line react/jsx-no-bind\n                  onClick={() => openChat({ id: adminId })}\n                >\n                  <PrivateChatInfo\n                    userId={adminId}\n                    status={formatMediaDateTime(lang, invite.date * 1000, true)}\n                    forceShowSelf\n                  />\n                </ListItem>\n              </div>\n            )}\n            {renderImporters()}\n            {renderRequesters()}\n          </>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { inviteInfo } = selectTabState(global).management.byChatId[chatId] || {};\n    const { invite, importers, requesters } = inviteInfo || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      invite,\n      importers,\n      requesters,\n      isChannel,\n    };\n  },\n)(ManageInviteInfo));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat, ApiExportedInvite } from '../../../api/types';\nimport { ManagementScreens } from '../../../types';\n\nimport { STICKER_SIZE_INVITES, TME_LINK_PREFIX } from '../../../config';\nimport { getMainUsername, isChatChannel } from '../../../global/helpers';\nimport { selectChat, selectTabState } from '../../../global/selectors';\nimport { copyTextToClipboard } from '../../../util/clipboard';\nimport { formatCountdown, MILLISECONDS_IN_DAY } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useInterval from '../../../hooks/schedulers/useInterval';\nimport useFlag from '../../../hooks/useFlag';\nimport useForceUpdate from '../../../hooks/useForceUpdate';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Icon from '../../common/icons/Icon';\nimport LinkField from '../../common/LinkField';\nimport NothingFound from '../../common/NothingFound';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport ListItem, { type MenuItemContextAction } from '../../ui/ListItem';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n  exportedInvites?: ApiExportedInvite[];\n  revokedExportedInvites?: ApiExportedInvite[];\n};\n\nconst BULLET = '\\u2022';\n\nfunction inviteComparator(i1: ApiExportedInvite, i2: ApiExportedInvite) {\n  const { isPermanent: i1IsPermanent, usage: i1Usage = 0, date: i1Date } = i1;\n  const { isPermanent: i2IsPermanent, usage: i2Usage = 0, date: i2Date } = i2;\n  if (i1IsPermanent || i2IsPermanent) return Number(i1IsPermanent) - Number(i2IsPermanent);\n  if (i1Usage || i2Usage) return i2Usage - i1Usage;\n  return i2Date - i1Date;\n}\n\nconst ManageInvites: FC<OwnProps & StateProps> = ({\n  chatId,\n  chat,\n  exportedInvites,\n  revokedExportedInvites,\n  isActive,\n  isChannel,\n  onClose,\n  onScreenSelect,\n}) => {\n  const {\n    setEditingExportedInvite,\n    showNotification,\n    editExportedChatInvite,\n    deleteExportedChatInvite,\n    deleteRevokedExportedChatInvites,\n    setOpenedInviteInfo,\n  } = getActions();\n\n  const lang = useLang();\n  const oldLang = useOldLang();\n\n  const [isDeleteRevokeAllDialogOpen, openDeleteRevokeAllDialog, closeDeleteRevokeAllDialog] = useFlag();\n  const [isRevokeDialogOpen, openRevokeDialog, closeRevokeDialog] = useFlag();\n  const [revokingInvite, setRevokingInvite] = useState<ApiExportedInvite | undefined>();\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [deletingInvite, setDeletingInvite] = useState<ApiExportedInvite | undefined>();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const hasDetailedCountdown = useMemo(() => {\n    if (!exportedInvites) return undefined;\n    return exportedInvites\n      .some(({ expireDate }) => (\n        expireDate && (expireDate - getServerTime() < MILLISECONDS_IN_DAY / 1000)\n      ));\n  }, [exportedInvites]);\n  const forceUpdate = useForceUpdate();\n  useInterval(forceUpdate, hasDetailedCountdown ? 1000 : undefined);\n\n  const chatMainUsername = useMemo(() => chat && getMainUsername(chat), [chat]);\n  const primaryInvite = exportedInvites?.find(({ isPermanent }) => isPermanent);\n  const primaryInviteLink = chatMainUsername ? `${TME_LINK_PREFIX}${chatMainUsername}` : primaryInvite?.link;\n  const temporalInvites = useMemo(() => {\n    const invites = chat?.usernames ? exportedInvites : exportedInvites?.filter(({ isPermanent }) => !isPermanent);\n    return invites?.sort(inviteComparator);\n  }, [chat?.usernames, exportedInvites]);\n\n  const editInvite = (invite: ApiExportedInvite) => {\n    setEditingExportedInvite({ chatId, invite });\n    onScreenSelect(ManagementScreens.EditInvite);\n  };\n\n  const revokeInvite = useCallback((invite: ApiExportedInvite) => {\n    const {\n      link, title, isRequestNeeded, expireDate, usageLimit,\n    } = invite;\n    editExportedChatInvite({\n      chatId,\n      link,\n      title,\n      isRequestNeeded,\n      expireDate,\n      usageLimit,\n      isRevoked: true,\n    });\n  }, [chatId, editExportedChatInvite]);\n\n  const askToRevoke = useCallback((invite: ApiExportedInvite) => {\n    setRevokingInvite(invite);\n    openRevokeDialog();\n  }, [openRevokeDialog]);\n\n  const handleRevoke = useCallback(() => {\n    if (!revokingInvite) return;\n    revokeInvite(revokingInvite);\n    setRevokingInvite(undefined);\n    closeRevokeDialog();\n  }, [closeRevokeDialog, revokeInvite, revokingInvite]);\n\n  const handleCreateNewClick = useCallback(() => {\n    onScreenSelect(ManagementScreens.EditInvite);\n  }, [onScreenSelect]);\n\n  const handlePrimaryRevoke = useCallback(() => {\n    if (primaryInvite) {\n      askToRevoke(primaryInvite);\n    }\n  }, [askToRevoke, primaryInvite]);\n\n  const handleDeleteAllRevoked = useCallback(() => {\n    deleteRevokedExportedChatInvites({ chatId });\n    closeDeleteRevokeAllDialog();\n  }, [chatId, closeDeleteRevokeAllDialog, deleteRevokedExportedChatInvites]);\n\n  const showInviteInfo = useCallback((invite: ApiExportedInvite) => {\n    setOpenedInviteInfo({ chatId, invite });\n    onScreenSelect(ManagementScreens.InviteInfo);\n  }, [chatId, onScreenSelect, setOpenedInviteInfo]);\n\n  const deleteInvite = useCallback((invite: ApiExportedInvite) => {\n    deleteExportedChatInvite({ chatId, link: invite.link });\n  }, [chatId, deleteExportedChatInvite]);\n\n  const askToDelete = useCallback((invite: ApiExportedInvite) => {\n    setDeletingInvite(invite);\n    openDeleteDialog();\n  }, [openDeleteDialog]);\n\n  const handleDelete = useCallback(() => {\n    if (!deletingInvite) return;\n    deleteInvite(deletingInvite);\n    setDeletingInvite(undefined);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, deleteInvite, deletingInvite]);\n\n  const copyLink = useCallback((link: string) => {\n    copyTextToClipboard(link);\n    showNotification({\n      message: oldLang('LinkCopied'),\n    });\n  }, [oldLang, showNotification]);\n\n  const prepareUsageText = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, expireDate, isPermanent, requested, isRevoked,\n    } = invite;\n    let text = '';\n    if (!isRevoked && usageLimit && usage < usageLimit) {\n      text = oldLang('CanJoin', usageLimit - usage);\n    } else if (usage) {\n      text = oldLang('PeopleJoined', usage);\n    } else {\n      text = oldLang('NoOneJoined');\n    }\n\n    if (isRevoked) {\n      text += ` ${BULLET} ${oldLang('Revoked')}`;\n      return text;\n    }\n\n    if (requested) {\n      text += ` ${BULLET} ${oldLang('JoinRequests', requested)}`;\n    }\n\n    if (usageLimit !== undefined && usage === usageLimit) {\n      text += ` ${BULLET} ${oldLang('LinkLimitReached')}`;\n    } else if (expireDate) {\n      const diff = expireDate - getServerTime();\n      text += ` ${BULLET} `;\n      if (diff > 0) {\n        text += oldLang('InviteLink.ExpiresIn', formatCountdown(lang, diff));\n      } else {\n        text += oldLang('InviteLink.Expired');\n      }\n    } else if (isPermanent) {\n      text += ` ${BULLET} ${oldLang('Permanent')}`;\n    }\n\n    return text;\n  };\n\n  const getInviteIconClass = (invite: ApiExportedInvite) => {\n    const {\n      usage = 0, usageLimit, isRevoked, expireDate,\n    } = invite;\n    if (isRevoked) {\n      return 'link-status-icon-gray';\n    }\n    if (usageLimit && usage < usageLimit) {\n      return 'link-status-icon-green';\n    }\n    if (expireDate) {\n      const diff = (expireDate - getServerTime()) * 1000;\n      if (diff <= 0) {\n        return 'link-status-icon-red';\n      }\n    }\n    return 'link-status-icon-blue';\n  };\n\n  const prepareContextActions = (invite: ApiExportedInvite) => {\n    const actions: MenuItemContextAction[] = [];\n    actions.push({\n      title: oldLang('Copy'),\n      icon: 'copy',\n      handler: () => copyLink(invite.link),\n    });\n\n    if (!invite.isPermanent && !invite.isRevoked) {\n      actions.push({\n        title: oldLang('Edit'),\n        icon: 'edit',\n        handler: () => editInvite(invite),\n      });\n    }\n\n    if (!invite.isRevoked) {\n      actions.push({\n        title: oldLang('RevokeButton'),\n        icon: 'delete',\n        handler: () => askToRevoke(invite),\n        destructive: true,\n      });\n    } else {\n      actions.push({\n        title: oldLang('DeleteLink'),\n        icon: 'delete',\n        handler: () => askToDelete(invite),\n        destructive: true,\n      });\n    }\n    return actions;\n  };\n\n  return (\n    <div className=\"Management ManageInvites\">\n      <div className=\"panel-content custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.Invite}\n            size={STICKER_SIZE_INVITES}\n            className=\"section-icon\"\n          />\n          <p className=\"section-help\">{isChannel ? oldLang('PrimaryLinkHelpChannel') : oldLang('PrimaryLinkHelp')}</p>\n        </div>\n        {primaryInviteLink && (\n          <div className=\"section\">\n            <LinkField\n              className=\"settings-input\"\n              link={primaryInviteLink}\n              withShare\n              onRevoke={!chat?.usernames ? handlePrimaryRevoke : undefined}\n              title={chat?.usernames ? oldLang('PublicLink') : oldLang('lng_create_permanent_link_title')}\n            />\n          </div>\n        )}\n        <div className=\"section\" teactFastList>\n          <ListItem icon=\"add\" withPrimaryColor key=\"create\" className=\"create-link\" onClick={handleCreateNewClick}>\n            {oldLang('CreateNewLink')}\n          </ListItem>\n          {(!temporalInvites || !temporalInvites.length) && <NothingFound text=\"No links found\" key=\"nothing\" />}\n          {temporalInvites?.map((invite) => (\n            <ListItem\n              leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n              secondaryIcon=\"more\"\n              multiline\n              // eslint-disable-next-line react/jsx-no-bind\n              onClick={() => showInviteInfo(invite)}\n              contextActions={prepareContextActions(invite)}\n              key={invite.link}\n            >\n              <span className=\"title invite-title\">{invite.title || invite.link}</span>\n              <span className=\"subtitle\" dir=\"auto\">\n                {prepareUsageText(invite)}\n              </span>\n            </ListItem>\n          ))}\n          <p className=\"section-help hint\" key=\"links-hint\">{oldLang('ManageLinksInfoHelp')}</p>\n        </div>\n        {revokedExportedInvites && Boolean(revokedExportedInvites.length) && (\n          <div className=\"section\" teactFastList>\n            <p className=\"section-help\" key=\"title\">{oldLang('RevokedLinks')}</p>\n            <ListItem\n              icon=\"delete\"\n              destructive\n              key=\"delete\"\n              onClick={openDeleteRevokeAllDialog}\n            >\n              <span className=\"title\">{oldLang('DeleteAllRevokedLinks')}</span>\n            </ListItem>\n            {revokedExportedInvites?.map((invite) => (\n              <ListItem\n                leftElement={<Icon name=\"link\" className={`link-status-icon ${getInviteIconClass(invite)}`} />}\n                secondaryIcon=\"more\"\n                multiline\n                // eslint-disable-next-line react/jsx-no-bind\n                onClick={() => showInviteInfo(invite)}\n                contextActions={prepareContextActions(invite)}\n                key={invite.link}\n              >\n                <span className=\"title\">{invite.title || invite.link}</span>\n                <span className=\"subtitle\" dir=\"auto\">\n                  {prepareUsageText(invite)}\n                </span>\n              </ListItem>\n            ))}\n          </div>\n        )}\n      </div>\n      <ConfirmDialog\n        isOpen={isDeleteRevokeAllDialogOpen}\n        onClose={closeDeleteRevokeAllDialog}\n        title={oldLang('DeleteAllRevokedLinks')}\n        text={oldLang('DeleteAllRevokedLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('DeleteAll')}\n        confirmHandler={handleDeleteAllRevoked}\n      />\n      <ConfirmDialog\n        isOpen={isRevokeDialogOpen}\n        onClose={closeRevokeDialog}\n        title={oldLang('RevokeLink')}\n        text={oldLang('RevokeAlert')}\n        confirmIsDestructive\n        confirmLabel={oldLang('RevokeButton')}\n        confirmHandler={handleRevoke}\n      />\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        title={oldLang('DeleteLink')}\n        text={oldLang('DeleteLinkHelp')}\n        confirmIsDestructive\n        confirmLabel={oldLang('Delete')}\n        confirmHandler={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const { invites, revokedInvites } = selectTabState(global).management.byChatId[chatId] || {};\n    const chat = selectChat(global, chatId);\n    const isChannel = chat && isChatChannel(chat);\n\n    return {\n      exportedInvites: invites,\n      revokedExportedInvites: revokedInvites,\n      chat,\n      isChannel,\n    };\n  },\n)(ManageInvites));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiUser } from '../../../api/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectUser } from '../../../global/selectors';\nimport { createClassNameBuilder } from '../../../util/buildClassName';\nimport { formatHumanDate, formatTime, isToday } from '../../../util/dates/dateFormat';\nimport { getServerTime } from '../../../util/serverTime';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Button from '../../ui/Button';\n\nimport './JoinRequest.scss';\n\ntype OwnProps = {\n  userId: string;\n  about?: string;\n  isChannel?: boolean;\n  date: number;\n  chatId: string;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  isSavedMessages?: boolean;\n};\n\nconst JoinRequest: FC<OwnProps & StateProps> = ({\n  userId,\n  chatId,\n  about,\n  date,\n  isChannel,\n  user,\n}) => {\n  const { openChat, hideChatJoinRequest } = getActions();\n\n  const buildClassName = createClassNameBuilder('JoinRequest');\n  const lang = useOldLang();\n\n  const fullName = getUserFullName(user);\n  const fixedDate = (date - getServerTime()) * 1000 + Date.now();\n\n  const dateString = isToday(new Date(fixedDate))\n    ? formatTime(lang, fixedDate) : formatHumanDate(lang, fixedDate, true, false, true);\n\n  const handleUserClick = () => {\n    openChat({ id: userId });\n  };\n\n  const handleAcceptRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: true });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  const handleRejectRequest = useCallback(() => {\n    hideChatJoinRequest({ chatId, userId, isApproved: false });\n  }, [chatId, hideChatJoinRequest, userId]);\n\n  return (\n    <div className={buildClassName('&')}>\n      <div className={buildClassName('top')}>\n        <div className={buildClassName('user')} onClick={handleUserClick}>\n          <Avatar\n            key={userId}\n            size=\"medium\"\n            peer={user}\n          />\n          <div className={buildClassName('user-info')}>\n            <div className={buildClassName('user-name')}>{fullName}</div>\n            <div className={buildClassName('user-subtitle')}>{about}</div>\n          </div>\n        </div>\n        <div className={buildClassName('date')}>{dateString}</div>\n      </div>\n      <div className={buildClassName('buttons')}>\n        <Button className={buildClassName('button')} onClick={handleAcceptRequest}>\n          {isChannel ? lang('ChannelAddToChannel') : lang('ChannelAddToGroup')}\n        </Button>\n        <Button className={buildClassName('button')} isText onClick={handleRejectRequest}>\n          {lang('DismissRequest')}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n\n    return {\n      user,\n    };\n  },\n)(JoinRequest));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\n\nimport { STICKER_SIZE_JOIN_REQUESTS } from '../../../config';\nimport { isChatChannel, isUserId } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { LOCAL_TGS_URLS } from '../../common/helpers/animatedAssets';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AnimatedIconWithPreview from '../../common/AnimatedIconWithPreview';\nimport Button from '../../ui/Button';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport Spinner from '../../ui/Spinner';\nimport JoinRequest from './JoinRequest';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  isChannel?: boolean;\n};\n\nconst ManageJoinRequests: FC<OwnProps & StateProps> = ({\n  chat,\n  chatId,\n  isActive,\n  isChannel,\n  onClose,\n}) => {\n  const { hideAllChatJoinRequests, loadChatJoinRequests } = getActions();\n  const [isAcceptAllDialogOpen, openAcceptAllDialog, closeAcceptAllDialog] = useFlag();\n  const [isRejectAllDialogOpen, openRejectAllDialog, closeRejectAllDialog] = useFlag();\n\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  useEffect(() => {\n    if (!chat?.joinRequests && !isUserId(chatId)) {\n      loadChatJoinRequests({ chatId });\n    }\n  }, [chat, chatId, loadChatJoinRequests]);\n\n  const handleAcceptAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: true });\n    closeAcceptAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeAcceptAllDialog]);\n\n  const handleRejectAllRequests = useCallback(() => {\n    hideAllChatJoinRequests({ chatId, isApproved: false });\n    closeRejectAllDialog();\n  }, [hideAllChatJoinRequests, chatId, closeRejectAllDialog]);\n\n  return (\n    <div className=\"Management ManageJoinRequests\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <AnimatedIconWithPreview\n            tgsUrl={LOCAL_TGS_URLS.JoinRequest}\n            size={STICKER_SIZE_JOIN_REQUESTS}\n            className=\"section-icon\"\n          />\n          {Boolean(chat?.joinRequests?.length) && (\n            <div className=\"bulk-actions\">\n              <Button className=\"bulk-action-button\" onClick={openAcceptAllDialog}>Accept all</Button>\n              <Button className=\"bulk-action-button\" onClick={openRejectAllDialog} isText>Dismiss all</Button>\n            </div>\n          )}\n        </div>\n        <div className=\"section\" teactFastList>\n          <p key=\"title\">\n            {!chat?.joinRequests ? lang('Loading') : chat.joinRequests.length\n              ? lang('JoinRequests', chat.joinRequests.length) : lang('NoMemberRequests')}\n          </p>\n          {!chat?.joinRequests && (\n            <Spinner key=\"loading\" />\n          )}\n          {chat?.joinRequests?.length === 0 && (\n            <p className=\"section-help\" key=\"empty\">\n              {isChannel ? lang('NoSubscribeRequestsDescription') : lang('NoMemberRequestsDescription')}\n            </p>\n          )}\n          {chat?.joinRequests?.map(({ userId, about, date }) => (\n            <JoinRequest\n              userId={userId}\n              about={about}\n              date={date}\n              isChannel={isChannel}\n              chatId={chatId}\n              key={userId}\n            />\n          ))}\n        </div>\n      </div>\n      <ConfirmDialog\n        isOpen={isAcceptAllDialogOpen}\n        onClose={closeAcceptAllDialog}\n        title=\"Accept all requests?\"\n        text=\"Are you sure you want to accept all requests?\"\n        confirmHandler={handleAcceptAllRequests}\n      />\n      <ConfirmDialog\n        isOpen={isRejectAllDialogOpen}\n        onClose={closeRejectAllDialog}\n        title=\"Reject all requests?\"\n        text=\"Are you sure you want to reject all requests?\"\n        confirmHandler={handleRejectAllRequests}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId);\n\n    return {\n      chat,\n      isChannel: chat && isChatChannel(chat),\n    };\n  },\n)(ManageJoinRequests));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo,\n  useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type {\n  ApiAvailableReaction, ApiChat, ApiChatReactions, ApiReaction,\n} from '../../../api/types';\n\nimport {\n  MAX_UNIQUE_REACTIONS,\n} from '../../../config';\nimport { isChatChannel, isSameReaction } from '../../../global/helpers';\nimport { selectChat, selectChatFullInfo } from '../../../global/selectors';\n\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport ReactionStaticEmoji from '../../common/reactions/ReactionStaticEmoji';\nimport Checkbox from '../../ui/Checkbox';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport RadioGroup from '../../ui/RadioGroup';\nimport RangeSlider from '../../ui/RangeSlider';\nimport Spinner from '../../ui/Spinner';\n\ntype OwnProps = {\n  chatId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n  availableReactions?: ApiAvailableReaction[];\n  enabledReactions?: ApiChatReactions;\n  maxUniqueReactions: number;\n  reactionsLimit?: number;\n  isChannel?: boolean;\n};\n\nconst ManageReactions: FC<OwnProps & StateProps> = ({\n  availableReactions,\n  enabledReactions,\n  chat,\n  isActive,\n  onClose,\n  maxUniqueReactions,\n  reactionsLimit,\n  isChannel,\n}) => {\n  const { setChatEnabledReactions } = getActions();\n\n  const lang = useOldLang();\n  const [isTouched, setIsTouched] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [localEnabledReactions, setLocalEnabledReactions] = useState<ApiChatReactions | undefined>(enabledReactions);\n\n  const [localReactionsLimit, setLocalReactionsLimit] = useState(reactionsLimit);\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const reactionsOptions = useMemo(() => [{\n    value: 'all',\n    label: lang('AllReactions'),\n  }, {\n    value: 'some',\n    label: lang('SomeReactions'),\n  }, {\n    value: 'none',\n    label: lang('NoReactions'),\n  }], [lang]);\n\n  const handleSaveReactions = useCallback(() => {\n    if (!chat) return;\n    setIsLoading(true);\n\n    setChatEnabledReactions({\n      chatId: chat.id,\n      enabledReactions: localEnabledReactions,\n      reactionsLimit: localReactionsLimit,\n    });\n  }, [chat, localEnabledReactions, setChatEnabledReactions, localReactionsLimit]);\n\n  useEffect(() => {\n    setIsLoading(false);\n    setIsTouched(false);\n    setLocalEnabledReactions(enabledReactions);\n    setLocalReactionsLimit(reactionsLimit);\n  }, [enabledReactions, reactionsLimit]);\n\n  const availableActiveReactions = useMemo<ApiAvailableReaction[] | undefined>(\n    () => availableReactions?.filter(({ isInactive }) => !isInactive),\n    [availableReactions],\n  );\n\n  useEffect(() => {\n    if (localReactionsLimit !== undefined && localReactionsLimit !== reactionsLimit) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some') {\n      const isReactionsDisabled = enabledReactions?.type !== 'all' && enabledReactions?.type !== 'some';\n\n      if (isReactionsDisabled && localEnabledReactions.allowed.length === 0) {\n        setIsTouched(false);\n        return;\n      }\n    }\n\n    if (localEnabledReactions?.type !== enabledReactions?.type) {\n      setIsTouched(true);\n      return;\n    }\n\n    if (localEnabledReactions?.type === 'some' && enabledReactions?.type === 'some') {\n      const localAllowedReactions = localEnabledReactions.allowed;\n      const enabledAllowedReactions = enabledReactions?.allowed;\n\n      if (localAllowedReactions.length !== enabledAllowedReactions.length\n      || localAllowedReactions.reverse().some(\n        (localReaction) => !enabledAllowedReactions.find(\n          (enabledReaction) => isSameReaction(localReaction, enabledReaction),\n        ),\n      )) {\n        setIsTouched(true);\n        return;\n      }\n    }\n\n    setIsTouched(false);\n  }, [\n    localReactionsLimit,\n    reactionsLimit,\n    localEnabledReactions,\n    enabledReactions,\n  ]);\n\n  const handleReactionsOptionChange = useCallback((value: string) => {\n    if (value === 'all') {\n      setLocalEnabledReactions({ type: 'all' });\n      setLocalReactionsLimit(reactionsLimit);\n    } else if (value === 'some') {\n      setLocalEnabledReactions({\n        type: 'some',\n        allowed: enabledReactions?.type === 'some' ? enabledReactions.allowed : [],\n      });\n      setLocalReactionsLimit(reactionsLimit);\n    } else {\n      setLocalEnabledReactions(undefined);\n      setLocalReactionsLimit(undefined);\n    }\n  }, [enabledReactions, reactionsLimit]);\n\n  const handleReactionChange = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    if (!chat || !availableActiveReactions) return;\n\n    const { name, checked } = e.currentTarget;\n    if (localEnabledReactions?.type === 'some') {\n      const reaction = { emoticon: name } as ApiReaction;\n      if (checked) {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: [...localEnabledReactions.allowed, reaction],\n        });\n      } else {\n        setLocalEnabledReactions({\n          type: 'some',\n          allowed: localEnabledReactions.allowed.filter((local) => !isSameReaction(local, reaction)),\n        });\n      }\n    }\n  }, [availableActiveReactions, chat, localEnabledReactions]);\n\n  const handleReactionsLimitChange = useCallback((value: number) => {\n    setLocalReactionsLimit(value);\n  }, []);\n\n  const renderReactionsMaxCountValue = useCallback((value: number) => {\n    return lang('PeerInfo.AllowedReactions.MaxCountValue', value);\n  }, [lang]);\n\n  const shouldShowReactionsLimit = isChannel\n  && (localEnabledReactions?.type === 'all' || localEnabledReactions?.type === 'some');\n\n  return (\n    <div className=\"Management\">\n      <div className=\"panel-content custom-scroll\">\n        { localReactionsLimit && shouldShowReactionsLimit && (\n          <div className=\"section\">\n            <h3 className=\"section-heading\">\n              {lang('MaximumReactionsHeader')}\n            </h3>\n            <RangeSlider\n              min={1}\n              max={maxUniqueReactions}\n              value={localReactionsLimit}\n              onChange={handleReactionsLimitChange}\n              renderValue={renderReactionsMaxCountValue}\n              isCenteredLayout\n            />\n            <p className=\"section-info section-info_push\">\n              {lang('ChannelReactions.MaxCount.Info')}\n            </p>\n          </div>\n        )}\n        <div className=\"section\">\n          <h3 className=\"section-heading\">\n            {lang('AvailableReactions')}\n          </h3>\n          <RadioGroup\n            selected={localEnabledReactions?.type || 'none'}\n            name=\"reactions\"\n            options={reactionsOptions}\n            onChange={handleReactionsOptionChange}\n          />\n          <p className=\"section-info section-info_push\">\n            {localEnabledReactions?.type === 'all' && lang('EnableAllReactionsInfo')}\n            {localEnabledReactions?.type === 'some' && lang('EnableSomeReactionsInfo')}\n            {!localEnabledReactions && lang('DisableReactionsInfo')}\n          </p>\n        </div>\n        {localEnabledReactions?.type === 'some' && (\n          <div className=\"section section-with-fab\">\n            <h3 className=\"section-heading\">\n              {lang('OnlyAllowThisReactions')}\n            </h3>\n            {availableActiveReactions?.map(({ reaction, title }) => (\n              <div className=\"ListItem\">\n                <Checkbox\n                  name={reaction.emoticon}\n                  checked={localEnabledReactions?.allowed.some((r) => isSameReaction(reaction, r))}\n                  label={(\n                    <div className=\"Reaction\">\n                      <ReactionStaticEmoji reaction={reaction} availableReactions={availableReactions} />\n                      {title}\n                    </div>\n                  )}\n                  withIcon\n                  onChange={handleReactionChange}\n                />\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <FloatingActionButton\n        isShown={isTouched}\n        onClick={handleSaveReactions}\n        ariaLabel={lang('Save')}\n        disabled={isLoading}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { chatId }): StateProps => {\n    const chat = selectChat(global, chatId)!;\n    const { maxUniqueReactions = MAX_UNIQUE_REACTIONS } = global.appConfig || {};\n\n    const chatFullInfo = selectChatFullInfo(global, chatId);\n    const reactionsLimit = chatFullInfo?.reactionsLimit || maxUniqueReactions;\n    const isChannel = isChatChannel(chat);\n\n    return {\n      enabledReactions: chatFullInfo?.enabledReactions,\n      availableReactions: global.reactions.availableReactions,\n      chat,\n      maxUniqueReactions,\n      reactionsLimit,\n      isChannel,\n    };\n  },\n  (global, { chatId }) => {\n    return Boolean(selectChat(global, chatId));\n  },\n)(ManageReactions));\n","import type { ChangeEvent } from 'react';\nimport type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useRef, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../../global';\n\nimport type { ApiPhoto, ApiUser } from '../../../api/types';\nimport { ManagementProgress } from '../../../types';\n\nimport { SERVICE_NOTIFICATIONS_USER_ID } from '../../../config';\nimport { isUserBot } from '../../../global/helpers';\nimport { getIsChatMuted } from '../../../global/helpers/notifications';\nimport {\n  selectChat,\n  selectNotifyDefaults,\n  selectNotifyException,\n  selectTabState,\n  selectUser,\n  selectUserFullInfo,\n} from '../../../global/selectors';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useHistoryBack from '../../../hooks/useHistoryBack';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Avatar from '../../common/Avatar';\nimport Icon from '../../common/icons/Icon';\nimport PrivateChatInfo from '../../common/PrivateChatInfo';\nimport Checkbox from '../../ui/Checkbox';\nimport ConfirmDialog from '../../ui/ConfirmDialog';\nimport FloatingActionButton from '../../ui/FloatingActionButton';\nimport InputText from '../../ui/InputText';\nimport ListItem from '../../ui/ListItem';\nimport SelectAvatar from '../../ui/SelectAvatar';\nimport Spinner from '../../ui/Spinner';\n\nimport './Management.scss';\n\ntype OwnProps = {\n  userId: string;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  user?: ApiUser;\n  progress?: ManagementProgress;\n  isMuted?: boolean;\n  personalPhoto?: ApiPhoto;\n  notPersonalPhoto?: ApiPhoto;\n};\n\nconst ERROR_FIRST_NAME_MISSING = 'Please provide first name';\n\nconst ManageUser: FC<OwnProps & StateProps> = ({\n  userId,\n  user,\n  progress,\n  isMuted,\n  onClose,\n  isActive,\n  personalPhoto,\n  notPersonalPhoto,\n}) => {\n  const {\n    updateContact,\n    deleteContact,\n    closeManagement,\n    uploadContactProfilePhoto,\n  } = getActions();\n\n  const [isDeleteDialogOpen, openDeleteDialog, closeDeleteDialog] = useFlag();\n  const [isResetPersonalPhotoDialogOpen, openResetPersonalPhotoDialog, closeResetPersonalPhotoDialog] = useFlag();\n  const [isProfileFieldsTouched, setIsProfileFieldsTouched] = useState(false);\n  const [error, setError] = useState<string | undefined>();\n  const lang = useOldLang();\n\n  useHistoryBack({\n    isActive,\n    onBack: onClose,\n  });\n\n  const currentFirstName = user ? (user.firstName || '') : '';\n  const currentLastName = user ? (user.lastName || '') : '';\n\n  const [firstName, setFirstName] = useState(currentFirstName);\n  const [lastName, setLastName] = useState(currentLastName);\n  const [isNotificationsEnabled, setIsNotificationsEnabled] = useState(!isMuted);\n\n  useEffect(() => {\n    setIsNotificationsEnabled(!isMuted);\n  }, [isMuted]);\n\n  useEffect(() => {\n    setIsProfileFieldsTouched(false);\n    closeDeleteDialog();\n  }, [closeDeleteDialog, userId]);\n\n  useEffect(() => {\n    setFirstName(currentFirstName);\n    setLastName(currentLastName);\n  }, [currentFirstName, currentLastName, user]);\n\n  useEffect(() => {\n    if (progress === ManagementProgress.Complete) {\n      setIsProfileFieldsTouched(false);\n      setError(undefined);\n      closeDeleteDialog();\n    }\n  }, [closeDeleteDialog, progress]);\n\n  const handleFirstNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setFirstName(e.target.value);\n    setIsProfileFieldsTouched(true);\n\n    if (error === ERROR_FIRST_NAME_MISSING) {\n      setError(undefined);\n    }\n  }, [error]);\n\n  const handleLastNameChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setLastName(e.target.value);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleNotificationChange = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    setIsNotificationsEnabled(e.target.checked);\n    setIsProfileFieldsTouched(true);\n  }, []);\n\n  const handleProfileSave = useCallback(() => {\n    const trimmedFirstName = firstName.trim();\n    const trimmedLastName = lastName.trim();\n\n    if (!trimmedFirstName.length) {\n      setError(ERROR_FIRST_NAME_MISSING);\n      return;\n    }\n\n    updateContact({\n      userId,\n      isMuted: !isNotificationsEnabled,\n      firstName: trimmedFirstName,\n      lastName: trimmedLastName,\n    });\n  }, [firstName, lastName, updateContact, userId, isNotificationsEnabled]);\n\n  const handleDeleteContact = useCallback(() => {\n    deleteContact({ userId });\n    closeDeleteDialog();\n    closeManagement();\n  }, [closeDeleteDialog, closeManagement, deleteContact, userId]);\n\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  const isSuggestRef = useRef(false);\n\n  const handleSuggestPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = true;\n  }, []);\n\n  const handleSetPersonalPhoto = useCallback(() => {\n    inputRef.current?.click();\n    isSuggestRef.current = false;\n  }, []);\n\n  const handleResetPersonalAvatar = useCallback(() => {\n    closeResetPersonalPhotoDialog();\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId });\n  }, [closeResetPersonalPhotoDialog, uploadContactProfilePhoto, userId]);\n\n  const handleSelectAvatar = useCallback((file: File) => {\n    setIsProfileFieldsTouched(true);\n    uploadContactProfilePhoto({ userId, file, isSuggest: isSuggestRef.current });\n  }, [uploadContactProfilePhoto, userId]);\n\n  if (!user) {\n    return undefined;\n  }\n\n  const canSetPersonalPhoto = !isUserBot(user) && user.id !== SERVICE_NOTIFICATIONS_USER_ID;\n  const isLoading = progress === ManagementProgress.InProgress;\n\n  return (\n    <div className=\"Management\">\n      <div className=\"custom-scroll\">\n        <div className=\"section\">\n          <PrivateChatInfo\n            userId={user.id}\n            avatarSize=\"jumbo\"\n            noStatusOrTyping\n            noEmojiStatus\n            withFullInfo\n          />\n          <div className=\"settings-edit\">\n            <InputText\n              id=\"user-first-name\"\n              label={lang('UserInfo.FirstNamePlaceholder')}\n              onChange={handleFirstNameChange}\n              value={firstName}\n              error={error === ERROR_FIRST_NAME_MISSING ? error : undefined}\n            />\n            <InputText\n              id=\"user-last-name\"\n              label={lang('UserInfo.LastNamePlaceholder')}\n              onChange={handleLastNameChange}\n              value={lastName}\n            />\n          </div>\n          <div className=\"ListItem narrow\">\n            <Checkbox\n              checked={isNotificationsEnabled}\n              label={lang('Notifications')}\n              subLabel={lang(isNotificationsEnabled\n                ? 'UserInfo.NotificationsEnabled'\n                : 'UserInfo.NotificationsDisabled')}\n              onChange={handleNotificationChange}\n            />\n          </div>\n        </div>\n        {canSetPersonalPhoto && (\n          <div className=\"section\">\n            <ListItem icon=\"camera-add\" ripple onClick={handleSuggestPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SuggestPhoto', user.firstName)}</span>\n            </ListItem>\n            <ListItem icon=\"camera-add\" ripple onClick={handleSetPersonalPhoto}>\n              <span className=\"list-item-ellipsis\">{lang('UserInfo.SetCustomPhoto', user.firstName)}</span>\n            </ListItem>\n            {personalPhoto && (\n              <ListItem\n                leftElement={(\n                  <Avatar\n                    photo={notPersonalPhoto}\n                    noPersonalPhoto\n                    peer={user}\n                    size=\"mini\"\n                    className=\"personal-photo\"\n                  />\n                )}\n                ripple\n                onClick={openResetPersonalPhotoDialog}\n              >\n                {lang('UserInfo.ResetCustomPhoto')}\n              </ListItem>\n            )}\n            <p className=\"section-help\" dir=\"auto\">{lang('UserInfo.CustomPhotoInfo', user.firstName)}</p>\n          </div>\n        )}\n        <div className=\"section\">\n          <ListItem icon=\"delete\" ripple destructive onClick={openDeleteDialog}>\n            {lang('DeleteContact')}\n          </ListItem>\n        </div>\n      </div>\n      <FloatingActionButton\n        isShown={isProfileFieldsTouched}\n        onClick={handleProfileSave}\n        disabled={isLoading}\n        ariaLabel={lang('Save')}\n      >\n        {isLoading ? (\n          <Spinner color=\"white\" />\n        ) : (\n          <Icon name=\"check\" />\n        )}\n      </FloatingActionButton>\n      <ConfirmDialog\n        isOpen={isDeleteDialogOpen}\n        onClose={closeDeleteDialog}\n        text={lang('AreYouSureDeleteContact')}\n        confirmLabel={lang('DeleteContact')}\n        confirmHandler={handleDeleteContact}\n        confirmIsDestructive\n      />\n      <ConfirmDialog\n        isOpen={isResetPersonalPhotoDialogOpen}\n        onClose={closeResetPersonalPhotoDialog}\n        text={lang('UserInfo.ResetToOriginalAlertText', user.firstName)}\n        confirmLabel={lang('Reset')}\n        confirmHandler={handleResetPersonalAvatar}\n        confirmIsDestructive\n      />\n      <SelectAvatar\n        onChange={handleSelectAvatar}\n        inputRef={inputRef}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { userId }): StateProps => {\n    const user = selectUser(global, userId);\n    const chat = selectChat(global, userId);\n    const userFullInfo = selectUserFullInfo(global, userId);\n    const { progress } = selectTabState(global).management;\n    const isMuted = chat && getIsChatMuted(chat, selectNotifyDefaults(global), selectNotifyException(global, chat.id));\n    const personalPhoto = userFullInfo?.personalPhoto;\n    const notPersonalPhoto = userFullInfo?.profilePhoto || userFullInfo?.fallbackPhoto;\n\n    return {\n      user, progress, isMuted, personalPhoto, notPersonalPhoto,\n    };\n  },\n)(ManageUser));\n","import type { FC } from '../../../lib/teact/teact';\nimport React, { memo } from '../../../lib/teact/teact';\nimport { withGlobal } from '../../../global';\n\nimport type { ManagementType } from '../../../types';\nimport { ManagementScreens } from '../../../types';\n\nimport { selectCurrentManagementType } from '../../../global/selectors';\n\nimport ManageBot from './ManageBot';\nimport ManageChannel from './ManageChannel';\nimport ManageChatAdministrators from './ManageChatAdministrators';\nimport ManageChatPrivacyType from './ManageChatPrivacyType';\nimport ManageChatRemovedUsers from './ManageChatRemovedUsers';\nimport ManageDiscussion from './ManageDiscussion';\nimport ManageGroup from './ManageGroup';\nimport ManageGroupAdminRights from './ManageGroupAdminRights';\nimport ManageGroupMembers from './ManageGroupMembers';\nimport ManageGroupPermissions from './ManageGroupPermissions';\nimport ManageGroupUserPermissions from './ManageGroupUserPermissions';\nimport ManageGroupUserPermissionsCreate from './ManageGroupUserPermissionsCreate';\nimport ManageInvite from './ManageInvite';\nimport ManageInviteInfo from './ManageInviteInfo';\nimport ManageInvites from './ManageInvites';\nimport ManageJoinRequests from './ManageJoinRequests';\nimport ManageReactions from './ManageReactions';\nimport ManageUser from './ManageUser';\n\nexport type OwnProps = {\n  chatId: string;\n  currentScreen: ManagementScreens;\n  selectedChatMemberId?: string;\n  isPromotedByCurrentUser?: boolean;\n  onScreenSelect: (screen: ManagementScreens) => void;\n  onChatMemberSelect: (memberId: string, isPromotedByCurrentUser?: boolean) => void;\n  onClose: NoneToVoidFunction;\n  isActive: boolean;\n};\n\ntype StateProps = {\n  managementType?: ManagementType;\n};\n\nconst Management: FC<OwnProps & StateProps> = ({\n  chatId,\n  currentScreen,\n  selectedChatMemberId,\n  isPromotedByCurrentUser,\n  onScreenSelect,\n  onChatMemberSelect,\n  onClose,\n  isActive,\n  managementType,\n}) => {\n  switch (currentScreen) {\n    case ManagementScreens.Initial: {\n      switch (managementType) {\n        case 'bot':\n          return (\n            <ManageBot\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'user':\n          return (\n            <ManageUser\n              key={chatId}\n              userId={chatId}\n              onClose={onClose}\n              isActive={isActive}\n            />\n          );\n        case 'group':\n          return (\n            <ManageGroup\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.Discussion,\n                ManagementScreens.GroupPermissions,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.GroupRemovedUsers,\n                ManagementScreens.GroupUserPermissionsCreate,\n                ManagementScreens.GroupUserPermissions,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n        case 'channel':\n          return (\n            <ManageChannel\n              key={chatId}\n              chatId={chatId}\n              onScreenSelect={onScreenSelect}\n              onClose={onClose}\n              isActive={isActive || [\n                ManagementScreens.ChannelSubscribers,\n                ManagementScreens.ChatAdministrators,\n                ManagementScreens.ChannelRemovedUsers,\n                ManagementScreens.Discussion,\n                ManagementScreens.ChatPrivacyType,\n                ManagementScreens.ChatAdminRights,\n                ManagementScreens.ChatNewAdminRights,\n                ManagementScreens.GroupRecentActions,\n              ].includes(currentScreen)}\n            />\n          );\n      }\n\n      break;\n    }\n\n    case ManagementScreens.ChatPrivacyType:\n      return (\n        <ManageChatPrivacyType\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.Discussion:\n      return (\n        <ManageDiscussion\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupPermissions:\n      return (\n        <ManageGroupPermissions\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupRemovedUsers,\n            ManagementScreens.GroupUserPermissionsCreate,\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelRemovedUsers:\n    case ManagementScreens.GroupRemovedUsers:\n      return (\n        <ManageChatRemovedUsers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissionsCreate:\n      return (\n        <ManageGroupUserPermissionsCreate\n          chatId={chatId}\n          onChatMemberSelect={onChatMemberSelect}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive || [\n            ManagementScreens.GroupUserPermissions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.GroupUserPermissions:\n      return (\n        <ManageGroupUserPermissions\n          chatId={chatId}\n          selectedChatMemberId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatAdministrators:\n      return (\n        <ManageChatAdministrators\n          chatId={chatId}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n          isActive={isActive || [\n            ManagementScreens.ChatAdminRights,\n            ManagementScreens.ChatNewAdminRights,\n            ManagementScreens.GroupRecentActions,\n          ].includes(currentScreen)}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChatNewAdminRights:\n    case ManagementScreens.ChatAdminRights:\n      return (\n        <ManageGroupAdminRights\n          chatId={chatId}\n          isNewAdmin={currentScreen === ManagementScreens.ChatNewAdminRights}\n          selectedUserId={selectedChatMemberId}\n          isPromotedByCurrentUser={isPromotedByCurrentUser}\n          onScreenSelect={onScreenSelect}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n\n    case ManagementScreens.ChannelSubscribers:\n    case ManagementScreens.GroupMembers:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.Invites:\n      return (\n        <ManageInvites\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.EditInvite:\n      return (\n        <ManageInvite\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n        />\n      );\n    case ManagementScreens.GroupAddAdmins:\n      return (\n        <ManageGroupMembers\n          chatId={chatId}\n          noAdmins\n          isActive={isActive}\n          onClose={onClose}\n          onScreenSelect={onScreenSelect}\n          onChatMemberSelect={onChatMemberSelect}\n        />\n      );\n\n    case ManagementScreens.Reactions:\n      return (\n        <ManageReactions\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.InviteInfo:\n      return (\n        <ManageInviteInfo\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n    case ManagementScreens.JoinRequests:\n      return (\n        <ManageJoinRequests\n          chatId={chatId}\n          isActive={isActive}\n          onClose={onClose}\n        />\n      );\n  }\n\n  return undefined; // Never reached\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const managementType = selectCurrentManagementType(global);\n\n    return {\n      managementType,\n    };\n  },\n)(Management));\n","const VISA = /^4\\d/;\nconst MASTERCARD1 = /^5[1-5]/;\nconst MASTERCARD2 = /^2[2-7]\\d{2}/;\nconst MIR = /^220[0-4]/;\n\nexport enum CardType {\n  Default,\n  Visa,\n  Mastercard,\n  Mir,\n}\n\nconst cards: Record<number, string> = {\n  [CardType.Default]: '',\n  [CardType.Visa]: 'visa',\n  [CardType.Mastercard]: 'mastercard',\n  [CardType.Mir]: 'mir',\n};\n\nexport function detectCardType(cardNumber: string): number {\n  cardNumber = cardNumber.replace(/\\s/g, '');\n  if (VISA.test(cardNumber)) {\n    return CardType.Visa;\n  }\n  if (MIR.test(cardNumber)) {\n    return CardType.Mir;\n  }\n  if (MASTERCARD1.test(cardNumber) || MASTERCARD2.test(cardNumber)) {\n    return CardType.Mastercard;\n  }\n  return CardType.Default;\n}\n\nexport function detectCardTypeText(cardNumber: string): string {\n  const cardType = detectCardType(cardNumber);\n  return cards[cardType as number] || '';\n}\n","import type { RegularLangFnParameters } from '../../util/localization';\nimport type { Dispatch, StateReducer } from '../useReducer';\n\nimport useReducer from '../useReducer';\n\nexport type FormState = {\n  streetLine1: string;\n  streetLine2: string;\n  city: string;\n  state: string;\n  countryIso2: string;\n  postCode: string;\n  fullName: string;\n  email: string;\n  phone: string;\n  shipping: string;\n  cardNumber: string;\n  cardholder: string;\n  expiry: string;\n  cvv: string;\n  billingCountry: string;\n  billingZip: string;\n  saveInfo: boolean;\n  saveCredentials: boolean;\n  formErrors: Partial<Record<string, RegularLangFnParameters>>;\n  tipAmount: number;\n  savedCredentialId: string;\n};\n\nexport type FormActions = (\n  'changeAddress1' | 'changeAddress2' | 'changeCity' | 'changeState' | 'changeCountry' |\n  'changePostCode' | 'changeFullName' | 'changeEmail' | 'changePhone' | 'changeShipping' | 'updateUserInfo' |\n  'changeCardNumber' | 'changeCardholder' | 'changeExpiryDate' | 'changeCvvCode' | 'changeBillingCountry' |\n  'changeBillingZip' | 'changeSaveInfo' | 'changeSaveCredentials' | 'setFormErrors' | 'resetState' | 'setTipAmount' |\n  'changeSavedCredentialId'\n);\nexport type FormEditDispatch = Dispatch<FormState, FormActions>;\n\nconst INITIAL_STATE: FormState = {\n  streetLine1: '',\n  streetLine2: '',\n  city: '',\n  state: '',\n  countryIso2: '',\n  postCode: '',\n  fullName: '',\n  email: '',\n  phone: '',\n  shipping: '',\n  cardNumber: '',\n  cardholder: '',\n  expiry: '',\n  cvv: '',\n  billingCountry: '',\n  billingZip: '',\n  saveInfo: true,\n  saveCredentials: false,\n  formErrors: {},\n  tipAmount: 0,\n  savedCredentialId: '',\n};\n\nconst reducer: StateReducer<FormState, FormActions> = (state, action) => {\n  switch (action.type) {\n    case 'changeAddress1':\n      return {\n        ...state,\n        streetLine1: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine1: undefined,\n        },\n      };\n    case 'changeAddress2':\n      return {\n        ...state,\n        streetLine2: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          streetLine2: undefined,\n        },\n      };\n    case 'changeCity':\n      return {\n        ...state,\n        city: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          city: undefined,\n        },\n      };\n    case 'changeState':\n      return {\n        ...state,\n        state: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          state: undefined,\n        },\n      };\n    case 'changeCountry':\n      return {\n        ...state,\n        countryIso2: action.payload.iso2,\n        billingCountry: action.payload.defaultName,\n        formErrors: {\n          ...state.formErrors,\n          countryIso2: undefined,\n        },\n      };\n    case 'changePostCode':\n      return {\n        ...state,\n        postCode: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          postCode: undefined,\n        },\n      };\n    case 'changeFullName':\n      return {\n        ...state,\n        fullName: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          fullName: undefined,\n        },\n      };\n    case 'changeEmail':\n      return {\n        ...state,\n        email: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          email: undefined,\n        },\n      };\n    case 'changePhone':\n      return {\n        ...state,\n        phone: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          phone: undefined,\n        },\n      };\n    case 'changeShipping':\n      return { ...state, shipping: action.payload };\n    case 'changeCardNumber':\n      return {\n        ...state,\n        cardNumber: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardNumber: undefined,\n        },\n      };\n    case 'changeCardholder':\n      return {\n        ...state,\n        cardholder: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cardholder: undefined,\n        },\n      };\n    case 'changeExpiryDate':\n      return {\n        ...state,\n        expiry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          expiry: undefined,\n        },\n      };\n    case 'changeCvvCode':\n      return {\n        ...state,\n        cvv: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          cvv: undefined,\n        },\n      };\n    case 'changeBillingCountry':\n      return {\n        ...state,\n        billingCountry: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingCountry: undefined,\n        },\n      };\n    case 'changeBillingZip':\n      return {\n        ...state,\n        billingZip: action.payload,\n        formErrors: {\n          ...state.formErrors,\n          billingZip: undefined,\n        },\n      };\n    case 'changeSaveInfo':\n      return { ...state, saveInfo: action.payload };\n    case 'changeSaveCredentials':\n      return { ...state, saveCredentials: action.payload };\n    case 'updateUserInfo':\n      if (action.payload.country) {\n        return {\n          ...state,\n          ...action.payload,\n          billingCountry: action.payload.country,\n        };\n      }\n      return { ...state, ...action.payload };\n    case 'setFormErrors':\n      return {\n        ...state,\n        formErrors: {\n          ...state.formErrors,\n          ...action.payload,\n        },\n      };\n    case 'setTipAmount':\n      return {\n        ...state,\n        tipAmount: action.payload,\n      };\n    case 'changeSavedCredentialId':\n      return {\n        ...state,\n        savedCredentialId: action.payload,\n      };\n    case 'resetState':\n      return {\n        ...INITIAL_STATE,\n      };\n    default:\n      return state;\n  }\n};\n\nconst usePaymentReducer = () => {\n  return useReducer(reducer, INITIAL_STATE);\n};\n\nexport default usePaymentReducer;\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"maC_9u6e\",\"description\":\"zQ6lEVJ2\",\"checkout-picture\":\"JgWvLdK2\",\"checkoutPicture\":\"JgWvLdK2\",\"text\":\"T2pYH395\",\"checkout-title\":\"HadolzeF\",\"checkoutTitle\":\"HadolzeF\",\"checkout-description\":\"oZW7mUNP\",\"checkoutDescription\":\"oZW7mUNP\",\"price-info\":\"P618Q3yr\",\"priceInfo\":\"P618Q3yr\",\"price-info-item\":\"XNNG_ajy\",\"priceInfoItem\":\"XNNG_ajy\",\"price-info-item-main\":\"D9gYNLVk\",\"priceInfoItemMain\":\"D9gYNLVk\",\"price-info-item-title\":\"NtY5Aah7\",\"priceInfoItemTitle\":\"NtY5Aah7\",\"tipsList\":\"WHO341eB\",\"tipsItem\":\"ksLlzBxw\",\"tipsItem_active\":\"J4yem62L\",\"tipsItemActive\":\"J4yem62L\",\"invoice-info\":\"U2IBOLP1\",\"invoiceInfo\":\"U2IBOLP1\",\"provider\":\"kqWcdro1\",\"stripe\":\"xKztZrna\",\"smartglocal\":\"X_Ge1o4u\",\"checkout-info-item-info-title\":\"ysWuPklS\",\"checkoutInfoItemInfoTitle\":\"ysWuPklS\",\"checkout-info-item-info-data\":\"MpC_P8_c\",\"checkoutInfoItemInfoData\":\"MpC_P8_c\",\"tos-checkbox\":\"OrRb0xG7\",\"tosCheckbox\":\"OrRb0xG7\",\"list\":\"l_wfiFG0\"};","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport type {\n  ApiInvoice,\n  ApiLabeledPrice,\n  ApiPaymentCredentials,\n  ApiWebDocument,\n} from '../../api/types';\nimport type { FormEditDispatch } from '../../hooks/reducers/usePaymentReducer';\nimport type { IconName } from '../../types/icons';\nimport type { LangFn } from '../../util/localization';\nimport { PaymentStep } from '../../types';\n\nimport { getWebDocumentHash } from '../../global/helpers';\nimport buildClassName from '../../util/buildClassName';\nimport { formatCurrency } from '../../util/formatCurrency';\nimport renderText from '../common/helpers/renderText';\n\nimport useLang from '../../hooks/useLang';\nimport useMedia from '../../hooks/useMedia';\nimport useMediaTransition from '../../hooks/useMediaTransition';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport SafeLink from '../common/SafeLink';\nimport Checkbox from '../ui/Checkbox';\nimport ListItem from '../ui/ListItem';\nimport Skeleton from '../ui/placeholder/Skeleton';\n\nimport styles from './Checkout.module.scss';\n\nexport type OwnProps = {\n  title: string;\n  description: string;\n  photo?: ApiWebDocument;\n  invoice: ApiInvoice;\n  checkoutInfo?: {\n    paymentMethod?: string;\n    paymentProvider?: string;\n    shippingAddress?: string;\n    name?: string;\n    phone?: string;\n    shippingMethod?: string;\n  };\n  totalPrice?: number;\n  needAddress?: boolean;\n  hasShippingOptions?: boolean;\n  tipAmount?: number;\n  shippingPrices?: ApiLabeledPrice[];\n  isTosAccepted?: boolean;\n  dispatch?: FormEditDispatch;\n  onAcceptTos?: (isAccepted: boolean) => void;\n  savedCredentials?: ApiPaymentCredentials[];\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst Checkout: FC<OwnProps> = ({\n  title,\n  description,\n  photo,\n  invoice,\n  shippingPrices,\n  checkoutInfo,\n  totalPrice,\n  isTosAccepted,\n  dispatch,\n  onAcceptTos,\n  tipAmount,\n  needAddress,\n  hasShippingOptions,\n  savedCredentials,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const { setPaymentStep } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const isInteractive = Boolean(dispatch);\n\n  const {\n    termsUrl, suggestedTipAmounts, maxTipAmount,\n  } = invoice || {};\n  const {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  } = (checkoutInfo || {});\n\n  const photoUrl = useMedia(getWebDocumentHash(photo));\n\n  const ref = useMediaTransition<HTMLImageElement>(photoUrl);\n\n  const handleTipsClick = useCallback((tips: number) => {\n    dispatch!({ type: 'setTipAmount', payload: maxTipAmount ? Math.min(tips, maxTipAmount) : tips });\n  }, [dispatch, maxTipAmount]);\n\n  const handlePaymentMethodClick = useCallback(() => {\n    setPaymentStep({ step: savedCredentials?.length ? PaymentStep.SavedPayments : PaymentStep.PaymentInfo });\n  }, [savedCredentials?.length, setPaymentStep]);\n\n  const handleShippingAddressClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.ShippingInfo });\n  }, [setPaymentStep]);\n\n  const handleShippingMethodClick = useCallback(() => {\n    setPaymentStep({ step: PaymentStep.Shipping });\n  }, [setPaymentStep]);\n\n  function renderTips() {\n    return (\n      <>\n        <div className={styles.priceInfoItem}>\n          <div className={styles.priceInfoItemTitle}>\n            {title}\n          </div>\n          <div>\n            {formatCurrency(lang, tipAmount!, invoice.currency)}\n          </div>\n        </div>\n        <div className={styles.tipsList}>\n          {suggestedTipAmounts!.map((tip) => (\n            <div\n              key={tip}\n              className={buildClassName(styles.tipsItem, tip === tipAmount && styles.tipsItem_active)}\n              onClick={dispatch ? () => handleTipsClick(tip === tipAmount ? 0 : tip) : undefined}\n            >\n              {formatCurrency(lang, tip, invoice.currency, { shouldOmitFractions: true })}\n            </div>\n          ))}\n        </div>\n      </>\n    );\n  }\n\n  function renderTosLink(url: string, isRtl?: boolean) {\n    const langString = oldLang('PaymentCheckoutAcceptRecurrent', botName);\n    const langStringSplit = langString.split('*');\n    return (\n      <>\n        {langStringSplit[0]}\n        <SafeLink\n          url={url}\n          text={langStringSplit[1]}\n          isRtl={isRtl}\n        />\n        {langStringSplit.slice(2)}\n      </>\n    );\n  }\n\n  function renderTos(url: string) {\n    return (\n      <Checkbox\n        label={renderTosLink(url, oldLang.isRtl)}\n        name=\"checkout_tos\"\n        checked={Boolean(isTosAccepted)}\n        className={styles.tosCheckbox}\n        tabIndex={0}\n        onCheck={onAcceptTos}\n      />\n    );\n  }\n\n  return (\n    <div className={styles.root}>\n      <div className={styles.description}>\n        {photoUrl && (\n          <img\n            ref={ref}\n            className={styles.checkoutPicture}\n            src={photoUrl}\n            draggable={false}\n            width={photo!.dimensions?.width}\n            height={photo!.dimensions?.height}\n            alt=\"\"\n          />\n        )}\n        {!photoUrl && photo && (\n          <Skeleton\n            width={photo.dimensions?.width}\n            height={photo.dimensions?.height}\n            className={styles.checkoutPicture}\n            forceAspectRatio\n          />\n        )}\n        <div className={styles.text}>\n          <h5 className={styles.checkoutTitle}>{title}</h5>\n          {description && (\n            <div className={styles.checkoutDescription}>\n              {renderText(description, ['br', 'links', 'emoji'])}\n            </div>\n          )}\n        </div>\n      </div>\n      <div className={styles.priceInfo}>\n        {invoice.prices.map((item) => (\n          renderPaymentItem(lang, item.label, item.amount, invoice.currency)\n        ))}\n        {shippingPrices && shippingPrices.map((item) => (\n          renderPaymentItem(lang, item.label, item.amount, invoice.currency)\n        ))}\n        {suggestedTipAmounts && suggestedTipAmounts.length > 0 && renderTips()}\n        {totalPrice !== undefined && (\n          renderPaymentItem(lang, oldLang('Checkout.TotalAmount'), totalPrice, invoice.currency, true)\n        )}\n      </div>\n      <div className={styles.invoiceInfo}>\n        {!isPaymentFormUrl && renderCheckoutItem({\n          title: paymentMethod || savedCredentials?.[0].title,\n          label: oldLang('PaymentCheckoutMethod'),\n          icon: 'card',\n          onClick: isInteractive ? handlePaymentMethodClick : undefined,\n        })}\n        {paymentProvider && renderCheckoutItem({\n          title: paymentProvider,\n          label: oldLang('PaymentCheckoutProvider'),\n          customIcon: buildClassName(styles.provider, styles[paymentProvider.toLowerCase()]),\n        })}\n        {(needAddress || (!isInteractive && shippingAddress)) && renderCheckoutItem({\n          title: shippingAddress,\n          label: oldLang('PaymentShippingAddress'),\n          icon: 'location',\n          onClick: isInteractive ? handleShippingAddressClick : undefined,\n        })}\n        {name && renderCheckoutItem({\n          title: name,\n          label: oldLang('PaymentCheckoutName'),\n          icon: 'user',\n        })}\n        {phone && renderCheckoutItem({\n          title: phone,\n          label: oldLang('PaymentCheckoutPhoneNumber'),\n          icon: 'phone',\n        })}\n        {(hasShippingOptions || (!isInteractive && shippingMethod)) && renderCheckoutItem({\n          title: shippingMethod,\n          label: oldLang('PaymentCheckoutShippingMethod'),\n          icon: 'truck',\n          onClick: isInteractive ? handleShippingMethodClick : undefined,\n        })}\n        {termsUrl && renderTos(termsUrl)}\n      </div>\n    </div>\n  );\n};\n\nexport default memo(Checkout);\n\nfunction renderPaymentItem(\n  lang: LangFn, title: string, value: number, currency: string, main = false,\n) {\n  return (\n    <div className={buildClassName(styles.priceInfoItem, main && styles.priceInfoItemMain)}>\n      <div className={styles.priceInfoItemTitle}>\n        {title}\n      </div>\n      <div>\n        {formatCurrency(lang, value, currency)}\n      </div>\n    </div>\n  );\n}\n\nfunction renderCheckoutItem({\n  title,\n  label,\n  icon,\n  customIcon,\n  onClick,\n}: {\n  title : string | undefined;\n  label: string | undefined;\n  icon?: IconName;\n  onClick?: NoneToVoidFunction;\n  customIcon?: string;\n}) {\n  const isMultiline = Boolean(title && label !== title);\n\n  return (\n    <ListItem\n      className={styles.list}\n      narrow\n      multiline={isMultiline}\n      icon={icon}\n      inactive={!onClick}\n      onClick={onClick}\n      leftElement={customIcon && <i className={buildClassName('icon', customIcon)} />}\n    >\n      <div className={styles.checkoutInfoItemInfoTitle}>\n        {title || label}\n      </div>\n      {title && label !== title && (\n        <p className={styles.checkoutInfoItemInfoData}>\n          {label}\n        </p>\n      )}\n    </ListItem>\n  );\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useEffect } from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport { TME_LINK_PREFIX } from '../../config';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport './ConfirmPayment.scss';\n\nexport type OwnProps = {\n  url: string;\n  noRedirect?: boolean;\n  onClose: NoneToVoidFunction;\n  onPaymentFormSubmit?: (eventData: PaymentFormSubmitEvent['eventData']) => void;\n};\n\nexport interface PaymentFormSubmitEvent {\n  eventType: 'payment_form_submit';\n  eventData: {\n    credentials: {\n      token: string;\n      type: string;\n    };\n    title: string;\n  };\n}\n\ninterface WebAppOpenTgLinkEvent {\n  eventType: 'web_app_open_tg_link';\n  eventData: {\n    path_full?: string;\n  };\n}\n\ntype IframeCallbackEvent = PaymentFormSubmitEvent | WebAppOpenTgLinkEvent;\n\nconst ConfirmPayment: FC<OwnProps> = ({\n  url, noRedirect, onClose, onPaymentFormSubmit,\n}) => {\n  const { openTelegramLink } = getActions();\n\n  const lang = useOldLang();\n\n  const handleMessage = useCallback((event: MessageEvent<string>) => {\n    try {\n      const data = JSON.parse(event.data) as IframeCallbackEvent;\n      const { eventType, eventData } = data;\n      switch (eventType) {\n        case 'web_app_open_tg_link':\n          if (!noRedirect) {\n            const linkUrl = TME_LINK_PREFIX + eventData.path_full!;\n            openTelegramLink({ url: linkUrl });\n          }\n          onClose();\n          break;\n        case 'payment_form_submit':\n          if (onPaymentFormSubmit) {\n            onPaymentFormSubmit(eventData);\n          }\n          break;\n        default:\n          onClose();\n          break;\n      }\n    } catch (err) {\n      // Ignore other messages\n    }\n  }, [onClose, noRedirect, openTelegramLink, onPaymentFormSubmit]);\n\n  useEffect(() => {\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [handleMessage]);\n\n  return (\n    <div className=\"ConfirmPayment\">\n      <iframe\n        src={url}\n        title={lang('Checkout.WebConfirmation.Title')}\n        allow=\"payment\"\n        sandbox=\"allow-modals allow-forms allow-scripts allow-same-origin allow-top-navigation\"\n        className=\"ConfirmPayment__content\"\n      />\n    </div>\n  );\n};\n\nexport default memo(ConfirmPayment);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useMemo, useState } from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { RegularLangFnParameters } from '../../util/localization';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport PasswordForm from '../common/PasswordForm';\nimport PasswordMonkey from '../common/PasswordMonkey';\n\ninterface OwnProps {\n  isActive?: boolean;\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  onPasswordChange: (password: string) => void;\n}\n\ninterface StateProps {\n  errorKey?: RegularLangFnParameters;\n  passwordHint?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n}\n\nconst PasswordConfirm: FC<OwnProps & StateProps> = ({\n  isActive,\n  errorKey,\n  state,\n  savedCredentials,\n  passwordHint,\n  onPasswordChange,\n}) => {\n  const { clearPaymentError } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [shouldShowPassword, setShouldShowPassword] = useState(false);\n  const cardName = useMemo(() => {\n    return savedCredentials?.length && state.savedCredentialId\n      ? savedCredentials.find(({ id }) => id === state.savedCredentialId)?.title\n      : undefined;\n  }, [savedCredentials, state.savedCredentialId]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <PasswordMonkey isBig isPasswordVisible={shouldShowPassword} />\n\n      <PasswordForm\n        error={errorKey && lang.withRegular(errorKey)}\n        hint={passwordHint}\n        description={oldLang('PaymentConfirmationMessage', cardName)}\n        placeholder={oldLang('Password')}\n        clearError={clearPaymentError}\n        shouldShowSubmit={false}\n        shouldResetValue={isActive}\n        isPasswordVisible={shouldShowPassword}\n        onChangePasswordVisibility={setShouldShowPassword}\n        onInputChange={onPasswordChange}\n      />\n    </div>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>((global): StateProps => {\n  const { payment } = selectTabState(global);\n  return {\n    errorKey: payment.error?.messageKey,\n    passwordHint: global.twoFaSettings.hint,\n    savedCredentials: payment.form?.type === 'regular' ? payment.form.savedCredentials : undefined,\n  };\n})(PasswordConfirm));\n","import type { RefObject } from 'react';\nimport { useEffect } from '../lib/teact/teact';\n\nimport { requestMeasure } from '../lib/fasterdom/fasterdom';\nimport { IS_TOUCH_ENV } from '../util/windowEnvironment';\n\nconst DEFAULT_DURATION = 300;\n\nexport default function useFocusAfterAnimation(\n  ref: RefObject<HTMLInputElement>, animationDuration = DEFAULT_DURATION,\n) {\n  useEffect(() => {\n    if (IS_TOUCH_ENV) {\n      return;\n    }\n\n    setTimeout(() => {\n      requestMeasure(() => {\n        ref.current?.focus();\n      });\n    }, animationDuration);\n  }, [ref, animationDuration]);\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef, useState,\n} from '../../lib/teact/teact';\n\nimport { CardType, detectCardType } from '../common/helpers/detectCardType';\nimport { formatCardNumber } from '../middle/helpers/inputFormatters';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nimport './CardInput.scss';\n\nimport mastercardIconPath from '../../assets/mastercard.svg';\nimport mirIconPath from '../../assets/mir.svg';\nimport visaIconPath from '../../assets/visa.svg';\n\nconst CARD_NUMBER_MAX_LENGTH = 19;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst CardInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n  // eslint-disable-next-line no-null/no-null\n  const cardNumberRef = useRef<HTMLInputElement>(null);\n\n  useFocusAfterAnimation(cardNumberRef);\n\n  const [cardType, setCardType] = useState<number>(CardType.Default);\n  useEffect(() => {\n    const newCardType = detectCardType(value);\n    setCardType(newCardType);\n  // eslint-disable-next-line\n  }, []);\n\n  const handleChange = useCallback((e) => {\n    const newValue = formatCardNumber(e.target.value);\n    const newCardType = detectCardType(e.target.value);\n    setCardType(newCardType);\n    onChange(newValue);\n  }, [onChange]);\n\n  const cardIcon = getCardIcon(cardType);\n\n  return (\n    <div className=\"CardInput\">\n      <InputText\n        ref={cardNumberRef}\n        label={lang('PaymentCardNumber')}\n        onChange={handleChange}\n        value={value}\n        inputMode=\"numeric\"\n        className={cardType ? 'has-right-addon' : ''}\n        error={error}\n        tabIndex={0}\n        maxLength={CARD_NUMBER_MAX_LENGTH}\n        teactExperimentControlled\n      />\n      <span className=\"right-addon\">{cardIcon}</span>\n    </div>\n  );\n};\n\nexport default memo(CardInput);\n\nfunction getCardIcon(cardType: CardType) {\n  switch (cardType) {\n    case CardType.Mastercard:\n      return <img src={mastercardIconPath} draggable={false} alt=\"\" />;\n    case CardType.Visa:\n      return <img src={visaIconPath} draggable={false} alt=\"\" />;\n    case CardType.Mir:\n      return <img src={mirIconPath} draggable={false} alt=\"\" />;\n    default:\n      return undefined;\n  }\n}\n","export function formatCardExpiry(input: string) {\n  input = input.replace(/[^\\d]/g, '').slice(0, 4);\n  const parts = input.match(/.{1,2}/g);\n  if (parts?.[0] && Number(parts[0]) > 12) {\n    parts[0] = '12';\n  }\n  if (parts?.[0] && parts[0].length === 2 && !parts[1]) {\n    parts[1] = '';\n  }\n  return parts ? parts.join('/') : '';\n}\n\nexport function formatCardNumber(input: string) {\n  input = input.replace(/[^\\d]/g, '');\n  const parts = input.match(/.{1,4}/g);\n  return parts ? parts.join(' ') : '';\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { formatCardExpiry } from '../middle/helpers/inputFormatters';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport InputText from '../ui/InputText';\n\nconst MAX_FIELD_LENGTH = 5;\n\nexport type OwnProps = {\n  value: string;\n  error?: string;\n  onChange: (value: string) => void;\n};\n\nconst ExpiryInput : FC<OwnProps> = ({ value, error, onChange }) => {\n  const lang = useOldLang();\n\n  const handleChange = useCallback((e) => {\n    const newValue = e.target.value;\n    // Allow deleting separator\n    if (value.endsWith('/') && value.length > newValue.length) {\n      onChange(newValue);\n    } else {\n      onChange(formatCardExpiry(e.target.value));\n    }\n  }, [onChange, value]);\n\n  return (\n    <InputText\n      label={lang('PaymentCardExpireDate')}\n      onChange={handleChange}\n      value={value}\n      error={error}\n      inputMode=\"numeric\"\n      tabIndex={0}\n      maxLength={MAX_FIELD_LENGTH}\n      teactExperimentControlled\n    />\n  );\n};\n\nexport default memo(ExpiryInput);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\nimport CardInput from './CardInput';\nimport ExpiryInput from './ExpiryInput';\n\nimport './PaymentInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  canSaveCredentials: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst PaymentInfo: FC<OwnProps> = ({\n  state,\n  canSaveCredentials,\n  needCardholderName,\n  needCountry,\n  needZip,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.billingCountry) {\n      selectCountryRef.current.value = state.billingCountry;\n    }\n  }, [state.billingCountry]);\n\n  const handleCardNumberChange = useCallback((value) => {\n    dispatch({ type: 'changeCardNumber', payload: value });\n  }, [dispatch]);\n\n  const handleCardholderChange = useCallback((e) => {\n    dispatch({ type: 'changeCardholder', payload: e.target.value.toUpperCase() });\n  }, [dispatch]);\n\n  const handleExpiryChange = useCallback((value) => {\n    dispatch({ type: 'changeExpiryDate', payload: value });\n  }, [dispatch]);\n\n  const handleCvvChange = useCallback((e) => {\n    const newValue = e.target.value.replace(/[^0-9]/g, '');\n    dispatch({ type: 'changeCvvCode', payload: newValue });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingCountry', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleBillingPostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changeBillingZip', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleChangeSaveCredentials = useCallback((e) => {\n    dispatch({ type: 'changeSaveCredentials', payload: e.target.value });\n  }, [dispatch]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const { formErrors = {} } = state;\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{oldLang('PaymentCardTitle')}</h5>\n        <CardInput\n          onChange={handleCardNumberChange}\n          value={state.cardNumber}\n          error={formErrors.cardNumber && lang.withRegular(formErrors.cardNumber)}\n        />\n        {needCardholderName && (\n          <InputText\n            label={oldLang('Checkout.NewCard.CardholderNamePlaceholder')}\n            onChange={handleCardholderChange}\n            value={state.cardholder}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.cardholder && lang.withRegular(formErrors.cardholder)}\n          />\n        )}\n        <section className=\"inline-inputs\">\n          <ExpiryInput\n            value={state.expiry}\n            onChange={handleExpiryChange}\n            error={formErrors.expiry && lang.withRegular(formErrors.expiry)}\n          />\n          <InputText\n            label={oldLang('lng_payments_card_cvc')}\n            onChange={handleCvvChange}\n            value={state.cvv}\n            inputMode=\"numeric\"\n            maxLength={3}\n            tabIndex={0}\n            error={formErrors.cvv && lang.withRegular(formErrors.cvv)}\n            teactExperimentControlled\n          />\n        </section>\n        {needCountry || needZip ? (\n          <h5>{oldLang('PaymentBillingAddress')}</h5>\n        ) : undefined}\n        <section className=\"inline-inputs\">\n          {needCountry && (\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.billingCountry}\n              hasArrow={Boolean(true)}\n              id=\"billing-country\"\n              error={formErrors.billingCountry && lang.withRegular(formErrors.billingCountry)}\n              tabIndex={0}\n              ref={selectCountryRef}\n            >\n              {\n                countryList.map(({ defaultName, name }) => (\n                  <option\n                    value={defaultName}\n                    className=\"county-item\"\n                    selected={defaultName === state.billingCountry}\n                  >\n                    {defaultName || name}\n                  </option>\n                ))\n              }\n            </Select>\n          )}\n          {needZip && (\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handleBillingPostCodeChange}\n              value={state.billingZip}\n              inputMode=\"text\"\n              tabIndex={0}\n              maxLength={12}\n              error={formErrors.billingZip && lang.withRegular(formErrors.billingZip)}\n            />\n          )}\n        </section>\n        <div className=\"checkbox\">\n          <Checkbox\n            label={oldLang('PaymentCardSavePaymentInformation')}\n            checked={canSaveCredentials ? state.saveCredentials : false}\n            tabIndex={0}\n            subLabel={oldLang(canSaveCredentials ? 'Checkout.NewCard.SaveInfoHelp' : 'Checkout.2FA.Text')}\n            onChange={handleChangeSaveCredentials}\n            disabled={!canSaveCredentials}\n          />\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(PaymentInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback, useMemo } from '../../lib/teact/teact';\n\nimport type { ApiPaymentCredentials } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport { MEMO_EMPTY_ARRAY } from '../../util/memo';\n\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport RadioGroup from '../ui/RadioGroup';\n\ninterface OwnProps {\n  state: FormState;\n  savedCredentials?: ApiPaymentCredentials[];\n  dispatch: FormEditDispatch;\n  onNewCardClick: NoneToVoidFunction;\n}\n\nconst SavedPaymentCredentials: FC<OwnProps> = ({\n  state,\n  savedCredentials,\n  dispatch,\n  onNewCardClick,\n}) => {\n  const lang = useOldLang();\n\n  const options = useMemo(() => {\n    return savedCredentials?.length\n      ? savedCredentials.map(({ id, title }) => ({ label: title, value: id }))\n      : MEMO_EMPTY_ARRAY;\n  }, [savedCredentials]);\n\n  const onChange = useCallback((value) => {\n    dispatch({ type: 'changeSavedCredentialId', payload: value });\n  }, [dispatch]);\n\n  return (\n    <div className=\"PaymentInfo\">\n      <form>\n        <h5>{lang('PaymentCardTitle')}</h5>\n\n        <RadioGroup\n          name=\"saved-credentials\"\n          options={options}\n          selected={state.savedCredentialId}\n          onChange={onChange}\n        />\n\n        <Button isText onClick={onNewCardClick}>\n          {lang('PaymentCheckoutMethodNewCard')}\n        </Button>\n      </form>\n    </div>\n  );\n};\n\nexport default memo(SavedPaymentCredentials);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect,\n  useMemo,\n} from '../../lib/teact/teact';\n\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\n\nimport { formatCurrency } from '../../util/formatCurrency';\n\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport RadioGroup from '../ui/RadioGroup';\n\nimport './Shipping.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  shippingOptions: ShippingOption[];\n  currency: string;\n  dispatch: FormEditDispatch;\n};\n\nconst Shipping: FC<OwnProps> = ({\n  state,\n  shippingOptions,\n  currency,\n  dispatch,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useEffect(() => {\n    if (!shippingOptions || !shippingOptions.length || state.shipping) {\n      return;\n    }\n    dispatch({ type: 'changeShipping', payload: shippingOptions[0].id });\n  }, [shippingOptions, state.shipping, dispatch]);\n\n  const handleShippingSelect = useCallback((value) => {\n    dispatch({ type: 'changeShipping', payload: value });\n  }, [dispatch]);\n\n  const options = useMemo(() => (shippingOptions.map(({ id: value, title: label, amount }) => ({\n    label,\n    subLabel: formatCurrency(lang, amount, currency),\n    value,\n  }))), [shippingOptions, currency, lang]);\n\n  return (\n    <div className=\"Shipping\">\n      <form>\n        <p>{oldLang('PaymentShippingMethod')}</p>\n        <RadioGroup\n          name=\"shipping-options\"\n          options={options}\n          onChange={handleShippingSelect}\n          selected={state.shipping}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(Shipping);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo,\n  useCallback, useEffect, useRef,\n} from '../../lib/teact/teact';\n\nimport type { ApiCountry } from '../../api/types';\nimport type { FormEditDispatch, FormState } from '../../hooks/reducers/usePaymentReducer';\n\nimport useFocusAfterAnimation from '../../hooks/useFocusAfterAnimation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Checkbox from '../ui/Checkbox';\nimport InputText from '../ui/InputText';\nimport Select from '../ui/Select';\n\nimport './ShippingInfo.scss';\n\nexport type OwnProps = {\n  state: FormState;\n  needEmail: boolean;\n  needPhone: boolean;\n  needName: boolean;\n  needAddress: boolean;\n  countryList: ApiCountry[];\n  dispatch: FormEditDispatch;\n};\n\nconst ShippingInfo: FC<OwnProps> = ({\n  state,\n  needEmail,\n  needPhone,\n  needName,\n  needAddress,\n  countryList,\n  dispatch,\n}) => {\n  // eslint-disable-next-line no-null/no-null\n  const inputRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const phoneRef = useRef<HTMLInputElement>(null);\n  // eslint-disable-next-line no-null/no-null\n  const selectCountryRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    if (selectCountryRef.current\n      && selectCountryRef.current.value !== state.countryIso2) {\n      selectCountryRef.current.value = state.countryIso2;\n    }\n  }, [state.countryIso2]);\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  useFocusAfterAnimation(inputRef);\n\n  const handleAddress1Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress1', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleAddress2Change = useCallback((e) => {\n    dispatch({ type: 'changeAddress2', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCityChange = useCallback((e) => {\n    dispatch({ type: 'changeCity', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleStateChange = useCallback((e) => {\n    dispatch({ type: 'changeState', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleCountryChange = useCallback((e) => {\n    dispatch({ type: 'changeCountry', payload: countryList.find((country) => country.iso2 === e.target.value) });\n  }, [countryList, dispatch]);\n\n  const handlePostCodeChange = useCallback((e) => {\n    dispatch({ type: 'changePostCode', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleFullNameChange = useCallback((e) => {\n    dispatch({ type: 'changeFullName', payload: e.target.value });\n  }, [dispatch]);\n\n  const handleEmailChange = useCallback((e) => {\n    dispatch({ type: 'changeEmail', payload: e.target.value });\n  }, [dispatch]);\n\n  const handlePhoneChange = useCallback((e) => {\n    let { value } = e.target;\n    value = `+${value.replace(/\\D/g, '')}`;\n    if (phoneRef.current) {\n      phoneRef.current.value = value;\n    }\n    dispatch({ type: 'changePhone', payload: value });\n  }, [dispatch]);\n\n  const handleSaveInfoChange = useCallback((e) => {\n    dispatch({ type: 'changeSaveInfo', payload: e.target.value });\n  }, [dispatch]);\n\n  const { formErrors } = state;\n  return (\n    <div className=\"ShippingInfo\">\n      <form>\n        {needAddress ? (\n          <div>\n            <h5>{oldLang('PaymentShippingAddress')}</h5>\n            <InputText\n              ref={inputRef}\n              label={oldLang('PaymentShippingAddress1Placeholder')}\n              onChange={handleAddress1Change}\n              value={state.streetLine1}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine1 && lang.withRegular(formErrors.streetLine1)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingAddress2Placeholder')}\n              onChange={handleAddress2Change}\n              value={state.streetLine2}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.streetLine2 && lang.withRegular(formErrors.streetLine2)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingCityPlaceholder')}\n              onChange={handleCityChange}\n              value={state.city}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.city && lang.withRegular(formErrors.city)}\n            />\n            <InputText\n              label={oldLang('PaymentShippingStatePlaceholder')}\n              onChange={handleStateChange}\n              value={state.state}\n              inputMode=\"text\"\n              error={formErrors.state && lang.withRegular(formErrors.state)}\n            />\n            <Select\n              label={oldLang('PaymentShippingCountry')}\n              onChange={handleCountryChange}\n              value={state.countryIso2}\n              hasArrow={Boolean(true)}\n              id=\"shipping-country\"\n              error={formErrors.countryIso2 && lang.withRegular(formErrors.countryIso2)}\n              ref={selectCountryRef}\n              tabIndex={0}\n            >\n              {countryList.map(({ defaultName, name, iso2 }) => (\n                <option\n                  value={iso2}\n                  className=\"county-item\"\n                  selected={iso2 === state.countryIso2}\n                >\n                  {defaultName || name}\n                </option>\n              ))}\n            </Select>\n\n            <InputText\n              label={oldLang('PaymentShippingZipPlaceholder')}\n              onChange={handlePostCodeChange}\n              value={state.postCode}\n              inputMode=\"text\"\n              tabIndex={0}\n              error={formErrors.postCode && lang.withRegular(formErrors.postCode)}\n            />\n          </div>\n        ) : undefined}\n        { needName || needEmail || needPhone ? (\n          <h5>{oldLang('PaymentShippingReceiver')}</h5>\n        ) : undefined }\n        { needName && (\n          <InputText\n            label={oldLang('PaymentShippingName')}\n            onChange={handleFullNameChange}\n            value={state.fullName}\n            inputMode=\"text\"\n            tabIndex={0}\n            error={formErrors.fullName && lang.withRegular(formErrors.fullName)}\n          />\n        ) }\n        { needEmail && (\n          <InputText\n            label={oldLang('PaymentShippingEmailPlaceholder')}\n            onChange={handleEmailChange}\n            value={state.email}\n            inputMode=\"email\"\n            tabIndex={0}\n            error={formErrors.email && lang.withRegular(formErrors.email)}\n          />\n        ) }\n        { needPhone && (\n          <InputText\n            label={oldLang('PaymentShippingPhoneNumber')}\n            onChange={handlePhoneChange}\n            value={state.phone}\n            inputMode=\"tel\"\n            tabIndex={0}\n            error={formErrors.phone && lang.withRegular(formErrors.phone)}\n            ref={phoneRef}\n          />\n        ) }\n        <Checkbox\n          label={oldLang('PaymentShippingSave')}\n          subLabel={oldLang('PaymentShippingSaveInfo')}\n          checked={Boolean(state.saveInfo)}\n          tabIndex={0}\n          onChange={handleSaveInfoChange}\n        />\n      </form>\n    </div>\n  );\n};\n\nexport default memo(ShippingInfo);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useEffect, useMemo, useState,\n} from '../../lib/teact/teact';\nimport { getActions, withGlobal } from '../../global';\n\nimport type {\n  ApiChat, ApiCountry, ApiInvoice, ApiLabeledPrice, ApiPaymentCredentials, ApiPaymentFormRegular,\n} from '../../api/types';\nimport type { TabState } from '../../global/types';\nimport type { FormState } from '../../hooks/reducers/usePaymentReducer';\nimport type { ShippingOption } from '../../types';\nimport type { PaymentFormSubmitEvent } from './ConfirmPayment';\nimport { PaymentStep } from '../../types';\n\nimport { getUserFullName } from '../../global/helpers';\nimport { selectChat, selectTabState, selectUser } from '../../global/selectors';\nimport buildClassName from '../../util/buildClassName';\nimport captureKeyboardListeners from '../../util/captureKeyboardListeners';\nimport { formatCurrencyAsString } from '../../util/formatCurrency';\nimport { detectCardTypeText } from '../common/helpers/detectCardType';\n\nimport usePaymentReducer from '../../hooks/reducers/usePaymentReducer';\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport useLastCallback from '../../hooks/useLastCallback';\nimport useOldLang from '../../hooks/useOldLang';\nimport usePreviousDeprecated from '../../hooks/usePreviousDeprecated';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Spinner from '../ui/Spinner';\nimport Transition from '../ui/Transition';\nimport Checkout from './Checkout';\nimport ConfirmPayment from './ConfirmPayment';\nimport PasswordConfirm from './PasswordConfirm';\nimport PaymentInfo from './PaymentInfo';\nimport SavedPaymentCredentials from './SavedPaymentCredentials';\nimport Shipping from './Shipping';\nimport ShippingInfo from './ShippingInfo';\n\nimport './PaymentModal.scss';\n\nconst DEFAULT_PROVIDER = 'stripe';\nconst DONATE_PROVIDER = 'smartglocal';\nconst DONATE_PROVIDER_URL = 'https://payment.smart-glocal.com';\nconst SUPPORTED_PROVIDERS = new Set([DEFAULT_PROVIDER, DONATE_PROVIDER]);\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: NoneToVoidFunction;\n};\n\ntype StateProps = {\n  step?: PaymentStep;\n  chat?: ApiChat;\n  nativeProvider?: string;\n  invoice?: ApiInvoice;\n  form?: ApiPaymentFormRegular;\n  error?: TabState['payment']['error'];\n  prices?: ApiLabeledPrice[];\n  isProviderError?: boolean;\n  needCardholderName?: boolean;\n  needCountry?: boolean;\n  needZip?: boolean;\n  confirmPaymentUrl?: string;\n  countryList: ApiCountry[];\n  hasShippingOptions?: boolean;\n  shippingOptions?: ShippingOption[];\n  requestId?: string;\n  smartGlocalToken?: string;\n  stripeId?: string;\n  savedCredentials?: ApiPaymentCredentials[];\n  passwordValidUntil?: number;\n  isExtendedMedia?: boolean;\n  isPaymentFormUrl?: boolean;\n  botName?: string;\n};\n\nconst NETWORK_REQUEST_TIMEOUT_S = 3;\n\nconst PaymentModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  step,\n  shippingOptions,\n  form,\n  isProviderError,\n  invoice,\n  nativeProvider,\n  needCardholderName,\n  needCountry,\n  needZip,\n  confirmPaymentUrl,\n  error,\n  countryList,\n  hasShippingOptions,\n  requestId,\n  smartGlocalToken,\n  stripeId,\n  savedCredentials,\n  passwordValidUntil,\n  isExtendedMedia,\n  isPaymentFormUrl,\n  botName,\n}) => {\n  const {\n    loadPasswordInfo,\n    validateRequestedInfo,\n    sendPaymentForm,\n    setPaymentStep,\n    sendCredentialsInfo,\n    clearPaymentError,\n    validatePaymentPassword,\n    setSmartGlocalCardInfo,\n  } = getActions();\n\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n  const [paymentState, paymentDispatch] = usePaymentReducer();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isTosAccepted, setIsTosAccepted] = useState(false);\n  const [twoFaPassword, setTwoFaPassword] = useState('');\n  const prevStep = usePreviousDeprecated(step, true);\n  const prevRequestId = usePreviousDeprecated(requestId);\n  const canRenderFooter = step !== PaymentStep.ConfirmPayment;\n\n  const setStep = useCallback((nextStep) => {\n    setPaymentStep({ step: nextStep });\n  }, [setPaymentStep]);\n\n  useEffect(() => {\n    if (isOpen) {\n      setTwoFaPassword('');\n      loadPasswordInfo();\n      openModal();\n    }\n  }, [isOpen, loadPasswordInfo, openModal]);\n\n  // Modal window can be closed by an event from the server side\n  useEffect(() => {\n    if (!isOpen && isModalOpen) {\n      closeModal();\n    }\n  }, [closeModal, isModalOpen, isOpen]);\n\n  useEffect(() => {\n    if (step !== undefined || error) {\n      setIsLoading(false);\n    }\n  }, [step, error, requestId]);\n\n  // When payment verification occurs and the `step` does not change, the card details must be requested\n  useEffect(() => {\n    if (\n      step === PaymentStep.Checkout\n      && step === prevStep\n      && requestId !== prevRequestId\n      && !paymentState.savedCredentialId\n      && !paymentState.cardNumber\n    ) {\n      setStep(PaymentStep.PaymentInfo);\n    }\n  }, [paymentState.cardNumber, paymentState.savedCredentialId, prevRequestId, prevStep, requestId, setStep, step]);\n\n  useEffect(() => {\n    if (error?.field) {\n      paymentDispatch({\n        type: 'setFormErrors',\n        payload: {\n          [error.field]: error.messageKey,\n        },\n      });\n    }\n  }, [error, paymentDispatch]);\n\n  useEffect(() => {\n    if (form?.savedInfo) {\n      const {\n        name: fullName, phone, email, shippingAddress,\n      } = form.savedInfo;\n      const {\n        countryIso2, ...shippingAddressRest\n      } = shippingAddress || {};\n      const shippingCountry = countryIso2 && countryList.find(({ iso2 }) => iso2 === countryIso2)!.defaultName;\n      paymentDispatch({\n        type: 'updateUserInfo',\n        payload: {\n          fullName,\n          phone: phone && phone.charAt(0) !== '+'\n            ? `+${phone}`\n            : phone,\n          email,\n          ...(shippingCountry && {\n            country: shippingCountry,\n            countryIso2,\n            ...shippingAddressRest,\n          }),\n        },\n      });\n    }\n  }, [form, paymentDispatch, countryList]);\n\n  useEffect(() => {\n    if (savedCredentials?.length) {\n      paymentDispatch({\n        type: 'changeSavedCredentialId',\n        payload: savedCredentials[0].id,\n      });\n    }\n  }, [paymentDispatch, savedCredentials]);\n\n  const handleErrorModalClose = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  const totalPrice = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return 0;\n    }\n\n    return getTotalPrice(invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount);\n  }, [step, invoice?.prices, shippingOptions, paymentState.shipping, paymentState.tipAmount]);\n\n  const checkoutInfo = useMemo(() => {\n    if (step !== PaymentStep.Checkout) {\n      return undefined;\n    }\n    return getCheckoutInfo(paymentState, shippingOptions, nativeProvider || '');\n  }, [step, paymentState, shippingOptions, nativeProvider]);\n\n  const handleNewCardClick = useCallback(() => {\n    setStep(PaymentStep.PaymentInfo);\n  }, [setStep]);\n\n  const handleClearPaymentError = useCallback(() => {\n    clearPaymentError();\n  }, [clearPaymentError]);\n\n  function renderError() {\n    if (!error) {\n      return undefined;\n    }\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={Boolean(error)}\n        onClose={handleErrorModalClose}\n      >\n        <h4>{error.descriptionKey ? lang.withRegular(error.descriptionKey) : lang('ErrorUnspecified')}</h4>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={handleClearPaymentError}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const sendForm = useCallback(() => {\n    sendPaymentForm({\n      shippingOptionId: paymentState.shipping,\n      saveCredentials: paymentState.saveCredentials,\n      savedCredentialId: paymentState.savedCredentialId,\n      tipAmount: paymentState.tipAmount,\n    });\n  }, [sendPaymentForm, paymentState]);\n\n  const handlePaymentFormSubmit = useCallback((eventData: PaymentFormSubmitEvent['eventData']) => {\n    const { credentials } = eventData;\n    setSmartGlocalCardInfo(credentials);\n    sendForm();\n  }, [sendForm]);\n\n  function renderModalContent(currentStep: PaymentStep) {\n    switch (currentStep) {\n      case PaymentStep.Checkout:\n        return (\n          <Checkout\n            title={form!.title}\n            description={form!.description}\n            photo={form!.photo}\n            dispatch={paymentDispatch}\n            shippingPrices={paymentState.shipping && shippingOptions\n              ? getShippingPrices(shippingOptions, paymentState.shipping)\n              : undefined}\n            totalPrice={totalPrice}\n            invoice={invoice!}\n            checkoutInfo={checkoutInfo}\n            isPaymentFormUrl={isPaymentFormUrl}\n            hasShippingOptions={hasShippingOptions}\n            tipAmount={paymentState.tipAmount}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            savedCredentials={savedCredentials}\n            isTosAccepted={isTosAccepted}\n            onAcceptTos={setIsTosAccepted}\n            botName={botName}\n          />\n        );\n      case PaymentStep.SavedPayments:\n        return (\n          <SavedPaymentCredentials\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            dispatch={paymentDispatch}\n            onNewCardClick={handleNewCardClick}\n          />\n        );\n      case PaymentStep.ConfirmPassword:\n        return (\n          <PasswordConfirm\n            state={paymentState}\n            savedCredentials={savedCredentials}\n            onPasswordChange={setTwoFaPassword}\n            isActive={currentStep === step}\n          />\n        );\n      case PaymentStep.PaymentInfo:\n        return (\n          <PaymentInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            canSaveCredentials={Boolean(!form!.isPasswordMissing && form!.canSaveCredentials)}\n            needCardholderName={needCardholderName}\n            needCountry={needCountry}\n            needZip={needZip}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.ShippingInfo:\n        return (\n          <ShippingInfo\n            state={paymentState}\n            dispatch={paymentDispatch}\n            needAddress={Boolean(invoice?.isShippingAddressRequested)}\n            needEmail={Boolean(invoice?.isEmailRequested || invoice?.isEmailSentToProvider)}\n            needPhone={Boolean(invoice?.isPhoneRequested || invoice?.isPhoneSentToProvider)}\n            needName={Boolean(invoice?.isNameRequested)}\n            countryList={countryList!}\n          />\n        );\n      case PaymentStep.Shipping:\n        return (\n          <Shipping\n            state={paymentState}\n            dispatch={paymentDispatch}\n            shippingOptions={shippingOptions || []}\n            currency={invoice!.currency}\n          />\n        );\n      case PaymentStep.ConfirmPayment:\n        return (\n          <ConfirmPayment\n            url={confirmPaymentUrl!}\n            noRedirect={isExtendedMedia}\n            onPaymentFormSubmit={handlePaymentFormSubmit}\n            onClose={closeModal}\n          />\n        );\n      default:\n        return undefined;\n    }\n  }\n\n  const validateRequest = useCallback(() => {\n    const { saveInfo } = paymentState;\n    const requestInfo = getRequestInfo(paymentState);\n    validateRequestedInfo({ requestInfo, saveInfo });\n  }, [validateRequestedInfo, paymentState]);\n\n  const sendCredentials = useCallback(() => {\n    const credentials = getCredentials(paymentState);\n    sendCredentialsInfo({\n      credentials,\n    });\n  }, [sendCredentialsInfo, paymentState]);\n\n  const handleButtonClick = useLastCallback(() => {\n    switch (step) {\n      case PaymentStep.ShippingInfo:\n        setIsLoading(true);\n        validateRequest();\n        break;\n\n      case PaymentStep.Shipping:\n        setStep(PaymentStep.Checkout);\n        break;\n\n      case PaymentStep.SavedPayments:\n        setStep(PaymentStep.ConfirmPassword);\n        break;\n\n      case PaymentStep.ConfirmPassword:\n        if (twoFaPassword === '') {\n          return;\n        }\n\n        setIsLoading(true);\n        validatePaymentPassword({ password: twoFaPassword });\n        break;\n\n      case PaymentStep.PaymentInfo:\n        setIsLoading(true);\n        sendCredentials();\n        paymentDispatch({ type: 'changeSavedCredentialId', payload: '' });\n        break;\n\n      case PaymentStep.Checkout: {\n        if (isPaymentFormUrl) {\n          setIsLoading(true);\n          setStep(PaymentStep.ConfirmPayment);\n          return;\n        }\n\n        if (form?.savedInfo && !requestId && !paymentState.shipping) {\n          setIsLoading(true);\n          validateRequest();\n          return;\n        }\n\n        if (\n          paymentState.savedCredentialId\n          && (!passwordValidUntil || passwordValidUntil <= (Date.now() / 1000 - NETWORK_REQUEST_TIMEOUT_S))\n        ) {\n          setStep(PaymentStep.ConfirmPassword);\n          return;\n        }\n\n        if (\n          !paymentState.savedCredentialId\n          && (\n            (nativeProvider === DEFAULT_PROVIDER && !stripeId)\n            || (nativeProvider === DONATE_PROVIDER && !smartGlocalToken)\n          )\n        ) {\n          setStep(PaymentStep.PaymentInfo);\n          return;\n        }\n\n        const { phone, email, fullName } = paymentState;\n        const shouldFillRequestedData = (invoice?.isEmailRequested && !email)\n          || (invoice?.isPhoneRequested && !phone)\n          || (invoice?.isNameRequested && !fullName);\n\n        if ((invoice?.isShippingAddressRequested && !requestId) || shouldFillRequestedData) {\n          setStep(PaymentStep.ShippingInfo);\n          return;\n        }\n\n        if (invoice?.isShippingAddressRequested && !paymentState.shipping && shippingOptions?.length) {\n          setStep(PaymentStep.Shipping);\n          return;\n        }\n\n        setIsLoading(true);\n        sendForm();\n        break;\n      }\n    }\n  });\n\n  useEffect(() => {\n    return step === PaymentStep.ConfirmPassword\n      ? captureKeyboardListeners({ onEnter: handleButtonClick })\n      : undefined;\n  },\n  [handleButtonClick, step]);\n\n  const handleModalClose = useCallback(() => {\n    paymentDispatch({\n      type: 'resetState',\n    });\n    setIsTosAccepted(false);\n    onClose();\n  }, [onClose, paymentDispatch]);\n\n  const handleBackClick = useCallback(() => {\n    setStep(step === PaymentStep.ConfirmPassword ? PaymentStep.SavedPayments : PaymentStep.Checkout);\n  }, [setStep, step]);\n\n  const modalHeader = useMemo(() => {\n    switch (step) {\n      case PaymentStep.Checkout:\n        return oldLang('PaymentCheckout');\n      case PaymentStep.ShippingInfo:\n        return oldLang('PaymentShippingInfo');\n      case PaymentStep.Shipping:\n        return oldLang('PaymentShippingMethod');\n      case PaymentStep.SavedPayments:\n        return oldLang('PaymentCheckoutMethod');\n      case PaymentStep.ConfirmPassword:\n        return oldLang('Checkout.PasswordEntry.Title');\n      case PaymentStep.PaymentInfo:\n        return oldLang('PaymentCardInfo');\n      case PaymentStep.ConfirmPayment:\n        return oldLang('Checkout.WebConfirmation.Title');\n      default:\n        return '';\n    }\n  }, [step, oldLang]);\n\n  const buttonText = step === PaymentStep.Checkout\n    ? oldLang('Checkout.PayPrice', formatCurrencyAsString(totalPrice, invoice!.currency, oldLang.code))\n    : lang('PaymentInfoDone');\n\n  function getIsSubmitDisabled() {\n    if (isLoading) {\n      return true;\n    }\n\n    switch (step) {\n      case PaymentStep.Checkout:\n        return Boolean(invoice?.termsUrl) && !isTosAccepted;\n\n      case PaymentStep.PaymentInfo:\n        return Boolean(\n          paymentState.cardNumber === ''\n          || (needCardholderName && paymentState.cardholder === '')\n          || paymentState.cvv === ''\n          || paymentState.expiry === '',\n        );\n\n      default:\n        return false;\n    }\n  }\n\n  if (isProviderError) {\n    return (\n      <Modal\n        className=\"error\"\n        isOpen={isModalOpen}\n        onClose={closeModal}\n        onCloseAnimationEnd={handleModalClose}\n      >\n        <p>\n          Sorry, Telegram Web A doesn&apos;t support payments with this provider yet. <br />\n          Please use one of our mobile apps to do this.\n        </p>\n        <div className=\"dialog-buttons mt-2\">\n          <Button\n            isText\n            onClick={closeModal}\n          >\n            {oldLang('OK')}\n          </Button>\n        </div>\n      </Modal>\n    );\n  }\n\n  const isSubmitDisabled = getIsSubmitDisabled();\n\n  return (\n    <Modal\n      className={buildClassName('PaymentModal', invoice?.isRecurring && 'recurring')}\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={handleModalClose}\n    >\n      <div className=\"header\" dir={oldLang.isRtl ? 'rtl' : undefined}>\n        <Button\n          className=\"close-button\"\n          color=\"translucent\"\n          round\n          size=\"smaller\"\n          onClick={step === PaymentStep.Checkout ? closeModal : handleBackClick}\n          ariaLabel=\"Close\"\n        >\n          <Icon name={step === PaymentStep.Checkout ? 'close' : 'arrow-left'} />\n        </Button>\n        <h3>{modalHeader}</h3>\n      </div>\n      {step !== undefined ? (\n        <Transition\n          name=\"slide\"\n          activeKey={step}\n          shouldCleanup\n          cleanupOnlyKey={PaymentStep.ConfirmPayment}\n        >\n          <div className=\"content custom-scroll\">\n            {renderModalContent(step)}\n          </div>\n        </Transition>\n      ) : (\n        <div className=\"empty-content\">\n          <Spinner color=\"gray\" />\n        </div>\n      )}\n      {canRenderFooter && (\n        <div className=\"footer\">\n          <Button\n            className=\"button-text\"\n            type=\"submit\"\n            onClick={handleButtonClick}\n            disabled={isSubmitDisabled}\n            isLoading={isLoading}\n          >\n            {buttonText}\n          </Button>\n        </div>\n      )}\n      {error && !error.field && renderError()}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const {\n      form,\n      step,\n      shippingOptions,\n      error,\n      confirmPaymentUrl,\n      inputInvoice,\n      requestId,\n      stripeCredentials,\n      smartGlocalCredentials,\n      temporaryPassword,\n      isExtendedMedia,\n      url,\n    } = selectTabState(global).payment;\n\n    const { invoice, nativeParams, nativeProvider } = form || {};\n    const countryList = global.countryList.general;\n\n    let providerName = form?.nativeProvider;\n    if (!providerName && url) {\n      providerName = url.startsWith(DONATE_PROVIDER_URL) ? DONATE_PROVIDER : undefined;\n    }\n\n    const chat = inputInvoice && 'chatId' in inputInvoice ? selectChat(global, inputInvoice.chatId!) : undefined;\n    const isProviderError = Boolean(invoice && (!providerName || !SUPPORTED_PROVIDERS.has(providerName)));\n    const { needCardholderName, needCountry, needZip } = (nativeParams || {});\n    const bot = form?.botId ? selectUser(global, form.botId) : undefined;\n    const botName = getUserFullName(bot);\n\n    return {\n      step,\n      chat,\n      shippingOptions,\n      nativeProvider: providerName,\n      isProviderError,\n      form,\n      invoice,\n      needCardholderName,\n      needCountry,\n      needZip,\n      error,\n      confirmPaymentUrl: confirmPaymentUrl ?? url,\n      isPaymentFormUrl: Boolean(!nativeProvider && url),\n      countryList,\n      requestId,\n      hasShippingOptions: Boolean(shippingOptions?.length),\n      smartGlocalToken: smartGlocalCredentials?.token,\n      stripeId: stripeCredentials?.id,\n      passwordValidUntil: temporaryPassword?.validUntil,\n      isExtendedMedia,\n      botName,\n    };\n  },\n)(PaymentModal));\n\nfunction findShippingOption(shippingOptions: ShippingOption[], optionId: string) {\n  return shippingOptions.find(({ id }) => id === optionId);\n}\n\nfunction getShippingPrices(shippingOptions: ShippingOption[], shippingOption: string) {\n  const option = findShippingOption(shippingOptions, shippingOption);\n  return option?.prices;\n}\n\nfunction getTotalPrice(\n  prices: ApiLabeledPrice[] = [],\n  shippingOptions: ShippingOption[] | undefined,\n  shippingOption: string,\n  tipAmount: number,\n) {\n  const shippingPrices = shippingOptions\n    ? getShippingPrices(shippingOptions, shippingOption)\n    : [];\n  let total = tipAmount;\n  const totalPrices = prices.concat(shippingPrices || []);\n  total = totalPrices.reduce((acc, cur) => {\n    return acc + cur.amount;\n  }, total);\n  return total;\n}\n\nfunction getCheckoutInfo(state: FormState, shippingOptions: ShippingOption[] | undefined, paymentProvider: string) {\n  const cardTypeText = detectCardTypeText(state.cardNumber);\n  const paymentMethod = cardTypeText && state.cardNumber ? `${cardTypeText} *${state.cardNumber.slice(-4)}` : undefined;\n  const shippingAddress = state.streetLine1\n    ? `${state.streetLine1}, ${state.city}, ${state.countryIso2}`\n    : undefined;\n  const { phone, fullName: name } = state;\n  const shippingOption = shippingOptions ? findShippingOption(shippingOptions, state.shipping) : undefined;\n  const shippingMethod = shippingOption?.title;\n  return {\n    paymentMethod,\n    paymentProvider,\n    shippingAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n\nfunction getRequestInfo(paymentState: FormState) {\n  const {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n    fullName: name,\n    phone,\n    email,\n  } = paymentState;\n\n  const shippingAddress = {\n    streetLine1,\n    streetLine2,\n    city,\n    state,\n    countryIso2,\n    postCode,\n  };\n\n  return {\n    name,\n    phone,\n    email,\n    shippingAddress,\n  };\n}\n\nexport type ApiCredentials = {\n  data: {\n    cardNumber: string;\n    cardholder: string;\n    expiryMonth: string;\n    expiryYear: string;\n    cvv: string;\n    country: string;\n    zip: string;\n  };\n};\n\nfunction getCredentials(paymentState: FormState): ApiCredentials {\n  const {\n    cardNumber, cardholder, expiry, cvv, billingCountry, billingZip,\n  } = paymentState;\n  const [expiryMonth, expiryYear] = expiry.split('/');\n  const data = {\n    cardNumber,\n    cardholder,\n    expiryMonth,\n    expiryYear,\n    cvv,\n    country: billingCountry,\n    zip: billingZip,\n  };\n\n  return {\n    data,\n  };\n}\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useEffect, useMemo } from '../../lib/teact/teact';\nimport { withGlobal } from '../../global';\n\nimport type { ApiReceiptRegular, ApiShippingAddress } from '../../api/types';\n\nimport { selectTabState } from '../../global/selectors';\n\nimport useFlag from '../../hooks/useFlag';\nimport useLang from '../../hooks/useLang';\nimport usePrevious from '../../hooks/usePrevious';\n\nimport Icon from '../common/icons/Icon';\nimport Button from '../ui/Button';\nimport Modal from '../ui/Modal';\nimport Checkout from './Checkout';\n\nimport './PaymentModal.scss';\n\nexport type OwnProps = {\n  isOpen?: boolean;\n  onClose: () => void;\n};\n\ntype StateProps = {\n  receipt?: ApiReceiptRegular;\n};\n\nconst ReceiptModal: FC<OwnProps & StateProps> = ({\n  isOpen,\n  onClose,\n  receipt,\n}) => {\n  const lang = useLang();\n\n  const [isModalOpen, openModal, closeModal] = useFlag();\n\n  useEffect(() => {\n    if (isOpen) {\n      openModal();\n    }\n  }, [isOpen, openModal]);\n\n  const prevReceipt = usePrevious(receipt);\n  const renderingReceipt = receipt || prevReceipt;\n\n  const checkoutInfo = useMemo(() => {\n    if (!renderingReceipt) return undefined;\n    return getCheckoutInfo(renderingReceipt.credentialsTitle, renderingReceipt.info, renderingReceipt.shippingMethod);\n  }, [renderingReceipt]);\n\n  return (\n    <Modal\n      className=\"PaymentModal PaymentModal-receipt\"\n      isOpen={isModalOpen}\n      onClose={closeModal}\n      onCloseAnimationEnd={onClose}\n    >\n      {renderingReceipt && (\n        <>\n          <div className=\"header\" dir={lang.isRtl ? 'rtl' : undefined}>\n            <Button\n              className=\"close-button\"\n              color=\"translucent\"\n              round\n              size=\"smaller\"\n              onClick={closeModal}\n              ariaLabel=\"Close\"\n            >\n              <Icon name=\"close\" />\n            </Button>\n            <h3> {lang('PaymentReceipt')} </h3>\n          </div>\n          <div className=\"receipt-content custom-scroll\">\n            <Checkout\n              shippingPrices={renderingReceipt.shippingPrices}\n              totalPrice={renderingReceipt.totalAmount}\n              tipAmount={renderingReceipt.tipAmount}\n              invoice={renderingReceipt.invoice}\n              checkoutInfo={checkoutInfo}\n              title={renderingReceipt.title}\n              description={renderingReceipt.description}\n              photo={renderingReceipt.photo}\n            />\n          </div>\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global): StateProps => {\n    const { receipt } = selectTabState(global).payment;\n\n    return {\n      receipt,\n    };\n  },\n)(ReceiptModal));\n\nfunction getCheckoutInfo(paymentMethod?: string,\n  info?: {\n    phone?: string;\n    name?: string;\n    shippingAddress?: ApiShippingAddress;\n  },\n  shippingMethod?: string) {\n  if (!info) {\n    return { paymentMethod };\n  }\n  const { shippingAddress } = info;\n  const fullAddress = shippingAddress?.streetLine1\n    ? `${shippingAddress.streetLine1}, ${shippingAddress.city}, ${shippingAddress.countryIso2}`\n    : undefined;\n  const { phone, name } = info;\n  return {\n    paymentMethod,\n    shippingAddress: fullAddress,\n    name,\n    phone,\n    shippingMethod,\n  };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"n8eENbaR\",\"closeButton\":\"smosGkw9\",\"contentText\":\"Qo4PtFZI\",\"title\":\"wtfpombl\",\"separator\":\"UoMeVIyC\",\"userPicker\":\"nEYyTS_m\",\"sendInvites\":\"Ttkq3nqt\",\"avatarList\":\"Nc3SOtKd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useCallback,\n  useEffect,\n  useMemo, useState,\n} from '../../../lib/teact/teact';\nimport { getActions, getGlobal, withGlobal } from '../../../global';\n\nimport type { ApiChat } from '../../../api/types';\nimport type { TabState } from '../../../global/types';\n\nimport { getUserFullName } from '../../../global/helpers';\nimport { selectChat } from '../../../global/selectors';\nimport { partition } from '../../../util/iteratees';\nimport { MEMO_EMPTY_ARRAY } from '../../../util/memo';\nimport renderText from '../../common/helpers/renderText';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport AvatarList from '../../common/AvatarList';\nimport Icon from '../../common/icons/Icon';\nimport PeerPicker from '../../common/pickers/PeerPicker';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './InviteViaLinkModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['inviteViaLinkModal'];\n};\n\ntype StateProps = {\n  chat?: ApiChat;\n};\n\nconst InviteViaLinkModal: FC<OwnProps & StateProps> = ({\n  modal,\n  chat,\n}) => {\n  const { sendInviteMessages, closeInviteViaLinkModal, openPremiumModal } = getActions();\n  const { missingUsers } = modal || {};\n\n  const lang = useOldLang();\n  const [selectedMemberIds, setSelectedMemberIds] = useState<string[]>([]);\n\n  const userIds = useMemo(() => missingUsers?.map((user) => user.id) || MEMO_EMPTY_ARRAY, [missingUsers]);\n  const [unselectableIds, selectableIds] = useMemo(() => {\n    if (!missingUsers?.length) return [[], []];\n    const [requirePremiumIds, regularIds] = partition(missingUsers, (user) => user.isRequiringPremiumToMessage);\n    return [requirePremiumIds.map((user) => user.id), regularIds.map((user) => user.id)];\n  }, [missingUsers]);\n\n  const invitableWithPremiumIds = useMemo(() => {\n    return missingUsers?.filter((user) => user.isRequiringPremiumToInvite || user.isRequiringPremiumToMessage)\n      .map((user) => user.id);\n  }, [missingUsers]);\n\n  const isEveryPremiumBlocksPm = useMemo(() => {\n    if (!missingUsers) return undefined;\n    return !missingUsers.some((user) => user.isRequiringPremiumToInvite && !user.isRequiringPremiumToMessage);\n  }, [missingUsers]);\n\n  const topListPeers = useMemo(() => {\n    const users = getGlobal().users.byId;\n    return invitableWithPremiumIds?.map((id) => users[id]);\n  }, [invitableWithPremiumIds]);\n\n  useEffect(() => {\n    setSelectedMemberIds(selectableIds);\n  }, [selectableIds]);\n\n  const handleClose = useLastCallback(() => closeInviteViaLinkModal());\n\n  const handleSendInviteLink = useCallback(() => {\n    sendInviteMessages({ chatId: chat!.id, userIds: selectedMemberIds! });\n    closeInviteViaLinkModal();\n  }, [selectedMemberIds, chat]);\n\n  const handleOpenPremiumModal = useCallback(() => {\n    openPremiumModal();\n  }, []);\n\n  const canSendInviteLink = useMemo(() => {\n    if (!chat) return undefined;\n    return Boolean(chat?.isCreator || chat?.adminRights?.inviteUsers);\n  }, [chat]);\n\n  const inviteSectionText = useMemo(() => {\n    return canSendInviteLink\n      ? lang(missingUsers?.length === 1 ? 'InviteBlockedOneMessage' : 'InviteBlockedManyMessage')\n      : lang('InviteRestrictedUsers2', missingUsers?.length);\n  }, [canSendInviteLink, lang, missingUsers?.length]);\n\n  const premiumSectionText = useMemo(() => {\n    if (!invitableWithPremiumIds?.length || !topListPeers?.length) return undefined;\n    const prefix = isEveryPremiumBlocksPm ? 'InviteMessagePremiumBlocked' : 'InvitePremiumBlocked';\n    let langKey = `${prefix}One`;\n    let params = [getUserFullName(topListPeers[0])];\n    if (invitableWithPremiumIds.length === 2) {\n      langKey = `${prefix}Two`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1])];\n    } else if (invitableWithPremiumIds.length === 3) {\n      langKey = `${prefix}Three`;\n      params = [getUserFullName(topListPeers[0]), getUserFullName(topListPeers[1]), getUserFullName(topListPeers[2])];\n    } else if (invitableWithPremiumIds.length > 3) {\n      langKey = `${prefix}Many`;\n      params = [\n        getUserFullName(topListPeers[0]),\n        getUserFullName(topListPeers[1]),\n        (invitableWithPremiumIds!.length - 2).toString(),\n      ];\n    }\n\n    return lang(langKey, params, undefined, topListPeers.length);\n  }, [invitableWithPremiumIds, isEveryPremiumBlocksPm, lang, topListPeers]);\n\n  const hasPremiumSection = Boolean(topListPeers?.length);\n  const hasSelectableSection = Boolean(selectableIds?.length);\n\n  return (\n    <Modal\n      isOpen={Boolean(userIds && chat)}\n      contentClassName={styles.content}\n      onClose={handleClose}\n      isSlim\n    >\n      <Button\n        round\n        color=\"translucent\"\n        size=\"smaller\"\n        className={styles.closeButton}\n        ariaLabel={lang('Close')}\n        onClick={handleClose}\n      >\n        <Icon name=\"close\" />\n      </Button>\n      {premiumSectionText && (\n        <>\n          <AvatarList\n            className={styles.avatarList}\n            peers={topListPeers}\n            size=\"large\"\n          />\n          <h3 className={styles.title}>\n            {canSendInviteLink ? lang('InvitePremiumBlockedTitle') : lang('ChannelInviteViaLinkRestricted')}\n          </h3>\n          <p className={styles.contentText}>\n            {renderText(premiumSectionText, ['simple_markdown'])}\n          </p>\n          <Button\n            withPremiumGradient\n            isShiny\n            size=\"smaller\"\n            onClick={handleOpenPremiumModal}\n          >\n            {lang('InvitePremiumBlockedSubscribe')}\n          </Button>\n        </>\n      )}\n      {hasPremiumSection && hasSelectableSection && (\n        <Separator className={styles.separator}>\n          {lang('InvitePremiumBlockedOr')}\n        </Separator>\n      )}\n      {hasSelectableSection && (\n        <>\n          <h3 className={styles.title}>{lang('InviteBlockedTitle')}</h3>\n          <p className={styles.contentText}>\n            {inviteSectionText}\n          </p>\n          <PeerPicker\n            className={styles.userPicker}\n            itemIds={userIds}\n            selectedIds={selectedMemberIds}\n            lockedUnselectedIds={unselectableIds}\n            lockedUnselectedSubtitle={lang('InvitePremiumBlockedUser')}\n            onSelectedIdsChange={setSelectedMemberIds}\n            isViewOnly={!canSendInviteLink}\n            allowMultiple\n            withStatus\n            itemInputType=\"checkbox\"\n          />\n          {canSendInviteLink && (\n            <Button\n              className={styles.sendInvites}\n              size=\"smaller\"\n              onClick={handleSendInviteLink}\n              disabled={!selectedMemberIds.length}\n            >\n              {lang('SendInviteLink.ActionInvite')}\n            </Button>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(withGlobal<OwnProps>(\n  (global, { modal }): StateProps => {\n    const chat = modal?.chatId ? selectChat(global, modal.chatId) : undefined;\n\n    return {\n      chat,\n    };\n  },\n)(InviteViaLinkModal));\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"c3xMWwzW\",\"fade-in-opacity\":\"cHb04cFv\",\"fadeInOpacity\":\"cHb04cFv\",\"closing\":\"_0HkZ8ITm\",\"voice\":\"VLiJWMs0\",\"video\":\"ML2YEpGq\",\"footer\":\"VWy1qXJL\",\"closeBtn\":\"FfMrCmD9\"};","import React, { memo } from '../../../lib/teact/teact';\nimport { getActions, getGlobal } from '../../../global';\n\nimport type { TabState } from '../../../global/types';\nimport { AudioOrigin } from '../../../types';\n\nimport { isOwnMessage } from '../../../global/helpers';\nimport { selectTheme } from '../../../global/selectors';\nimport buildClassName from '../../../util/buildClassName';\n\nimport useCurrentOrPrev from '../../../hooks/useCurrentOrPrev';\nimport useLastCallback from '../../../hooks/useLastCallback';\nimport useOldLang from '../../../hooks/useOldLang';\nimport useShowTransitionDeprecated from '../../../hooks/useShowTransitionDeprecated';\n\nimport Audio from '../../common/Audio';\nimport RoundVideo from '../../middle/message/RoundVideo';\nimport Button from '../../ui/Button';\n\nimport styles from './OneTimeMediaModal.module.scss';\n\nexport type OwnProps = {\n  modal: TabState['oneTimeMediaModal'];\n};\n\nconst OneTimeMediaModal = ({\n  modal,\n}: OwnProps) => {\n  const {\n    closeOneTimeMediaModal,\n  } = getActions();\n\n  const lang = useOldLang();\n  const message = useCurrentOrPrev(modal?.message, true);\n\n  const {\n    shouldRender,\n    transitionClassNames,\n  } = useShowTransitionDeprecated(Boolean(modal));\n\n  const handlePlayVoice = useLastCallback(() => {\n    return undefined;\n  });\n\n  const handleClose = useLastCallback(() => {\n    closeOneTimeMediaModal();\n  });\n\n  if (!shouldRender || !message) {\n    return undefined;\n  }\n\n  const isOwn = isOwnMessage(message);\n  const theme = selectTheme(getGlobal());\n  const closeBtnTitle = isOwn ? lang('Chat.Voice.Single.Close') : lang('Chat.Voice.Single.DeleteAndClose');\n\n  function renderMedia() {\n    if (!message?.content) {\n      return undefined;\n    }\n    const { voice, video } = message.content;\n    if (voice) {\n      return (\n        <Audio\n          className={styles.voice}\n          theme={theme}\n          message={message}\n          origin={AudioOrigin.OneTimeModal}\n          autoPlay\n          onPlay={handlePlayVoice}\n          onPause={handleClose}\n        />\n      );\n    } else if (video?.isRound) {\n      return (\n        <RoundVideo\n          className={styles.video}\n          message={message}\n          origin=\"oneTimeModal\"\n          onStop={handleClose}\n        />\n      );\n    }\n    return undefined;\n  }\n\n  return (\n    <div className={buildClassName(styles.root, transitionClassNames)}>\n      {renderMedia()}\n      <div className={styles.footer}>\n        <Button\n          faded\n          onClick={handleClose}\n          pill\n          size=\"smaller\"\n          color={theme === 'dark' ? 'dark' : 'secondary'}\n          className={styles.closeBtn}\n        >\n          {closeBtnTitle}\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default memo(OneTimeMediaModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, {\n  memo, useCallback, useRef, useState,\n} from '../../lib/teact/teact';\nimport { getActions } from '../../global';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useKeyboardListNavigation from '../../hooks/useKeyboardListNavigation';\nimport useLang from '../../hooks/useLang';\nimport useOldLang from '../../hooks/useOldLang';\n\nimport Button from '../ui/Button';\nimport Checkbox from '../ui/Checkbox';\nimport Modal from '../ui/Modal';\n\ntype OwnProps = {\n  isOpen: boolean;\n};\n\nconst WebAppsCloseConfirmationModal: FC<OwnProps> = ({\n  isOpen,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n  const { closeWebAppsCloseConfirmationModal, closeWebAppModal } = getActions();\n\n  const [shouldSkipInFuture, setShouldSkipInFuture] = useState(false);\n\n  // eslint-disable-next-line no-null/no-null\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  const onClose = useCallback(() => {\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const confirmHandler = useCallback(() => {\n    closeWebAppModal({ shouldSkipConfirmation: true });\n    closeWebAppsCloseConfirmationModal({ shouldSkipInFuture });\n  }, [shouldSkipInFuture]);\n\n  const handleSelectWithEnter = useCallback((index: number) => {\n    if (index === -1) confirmHandler();\n  }, [confirmHandler]);\n\n  const handleKeyDown = useKeyboardListNavigation(containerRef, isOpen, handleSelectWithEnter, '.Button');\n\n  return (\n    <Modal\n      className={buildClassName('confirm')}\n      title={lang('CloseMiniApps')}\n      isOpen={isOpen}\n      onClose={onClose}\n    >\n      <p>{lang('AreYouSureCloseMiniApps')}</p>\n      <Checkbox\n        className=\"dialog-checkbox\"\n        label={lang('DoNotAskAgain')}\n        checked={shouldSkipInFuture}\n        onCheck={setShouldSkipInFuture}\n      />\n      <div\n        className=\"dialog-buttons mt-2\"\n        ref={containerRef}\n        onKeyDown={handleKeyDown}\n      >\n        <Button\n          className=\"confirm-dialog-button\"\n          isText\n          onClick={confirmHandler}\n          color=\"danger\"\n        >\n          {oldLang('Confirm')}\n        </Button>\n        <Button className=\"confirm-dialog-button\" isText onClick={onClose}>\n          {oldLang('Cancel')}\n        </Button>\n      </div>\n    </Modal>\n  );\n};\n\nexport default memo(WebAppsCloseConfirmationModal);\n","import type { FC } from '../../lib/teact/teact';\nimport React, { memo, useCallback } from '../../lib/teact/teact';\n\nimport { STICKER_SIZE_AUTH, STICKER_SIZE_AUTH_MOBILE, STICKER_SIZE_TWO_FA } from '../../config';\nimport { LOCAL_TGS_URLS } from './helpers/animatedAssets';\n\nimport useTimeout from '../../hooks/schedulers/useTimeout';\nimport useAppLayout from '../../hooks/useAppLayout';\nimport useFlag from '../../hooks/useFlag';\n\nimport AnimatedSticker from './AnimatedSticker';\n\nimport './PasswordMonkey.scss';\n\ntype OwnProps = {\n  isPasswordVisible: boolean;\n  isBig?: boolean;\n};\n\nconst PEEK_MONKEY_SHOW_DELAY = 2000;\nconst SEGMENT_COVER_EYES: [number, number] = [0, 50];\nconst SEGMENT_UNCOVER_EYE: [number, number] = [0, 20];\nconst SEGMENT_COVER_EYE: [number, number] = [20, 0];\n\nconst PasswordMonkey: FC<OwnProps> = ({ isPasswordVisible, isBig }) => {\n  const [isFirstMonkeyLoaded, markFirstMonkeyLoaded] = useFlag(false);\n  const [isPeekShown, markPeekShown] = useFlag(false);\n  const { isMobile } = useAppLayout();\n\n  const stikerSize = isMobile ? STICKER_SIZE_AUTH_MOBILE : STICKER_SIZE_AUTH;\n\n  useTimeout(markPeekShown, PEEK_MONKEY_SHOW_DELAY);\n  const handleFirstMonkeyLoad = useCallback(markFirstMonkeyLoaded, [markFirstMonkeyLoaded]);\n\n  return (\n    <div id=\"monkey\" className={isBig ? 'big' : ''}>\n      {!isFirstMonkeyLoaded && (\n        <div className=\"monkey-preview\" />\n      )}\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'hidden' : 'shown'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyClose}\n        playSegment={SEGMENT_COVER_EYES}\n        noLoop\n        onLoad={handleFirstMonkeyLoad}\n      />\n      <AnimatedSticker\n        size={isBig ? STICKER_SIZE_TWO_FA : stikerSize}\n        className={isPeekShown ? 'shown' : 'hidden'}\n        tgsUrl={LOCAL_TGS_URLS.MonkeyPeek}\n        playSegment={isPasswordVisible ? SEGMENT_UNCOVER_EYE : SEGMENT_COVER_EYE}\n        noLoop\n      />\n    </div>\n  );\n};\n\nexport default memo(PasswordMonkey);\n","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"hyRfEyRz\",\"top\":\"p_Ny8jqJ\",\"badge\":\"QRrryqp4\",\"text\":\"I5jdPgFL\"};","import React, { memo } from '../../lib/teact/teact';\n\nimport type { ApiPeer, ApiWebDocument } from '../../api/types';\nimport type { CustomPeer } from '../../types';\nimport type { IconName } from '../../types/icons';\n\nimport buildClassName from '../../util/buildClassName';\n\nimport useLang from '../../hooks/useLang';\n\nimport Avatar, { type AvatarSize } from './Avatar';\nimport Icon from './icons/Icon';\n\nimport styles from './PeerBadge.module.scss';\n\ntype OwnProps = {\n  peer?: ApiPeer | CustomPeer;\n  avatarWebPhoto?: ApiWebDocument;\n  avatarSize?: AvatarSize;\n  text?: string;\n  badgeText?: string;\n  badgeIcon?: IconName;\n  className?: string;\n  badgeClassName?: string;\n  badgeIconClassName?: string;\n  textClassName?: string;\n  onClick?: NoneToVoidFunction;\n};\n\nconst PeerBadge = ({\n  peer: avatarPeer,\n  avatarWebPhoto,\n  avatarSize,\n  text,\n  badgeText,\n  badgeIcon,\n  className,\n  badgeClassName,\n  badgeIconClassName,\n  textClassName,\n  onClick,\n}: OwnProps) => {\n  const lang = useLang();\n  return (\n    <div\n      className={buildClassName(styles.root, onClick && styles.clickable, className)}\n      onClick={onClick}\n    >\n      <div className={styles.top}>\n        <Avatar size={avatarSize} peer={avatarPeer} webPhoto={avatarWebPhoto} />\n        {badgeText && (\n          <div className={buildClassName(styles.badge, badgeClassName)} dir={lang.isRtl ? 'rtl' : 'ltr'}>\n            {badgeIcon && <Icon name={badgeIcon} className={badgeIconClassName} />}\n            {badgeText}\n          </div>\n        )}\n      </div>\n      {text && <p className={buildClassName(styles.text, textClassName)}>{text}</p>}\n    </div>\n  );\n};\n\nexport default memo(PeerBadge);\n","import React, { memo } from '../../../lib/teact/teact';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Button from '../../ui/Button';\nimport Modal, { type OwnProps as ModalProps } from '../../ui/Modal';\n\nimport styles from './PickerModal.module.scss';\n\ntype OwnProps = {\n  confirmButtonText?: string;\n  isConfirmDisabled?: boolean;\n  shouldAdaptToSearch?: boolean;\n  withFixedHeight?: boolean;\n  withPremiumGradient?: boolean;\n  onConfirm?: NoneToVoidFunction;\n} & ModalProps;\n\nconst PickerModal = ({\n  confirmButtonText,\n  isConfirmDisabled,\n  shouldAdaptToSearch,\n  withFixedHeight,\n  onConfirm,\n  withPremiumGradient,\n  ...modalProps\n}: OwnProps) => {\n  const lang = useOldLang();\n  const hasButton = Boolean(confirmButtonText || onConfirm);\n\n  return (\n    <Modal\n      // eslint-disable-next-line react/jsx-props-no-spreading\n      {...modalProps}\n      isSlim\n      className={buildClassName(\n        shouldAdaptToSearch && styles.withSearch,\n        withFixedHeight && styles.fixedHeight,\n        modalProps.className,\n      )}\n      contentClassName={buildClassName(styles.content, modalProps.contentClassName)}\n      headerClassName={buildClassName(styles.header, modalProps.headerClassName)}\n    >\n      {modalProps.children}\n      {hasButton && (\n        <div className={styles.buttonWrapper}>\n          <Button\n            withPremiumGradient={withPremiumGradient}\n            onClick={onConfirm || modalProps.onClose}\n            color=\"primary\"\n            size=\"smaller\"\n            disabled={isConfirmDisabled}\n          >\n            {confirmButtonText || lang('Confirm')}\n          </Button>\n        </div>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(PickerModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"FuFYE0AA\",\"fixedHeight\":\"CrEsDylb\",\"withSearch\":\"WGSZ8u75\",\"header\":\"iEptOmIp\",\"buttonWrapper\":\"HqeDTaSr\"};","// extracted by mini-css-extract-plugin\nexport default {\"root\":\"LAh8evux\",\"title\":\"yfODVQ1M\",\"description\":\"QaQn08BX\",\"secondary\":\"sQZslvAr\",\"topIcon\":\"jySLtQNG\",\"listItemIcon\":\"hQbEPsTU\",\"content\":\"hrizpMDe\",\"separator\":\"En1zD2cT\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\n\nimport type { IconName } from '../../../types/icons';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport Icon from '../../common/icons/Icon';\nimport Button from '../../ui/Button';\nimport ListItem from '../../ui/ListItem';\nimport Modal from '../../ui/Modal';\nimport Separator from '../../ui/Separator';\n\nimport styles from './TableAboutModal.module.scss';\n\nexport type TableAboutData = [IconName | undefined, TeactNode, TeactNode][];\n\ntype OwnProps = {\n  contentClassName?: string;\n  isOpen?: boolean;\n  listItemData?: TableAboutData;\n  headerIconName?: IconName;\n  header?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  hasBackdrop?: boolean;\n  withSeparator?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableAboutModal = ({\n  isOpen,\n  listItemData,\n  headerIconName,\n  header,\n  footer,\n  buttonText,\n  hasBackdrop,\n  withSeparator,\n  onClose,\n  onButtonClick,\n  contentClassName,\n}: OwnProps) => {\n  return (\n    <Modal\n      isOpen={isOpen}\n      className={buildClassName(styles.root, contentClassName)}\n      contentClassName={styles.content}\n      hasAbsoluteCloseButton\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      onClose={onClose}\n    >\n      {headerIconName && <div className={styles.topIcon}><Icon name={headerIconName} /></div>}\n      {header}\n      <div>\n        {listItemData?.map(([icon, title, subtitle]) => {\n          return (\n            <ListItem\n              isStatic\n              multiline\n              icon={icon}\n              iconClassName={styles.listItemIcon}\n            >\n              <span className=\"title\">{title}</span>\n              <span className=\"subtitle\">{subtitle}</span>\n            </ListItem>\n          );\n        })}\n      </div>\n      {withSeparator && <Separator className={styles.separator} />}\n      {footer}\n      {buttonText && (\n        <Button size=\"smaller\" onClick={onButtonClick || onClose}>{buttonText}</Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableAboutModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"content\":\"KYHkJ9Qf\",\"title\":\"AwnUe4Qk\",\"value\":\"JGH6P9Az\",\"table\":\"DFRB0Ad4\",\"noFooter\":\"cSamlkt9\",\"cell\":\"Cnh5ENvm\",\"fullWidth\":\"UssCZwgy\",\"avatar\":\"SHQbPR5Y\",\"chatItem\":\"aS9U4hiQ\"};","import React, { memo, type TeactNode } from '../../../lib/teact/teact';\nimport { getActions } from '../../../global';\n\nimport type { ApiPeer } from '../../../api/types';\nimport type { CustomPeer } from '../../../types';\n\nimport buildClassName from '../../../util/buildClassName';\n\nimport useLastCallback from '../../../hooks/useLastCallback';\n\nimport Avatar from '../../common/Avatar';\nimport PeerChip from '../../common/PeerChip';\nimport Button from '../../ui/Button';\nimport Modal from '../../ui/Modal';\n\nimport styles from './TableInfoModal.module.scss';\n\ntype ChatItem = { chatId: string; withEmojiStatus?: boolean };\n\nexport type TableData = [TeactNode | undefined, TeactNode | ChatItem][];\n\ntype OwnProps = {\n  isOpen?: boolean;\n  title?: string;\n  tableData?: TableData;\n  headerAvatarPeer?: ApiPeer | CustomPeer;\n  header?: TeactNode;\n  modalHeader?: TeactNode;\n  footer?: TeactNode;\n  buttonText?: string;\n  className?: string;\n  hasBackdrop?: boolean;\n  onClose: NoneToVoidFunction;\n  onButtonClick?: NoneToVoidFunction;\n};\n\nconst TableInfoModal = ({\n  isOpen,\n  title,\n  tableData,\n  headerAvatarPeer,\n  header,\n  modalHeader,\n  footer,\n  buttonText,\n  className,\n  hasBackdrop,\n  onClose,\n  onButtonClick,\n}: OwnProps) => {\n  const { openChat } = getActions();\n  const handleOpenChat = useLastCallback((peerId: string) => {\n    openChat({ id: peerId });\n    onClose();\n  });\n\n  return (\n    <Modal\n      isOpen={isOpen}\n      hasCloseButton={Boolean(title)}\n      hasAbsoluteCloseButton={!title}\n      absoluteCloseButtonColor={hasBackdrop ? 'translucent-white' : undefined}\n      isSlim\n      header={modalHeader}\n      title={title}\n      className={className}\n      contentClassName={styles.content}\n      onClose={onClose}\n    >\n      {headerAvatarPeer && (\n        <Avatar peer={headerAvatarPeer} size=\"jumbo\" className={styles.avatar} />\n      )}\n      {header}\n      <div className={styles.table}>\n        {tableData?.map(([label, value]) => (\n          <>\n            {label && <div className={buildClassName(styles.cell, styles.title)}>{label}</div>}\n            <div className={buildClassName(styles.cell, styles.value, !label && styles.fullWidth)}>\n              {typeof value === 'object' && 'chatId' in value ? (\n                <PeerChip\n                  peerId={value.chatId}\n                  className={styles.chatItem}\n                  forceShowSelf\n                  withEmojiStatus={value.withEmojiStatus}\n                  clickArg={value.chatId}\n                  onClick={handleOpenChat}\n                />\n              ) : value}\n            </div>\n          </>\n        ))}\n      </div>\n      {footer}\n      {buttonText && (\n        <Button\n          className={!footer ? styles.noFooter : undefined}\n          size=\"smaller\"\n          onClick={onButtonClick || onClose}\n        >{buttonText}\n        </Button>\n      )}\n    </Modal>\n  );\n};\n\nexport default memo(TableInfoModal);\n","// extracted by mini-css-extract-plugin\nexport default {\"options\":\"OnCj9kef\",\"option\":\"tpTHQAUF\",\"active\":\"U_9MXPG5\",\"wideOption\":\"dJcJl33b\",\"optionTop\":\"x9G4lqMf\",\"stackedStars\":\"etXLebjM\",\"stackedStar\":\"swttXv9P\",\"optionBottom\":\"tK7La7L2\",\"moreOptions\":\"AWXBaWLW\",\"iconDown\":\"zWYHZJmd\"};","import type { FC } from '../../../lib/teact/teact';\nimport React, {\n  memo, useEffect, useMemo,\n} from '../../../lib/teact/teact';\n\nimport type { ApiStarGiveawayOption, ApiStarTopupOption } from '../../../api/types';\n\nimport buildClassName from '../../../util/buildClassName';\nimport { formatCurrency } from '../../../util/formatCurrency';\nimport { formatInteger } from '../../../util/textFormat';\nimport renderText from '../../common/helpers/renderText';\n\nimport useFlag from '../../../hooks/useFlag';\nimport useLang from '../../../hooks/useLang';\nimport useOldLang from '../../../hooks/useOldLang';\n\nimport Icon from '../../common/icons/Icon';\nimport StarIcon from '../../common/icons/StarIcon';\nimport Button from '../../ui/Button';\n\nimport styles from './StarTopupOptionList.module.scss';\n\nconst MAX_STARS_COUNT = 6;\n\ntype OwnProps = {\n  isActive?: boolean;\n  options?: ApiStarTopupOption[] | ApiStarGiveawayOption[];\n  selectedStarOption?: ApiStarTopupOption | ApiStarGiveawayOption;\n  selectedStarCount?: number;\n  starsNeeded?: number;\n  className?: string;\n  onClick: (option: ApiStarTopupOption | ApiStarGiveawayOption) => void;\n};\n\nconst StarTopupOptionList: FC<OwnProps> = ({\n  isActive,\n  className,\n  options,\n  selectedStarOption,\n  selectedStarCount,\n  starsNeeded,\n  onClick,\n}) => {\n  const oldLang = useOldLang();\n  const lang = useLang();\n\n  const [areOptionsExtended, markOptionsExtended, unmarkOptionsExtended] = useFlag();\n\n  useEffect(() => {\n    if (!isActive) {\n      unmarkOptionsExtended();\n    }\n  }, [isActive]);\n\n  const [renderingOptions, canExtend] = useMemo(() => {\n    if (!options) return [undefined, false];\n\n    const maxOption = options.reduce((max, option) => (\n      max.stars > option.stars ? max : option\n    ));\n    const forceShowAll = starsNeeded && maxOption.stars < starsNeeded;\n\n    const result: { option: ApiStarTopupOption | ApiStarGiveawayOption; starsCount: number; isWide: boolean }[] = [];\n    let currentStackedStarsCount = 0;\n    let canExtendOptions = false;\n    options.forEach((option, index) => {\n      if (!option.isExtended) currentStackedStarsCount++;\n\n      if (starsNeeded && !forceShowAll && option.stars < starsNeeded) return;\n      if (!areOptionsExtended && option.isExtended) {\n        canExtendOptions = true;\n        return;\n      }\n      result.push({\n        option,\n        starsCount: Math.min(currentStackedStarsCount, MAX_STARS_COUNT),\n        isWide: index === options.length - 1,\n      });\n    });\n\n    return [result, canExtendOptions];\n  }, [areOptionsExtended, options, starsNeeded]);\n\n  return (\n    <div className={buildClassName(styles.options, className)}>\n      {renderingOptions?.map(({ option, starsCount, isWide }) => {\n        const length = renderingOptions?.length;\n        const isOdd = length % 2 === 0;\n        const isActiveOption = option === selectedStarOption;\n\n        let perUserStarCount;\n        if (option && 'winners' in option) {\n          const winner = option.winners.find((opt) => opt.users === selectedStarCount)\n            || option.winners.reduce((max, opt) => (opt.users > max.users ? opt : max), option.winners[0]);\n          perUserStarCount = winner?.perUserStars;\n        }\n\n        return (\n          <div\n            className={buildClassName(\n              styles.option, (!isOdd && isWide) && styles.wideOption, isActiveOption && styles.active,\n            )}\n            key={option.stars}\n            onClick={() => onClick?.(option)}\n          >\n            <div className={styles.optionTop}>\n              +{formatInteger(option.stars)}\n              <div className={styles.stackedStars} dir={lang.isRtl ? 'ltr' : 'rtl'}>\n                {Array.from({ length: starsCount }).map(() => (\n                  <StarIcon className={styles.stackedStar} type=\"gold\" size=\"big\" />\n                ))}\n              </div>\n            </div>\n            <div className={styles.optionBottom}>\n              {formatCurrency(lang, option.amount, option.currency)}\n            </div>\n            {(isActiveOption || (selectedStarOption && 'winners' in selectedStarOption)) && perUserStarCount && (\n              <div className={styles.optionBottom}>\n                <div className={styles.perUserStars}>\n                  {renderText(oldLang('BoostGift.Stars.PerUser', formatInteger(perUserStarCount)))}\n                </div>\n              </div>\n            )}\n          </div>\n        );\n      })}\n      {!areOptionsExtended && canExtend && (\n        <Button className={styles.moreOptions} isText noForcedUpperCase onClick={markOptionsExtended}>\n          {oldLang('Stars.Purchase.ShowMore')}\n          <Icon className={styles.iconDown} name=\"down\" />\n        </Button>\n      )}\n    </div>\n  );\n};\n\nexport default memo(StarTopupOptionList);\n"],"names":["getViewableMedia","params","type","media","mediaIndex","isSingle","length","avatar","profilePhotos","photos","action","document","photo","video","webPage","paidMedia","getMessageContent","message","isDocumentPhoto","isDocumentVideo","webPagePhoto","webPageVideo","webPageDocument","isDocumentMedia","undefined","extendedMedia","extendedPhoto","extendedVideo","isGif","createGhost","source","origin","ghost","createElement","classList","add","img","Image","draggable","oncontextmenu","stopEvent","src","HTMLVideoElement","poster","appendChild","MediaViewerOrigin","ProfileAvatar","SettingsAvatar","profileInfo","querySelector","cloneNode","getNodes","index","containerSelector","mediaSelector","Album","ScheduledAlbum","getMessageHtmlId","id","PreviewMedia","SharedMedia","SearchResult","MiddleHeaderAvatar","ChannelAvatar","SuggestedAvatar","StarsTransaction","SponsoredMessage","MESSAGE_CONTENT_SELECTOR","ScheduledInline","Inline","container","mediaEls","querySelectorAll","mediaEl","applyShape","firstChild","style","objectFit","signal","createSignal","setIsPictureInPicture","getSetPresentationMode","webkitSupportsPresentationMode","webkitSetPresentationMode","bind","exitPictureInPictureIfNeeded","pictureInPictureElement","exitPictureInPicture","err","DEBUG","console","log","cache","Map","FALLBACK_DIMENSIONS","AVATAR_FULL_DIMENSIONS","useMediaProps","isAvatar","delay","isPhotoAvatar","mediaType","isVideo","isVideoAvatar","isDocument","isRound","isPhoto","isFromSharedMedia","isFromSearch","getMediaOrAvatarHash","useMemo","isFull","getVideoProfilePhotoMediaHash","getMediaHash","getProfilePhotoMediaHash","pictogramBlobUrl","useMedia","ApiMediaFormat","BlobUrl","previewMediaHash","previewBlobUrl","mediaData","fullMediaBlobUrl","loadProgress","useMediaWithLoadProgress","getMediaFormat","localBlobUrl","blobUrl","bestImageData","thumbDataUri","dataUri","blurredRef","useRef","isChanged","useSyncEffect","current","width","canvas","imgToCanvas","fastBlur","getContext","height","toDataURL","blurredAsync","isDisabled","get","timeoutRef","forceUpdate","useForceUpdate","clearTimeout","useEffect","onload","blurredDataUri","size","clear","set","window","setTimeout","useBlur","Boolean","useBlurSync","getMediaThumbUri","bestData","mediaSize","getMediaFileSize","isLocal","dimensions","VIDEO_AVATAR_FULL_DIMENSIONS","getPhotoFullDimensions","getVideoDimensions","memo","ReportAvatarModal","isOpen","peerId","onClose","onCloseAnimationEnd","reportProfilePhoto","getActions","selectedReason","setSelectedReason","useState","description","setDescription","handleReport","useLastCallback","chatId","reason","handleSelectReason","value","handleDescriptionChange","e","target","lang","useOldLang","REPORT_OPTIONS","label","title","React","Modal","onEnter","className","RadioGroup","name","options","onChange","selected","InputText","Button","color","isText","onClick","getZoomChange","setZoomChange","useZoomChange","useUnmountCleanup","DeleteProfilePhotoModal","profileId","onConfirm","deleteProfilePhoto","deleteChatPhoto","handleDeletePhoto","useCallback","isUserId","withGlobal","global","item","canUpdateMedia","tabState","selectTabState","mediaViewer","avatarOwner","avatarPhoto","chat","selectCurrentChat","currentMessageList","selectCurrentMessageList","threadId","isProtected","selectIsMessageProtected","activeDownloads","selectActiveDownloads","isChatProtected","selectIsChatProtected","canDelete","canDeleteMessage","selectAllowedMessageActionsSlow","isCurrentAvatar","avatarPhotoId","canDeleteAvatar","canUpdate","messageListType","MediaViewerActions","canReportAvatar","onReportAvatar","onReport","onCloseMediaViewer","onBeforeDelete","onForward","isDeleteModalOpen","openDeleteModal","closeDeleteModal","useFlag","isMobile","useAppLayout","downloadMedia","cancelMediaDownload","updateProfilePhoto","updateChatPhoto","openMediaViewer","openDeleteMessageModal","isMessage","fileName","getMediaFilename","isDownloading","getIsDownloading","downloadProgress","handleDownloadClick","originMessage","handleZoomOut","zoomChange","handleZoomIn","handleUpdate","isAvatarView","forceOnHeavyAnimation","MenuButton","onTrigger","round","ariaLabel","Icon","renderDeleteModal","openDeleteModalHandler","messageIds","isSchedule","menuItems","isForwardingAllowed","content","push","icon","children","Math","href","download","destructive","DropdownMenu","trigger","positionX","map","MenuItem","key","ProgressSpinner","progress","noCross","renderDownloadButton","useSignalRef","getValue","ref","useEffectOnce","subscribe","getControlsVisible","setControlsVisible","getIsLocked","setIsLocked","useControlsSignal","useDerivedSignal","getCurrentTime","setCurrentTime","useCurrentTimeSignal","MediaViewerFooter","text","buttonText","isForVideo","handleSponsoredClick","isForceMobileVersion","isMultiline","setIsMultiline","getIsVisible","isHidden","useDerivedState","IS_TOUCH_ENV","footerContent","checkIsMultiline","clientHeight","REM","handleResize","throttle","addEventListener","removeEventListener","onButtonClick","classNames","buildClassName","stopPropagation","dir","isRectangular","getIsVideoWaiting","setIsVideoWaiting","useVideoWaitingSignal","IS_MOBILE","IS_ANDROID","IS_IOS","PREVIEW_SIZE_RATIO","MAX_FRAMES","PREVIEW_MAX_SIDE","connections","launchMediaWorkers","videoPreview","VideoPreview","constructor","url","_defineProperty","this","forEach","connector","request","args","MAX_WORKERS","onFrame","time","frame","frames","currentTime","render","clearCache","close","requestMutation","drawImage","destroy","worker","async","messageId","data","result","callApi","mediaFormat","Progressive","arrayBuffer","postMessage","cancelAnimation","SeekLine","duration","bufferedRanges","isReady","posterSize","playbackRate","isActive","isPlaying","isPreviewDisabled","onSeek","onSeekStart","seekerRef","getCurrentTimeSignal","getIsWaiting","useThrottledSignal","getSelectedTime","setSelectedTime","useSignal","getPreviewOffset","setPreviewOffset","getPreviewTime","setPreviewTime","isLockedRef","isPreviewVisible","setPreviewVisible","isSeeking","setIsSeeking","previewCanvasRef","previewRef","progressRef","previewTimeRef","previewSize","ratio","getPreviewDimensions","setPreview","floor","renderVideoPreview","createVideoPreviews","remaining","animateNumber","from","to","onUpdate","useLayoutEffect","left","innerText","formatMediaDuration","seeker","seekerSize","getBoundingClientRect","offset","getPreviewProps","pageX","MouseEvent","touches","t","clamp","preview","clientWidth","stopAnimation","handleStopSeek","cleanup","captureEvents","onCapture","handleStartSeek","onRelease","onDrag","handleSeekMouseMove","handleSeekMouseLeave","ShowTransition","styles","start","end","PLAYBACK_RATES","VideoPlayerControls","bufferedProgress","fileSize","isFullscreenSupported","isFullscreen","isBuffered","volume","isMuted","onChangeFullscreen","onVolumeClick","onVolumeChange","onPlaybackRateChange","isPictureInPictureSupported","onPictureInPictureChange","onPlayPause","isPlaybackMenuOpen","openPlaybackMenu","closePlaybackMenu","trunc","getIsSeeking","setVisibility","isVisible","timeout","body","remove","handleSeek","position","handleSeekStart","volumeIcon","ripple","RangeSlider","bold","renderTime","formatFileSize","Menu","positionY","autoClose","rate","disabled","VideoPlayer","posterData","isMediaViewerOpen","noPlay","shouldCloseOnClick","isClickDisabled","isSponsoredMessage","timestamp","setMediaViewerVolume","setMediaViewerMuted","setMediaViewerPlaybackRate","setMediaViewerHidden","videoRef","setIsPlaying","setFullscreen","exitFullscreen","useFullscreen","isLooped","handleEnterFullscreen","IS_YA_BROWSER","handleLeaveFullscreen","enterPictureInPicture","isInPictureInPicture","elRef","onLeave","isSupported","setIsSupported","setIsActive","IS_PWA","setMode","pictureInPictureEnabled","disablePictureInPicture","autoPictureInPicture","onEnterInternal","onLeaveInternal","getIsVideoPlaying","requestPictureInPicture","safePlay","usePictureInPicture","toggleControls","lockControls","handleVideoMove","handleVideoLeave","bounds","clientX","right","clientY","top","bottom","bufferingHandlers","useBuffering","isUnsupported","useUnsupportedMedia","shouldRender","shouldRenderSpinner","transitionClassNames","spinnerClassNames","useShowTransitionDeprecated","shouldRenderPlayButton","playButtonClassNames","pause","togglePlayState","handleClick","useVideoCleanup","handleTimeUpdate","currentTarget","readyState","handleEnded","handleFullscreenChange","handleVolumeChange","newVolume","handleVolumeMuted","muted","handlePlaybackRateChange","newPlaybackRate","rewind","newTime","Number","isFinite","handleKeyDown","preventDefault","wrapperStyle","videoStyle","shouldToggleControls","onMouseMove","onMouseOut","onContextMenu","onDoubleClick","_extends","autoPlay","controlsList","playsInline","loop","onWaiting","onPlay","onEnded","onPause","onTimeUpdate","join","sponsoredMessage","textMessage","maxTimestamp","selectMessageTimestampableDuration","MediaViewerContent","withAnimation","isMoving","onFooterClick","updateLastPlaybackTimestamp","toggleControlsOnMove","updatePlaybackTimestamp","useThrottledCallback","MEDIA_TIMESTAMP_SAVE_MINIMUM_DURATION","isInAlbum","newTimestamp","PLAYBACK_SAVE_INTERVAL","useSignalEffect","calculateMediaViewerDimensions","ARE_WEBCODECS_SUPPORTED","renderPhoto","textParts","renderMessageText","forcePlayback","isForMediaViewer","hasFooter","shouldForceMobileVersion","imageSize","canDrag","Spinner","alt","easeOutCubic","easeOutQuart","timingFunctions","SLIDES_GAP","ANIMATION_DURATION","cancelZoomAnimation","SwipeDirection","MediaViewerSlides","isLoadingMoreMedia","isSynced","loadMoreItemsIfNeeded","getNextItem","selectItem","containerRef","activeSlideRef","leftSlideRef","rightSlideRef","lastTransformRef","x","y","scale","swipeDirectionRef","initialContentRectRef","isReleasedRef","prevZoomChangeRef","useFullscreenStatus","isMouseDown","setIsMouseDown","getTransform","setTransform","transformRef","getActiveItem","setActiveItem","activeItemRef","isScaled","activeItem","windowHeight","windowWidth","isResizing","useWindowSize","useHistoryBack","onBack","shouldBeReplaced","selectItemDebounced","useDebouncedCallback","clearSwipeDirectionDebounced","setIsActiveDebounced","shouldCloseOnVideo","clickXThreshold","handleControlsVisibility","isFooter","pageY","useTimeout","transform","getTransformStyle","lastTransform","lastDragOffset","lastZoomCenter","panDelta","lastGestureTime","Date","now","setLastGestureTime","debounce","changeSlide","direction","cActiveItem","nextItem","timing","changeSlideOnClick","closest","calculateOffsetBoundaries","offsetTop","initialContentRect","inBoundsX","inBoundsY","centerX","centerY","minOffsetX","max","maxOffsetX","isBetween","minOffsetY","maxOffsetY","absX","abs","absY","s1","min","scaleFactor","x1","y1","k","Vx","Vy","dirX","isNotPassive","withNativeDrag","excludedClosestSelector","minZoom","maxZoom","doubleTapZoom","withWheelDrag","checkIfControlTarget","event","captureEvent","dragOffsetX","dragOffsetY","cancelDrag","IOS_SCREEN_EDGE_THRESHOLD","absOffsetX","absOffsetY","Vertical","Horizontal","SWIPE_DIRECTION_THRESHOLD","SWIPE_DIRECTION_TOLERANCE","limit","SWIPE_X_THRESHOLD","SWIPE_Y_THRESHOLD","includes","onZoom","zoom","zoomFactor","initialCenterX","initialCenterY","currentCenterX","currentCenterY","MIN_ZOOM","MAX_ZOOM","offsetX","offsetY","scaledCenterX","scaledCenterY","scaleOffsetX","scaleOffsetY","isInThreshold","hasNextSlide","checkIfInsideSelector","hasZoomChanged","steps","prevValue","delta","wheelEvent","WheelEvent","deltaY","ctrlKey","dispatchEvent","prevItem","hasPrev","hasNext","isRtl","toFixed","element","selector","matches","messageSender","selectSender","owner","SenderInfo","closeMediaViewer","focusMessage","toggleChatInfo","handleFocusMessage","force","forceSyncOnIOs","subtitle","isFallbackAvatar","fallbackPhoto","isPersonalAvatar","personalPhoto","date","formattedDate","formatMediaDateTime","count","currentIndex","countText","parts","isChannel","isChatChannel","isGroup","isChatGroup","senderTitle","getPeerTitle","Avatar","peer","renderText","shouldSkipHistoryAnimations","withDynamicLoading","standaloneMedia","selectPerformanceSettingsValue","currentUserId","isChatWithSelf","selectIsChatWithSelf","selectPeer","isChatAdmin","selectPeerPhotos","isLoading","chatMessages","selectScheduledMessage","selectChatMessage","selectSponsoredMessage","selectChatScheduledMessages","selectChatMessages","isOriginInline","isOriginAlbum","collectedMessageIds","currentSearch","selectCurrentChatMediaSearch","foundIds","currentSegment","selectCurrentSharedMediaSearch","resultsByType","selectOutlyingListByMessageId","selectListedIds","MediaViewer","openForwardMenu","searchChatMediaMessages","loadMoreProfilePhotos","clickSponsoredMessage","openUrl","animationKey","senderId","prevSenderId","usePreviousDeprecated","headerAnimation","isGhostAnimation","isReportAvatarModalOpen","openReportAvatarModal","closeReportAvatarModal","currentItem","getMediaViewerItem","info","messageMediaIds","getChatMediaMessageIds","getIsPictureInPicture","disableDirectTextInput","stopPriorityPlayback","dispatchPriorityPlaybackEvent","enableDirectTextInput","toggle","headerRef","useElectronDrag","mql","matchMedia","MEDIA_VIEWER_MEDIA_QUERY","prevMessage","prevIsHidden","prevOrigin","prevBestImageData","shouldAnimateOpening","beginHeavyAnimation","ANIMATION_END_DELAY","fromImage","windowSize","availableWidth","availableHeight","getMediaViewerAvailableDimensions","toWidth","toHeight","calculateDimensions","toLeft","toTop","topOffsetRem","getTopOffset","fromTop","fromLeft","fromWidth","fromHeight","uncovered","realWidth","realHeight","srcWidth","srcHeight","uncover","fromTranslateX","fromTranslateY","fromScaleX","fromScaleY","applyStyles","clearShape","contains","removeChild","animateOpening","toImage","getElementById","targetTop","isElementInViewport","shouldFadeOut","imageEl","messageListElement","getOffsetToContainer","scrollTop","offsetHeight","isMessageImageFullyVisible","existingGhost","getElementsByClassName","transition","transformOrigin","opacity","animateClosing","handleClose","handleFooterClick","HTMLElement","isFromMedia","isMedia","handleForward","fromChatId","captureEscKeyListener","stopCurrentAudio","currentMediaMessageId","fromMedia","fromMediaIndex","nextIndex","fromAvatarOwner","fromProfilePhotos","fromSponsoredMessage","fromSponsoredMessageIndex","fromMessage","getMessagePaidMedia","indexOf","nextMessageId","nextMessage","openMediaViewerItem","itemChatId","itemMessageId","itemStandaloneMedia","handleBeforeDelete","prevMedia","shouldAnimateFirstRender","noCloseTransition","Transition","activeKey","avatarOwnerId","OFFSET_BOTTOM","MOBILE_OFFSET","hasBlur","isGhost2","ctx","alpha","IS_CANVAS_FILTER_SUPPORTED","filter","RADIUS","userId","getPeerStoryHtmlId","StoryViewerOrigin","StoryRibbon","storyRibbonStyles","root","ChatList","BASE_SCREEN_WIDTH","BASE_SCREEN_HEIGHT","BASE_ACTIVE_SLIDE_WIDTH","BASE_ACTIVE_SLIDE_HEIGHT","BASE_SLIDE_WIDTH","BASE_SLIDE_HEIGHT","calculateOffsetX","slideAmount","isActiveSlideSize","isMoveThroughActiveSlide","isBackward","mainOffset","additionalOffset","totalOffset","roundToNearestEven","useSlideSizes","baseWidth","baseHeight","newWidth","newHeight","widthScale","heightScale","calculateScale","activeSlideWidth","slideWidth","activeSlide","slide","toActiveScale","fromActiveScale","calculateSlideSizes","useStoryProps","story","isCurrentUserPremium","isDropdownMenuOpen","isLoadedStory","isDeletedStory","hasText","hasMessageText","hasForwardInfo","forwardInfo","thumbnail","previewHash","getStoryMediaHash","noSound","fullMediaHash","fullMediaData","altMediaHash","altMediaData","hasFullData","hasThumb","canDownload","noForwards","downloadHash","downloadMediaData","storyViewer","isStealthModalOpen","stealthMode","stories","selectIsCurrentUserPremium","StealthModeModal","toggleStealthModal","activateStealthMode","showNotification","openPremiumModal","isOnCooldown","setIsOnCooldown","serverTime","getServerTime","cooldownUntil","handleTimerEnds","handleActivate","initialSection","contentClassName","isSlim","ListItem","multiline","inactive","leftElement","isShiny","withPremiumGradient","TextTimer","langKey","endsAt","onEnd","deleteStory","openNextStory","handleDeleteStoryClick","storyId","ConfirmDialog","confirmLabel","confirmHandler","confirmIsDestructive","contactListIds","selectedIds","lockedIds","onSelect","searchQuery","setSearchQuery","displayedIds","contactIds","unique","filterPeersByQuery","ids","query","PeerPicker","itemIds","MEMO_EMPTY_ARRAY","lockedSelectedIds","filterValue","filterPlaceholder","searchInputId","isSearchable","withDefaultPadding","forceShowSelf","onSelectedIdsChange","onFilterChange","allowMultiple","withStatus","itemInputType","usersById","saveCloseFriends","isSubmitShown","setIsSubmitShown","newSelectedContactIds","setNewSelectedContactIds","closeFriendIds","isCloseFriend","useEffectWithPrevDeps","prevIsActive","handleSelectedContactIdsChange","handleSubmit","userIds","Fragment","FloatingActionButton","isShown","OPTIONS","actions","Screens","selectPeerStory","visibility","contactList","users","byId","editStoryPrivacy","toggleStoryInProfile","isOpenModal","openModal","closeModal","privacy","setPrivacy","isPinned","setIsPinned","isInProfile","setActiveKey","editingBlockingCategory","setEditingBlockingCategory","isBackButton","allowList","allowUserIds","selectedBlockedIds","blockUserIds","handleAllowUserIdsChange","newIds","handleDenyUserIdsChange","handleCloseButtonClick","handleIsPinnedToggle","renderContent","storyLifeTime","getHours","expireDate","section","list","option","checked","input","handleVisibilityChange","newVisibility","teactExperimentControlled","optionContent","option_name","tabIndex","role","closeFriends","denyList","handleActionClick","actionInner","getUserFullName","Switcher","footer","submit","renderPrivacyList","CloseFriends","AllowDenyList","modal","noBackdrop","header","closeButton","headerTitle","renderHeaderContent","slideClassName","sender","fromPeerId","EmbeddedStoryForward","openStoryViewer","loadPeerStoriesByIds","openChat","storyIds","fromName","openOriginalStory","isDeleted","isSingleStory","handleMouseDown","useFastClick","PeerColorWrapper","getPeerColorClass","onMouseDown","backgroundEmojiId","EmojiIconBackground","emojiDocumentId","renderTextWithEntities","renderTextContent","renderSender","isExpanded","onExpand","onFold","contentRef","textRef","showMoreButtonRef","renderingStory","useCurrentOrPrev","caption","hasOverflow","setHasOverflow","prevIsExpanded","usePrevDuringAnimation","isInExpandedState","addExtraClass","removeExtraClass","canExpand","shouldRenderShowMore","requestMeasure","button","offsetWidth","setProperty","requestForcedReflow","textContainer","textOffsetTop","lineHeight","totalLines","calcTextLineHeightAndCount","isOverflowing","overflowShift","scrollTo","fullClassName","MessageText","messageOrStory","withTranslucentThumbs","StoryFooter","openStoryViewModal","sendStoryReaction","views","isOut","sentReaction","viewsCount","forwardsCount","reactionsCount","isSentStoryReactionHeart","isSameReaction","HEART_REACTION","canForward","isPublic","containerId","getStoryKey","recentViewers","getGlobal","recentViewerIds","handleOpenStoryViewModal","handleForwardClick","handleLikeStory","reaction","AvatarList","peers","nonInteractive","ReactionAnimatedEmoji","getReactionKey","withEffectOnly","isViewed","isPaused","onImageComplete","handleAnimationEnd","animationName","onAnimationEnd","VIDEO_MIN_READY_STATE","IS_SAFARI","appConfig","user","selectUser","selectChat","userFullInfo","selectUserFullInfo","viewModal","isPrivacyModalOpen","storyList","forwardMessages","forwardedStoryId","premiumModal","safeLinkModalUrl","mapModal","reportModal","giftInfoModal","isPaymentMessageConfirmDialogOpen","isPremiumModalOpen","shouldForcePause","reactionPicker","mediaAreas","forwardSenderId","find","area","channelId","forwardSender","withHeaderAnimation","fromPeer","fromId","paidMessagesStars","selectPeerPaidMessagesStars","orderedIds","storyIdsByPeerId","storyChangelogUserId","viewersExpirePeriod","storyExpirePeriod","storyViewersExpirePeriod","isChatExist","arePeerSettingsLoaded","settings","isArchivedStories","isPrivateStories","getIsAnimating","onDelete","viewStory","setStoryViewerMuted","openPreviousStory","loadPeerSkippedStories","copyStoryLink","openStoryPrivacyEditor","loadPeerSettings","fetchChat","loadStoryViews","oldLang","useLang","isComposerHasFocus","markComposerHasFocus","unmarkComposerHasFocus","isStoryPlaybackRequested","playStory","pauseStory","isStoryPlaying","markStoryPlaying","unmarkStoryPlaying","isAppFocused","markAppFocused","unmarkAppFocused","isCaptionExpanded","expandCaption","foldCaption","isPausedBySpacebar","setIsPausedBySpacebar","isPausedByLongPress","markIsPausedByLongPress","unmarkIsPausedByLongPress","markDropdownMenuOpen","unmarkDropdownMenuOpen","isChangelog","isUserStory","isChatStory","isChannelStory","canPinToProfile","canUnpinFromProfile","areViewsExpired","forwardSenderTitle","canCopyLink","usernames","canShare","canPlayStory","shouldShowComposer","shouldShowFooter","shouldRenderSkeleton","skeletonTransitionClassNames","mediaTransitionClassNames","thumbRef","useCanvasBlur","previewTransitionClassNames","useMediaTransitionDeprecated","shouldRenderComposer","composerAppearanceAnimationClassNames","shouldRenderCaptionBackdrop","captionBackdropTransitionClassNames","appearanceAnimationClassNames","shouldRenderCaption","captionAppearanceAnimationClassNames","isStreamingSupported","useStreaming","PRIMARY_VIDEO_MIME","useStoryPreloader","canWrite","handlePauseStory","handlePlayStory","handleLongPressStart","handleLongPressEnd","handleDropdownMenuOpen","handleDropdownMenuClose","handleLongPressMouseDown","onMouseUp","handleLongPressMouseUp","onMouseLeave","handleLongPressMouseLeave","onTouchStart","handleLongPressTouchStart","onTouchEnd","handleLongPressTouchEnd","useLongPress","onStart","hasAllData","useBackgroundMode","load","keyCode","prevIsComposerHasFocus","prevIsCaptionExpanded","prevShouldForcePause","prevIsAppFocused","prevIsPausedByLongPress","handleOpenChat","handleForwardPeerClick","handleFromPeerClick","handleOpenPrevStory","handleOpenNextStory","handleVideoStoryTimeUpdate","captureKeyboardListeners","onRight","onLeft","handleCopyStoryLink","handlePinClick","handleUnpinClick","handleReportStoryClick","handleInfoPrivacyEdit","handleInfoPrivacyClick","isForContacts","isForCloseFriends","myName","handleOpenStealthModal","activeUntil","diff","handleDownload","inputPlaceholder","amount","formatStarsAsIcon","asFont","withNodes","StoryProgress","formatRelativePastTime","isEdited","privacyIcon","gradient","renderStoryPrivacyButton","onOpen","Skeleton","OptimizedVideo","canPlay","isPriority","disableRemotePlayback","SECONDARY_VIDEO_MIME","MediaAreaOverlay","withStory","storyViewerMode","StoryCaption","Composer","MAIN_THREAD_ID","getIsMobile","editableInputCssSelector","EDITABLE_STORY_INPUT_CSS_SELECTOR","editableInputId","EDITABLE_STORY_INPUT_ID","inputId","onFocus","onBlur","lastViewedByPeerIds","lastViewedId","storyIdsForViewer","peerStories","lastReadId","hasUnreadStories","previewIndexId","isLoaded","imageHash","thumbUrl","currentPeerId","currentStoryId","isSinglePeer","isPrivate","isArchive","byPeerId","orderedPeerIds","active","peerIds","selectIsStoryViewerOpen","stopActiveReaction","renderingPeerId","setRenderingPeerId","renderingStoryId","setRenderingStoryId","prevPeerId","renderingIsArchive","renderingIsPrivate","renderingIsSinglePeer","renderingIsSingleStory","slideSizes","rendersRef","setIsAnimating","setRef","renderingPeerIds","slice","renderingPeerPosition","currentPeerPosition","calculateTransformX","reduce","transformX","getCurrentStoryRef","composer","focusEditableElement","disableScrolling","enableScrolling","Object","entries","String","handleTransitionEnd","Story","onTransitionEnd","buildStyle","renderStory","StoryPreview","renderStoryPreview","useScrolledState","threshold","isAtBeginning","setIsAtBeginning","isAtEnd","setIsAtEnd","handleScroll","scrollHeight","DEFAULT_REACTION_SIZE","storyView","availableReactions","reactions","StoryView","closeStoryViewer","unblockUser","blockUser","deleteContact","updateStoryView","closeStoryViewModal","contextActions","areStoriesBlocked","isUserBlocked","isContact","fullName","handler","isOnlyStories","statusIcon","shouldColorStatus","status","isModified","formatDateAtTime","opacityFadeIn","blocked","rightElement","ReactionStaticEmoji","viewReaction","withIconHeart","withPortalForMenu","menuBubbleClassName","menuBubble","PrivateChatInfo","withColoredStatus","noStatusOrTyping","GroupChatInfo","nextOffset","loadStoryViewList","clearStoryViews","areJustContacts","markJustContacts","unmarkJustContacts","areReactionsFirst","markReactionsFirst","unmarkReactionsFirst","setQuery","isExpired","shouldShowJustContacts","STORY_VIEWS_MIN_CONTACTS_FILTER","shouldShowSortByReactions","STORY_MIN_REACTIONS_SORT","shouldShowSearch","STORY_VIEWS_MIN_SEARCH","hasHeader","refetchViews","sortedViews","sort","a","b","reactionA","reactionB","prepareComparator","placeholderCount","notAllAvailable","handleLoadMore","MoreMenuButton","isMenuOpen","fluid","sortButton","topButton","faded","iconSort","iconDown","viewsList","contactFilter","check","SearchInput","search","topScrolled","onScroll","centeredInfo","InfiniteScroll","items","onLoadMore","view","additionalKeyId","Array","_","i","PlaceholderChatInfo","bottomInfo","closeStoryPrivacyEditor","reportStory","storyToDelete","setStoryToDelete","isPrevOpen","handleOpenDeleteModal","s","handleCloseDeleteModal","openMessageReport","thumb","safeAreaBottom","getComputedStyle","documentElement","getPropertyValue","parseFloat","toTranslateX","toTranslateY","toScaleX","toScaleY","ghost2","ghost2Top","StorySlides","StoryDeleteConfirmModal","StoryViewModal","StorySettings","TOPIC_ICON_SIZE","ITEM_CLASS_NAME","ChatOrUserPicker","chatOrUserIds","searchPlaceholder","loadMore","onSearchChange","onSelectChatOrUser","isLowStackPriority","loadTopics","topicContainerRef","searchRef","topicSearchRef","viewportIds","getMore","useInfiniteScroll","forumId","setForumId","topicSearch","setTopicSearch","viewportOffset","resetSearch","useInputFocusOnOpen","selectTopicsById","selectTopics","forumTopicsById","useSelector","topicIds","topics","chatsById","chats","chatFullInfoById","fullInfoById","searchTitle","toLowerCase","values","acc","topic","getCanPostInChat","keys","handleHeaderBackClick","handleSearchChange","handleTopicSearchChange","useKeyboardListNavigation","isForum","handleTopicKeyDown","renderChatItem","isSelf","isApiPeerChat","subtitleClassName","getGroupStatus","userStatus","selectUserStatus","getUserStatus","isUserOnline","getSubtitle","PickerItem","FullNameTitle","isSavedMessages","avatarElement","PEER_PICKER_ITEM_HEIGHT_PX","onKeyDown","placeholder","withAbsolutePositioning","maxHeight","Loading","topicId","TopicIcon","letterClassName","itemSelector","listIds","orderedPinnedIds","activeListIds","archivedListIds","archived","pinnedIds","RecipientPicker","API_CHAT_TYPES","onSelectRecipient","setSearch","priorityIds","isDeletedUser","chatFullInfo","selectChatFullInfo","sorted","sortChatIds","filterChatIdsByType","renderingIds","isForwarding","isManyMessages","isStory","ForwardRecipientPicker","openChatOrTopicWithReplyInDraft","setForwardChatOrTopic","exitForwardMode","forwardToSavedMessages","forwardStory","renderingIsStory","markIsShown","unmarkIsShown","handleSelectRecipient","recipientId","toChatId","getUserFirstOrLastName","getChatTitle","DraftRecipientPicker","requestedDraft","openChatWithDraft","resetOpenChatWithDraft","files","AttachBotRecipientPicker","requestedAttachBotInChat","cancelAttachBotInChat","callAttachBot","bot","startParam","handlePeerRecipient","getErrorHeader","error","isSlowMode","hasErrorKey","dialogs","Dialogs","dismissDialog","sendMessage","isModalOpen","dialog","contactRequest","handleConfirm","contact","messageList","getReadableErrorText","pick","Notifications","notifications","notification","Notification","localId","SafeLinkModal","toggleSafeLinkModal","handleOpen","open","ensureProtocol","handleDismiss","renderingUrl","withMarkdown","OpenMapModal","closeMapModal","point","geoPoint","googleUrl","bingUrl","appleUrl","osmUrl","google","prepareMapUrl","bing","osm","handleGoogleClick","handleBingClick","handleAppleClick","handleOsmClick","IS_MAC_OS","currentUser","UrlAuthModal","closeUrlAuthModal","acceptBotUrlAuth","acceptLinkUrlAuth","isLoginChecked","setLoginChecked","isWriteAccessChecked","setWriteAccessChecked","currentAuth","domain","botId","shouldRequestWriteAccess","isWriteAllowed","handleLoginChecked","Checkbox","onCheck","MAX_SAFE_DATE","MAX_INT_32","WEEKDAY_LETTERS","isDisabledDay","year","month","day","minDate","maxDate","selectedDay","fixedMinDate","getDayStart","fixedMaxDate","formatInputTime","padStart","formatDay","CalendarModal","selectedAt","minAt","maxAt","isFutureMode","isPastMode","withTimePicker","submitButtonLabel","secondButtonLabel","onSubmit","onSecondButtonClick","passedSelectedDate","prevIsOpen","isTimeInputFocused","markTimeInputAsFocused","selectedDate","setSelectedDate","currentMonthAndYear","setCurrentMonthAndYear","getFullYear","getMonth","selectedHours","setSelectedHours","selectedMinutes","setSelectedMinutes","getMinutes","getDate","currentYear","currentMonth","getTime","newSelectedDate","shouldDisableNextMonth","shouldDisablePrevMonth","prevMonthGrid","currentMonthGrid","nextMonthGrid","setDate","setMonth","setFullYear","firstDay","getDay","totalDaysInPrevMonth","gridDate","lastRowDaysCount","buildCalendarGrid","submitLabel","formatDateToString","code","formatTime","formatSubmitLabel","handleChangeHours","replace","hours","setHours","hoursStr","handleChangeMinutes","minutes","setMinutes","minutesStr","d","dateCopy","handleDateSelect","inputMode","historyCalendarSelectedAt","HistoryCalendar","searchMessagesByDate","closeHistoryCalendar","handleJumpToDate","phoneCodeList","countryList","phoneCodes","NewContactModal","isByPhoneNumber","updateContact","importContact","closeNewContactDialog","renderingUser","renderingIsByPhoneNumber","inputRef","firstName","setFirstName","lastName","setLastName","phone","setPhone","phoneNumber","shouldSharePhoneNumber","setShouldSharePhoneNumber","canBeSubmitted","focus","handleFirstNameChange","handlePhoneChange","formatPhoneNumberWithCode","handleLastNameChange","ResizeHandleType","resizeHandleSelectorsMap","Top","Bottom","Left","Right","topLeft","TopLeft","topRight","TopRight","bottomLeft","BottomLeft","bottomRight","BottomRight","resizeHandleSelectors","resizeTimeout","FULLSCREEN_POSITION","webApps","selectActiveWebApp","modalState","openedWebApps","isMinimizedState","activeTabBot","MinimizedWebAppModal","changeWebAppModalState","closeWebAppModal","openedWebAppsValues","openedTabsCount","activeTabBotId","app","handleCloseClick","handleExpandClick","state","activeTabName","botName","pluralValue","renderTitle","isPopularApp","requestMainWebView","theme","extractCurrentThemeParams","activeUserCount","botActiveUsers","badgeText","formatIntegerCompact","PeerBadge","avatarContainer","textClassName","badgeClassName","userCountBadge","badgeIconClassName","userBadgeIcon","badgeIcon","runThrottled","cb","globalSearch","popularBotApps","fetchingStatus","botApps","recentBotIds","topBotApps","MoreAppsTabContent","shouldShowMoreMine","setShouldShowMoreMine","searchPopularBotApps","handleToggleShowMoreMine","prev","filteredFoundIds","LoadMoreDirection","Backwards","handleSearchInputReset","noFastList","preloadBackwards","onReset","sectionTitle","showMoreLink","sectionContent","WebAppGridItem","FULLSCREEN_BUTTONS_AREA_HEIGHT","MAIN_BUTTON_ANIMATION_TIME","SANDBOX_ATTRIBUTES","DEFAULT_BUTTON_TEXT","ok","cancel","activeWebApp","activeWebAppKey","selectWebApp","activeBotId","attachBot","attachMenu","bots","botAppSettings","botInfo","appSettings","selectTheme","isPaymentModalOpen","regularPaymentStatus","payment","starsPaymentStatus","inputInvoice","starsInputInvoice","starsPayment","botAppPermissions","selectBotAppPermissions","paymentStatus","WebAppModalTabContent","webApp","registerSendEventCallback","registerReloadFrameCallback","isTransforming","isMultiTabSupported","onContextMenuButtonClick","modalHeight","closeActiveWebApp","sendWebViewData","toggleAttachBot","openTelegramLink","setWebAppPaymentSlug","switchBotInline","sharePhoneWithBot","updateWebApp","resetPaymentStatus","openChatWithInfo","openEmojiStatusAccessModal","openLocationAccessModal","openPreparedInlineMessageModal","mainButton","setMainButton","secondaryButton","setSecondaryButton","markLoaded","markUnloaded","popupParameters","setPopupParameters","isRequestingPhone","setIsRequestingPhone","isRequestingWriteAccess","setIsRequestingWriteAccess","requestedFileDownload","setRequestedFileDownload","bottomBarColor","setBottomBarColor","unlockPopupsAt","handlePopupOpened","handlePopupClosed","sequentialLimit","resetAfter","setUnlockPopupsAt","sequentialCalls","lastClosedDate","usePopupLimit","headerButtonRef","headerButtonCaptionRef","exitFullScreenCallback","fullscreenElementRef","activeWebAppName","appName","isBackButtonVisible","placeholderPath","isCloseModalOpen","isRemoveModalOpen","webAppKey","getWebAppKey","isAvailable","IS_GEOLOCATION_SUPPORTED","isAccessRequested","geolocation","isAccessGranted","updateCurrentWebApp","updatedPartialWebApp","update","themeParams","secondary_bg_color","themeBackgroundColor","bg_color","backgroundColorFromEvent","setBackgroundColorFromEvent","backgroundColorFromSettings","backgroundColor","backgroundDarkColor","themeHeaderColor","headerColorFromEvent","setHeaderColorFromEvent","headerColorFromSettings","headerColor","headerDarkColor","frameRef","isSimple","reloadFrame","sendEvent","sendFullScreenChanged","sendViewport","sendSafeArea","sendTheme","useWebAppFrame","isSimpleView","onEvent","onLoad","openInvoice","closeWebApp","openSuggestedStatusModal","isReloadSupported","reloadTimeout","ignoreEventsRef","lastFrameSizeRef","handleLoad","contentWindow","JSON","stringify","eventType","eventData","is_fullscreen","forceReloadFrame","once","isNonStable","is_expanded","is_state_stable","theme_params","sendCustomStyle","handleMessage","parse","skipClosingConfirmation","scrollbarColor","reload_supported","req_id","slug","linkUrl","available","custom_emoji_id","BigInt","customEmojiId","plannedEvents","getIsWebAppsFullscreenSupported","exitIfFullscreenCallback","TME_LINK_PREFIX","path_full","shouldIgnoreCache","force_request","is_visible","isSettingsButtonVisible","validateHexColor","color_key","textColor","text_color","trim","is_active","isProgressVisible","is_progress_visible","shouldConfirmClosing","buttons","handleAppPopupClose","chat_types","convertToApiChatType","isSamePeer","handleRejectPhone","handleRejectWriteAccess","handleRequestWriteAccess","method","requestId","parameters","customMethod","handleInvokeCustomMethod","handleRejectFileDownload","fileUrl","handleCheckDownloadFile","file_name","access_requested","access_granted","geolocationData","getGeolocationStatus","accessRequested","accessGranted","latitude","longitude","altitude","course","heading","speed","horizontal_accuracy","accuracy","vertical_accuracy","altitudeAccuracy","handleRequestLocation","isMainButtonVisible","isSecondaryButtonVisible","handleHideCloseModal","handleConfirmCloseModal","handleHideRemoveModal","handleMainButtonClick","handleSecondaryButtonClick","buttonId","button_id","handleAppPopupModalClose","sendThemeCallback","setFullscreenCallback","checkIfFullscreen","sendFullScreenChangedCallback","visibilityChangedCallBack","prevModalState","prevIsPaymentModalOpen","handleRemoveAttachBot","isEnabled","handleAcceptPhone","shouldCloseActive","handleAcceptWriteAccess","handleDownloadFile","mainButtonCurrentColor","mainButtonCurrentTextColor","mainButtonCurrentIsActive","mainButtonCurrentText","secondaryButtonCurrentPosition","secondaryButtonCurrentColor","secondaryButtonCurrentTextColor","secondaryButtonCurrentIsActive","secondaryButtonCurrentText","shouldDecreaseWebFrameSize","setShouldDecreaseWebFrameSize","shouldHideMainButton","setShouldHideMainButton","shouldHideSecondaryButton","setShouldHideSecondaryButton","shouldShowMainButton","setShouldShowMainButton","shouldShowSecondaryButton","setShouldShowSecondaryButton","shouldShowAppNameInFullscreen","setShouldShowAppNameInFullscreen","backButtonTextWidth","setBackButtonTextWidth","isVerticalLayout","rowsCount","hideDirection","mainButtonChangeTimeout","mainButtonFastTimeout","secondaryButtonChangeTimeout","secondaryButtonFastTimeout","appNameDisplayTimeout","frameStyle","handleBackClick","handleCollapseClick","handleShowContextMenu","backIconClass","backButtonCaption","hasHeaderElement","viewBox","renderDefaultPlaceholder","sandbox","allow","allowFullScreen","hasCloseButton","filename","MINIMIZED_STATE_SIZE","DEFAULT_MAXIMIZED_STATE_SIZE","MAXIMIZED_STATE_MINIMUM_SIZE","cachedPosition","miniAppsCachedPosition","cachedSize","miniAppsCachedSize","WebAppModal","prolongWebView","openWebAppTab","openMoreAppsTab","closeMoreAppsTab","updateMiniAppCachedPosition","updateMiniAppCachedSize","getMaximizedStateSize","setMaximizedStateSize","getSize","openedOrderedKeys","sessionKeys","isMoreAppsTabActive","tabs","isMaximizedState","isFullScreen","supportMultiTabMode","menuRef","getTriggerElement","getRootElement","getMenuElement","isContextMenuOpen","contextMenuAnchor","handleContextMenu","handleContextMenuClose","handleContextMenuHide","useContextMenuHandlers","isDraggingEnabled","setIsDraggingEnabled","headerElement","containerElement","isDragging","draggableStyle","dragHandleElementRef","isDragEnabled","originalSize","minimumSize","elementCurrentPosition","setElementCurrentPosition","elementCurrentSize","setElementCurrentSize","getElementPositionOnStartTransform","setElementPositionOnStartTransform","getElementSizeOnStartTransform","setElementSizeOnStartTransform","getTransformStartPoint","setTransformStartPoint","elementPositionOnStartTransform","transformStartPoint","dragHandleElement","isInitiated","setIsInitiated","wasElementShown","setWasElementShown","startDragging","stopDragging","startResizing","stopResizing","isWindowsResizing","startWindowResizing","stopWindowResizing","hitResizeHandle","setHitResizeHandle","getVisibleArea","innerWidth","innerHeight","updateCurrentPosition","getActualPosition","getCenteredPosition","visibleArea","centeredPosition","handleStartDrag","handleStartResize","targetElement","resizeHandle","RESIZE_HANDLE_SELECTOR","getResizeHandleFromTarget","handleDragRelease","handleResizeRelease","ensurePositionInVisibleArea","visibleAreaWidth","visibleAreaHeight","componentWidth","componentHeight","newX","newY","adjustPositionWithinBounds","newPosition","ensureSizeInVisibleArea","sizeForCheck","newSize","originalWidth","originalHeight","adjustSizeWithinBounds","handleWindowResize","handleDrag","sizeOnStartTransform","pageVisibleX","pageVisibleY","maxX","maxY","newBounds","cleanups","resizeHandler","cursorStyle","actualPosition","useDraggable","getMinimumSize","currentSize","currentWidth","currentHeight","queryId","openTabsCount","useInterval","replyInfo","sendEventCallback","reloadFrameCallback","callback","handleSettingsButtonClick","handleRefreshClick","handleModalClose","handleCloseMoreAppsTab","handleTabClose","handleToggleClick","handleFullscreenClick","handleOpenMoreAppsTabClick","handleTabClick","tab","openBotChat","renderMenuItems","isAttachBot","renderMoreMenu","anchor","backButtonClassName","headerTextVar","r","g","hexToRgb","luma","getColorLuma","renderTabCurveBorder","fill","buildResizeHandleClass","handleClassName","RESIZE_HANDLE_CLASS_NAME","useHorizontalScroll","dialogRef","dialogStyle","dialogContent","shortName","renderActiveTab","noBackdropClose","BotTrustModal","cancelBotTrustRequest","markBotTrusted","setIsWriteAllowed","handleBotTrustAccept","handleBotTrustDecline","AttachBotInstallModal","confirmAttachBotInstall","cancelAttachBotInstall","isTosAccepted","setIsTosAccepted","tosLabel","split","linkText","MINI_APP_TOS_URL","rel","isConfirmDisabled","DeleteFolderDialog","folder","closeDeleteChatFolderModal","deleteChatFolder","openDeleteChatFolderModal","renderingFolder","isMyChatlist","hasMyInvites","handleDeleteFolderMessage","folderId","isConfirmedForChatlist","COLORS","PremiumFeatureItem","isFontIcon","newIndex","colorA","colorB","ceil","lerpRgb","buttonClassName","fontIcon","SliderDots","onSelectSlide","startFrom","isPreLastBatch","isLastBatch","isFirstBatch","isPreFirstBatch","shownDotsCount","handleGoForward","handleGoBack","isLast","isPreLast","isFirst","isPreFirst","isInvisible","PremiumLimitsCompare","leftValue","rightValue","floatingBadgeIcon","rightStyle","COLOR_START","COLOR_END","PremiumLimitPreview","colorStepProgress","lerp","AnimatedCircleSticker","realIndex","sticker","maxLength","mediaDataAround","isActivated","isAnimated","animate","inanimate","circleSize","angle","PI","cos","sin","AnimatedSticker","tgsUrl","play","isLowPriority","noLoop","stickers","premium","PremiumFeaturePreviewStickers","setOffset","setSize","renderedStickers","cycleRestrict","STORY_FEATURE_TITLES","stories_order","stories_stealth","stories_views","stories_timer","stories_save","stories_caption","stories_link","STORY_FEATURE_DESCRIPTIONS","STORY_FEATURE_ICONS","STORY_FEATURE_ORDER","CIRCLE_SIZE","AVATAR_SIZES","giant","PremiumFeaturePreviewVideo","circleRef","dpr","useDevicePixelRatio","drawGradientCircle","segmentsCount","readSegmentsCount","readSegmentColor","maxSize","forPremiumPromo","videoId","isReverseAnimation","isDown","videoThumbnail","thumbnailRef","wrapper","reverse","down","DeviceFrame","PREMIUM_FEATURE_TITLES","double_limits","infinite_reactions","premium_stickers","animated_emoji","no_ads","voice_to_text","profile_badge","faster_download","more_upload","advanced_chat_management","animated_userpics","emoji_status","translations","saved_tags","last_seen","message_privacy","effects","PREMIUM_FEATURE_DESCRIPTIONS","LIMITS_TITLES","channels","dialogFolderPinned","channelsPublic","savedGifs","stickersFaved","aboutLength","captionLength","dialogFilters","dialogFiltersChats","recommendedChannels","LIMITS_DESCRIPTIONS","PremiumFeatureModal","promo","isPremium","limits","premiumPromoOrder","subscriptionOption","onClickSubscribe","scrollContainerRef","currentSlideIndex","setCurrentSlideIndex","PREMIUM_FEATURE_SECTIONS","reverseAnimationSlideIndex","setReverseAnimationSlideIndex","isScrolling","startScrolling","stopScrolling","isScrolledToTop","setIsScrolledToTop","isScrolledToBottom","setIsScrolledToBottom","prevInitialSection","filteredSections","subscriptionButtonText","months","currency","perMonthPrice","price","formatCurrency","handleLimitsScroll","scrollContainer","animateHorizontalScroll","then","handleSelectSlide","scrollLeft","scrollLeftOriginal","reverseIndex","prevElement","reverseElement","toString","toggleExtraClass","PREMIUM_LIMITS_ORDER","defaultLimit","premiumLimit","PremiumFeaturePreviewStories","videoSections","videos","PREMIUM_BOTTOM_VIDEOS","PremiumSubscriptionOption","fullMonthlyAmount","isGiveaway","perMonth","isUserCountPlural","discount","handleChange","formatCurrencyAsString","STATUS_EMOJI_SIZE","PREMIUM_FEATURE_COLOR_ICONS","PremiumStatus","PremiumLimits","PremiumReactions","PremiumStickers","PremiumEmoji","PremiumAds","PremiumVoice","PremiumBadge","PremiumSpeed","PremiumFile","PremiumChats","PremiumVideo","PremiumTranslate","PremiumTags","PremiumLastSeen","PremiumMessagePrivacy","PremiumEffects","fromUser","fromUserId","fromUserStatusEmoji","emojiStatus","customEmojis","documentId","fromUserStatusSet","selectStickerSet","stickerSetInfo","isSuccess","isGift","monthsAmount","toUser","toUserId","limitChannels","selectPremiumLimit","limitFolders","limitPins","limitLinks","premiumSlug","premiumInvoiceSlug","premiumBotUsername","PremiumMainModal","closePremiumModal","requestConfetti","loadStickers","openStickerSet","isHeaderHidden","setHeaderHidden","currentSection","setCurrentSection","selectedSubscriptionOption","setSubscriptionOption","handleOpenSection","handleResetSection","handleClickWithStartParam","handleChangeSubscriptionOption","foundOption","showConfetti","withStars","prevIsPremium","defaultOption","handleOpenStatusSet","monthOption","subscribeButtonText","CustomEmoji","isBig","PremiumLogo","template","first","second","emoji","thumbCustomEmojiId","link","getHeaderText","statusText","entities","statusEntities","renderFooterText","ItemPicker","notFoundText","noScrollRestore","isViewOnly","itemClassName","forceRenderAllItems","onDisabledClick","optionalProps","lockedSelectedValues","lockedUnselectedValues","timeoutId","selectedValues","selectedValue","lockedSelectedValuesSet","Set","lockedUnselectedValuesSet","sortedItemValuesList","lockedSelectedBucket","unlockedBucket","lockedUnselectableBucket","has","concat","handleItemClick","newSelectedValues","splice","onSelectedValuesChange","onSelectedValueChange","viewportValuesList","handleFilterChange","renderItem","itemOption","subLabel","isItemLoading","isAlwaysUnselected","isAlwaysSelected","isLocked","isChecked","inputElement","Radio","onlyInput","pickerList","padded","noResults","CountryPickerModal","selectionLimit","selectedCountryIds","setSelectedCountryIds","noPickerScrollRestore","country","iso2","defaultName","handleSelectedIdsChange","newSelectedIds","pickerSelector","pickerTitle","main","picker","GiveawayChannelPickerModal","giveawayChatId","initialSelectedIds","onSelectedIdsConfirmed","pendingChannelId","setPendingChannelId","isConfirmModalOpen","openConfirmModal","closeConfirmModal","setSelectedIds","channelIds","isChatSuperGroup","displayedChannelIds","foundChannelIds","handleSelectedChannelIdsChange","privateLinkChannelId","isChatPublic","confirmPrivateLinkChannelSelection","handleModalConfirm","PickerModal","shouldAdaptToSearch","withFixedHeight","confirmButtonText","GiveawayTypeOption","isLink","onClickAction","userNames","selectedMemberIds","displayText","members","adminMembersById","GiveawayUserPickerModal","memberIds","statusesById","adminIdsSet","sortUserIds","displayedMemberIds","filteredUserIds","isUserBot","handleSelectedMemberIdsChange","GIVEAWAY_IMG_LIST","GiftGreenRound","GiftBlueRound","GiftRedRound","giveawayModal","gifts","selectedMemberList","selectedChannelList","selectedChannelIds","giveawayBoostPerPremiumLimit","giveawayBoostsPerPremium","isStarsGiftEnabled","userSelectionLimit","giveawayAddPeersMax","countrySelectionLimit","giveawayCountriesMax","general","prepaidGiveaway","starsGiftOptions","starOptions","GiveawayModal","GIVEAWAY_BOOST_PER_PREMIUM","GIVEAWAY_MAX_ADDITIONAL_COUNTRIES","GIVEAWAY_MAX_ADDITIONAL_USERS","closeGiveawayModal","launchPrepaidGiveaway","launchPrepaidStarsGiveaway","isCalendarOpened","openCalendar","closeCalendar","isCountryPickerModalOpen","openCountryPickerModal","closeCountryPickerModal","isUserPickerModalOpen","openUserPickerModal","closeUserPickerModal","isChannelPickerModalOpen","openChannelPickerModal","closeChannelPickerModal","TYPE_OPTIONS","GiftStar","customExpireDate","setCustomExpireDate","selectedRandomUserCount","setSelectedRandomUserCount","selectedGiveawayOption","setGiveawayOption","selectedStarOption","setSelectedStarOption","selectedSubscriberOption","setSelectedSubscriberOption","selectedMonthOption","setSelectedMonthOption","selectedUserIds","setSelectedUserIds","setSelectedChannelIds","shouldShowWinners","setShouldShowWinners","shouldShowPrizes","setShouldShowPrizes","prizeDescription","setPrizeDescription","dataPrepaidGiveaway","setDataPrepaidGiveaway","dataStarsPrepaidGiveaway","setDataStarsPrepaidGiveaway","isPremiumGiveaway","isStarsGiveaway","selectedUserCount","boostQuantity","boostStarsQuantity","yearlyBoosts","SUBSCRIBER_OPTIONS","monthQuantity","isStarsPrepaidGiveaway","isPremiumPrepaidGiveaway","selectedGift","gift","selectedStarsGift","stars","filteredGifts","STARS_CURRENCY_CODE","basicGift","userCountOptions","winner","winnerCountOptions","winners","quantity","handlePremiumClick","boostChannelId","additionalChannelIds","isOnlyForNewSubscribers","countries","areWinnersVisible","untilDate","confirmLaunchPrepaidGiveaway","giveawayId","paymentPurpose","handleRandomUserCountChange","newValue","handleWinnerCountChange","handlePrizeDescriptionChange","handleChangeSubscriberOption","handleChangeTypeOption","handleExpireDateChange","handleSetCountriesListChange","handleSelectedUserIdsChange","handleShouldShowWinnersChange","handleShouldShowPrizesChange","onClickActionHandler","handleStarClick","renderGiveawayOptionList","filteredChannelIds","deleteParticipantsHandler","iconClassName","subLabelClassName","formatDateTimeToString","boosts","RangeSliderWithMarks","rangeCount","marks","StarTopupOptionList","selectedStarCount","match","Link","isPrimary","renderPremiumFeaturesLink","GIVEAWAY_MAX_ADDITIONAL_CHANNELS","LIMIT_DESCRIPTION","uploadMaxFileparts","chatlistInvites","chatlistJoined","savedDialogsPinned","LIMIT_DESCRIPTION_BLOCKED","LIMIT_DESCRIPTION_PREMIUM","LIMIT_ICON","LIMIT_VALUE_FORMATTER","MAX_UPLOAD_FILEPART_SIZE","defaultValue","premiumValue","canBuyPremium","selectIsPremiumPurchaseBlocked","PremiumLimitReachedModal","closeLimitReachedModal","isClosing","startClosing","stopClosing","valueFormatter","limitType","defaultValueFormatted","premiumValueFormatted","getLimiterDescription","canUpgrade","SLIDE_TRANSITION_DURATION","FOCUS_MARGIN","useStickerPickerObservers","idPrefix","stickerSetIntersectionsRef","activeSetIndex","setActiveSetIndex","observe","observeIntersectionForSet","freeze","freezeForSet","unfreeze","unfreezeForSet","useIntersectionObserver","rootRef","stickerSetIntersections","entry","isIntersecting","minIntersectingIndex","lowestIndex","Infinity","observeIntersectionForShowingItems","freezeForShowingItems","unfreezeForShowingItems","throttleMs","margin","observeIntersectionForPlayingItems","observeIntersectionForCovers","stickerSetEl","isClose","animateScroll","maxDistance","StickerSetCover","stickerSet","STICKER_SIZE_PICKER_HEADER","observeIntersection","sharedCanvasRef","hasThumbnail","hasVideoThumb","hasAnimatedThumb","hasStaticThumb","customEmoji","useCustomEmoji","hasCustomColor","shouldUseTextColor","customColor","useDynamicColorListener","colorFilter","useColorFilter","useIsIntersecting","shouldPlay","shouldFallbackToSticker","IS_WEBM_SUPPORTED","firstStickerHash","getStickerMediaHash","firstStickerMediaData","mediaHash","coords","useCoordsInSharedCanvas","observeIntersectionForPlaying","selectIsAlwaysHighPriorityEmoji","sharedCanvas","sharedCanvasCoords","forceAlways","getFirstLetters","contentForStatusMenuContext","arg","StickerButton","noContextMenu","isStatusPicker","canViewSet","observeIntersectionForShowing","isSelected","shouldIgnorePremium","noShowPremium","withTranslucentThumb","clickArg","onFaveClick","onUnfaveClick","onRemoveRecentClick","onContextMenuOpen","onContextMenuClose","onContextMenuClick","isEffectEmoji","withSparkles","setEmojiStatus","isFree","hasEffect","isCustomEmoji","shouldLoad","isIntesectingForShowing","handleBeforeContextMenu","shouldRenderContextMenu","getLayout","withPortal","shouldAvoidNegativePosition","handleRemoveClick","handleContextRemoveRecent","handleContextUnfave","handleContextFave","handleSendQuiet","handleSendScheduled","handleOpenSet","handleEmojiStatusExpiresClick","until","shouldShowCloseButton","contextMenuItems","preventMessageInputBlurWithBubbling","Sparkles","preset","StickerView","isSmall","shouldLoop","shouldPreloadPreview","noLoad","noVideoOnMobile","withSharedAnimation","noFastClick","EmojiButton","native","IS_PACKAGED_ELECTRON","BASE_URL","image","LOADED_EMOJIS","names","IS_EMOJI_SUPPORTED","loading","handleEmojiLoad","ReactionEmoji","loadAndPlay","sharedCanvasHqRef","isCustom","availableReaction","staticIcon","animationId","selectAnimation","getDocumentMediaHash","LOCAL_TGS_URLS","StarReaction","EMOJI_SIZE_PICKER","AnimatedIconWithPreview","collectibleStatuses","collectibleEmojiStatuses","statuses","StickerSet","isNearActive","favoriteStickers","isReactionPicker","shouldHideHeader","withDefaultTopicIcon","selectedReactionIds","withDefaultStatusIcon","isChatEmojiSet","isChatStickerSet","isTranslucent","noContextMenus","onReactionSelect","onReactionContext","onStickerSelect","onStickerUnfave","onStickerFave","onStickerRemoveRecent","recentEmojis","allEmojis","onEmojiSelect","clearRecentStickers","clearRecentCustomEmoji","clearRecentReactions","toggleStickerSet","itemsPerRow","setItemsPerRow","getItemsPerRowFallback","stickerMarginPx","emojiMarginPx","emojiVerticalMarginPx","isRecent","RECENT_SYMBOL_SET_ID","isStatusCollectible","COLLECTIBLE_STATUS_SET_ID","isFavorite","FAVORITE_SYMBOL_SET_ID","isPopular","POPULAR_SYMBOL_SET_ID","isEmoji","isPremiumSet","selectIsSetPremium","handleClearRecent","handleAddClick","stickerSetId","handleDefaultTopicIconClick","DEFAULT_TOPIC_ICON_STICKER_ID","isLottie","handleDefaultStatusIconClick","DEFAULT_STATUS_ICON_ID","itemSize","STICKER_SIZE_PICKER","verticalMargin","calculateItemsPerRow","contentRect","useResizeObserver","accessHash","isInstalled","installedDate","isArchived","canCut","EFFECT_EMOJIS_SET_ID","EFFECT_STICKERS_SET_ID","isCut","expand","itemsBeforeCutout","totalItemsCount","itemHeight","heightWhenCut","favoriteStickerIdsSet","collectibleEmojiIdsSet","withAddSetButton","addSetButtonText","pill","grey","reactionId","displayedEmoji","isHqEmoji","canvasRef","HEADER_BUTTON_WIDTH","FADED_BUTTON_SET_IDS","STICKER_SET_IDS_WITH_COVER","setsById","stickerSetsById","customEmojisById","featuredIds","customEmojiFeaturedIds","statusRecent","emojis","recentStatusEmojis","recentCustomEmojis","recentCustomEmojiIds","recentReactions","topReactions","defaultTags","addedCustomEmojiIds","added","setIds","canAnimate","selectCanPlayAnimatedEmojis","defaultTopicIconsId","defaultStatusIconsId","chatEmojiSetId","emojiSet","isWithPaidReaction","isPaidReactionAvailable","defaultTagReactions","CustomEmojiPicker","pickerListClassName","withDefaultTopicIcons","onCustomEmojiSelect","handleContentScroll","shouldHideTopBorder","pickTruthy","collectibleStatusEmojis","collectibleStatusEmojiIds","prefix","canLoadAndPlay","areAddedLoaded","allSets","defaultSets","TOP_SYMBOL_SET_ID","topReactionsSlice","unshift","cleanRecentReactions","some","topReaction","cleanAvailableReactions","isInactive","allRecentReactions","defaultStatusIconsPack","uniqueByField","defaultTopicIconsPack","userSetIds","setIdsToDisplay","setsToDisplay","noPopulatedSets","canRenderContent","useAsyncRendering","shouldRenderContent","newLeft","handleEmojiSelect","pickerStyles","headerClassName","listClassName","firstSticker","withSharedCanvas","STICKER_PICKER_MAX_SHARED_COVERS","isHq","isFaded","areFeaturedStickersLoaded","selectIsContextMenuTranslucent","StatusPickerMenu","statusButtonRef","onEmojiStatusSelect","loadFeaturedEmojiStickers","transformOriginX","isContextMenuShown","markContextMenuShown","unmarkContextMenuShown","Portal","noCompact","bubbleClassName","noCloseOnBackdrop","FolderIconPickerMenu","iconButtonRef","onIconSelect","handleIconSelect","FILTER_EMOTICON_ICONS","iconName","CUSTOM_EMOJI_SIZE","SuggestedStatusModal","closeSuggestedStatusModal","sendWebAppEvent","renderingModal","mockPeerWithStatus","formatShortDuration","handleSetStatus","expires","referrerWebAppKey","hasAbsoluteCloseButton","loopLimit","PeerChip","mockPeer","withEmojiStatus","getFirstAvailableBoost","myBoosts","boost","firstBoost","prevBoostedChat","BoostModal","applyBoost","closeBoostModal","loadFullChat","isReplaceModalOpen","openReplaceModal","closeReplaceModal","isWaitDialogOpen","openWaitDialog","closeWaitDialog","isPremiumDialogOpen","openPremiumDialog","closePremiumDialog","chatTitle","boostedChatTitle","isStatusLoaded","isBoosted","leftText","rightText","descriptionText","canBoostMore","boostStatus","hasMyBoost","areBoostsInDifferentChannels","every","currentLevel","hasNextLevel","levelProgress","remainingBoosts","isMaxLevel","getBoostProgressInfo","hasBoost","moreBoosts","modalTitle","boostsLeftToUnrestrict","boostsToUnrestrict","boostsApplied","boostTimes","isBoostDisabled","isReplacingBoost","handleApplyBoost","slots","slot","handleProceedPremium","handleButtonClick","PremiumProgress","floatingBadgeText","isOnlyConfirm","chatMessage","GiftCodeModal","closeGiftCodeModal","applyGiftCode","canUse","toId","usedAt","handleOpenGiveaway","giveawayMessageId","modalData","LinkField","tableData","isFromGiveaway","TableInfoModal","ChatlistAlready","invite","closeChatlistModal","joinChatlistInvite","selectedPeerIds","setSelectedPeerIds","missingPeerIds","hasChatsToAdd","isNew","alreadyPeerIds","newChatsCount","noCustomEmojiPlayback","noTitleAnimations","handleSelectionToggle","areAllSelected","pickerWrapper","pickerHeader","pickerHeaderInfo","selectionToggle","Badge","buttonBadge","isAlternateColor","ChatlistDelete","suggestedPeerIds","leaveChatlist","ChatlistNew","joinedIds","isNotJoined","selectedCount","removal","selectChatFolder","ChatlistInviteModal","renderingInfo","renderingFolderTitle","folderTabNumber","folderTitle","foldersWrapper","folders","Tab","badgeCount","isBadgeActive","ChatInviteModal","acceptChatInvite","closeChatInviteModal","participantsRef","prevModal","usePrevious","hash","inviteInfo","about","isBroadcast","participantIds","participantsCount","isRequestNeeded","handleAccept","acceptLangKey","requestToJoinLangKey","customPeer","getCustomPeerFromInvite","participants","withVideo","participantCount","participant","minLevelToRestrictAds","channelRestrictAdsLevelMin","AboutAdsModal","closeAboutAdsModal","moreMenuRef","isMonetizationSharing","canReport","renderingIsNewDesign","regularAdContent","SafeLink","listItemData","TableAboutModal","headerIconName","withSeparator","SponsoredMessageContextMenuContainer","triggerRef","shouldSkipAbout","onItemClick","AboutMonetizationModal","blockchainText","monetizationTitle","specialReplacement","twoFaSettings","hint","passwordHint","VerificationMonetizationModal","closeMonetizationVerificationModal","clearMonetizationVerificationError","processMonetizationRevenueWithdrawalUrl","shouldShowPassword","setShouldShowPassword","password","currentPassword","handleClearError","PasswordForm","shouldShowSubmit","errorKey","withRegular","clearError","isPasswordVisible","shouldResetValue","onChangePasswordVisibility","EmojiStatusAccessModal","closeEmojiStatusAccessModal","toggleUserEmojiStatusPermission","loadDefaultStatusIcons","currentStatusIndex","setCurrentStatusIndex","totalCount","prevIndex","renderPickerItem","chatItem","itemName","isBotAccessEmojiGranted","onCloseHandler","renderStatusText","LocationAccessModal","closeLocationAccessModal","toggleUserLocationPermission","renderInfo","ReportAdModal","reportSponsoredMessage","closeReportAdModal","openPreviousReportAdModal","transitionRef","handleOptionClick","randomId","renderingSection","renderingDepth","sectionDepth","sections","bottomText","hasSubtitle","ACTIVE_SLIDE_CLASS_NAME","handleAnimationStart","TO_SLIDE_CLASS_NAME","narrow","secondaryIcon","ReportModal","reportMessages","closeReportModal","openPreviousReportModal","setText","subject","handleTextChange","closeReportMessageModalHandler","sendMessageReportHandler","Report","TextArea","isOptional","maxLengthIndicator","noReplaceNewlines","isBlurred","isBackgroundBlurred","patternColor","background","customBackground","themes","PreparedMessageModal","closePreparedInlineMessageModal","openSharePreparedMessageModal","customBackgroundValue","useCustomBackground","handleOpenClick","localMessage","getMockPreparedMessageFromResult","bgClassName","inert","Message","noComments","noReplies","appearanceOrder","isJustAdded","isFirstInGroup","isLastInGroup","isLastInList","isFirstInDocumentGroup","isLastInDocumentGroup","starsBalance","balance","isStarsBalanceModalOpen","starsBalanceModal","SharePreparedMessageModal","closeSharePreparedMessageModal","sendInlineBotResult","updateSharePreparedMessageModalSendArgs","pendingSendArgs","starsForSendMessage","closeConfirmDialog","closeConfirmModalPayForMessage","dialogHandler","paymentMessageConfirmDialogHandler","shouldAutoApprove","shouldPaidMessageAutoApprove","setAutoApprove","setShouldPaidMessageAutoApprove","handleWithConfirmation","handleActionWithPaymentConfirmation","usePaidMessageConfirmation","handleSend","handleSendWithPaymentConfirmation","handleClosePaymentMessageConfirmDialog","peerName","PaymentMessageConfirmDialog","userName","messagePriceInStars","messagesCount","MEDIA_PERMISSIONS","MESSAGE_PERMISSIONS","useManagePermissions","defaultPermissions","permissions","setPermissions","havePermissionChanged","setHavePermissionChanged","setIsLoading","handlePermissionChange","targetName","getUpdatedPermissionValue","oldPermissions","newPermissions","sendGifs","checkMedia","mediaPermissions","v","sendMedia","assign","embedLinks","sendPlain","sendMessages","resetPermissions","permissionKeyList","fullInfo","hasLinkedChat","linkedChatId","PermissionCheckboxList","isMediaDropdownOpen","setIsMediaDropdownOpen","shiftedClassName","dropdownClassName","withCheckbox","getControlIsDisabled","permissionGroup","shouldDisablePermissionForPublicGroup","countCheckedPermissions","handleOpenMediaDropdown","handleDisabledClick","blocking","labelText","rightIcon","onClickLabel","sendPhotos","sendVideos","sendStickers","sendAudios","sendDocs","sendVoices","sendRoundvideos","sendPolls","inviteUsers","pinMessages","changeInfo","manageTopics","deleteMessageModal","canDeleteForAll","selectCanDeleteSelectedMessages","isSuperGroup","contactName","getPrivateChatUserId","chatBot","isSystemBot","selectBot","canBanUsers","getHasAdminRight","isCreator","isChatWithBot","selectIsChatWithBot","willDeleteForCurrentUserOnly","isChatBasicGroup","willDeleteForAll","DeleteMessageModal","closeDeleteMessageModal","deleteMessages","reportChannelSpam","deleteChatMember","deleteScheduledMessages","exitMessageSelectMode","updateChatMemberBannedRights","deleteParticipantHistory","defaultBannedRights","peerIdsToDeleteAll","setPeerIdsToDeleteAll","peerIdsToBan","setPeerIdsToBan","peerIdsToReportSpam","setPeerIdsToReportSpam","isAdditionalOptionsVisible","setIsAdditionalOptionsVisible","shouldDeleteForAll","setShouldDeleteForAll","peerList","senderArray","getSendersFromSelectedMessages","buildNestedOptionListWithAvatars","member","peerListToDeleteAll","peerListToReportSpam","peerListToBan","isCurrentUserInList","isAdmin","shouldShowOption","peerNames","buildCollectionByCallback","ACTION_SPAM_OPTION","nestedOptions","opt","ACTION_DELETE_OPTION","ACTION_BAN_OPTION","toggleAdditionalOptions","filterMessageIdByPeerId","selectedMessageIdList","msgId","selectSenderFromMessage","handleReportSpam","userMessagesMap","messageIdList","participantId","handleDeleteMessages","filteredMessageIdList","handleDeleteAllPeerMessages","peerIdList","handleDeleteMember","filteredUserIdList","handleUpdateChatMemberBannedRights","bannedRights","handleDeleteMessageList","isNaN","CheckboxGroup","nestedCheckbox","isPrivateChat","canPinForAll","PinMessageModal","pinMessage","handlePinMessageForAll","isUnpin","handlePinMessage","isOneSide","isSilent","UnpinAllMessagesModal","pinnedMessagesCount","onUnpin","selectCanReportSelectedMessages","selectCanDownloadSelectedMessages","selectedMessageIds","selectedMessages","hasProtectedMessage","selectHasProtectedMessage","selectCanForwardMessages","isShareMessageModalOpen","isShareMessageModalShown","isAnyModalOpen","requestedAttachBotInstall","selectedMessagesCount","selectSelectedMessagesCount","canDeleteMessages","canReportMessages","canDownloadMessages","canForwardMessages","shouldWarnAboutSvg","byKey","MessageSelectToolbar","canPost","openForwardMenuForSelectedMessages","downloadSelectedMessages","copySelectedMessages","setSettingOption","handleCopy","useHotkeys","useCopySelectedMessages","isSvgDialogOpen","openSvgDialog","closeSvgDialog","shouldNotWarnAboutSvg","setShouldNotWarnAboutSvg","handleExitMessageSelectMode","handleDelete","onBackspace","onEsc","handleMessageDownload","handleSvgConfirm","prevSelectedMessagesCount","formattedMessagesCount","renderButton","seenByModal","seenByDates","closeSeenByModal","renderingSeenByDates","leftId","rightId","handleCloseSeenByModal","CLOSE_ANIMATION_DURATION","isReadDate","privacySettingsNoticeModal","PrivacySettingsNoticeModal","updateGlobalPrivacySettings","closePrivacySettingsNoticeModal","setPrivacyVisibility","loadUser","handleShowReadTime","shouldHideReadMarks","handleShowLastSeen","privacyKey","onSuccess","handleOpenPremium","ReadTime","LastSeen","Separator","reactorModal","reactors","ReactorListModal","loadReactors","closeReactorListModal","chosenTab","setChosenTab","canShowFilters","results","chatIdRef","handleCloseAnimationEnd","allReactions","uniqueReactions","seenByUserIds","flatMap","peerReactions","reactor","seenByUser","addedDate","avatarSize","activeEmojiInteraction","animatedEffect","selectAnimatedEmojiEffect","effectAnimationId","EmojiInteractionAnimation","stopActiveEmojiInteraction","isHiding","startHiding","startPlaying","stop","handleCancelAnimation","endHeavyAnimation","effectHash","effectTgsUrl","startSize","isReversed","quality","chatLanguageModal","currentLanguageCode","selectLanguageCode","activeTranslationLanguage","selectRequestedMessageTranslationLanguage","selectRequestedChatTranslationLanguage","ChatLanguageModal","requestMessageTranslation","closeChatLanguageModal","requestChatTranslation","handleSelect","langCode","toLanguageCode","translationLanguage","handleSearch","translateLanguages","SUPPORTED_TRANSLATION_LANGUAGES","translatedName","Intl","DisplayNames","of","originalName","filteredDisplayedLanguages","highlight","CollectibleInfoModal","closeCollectibleInfoModal","isUsername","handleOpenUrl","shouldSkipModal","formatUsername","collectible","copyTextToClipboard","formattedCollectible","purchaseDate","cryptoCurrency","cryptoAmount","Mention","chip","createMapStateToProps","props","currentType","isVoice","byChatId","globalMessagesByChatId","messages","searchChatId","AudioResults","searchMessagesGlobal","openAudioPlayer","foundMessages","parseSearchResultKey","handleMessageFocus","handlePlayAudio","canRenderContents","NothingFound","shouldDrawDateDivider","toYearMonth","getMessageDownloadableMedia","formatMonthAndYear","Audio","AudioOrigin","Search","getSenderName","onDateClick","buttonRef","activeElement","selectIsChatPinned","getIsChatMuted","selectNotifyDefaults","selectNotifyException","canChangeFolder","chatFolders","LeftSearchResultChat","withUsername","withOpenAppButton","isMuteModalOpen","openMuteModal","closeMuteModal","isChatFolderModalOpen","openChatFolderModal","closeChatFolderModal","shouldRenderChatFolderModal","markRenderChatFolderModal","unmarkRenderChatFolderModal","shouldRenderMuteModal","markRenderMuteModal","unmarkRenderMuteModal","handleChatFolderChange","handleMute","useChatContextActions","handleOpenApp","useSelectWithEnter","storyViewerOrigin","hasMainMiniApp","MuteChatModal","ChatFolderModal","BotAppResults","recentSet","withoutRecent","handleChatClick","shouldReplaceHistory","privateChatUserId","privateChatUser","ChatMessage","mediaThumbnail","getMessageSticker","getMessageMediaThumbDataUri","mediaBlobUrl","getMessageMediaHash","isRoundVideo","getMessageRoundVideo","formatPastTimeShort","renderMessageSummary","isSpoiler","getMessageIsSpoiler","getMessageVideo","renderSummary","DateSuggest","searchDate","suggestions","suggestion","currentDate","latestYear","getSuggestionsFromDate","selectTopic","LeftSearchResultTopic","foundTopicIds","ChatMessageResults","dateSearchQuery","onSearchDateSelect","openThread","handleTopicClick","nothingFound","topUserIds","topPeers","recentlyFoundChatIds","RecentContacts","loadTopUsers","addRecentlyFoundChatId","clearRecentlyFoundChats","topUsersRef","handleClearRecentlyFoundChats","isChannelList","globalResults","localResults","globalPeerIds","accountPeerIds","similarChannelIds","selectSimilarChannelIds","GLOBAL_SUGGESTED_CHANNELS_ID","suggestedChannelIds","ChatResults","setGlobalSearchChatId","loadChannelRecommendations","chatSelectionRef","shouldShowMoreLocal","setShouldShowMoreLocal","shouldShowMoreGlobal","setShouldShowMoreGlobal","searchContext","setSearchContext","context","handlePickerItemClick","getSearchContextCaption","handleClickContext","itemPlaceholderClass","startsWith","filteredChatIds","getOrderedIds","ALL_FOLDER_ID","localChatIds","contactIdsWithMe","localPeerIds","filteredIds","shouldResetResultsByType","shouldCheckFetchingMessagesStatus","handleClickShowMoreLocal","handleClickShowMoreGlobal","actualFoundIds","isMessagesFetching","shouldRenderMessagesSection","noScrollRestoreOnTop","customIcon","shouldCleanup","CURRENT_TYPE","FileResults","observeIntersectionForMedia","getMessageDocument","Document","withDate","datetime","smaller","LinkResults","WebLink","onMessageClick","MediaResults","handleSelectMedia","isMediaGrid","isMessageList","Media","TABS","GlobalSearchContent","ChannelList","BotApps","Links","Files","Music","Voice","CHAT_TABS","currentContent","LeftSearch","setGlobalSearchContent","setGlobalSearchDate","activeTab","setActiveTab","parseDateString","handleSwitchTab","handleSearchDateSelect","TabList","onSwitchTab","renderCount","INITIAL_STATE","email","twoFaReducer","payload","maxChats","selectCurrentLimit","SettingsFoldersChatFilters","mode","dispatch","onSaveFilter","openLimitReachedModal","chatFilter","selectedChatIds","selectedChatTypes","selectChatFilters","chatTypes","CUSTOM_PEER_INCLUDED_CHAT_TYPES","CUSTOM_PEER_EXCLUDED_CHAT_TYPES","isTouched","setIsTouched","folderAllOrderedIds","useFolderManagerForOrderedIds","folderArchivedOrderedIds","ARCHIVED_FOLDER_ID","shouldHideChatTypes","isChatList","chatIds","newFilter","includeFilters","includedChatIds","excludeFilters","excludedChatIds","handleSelectedChatTypesChange","newFilters","categories","selectedCategories","categoryPlaceholderKey","withPeerTypes","onSelectedCategoriesChange","useModuleLoader","Bundles","Extra","ERROR_NO_TITLE","ERROR_NO_CHATS","invites","chatListCount","el","loadedActiveChatIds","loadedArchivedChatIds","isRemoved","maxInviteLinks","maxChatLists","SettingsFoldersEdit","onAddIncludedChats","onAddExcludedChats","onShareFolder","onOpenInvite","isOnlyInvites","onSaveFolder","loadChatlistInvites","isCreating","isEditingChatList","isIncludedChatsListExpanded","setIsIncludedChatsListExpanded","isExcludedChatsListExpanded","setIsExcludedChatsListExpanded","includedChatTypes","excludedChatTypes","visibleIncludedChatIds","visibleExcludedChatIds","allLoadedChatsSet","loadedIncludedChatIds","findIntersectionWithSet","loadedExcludedChatIds","handleCreateInviteClick","selectCanShareFolder","handleEditInviteClick","renderChats","visibleChatIds","leftChatsCount","clickHandler","chatType","typeKey","renderChatType","folderIconPickerButtonRef","isFolderIconPickerOpen","openFolderIconPicker","closeFolderIconPicker","handleFolderIconPickerButtonClicked","handleFolderIconSet","STICKER_SIZE_FOLDER_SETTINGS","FoldersNew","append","LeftColumnBarFolderIcon","runThrottledForLoadRecommended","folderIds","foldersById","recommended","recommendedChatFolders","maxFolders","SettingsFoldersMain","onCreateFolder","onEditFolder","loadRecommendedChatFolders","addChatFolder","sortChatFolders","setState","orderedFolderIds","dragOrderIds","draggedIndex","prevFolderIds","handleCreateFolder","chatsCountByFolderId","useFolderManagerForChatsCount","userFolders","getFolderDescriptionText","handleCreateFolderFromRecommended","translation","handleDragEnd","canCreateNewFolder","FoldersAll","isBlocked","isDragged","draggedTop","Draggable","onDragEnd","knobStyle","isStatic","allowSelection","shareFolderScreen","SettingsShareChatlist","createChatlistInvite","deleteChatlistInvite","editChatlistInvite","handleRevoke","pinnedChatIds","unlockedIds","partition","selectCanInviteToChat","isFirstRenderRef","prevUrl","handleClickDisabled","chatsCount","AnimatedIcon","FoldersShare","withShare","onRevoke","lockedUnselectedIds","SettingsFolders","currentScreen","shownScreen","onScreenSelect","openShareChatFolderModal","editChatFolder","handleReset","SettingsScreens","FoldersCreateFolder","FoldersEditFolder","FoldersEditFolderFromChatList","FoldersEditFolderInvites","FoldersIncludedChats","FoldersExcludedChats","saveState","newState","folderUpdate","handleSaveFolder","handleSaveFilter","handleEditFolder","handleAddIncludedChats","FoldersIncludedChatsFromChatList","handleAddExcludedChats","FoldersExcludedChatsFromChatList","handleShareFolder","noRequestNextScreen","handleOpenInvite","Folders","SettingsPasswordForm","shouldDisablePasswordManager","expectedPassword","validationError","setValidationError","newPassword","PasswordMonkey","SettingsPasscodeCongratulations","fullReset","STICKER_SIZE_PASSCODE","Congratulations","SettingsPasscodeEnabled","Lock","previewUrl","lockPreviewUrl","PasscodeChangePasscodeCurrent","PasscodeTurnOff","SettingsPasscodeStart","passcode","SettingsPasscode","onSetPasscode","setPasscode","clearPasscode","setPasscodeError","clearPasscodeError","handleStartWizard","PasscodeNewPasscode","handleNewPassword","PasscodeNewPasscodeConfirm","handleNewPasswordConfirm","PasscodeCongratulations","handleChangePasswordCurrent","currentPasscode","decryptSession","PasscodeChangePasscodeNew","handleChangePasswordNew","PasscodeChangePasscodeConfirm","handleTurnOff","Privacy","PasscodeDisabled","SettingsPasscodeForm","PasscodeEnabled","premiumSection","handleOpenPremiumModal","StarIcon","nonContactPeersPaidStars","selectNonContactPeersPaidStars","starsUsdWithdrawRateX1000","starsUsdWithdrawRate","configStarsPaidMessageCommissionPermille","starsPaidMessageCommissionPermille","noPaidReactionsForUsersCount","noPaidMessages","shouldNewNonContactPeersRequirePremium","selectNewNoncontactPeersRequirePremium","shouldChargeForMessages","DEFAULT_CHARGE_FOR_MESSAGES","canLimitNewMessagesWithoutPremium","canChargeForMessages","starsPaidMessagesAvailable","starsPaidMessageAmountMax","DEFAULT_MAXIMUM_CHARGE_FOR_MESSAGES","canChangeForContactsAndPremium","canChangeChargeForMessages","chargeForMessages","setChargeForMessages","PrivacyLockedOption","hidden","isCanCheckedInDisabled","updateGlobalPrivacySettingsWithDebounced","handleChargeForMessagesChange","renderValueForStarsRange","formatStarsAsText","privacyDescription","isCenteredLayout","MINIMUM_CHARGE_FOR_MESSAGES","renderValue","readOnly","percent","itemSubtitle","PrivacyNoPaidMessages","renderSectionNoPaidMessagesForUsers","PremiumStatusItem","getSessionIcon","session","platform","device","deviceModel","systemVersion","activeSessions","byHash","SettingsActiveSession","changeSessionSettings","terminateAuthorization","renderingSession","handleSecretChatsStateChange","areSecretChatsEnabled","handleCallsStateChange","areCallsEnabled","handleTerminateSessionClick","headerButton","iconDevice","dateActive","box","appVersion","ip","region","getLocation","note","actionHeader","actionName","SettingsActiveSessions","orderedHashes","ttlDays","terminateAllAuthorizations","changeSessionTtl","isConfirmTerminateAllDialogOpen","openConfirmTerminateAllDialog","closeConfirmTerminateAllDialog","openedSessionHash","setOpenedSessionHash","autoTerminateValue","AUTO_TERMINATE_OPTIONS","handleTerminateAllSessions","handleOpenSessionModal","handleCloseSessionModal","handleChangeSessionTtl","days","currentSession","currentSessionHash","isCurrent","otherSessionHashes","hasOtherSessions","sessionHashes","sessionHash","areButtonsInColumn","activeWebSessions","SettingsActiveWebsite","terminateWebAuthorization","renderingBot","browser","SettingsActiveWebsites","terminateAllWebAuthorizations","openedWebsiteHash","setOpenedWebsiteHash","handleTerminateAuthClick","handleTerminateAllAuth","handleCloseWebsiteModal","clearHelp","StickerSetCard","handleCardClick","CHAT_HEIGHT_PX","STICKER_SIZE_GENERAL_SETTINGS","renderPreview","customEmojiSetIds","canPlayAnimatedEmojis","SettingsCustomEmoji","shouldSuggestCustomEmoji","stickerSettingsRef","handleStickerSetClick","handleSuggestCustomEmojiChange","customEmojiSets","SettingsDataStorage","canAutoLoadPhotoFromContacts","canAutoLoadPhotoInPrivateChats","canAutoLoadPhotoInGroups","canAutoLoadPhotoInChannels","canAutoLoadVideoFromContacts","canAutoLoadVideoInPrivateChats","canAutoLoadVideoInGroups","canAutoLoadVideoInChannels","canAutoLoadFileFromContacts","canAutoLoadFileInPrivateChats","canAutoLoadFileInGroups","canAutoLoadFileInChannels","autoLoadFileMaxSizeMb","renderFileSizeCallback","AUTODOWNLOAD_FILESIZE_MB_LIMITS","handleFileSizeChange","renderAutoDownloadBlock","canAutoLoadFromContacts","canAutoLoadInPrivateChats","canAutoLoadInGroups","canAutoLoadInChannels","renderContentSizeSlider","LOCAL_SUPPORTED_DETECTION_LANGUAGES","SUPPORTED_LANGUAGES","doNotTranslate","SettingsDoNotTranslate","language","displayedOptions","setDisplayedOptions","displayedOptionList","currentLanguageOption","otherOptionList","prevLanguage","ManageUsernames","onEditUsername","toggleUsername","toggleChatUsername","sortUsernames","sortChatUsernames","usernameForConfirm","setUsernameForConfirm","usernameList","username","prevUsernameList","orderedUsernames","dragOrderUsernames","handleCopyUsername","handleUsernameClick","isEditable","closeConfirmUsernameDialog","handleUsernameToggle","usernameData","LINK_PREFIX_REGEX","runDebouncedForCheckUsername","UsernameInput","currentUsername","asLink","isUsernameAvailable","checkedUsername","checkUsername","checkPublicLink","setUsername","langPrefix","previousIsUsernameAvailable","renderingIsUsernameAvailable","isChecking","usernameSuccess","usernameError","MIN_UPDATE_USERNAME_LENGTH","MAX_USERNAME_LENGTH","USERNAME_REGEX","test","handleUsernameChange","newUsername","isUsernameValid","success","ERROR_FIRST_NAME_MISSING","editUsernameError","profileEdit","maxBioLength","currentFirstName","currentLastName","currentUserFullInfo","currentAvatarHash","getChatAvatarHash","currentBio","bio","SettingsEditProfile","loadCurrentUser","updateProfile","firstEditableUsername","isUsernameTouched","setIsUsernameTouched","isProfileFieldsTouched","setIsProfileFieldsTouched","setError","setPhoto","setBio","editableUsername","setEditableUsername","currentAvatarBlobUrl","ProfileEditProgress","InProgress","isUsernameError","shouldRenderUsernamesManage","isSaveButtonShown","Complete","handlePhotoChange","newPhoto","handleBioChange","handleProfileSave","trimmedFirstName","trimmedLastName","trimmedBio","AvatarEditable","USERNAME_PURCHASE_ERROR","purchaseInfoLink","PURCHASE_USERNAME","renderPurchaseLink","shouldForceHttpTransport","shouldAllowHttpTransport","shouldCollectDebugLogs","shouldDebugExportedSenders","SettingsExperimental","requestWave","snapButtonRef","isSnapButtonAnimating","setIsSnapButtonAnimating","isAutoUpdateEnabled","setIsAutoUpdateEnabled","electron","getIsAutoUpdateEnabled","handleDownloadLog","file","File","getDebugLogs","DEBUG_LOG_FILENAME","URL","createObjectURL","handleIsAutoUpdateEnabledChange","handleRequestWave","startX","startY","handleRequestConfetti","handleSnap","animateSnap","Experimental","IS_WAVE_TRANSFORM_SUPPORTED","IS_SNAP_EFFECT_SUPPORTED","IS_ELECTRON","shouldUseSystemTheme","SettingsGeneral","messageTextSize","messageSendKeyCombo","timeFormat","isMobileDevice","timeFormatOptions","appearanceThemeOptions","keyboardSendOptions","handleMessageTextSizeChange","setAttribute","handleAppearanceThemeChange","newTheme","getSystemTheme","handleTimeFormatChange","newTimeFormat","wasTimeFormatSetManually","setTimeFormat","handleMessageSendComboChange","newCombo","isTrayIconEnabled","setIsTrayIconEnabled","getIsTrayIconEnabled","handleIsTrayIconEnabledChange","GeneralChatBackground","IS_WINDOWS","WallpaperTile","wallpaper","localMediaHash","gradientRef","isLoadingRef","isLoadAllowed","setIsLoadAllowed","fullMedia","wasLoadDisabled","UPLOADING_WALLPAPER_SLUG","cacheKeyRef","blob","fetchBlob","cacheApi","save","CUSTOM_BG_CACHE_NAME","CUSTOM_WALLPAPER_CACHE_NAME","isAllowed","pattern","colors","getColorsFromWallPaper","WIDTH","HEIGHT","ChatBackgroundGradientRenderer","create","intensity","isDarkPattern","loadedWallpapers","SettingsGeneralBackground","loadWallpapers","uploadWallpaper","setThemeSettings","themeRef","handleFileSelect","validatedFiles","validateFiles","handleUploadWallpaper","openSystemFilesDialog","handleSetColor","GeneralChatBackgroundColor","handleResetToDefault","DARK_THEME_PATTERN_COLOR","DEFAULT_PATTERN_COLOR","handleWallPaperSelect","currentWallpaper","getAverageColor","getPatternColor","rgbColor","rgb2hex","handleWallPaperBlurChange","isUploading","isBlurrable","DEFAULT_HSB","rgb2hsb","hex2rgb","PREDEFINED_COLORS","hsb2positions","hsb","rects","colorPosition","colorRect","huePosition","hueRect","positions2hsb","colorPickerRef","huePickerRef","isFirstRunRef","setHsb","getInitialHsb","hsbRef","markIsDragging","unmarkIsDragging","rgbInput","setRgbInput","hexInput","setHexInput","rectsRef","colorCtxRef","offsetLeft","handleColorDrag","handleHueDrag","selectorToPreventScroll","withCursor","hex","hsb2rgb","hue","hueHex","rgb","w","h","imgData","createImageData","pixels","col","perY","st","ed","perX","putImageData","drawColor","drawHue","handleRgbChange","rgbValue","channel","handleHexChange","hexValue","handlePredefinedColorClick","dataset","SettingsHeader","editedFolderId","signOut","isSignOutDialogOpen","setIsSignOutDialogOpen","handleMultiClick","currentAmountRef","useMultiClick","openSignOutConfirmation","closeSignOutConfirmation","openDeleteFolderConfirmation","handleSignOutMessage","forceInitApi","SettingsMenuButton","EditProfile","General","QuickReaction","DataStorage","Language","DoNotTranslate","Stickers","PrivacyPhoneNumber","PrivacyLastSeen","PrivacyProfilePhoto","PrivacyBio","PrivacyBirthday","PrivacyGifts","PrivacyForwarding","PrivacyVoiceMessages","PrivacyMessages","PrivacyGroupChats","PrivacyPhoneCall","PrivacyLastSeenAllowedContacts","PrivacyProfilePhotoAllowedContacts","PrivacyBioAllowedContacts","PrivacyGroupChatsAllowedContacts","PrivacyLastSeenDeniedContacts","PrivacyProfilePhotoDeniedContacts","PrivacyBioDeniedContacts","PrivacyGroupChatsDeniedContacts","PrivacyPhoneNumberAllowedContacts","PrivacyBirthdayAllowedContacts","PrivacyGiftsAllowedContacts","PrivacyForwardingAllowedContacts","PrivacyVoiceMessagesAllowedContacts","PrivacyPhoneCallAllowedContacts","PrivacyPhoneP2PAllowedContacts","PrivacyPhoneNumberDeniedContacts","PrivacyBirthdayDeniedContacts","PrivacyGiftsDeniedContacts","PrivacyForwardingDeniedContacts","PrivacyVoiceMessagesDeniedContacts","PrivacyPhoneCallDeniedContacts","PrivacyPhoneP2PDeniedContacts","Performance","ActiveSessions","ActiveWebsites","PrivacyBlockedUsers","TwoFaDisabled","TwoFaEnabled","TwoFaNewPassword","TwoFaChangePasswordNew","TwoFaChangePasswordConfirm","TwoFaNewPasswordConfirm","TwoFaNewPasswordHint","TwoFaChangePasswordHint","TwoFaNewPasswordEmail","TwoFaRecoveryEmail","TwoFaNewPasswordEmailCode","TwoFaRecoveryEmailCode","TwoFaCongratulations","TwoFaChangePasswordCurrent","TwoFaTurnOff","TwoFaRecoveryEmailCurrentPassword","canTranslate","canTranslateChats","languages","SettingsLanguage","loadLanguages","selectedLanguage","setSelectedLanguage","markIsLoading","unmarkIsLoading","canTranslateChatsEnabled","oldSetLanguage","currentLangCode","navigator","shortLangCode","substr","nativeName","handleShouldTranslateChange","handleShouldTranslateChatsChange","handleShouldTranslateChatsClick","doNotTranslateText","IS_TRANSLATION_SUPPORTED","handleDoNotSelectOpen","isGiveawayAvailable","selectIsGiveawayGiftsPurchaseAvailable","sessionCount","SettingsMain","openSupportChat","openGiftRecipientPicker","openStarsBalanceModal","isSupportDialogOpen","openSupportDialog","closeSupportDialog","isPreload","handleOpenSupport","ProfileInfo","canPlayVideo","ChatExtra","chatOrUserId","isInSettings","languageInfo","formatStarsAmount","FAQ_URL","PRIVACY_URL","renderTextFilters","hasContactJoinedNotifications","hasWebNotifications","hasPushNotifications","notificationSoundVolume","SettingsNotifications","notifyDefaults","loadNotificationSettings","updateContactSignUpNotification","updateNotificationSettings","updateWebNotificationSettings","runDebounced","useRunDebounced","areNotificationsSupported","checkIfNotificationsSupported","areOfflineNotificationsSupported","checkIfOfflinePushFailed","handleSettingsChange","peerType","setting","currentIsMuted","mutedUntil","currentShouldShowPreviews","shouldShowPreviews","handleWebNotificationsChange","handlePushNotificationsChange","handlePrivateChatsNotificationsChange","handlePrivateChatsPreviewChange","handleGroupsNotificationsChange","handleGroupsPreviewChange","handleChannelsNotificationsChange","handleChannelsPreviewChange","handleContactNotificationChange","playNotifySound","groups","ANIMATION_LEVEL_OPTIONS","ANIMATION_LEVEL_CUSTOM_OPTIONS","PERFORMANCE_OPTIONS","IS_BACKDROP_BLUR_SUPPORTED","performanceSettings","selectPerformanceSettings","updatePerformanceSettings","sectionExpandedStates","setSectionExpandedStates","sectionCheckedStates","animationLevelState","areDeepEqual","INITIAL_PERFORMANCE_STATE_MAX","ANIMATION_LEVEL_MAX","INITIAL_PERFORMANCE_STATE_MIN","ANIMATION_LEVEL_MIN","INITIAL_PERFORMANCE_STATE_MID","ANIMATION_LEVEL_MED","ANIMATION_LEVEL_CUSTOM","animationLevelOptions","handleToggleSection","sectionIndex","handleAnimationLevelChange","newLevel","performance","animationLevel","handlePropertyGroupChange","perfomanceSection","sectionName","newSettings","handlePropertyChange","hasPassword","isSensitiveEnabled","canChangeSensitive","shouldArchiveAndMuteNewNonContact","canDisplayChatInTitle","hasPasscode","blockedCount","webAuthCount","canDisplayAutoarchiveSetting","canSetPasscode","selectCanSetPasscode","SettingsPrivacy","loadPrivacySettings","loadBlockedUsers","loadContentSettings","updateContentSettings","loadGlobalPrivacySettings","loadWebAuthorizations","handleArchiveAndMuteChange","handleChatInTitleChange","handleUpdateContentSettings","getVisibilityValue","shouldAllowPremium","botsPrivacy","isVisibilityEverybody","shouldShowBotsString","blockCount","blockChatIds","allowCount","allowChatIds","total","exceptionString","conjunction","lastSeen","profilePhoto","birthday","forwards","phoneCall","allowDisabledClick","voiceMessages","chatInvite","blockedIds","localContactIds","userSearch","localUserIds","BlockUserModal","setUserSearchQuery","filteredContactIds","availableContactIds","contactId","firstId","secondId","secondName","localeCompare","handleRemoveUser","chatsByIds","usersByIds","SettingsPrivacyBlockedUsers","isBlockUserModalOpen","openBlockUserModal","closeBlockUserModal","handleUnblockClick","blockedUsernamesById","mainUsername","getMainUsername","userMainUsername","renderContact","getPrivacyKey","screen","PrivacyPhoneP2P","PrivacyAddByPhone","selectShouldHideReadMarks","SettingsPrivacyLastSeen","canShowHideReadTime","handleChangeShouldHideReadMarks","SettingsPrivacyPublicProfilePhoto","hasCurrentUserFullInfo","currentUserFallbackPhoto","loadFullUser","uploadProfilePhoto","isDeleteFallbackPhotoModalOpen","openDeleteFallbackPhotoModal","closeDeleteFallbackPhotoModal","handleSelectFile","isFallback","handleConfirmDelete","handleOpenFileSelector","click","SelectAvatar","PrivacySubsection","isPremiumRequired","visibilityOptions","hasNobody","primaryExceptionLists","shouldShowDenied","shouldShowAllowed","headerText","prepareSubtitle","userIdsCount","chatIdsCount","isAllowBots","userCountString","chatCountString","allowedString","blockString","allowedContactsScreen","deniedContactsScreen","primaryPrivacy","secondaryPrivacy","addByPhone","phoneP2P","SettingsPrivacyVisibility","secondaryScreen","PREMIUM_CATEGORY","CUSTOM_PEER_PREMIUM","getCurrentPrivacySettings","SettingsPrivacyVisibilityExceptionList","isAllowList","withPremiumCategory","withMiniAppsCategory","usersOnly","setPrivacySettings","customPeerBots","isCustomPeer","avatarIcon","isAvatarSquare","peerColorId","miniAppsCategory","selectedContactIds","selectedCategoryTypes","newSelectedCategoryTypes","setNewSelectedCategoryTypes","SERVICE_NOTIFICATIONS_USER_ID","filteredChats","handleSelectedCategoriesChange","updatedIds","isPremiumAllowed","config","selectedReaction","defaultReaction","SettingsQuickReaction","setDefaultReaction","emoticon","withIcon","addedSetIds","SettingsStickers","shouldSuggestStickers","shouldUpdateStickerSetOrder","handleSuggestStickerSetOrderChange","handleSuggestStickersChange","stickerSets","SettingsTwoFaCongratulations","STICKER_SIZE_TWO_FA","recoveryEmail","animatedEmoji","selectAnimatedEmoji","codeLength","waitingEmailCodeLength","SettingsTwoFaEmailCode","focusDelayTimeoutMs","setValue","handleInputChange","AnimatedIconFromSticker","SettingsTwoFaEnabled","SettingsTwoFaSkippableForm","shouldConfirm","isConfirmShown","markIsConfirmShown","unmarkIsConfirmShown","handleSkip","handleSkipConfirm","SettingsTwoFaStart","SettingsTwoFa","updatePassword","checkPassword","clearTwoFaError","updateRecoveryEmail","provideTwoFaEmailCode","clearPassword","handleNewPasswordHint","handleNewPasswordEmail","handleChangePasswordConfirm","handleChangePasswordHint","handleRecoveryEmailCurrentPassword","handleRecoveryEmail","handleEmailCode","SettingsTwoFaPassword","TRANSITION_RENDER_COUNT","TWO_FA_SCREENS","PASSCODE_SCREENS","FOLDERS_SCREENS","PRIVACY_SCREENS","PRIVACY_PHONE_NUMBER_SCREENS","PRIVACY_LAST_SEEN_PHONE_SCREENS","PRIVACY_PROFILE_PHOTO_SCREENS","PRIVACY_BIO_SCREENS","PRIVACY_BIRTHDAY_SCREENS","PRIVACY_GIFTS_SCREENS","PRIVACY_PHONE_CALL_SCREENS","PRIVACY_PHONE_P2P_SCREENS","PRIVACY_FORWARDING_SCREENS","PRIVACY_VOICE_MESSAGES_SCREENS","PRIVACY_GROUP_CHATS_SCREENS","PRIVACY_MESSAGES_SCREENS","Settings","foldersState","foldersDispatch","shouldSkipTransition","closeShareChatFolderModal","twoFaState","twoFaDispatch","useReducer","privacyPasscode","setPrivacyPasscode","useMarkScrolled","forceReturnToChatList","isFromSettings","renderCurrentSection","isScreenActive","_isFrom","_currentKey","activeScreen","privacyAllowScreens","isTwoFaScreen","isPasscodeScreen","isFoldersScreen","isPrivacyScreen","Main","SettingsGeneralBackgroundColor","SettingsPerformance","renderCurrentSectionContent","LAYERS_ANIMATION_NAME","shouldWrap","withSwipeControl","userStatusesById","ContactList","openNewContactDialog","isSearching","NewChatStep1","onSelectedMemberIdsChange","onNextStep","setGlobalSearchQuery","foundContactIds","canBeInvitedToGroup","handleNextStep","creationProgress","creationError","chatCreation","maxGroupSize","NewChatStep2","createGroupChat","createChannel","setTitle","setAbout","chatTitleEmptyError","channelTitleEmptyError","ChatCreationProgress","memberFirstNames","generatedChatName","handleTitleChange","handleCreateGroup","handleCreateChannel","renderedError","RENDER_COUNT","LeftColumnContent","NewChat","onContentChange","newChatMemberIds","setNewChatMemberIds","NewChannelStep2","NewGroupStep2","isStepActive","NewChannelStep1","NewGroupStep1","ArchivedChats","isForumPanelOpen","archiveSettings","isStoryRibbonShown","onTopicSearch","onSettingsScreenSelect","onLeftColumnContentChange","updateArchiveSettings","handleDisplayArchiveInChats","shouldDisableDropdownMenuTransitionRef","handleDropdownMenuTransitionEnd","useLeftHeaderButtonRtlForumTransition","shouldRenderTitle","titleClassNames","shouldRenderForumPanel","handleForumPanelAnimationEnd","handleForumPanelAnimationStart","isAnimationStarted","useForumPanelRender","isForumPanelVisible","shouldRenderStoryRibbon","storyRibbonClassNames","isStoryRibbonClosing","StoryToggler","canShow","folderType","ForumPanel","onOpenAnimationStart","folderOrderedIds","editChatFolders","initialSelectedFolderIds","selectedFolderIds","setSelectedFolderIds","idsToRemove","idsToAdd","MuteDuration","muteUntilOption","setMuteUntilOption","Forever","updateChatMutedState","updateTopicMutedState","muteForOptions","OneHour","FourHours","EightHours","OneDay","ThreeDays","fromSticker","stickerSetShortName","sendOptions","getAllowedAttachmentOptions","threadInfo","selectThreadInfo","isMessageThread","isCommentsInfo","fromChannelId","canSendStickers","canScheduleUntilOnline","selectCanScheduleUntilOnline","shouldSchedule","selectShouldSchedule","StickerSetModal","prevStickerSet","renderingStickerSet","isAdded","requestCalendar","calendar","useSchedule","isScheduleRequested","isPreloadedGlobally","scheduledAt","handleCopyLink","suffix","renderHeader","EMOJI_SIZE_MODAL","STICKER_SIZE_MODAL","renderButtonText","CustomEmojiSetsModal","customEmojiModalRef","prevCustomEmojiSets","renderingCustomEmojiSets","handleSetClick","sets","teactFastList","customEmojiSet","setCard","BOT_BUTTONS","help","isRestricted","canAddContact","getCanAddContact","isMainThread","currentChatId","currentThreadId","canReportChat","canGift","selectCanGift","canCreateTopic","isUserRightBanned","canEditTopic","getCanManageTopic","canManage","selectCanManage","selectCanTranslateChat","isTranslationDisabled","savedDialog","getIsSavedDialog","isTopic","isForumAsMessages","canDeleteChat","getCanDeleteChat","botCommands","commands","botPrivacyPolicyUrl","privacyPolicyUrl","isChatInfoShown","isRightColumnShown","selectIsRightColumnShown","isBot","HeaderMenuContainer","withExtraActions","withForumActions","canStartBot","canSubscribe","canSearch","canCall","canMute","canViewStatistics","canViewMonetization","canViewBoosts","pendingJoinRequests","canLeave","canEnterVoiceChat","canCreateVoiceChat","canShowBoostModal","onJoinRequestsClick","onSubscribeChannel","onSearchClick","onAsMessagesClick","enterMessageSelectMode","sendBotCommand","restartBot","requestMasterAndJoinGroupCall","createGroupCall","openLinkedChat","openAddContactDialog","requestMasterAndRequestCall","toggleStatistics","openMonetizationStatistics","openBoostStatistics","openGiftModal","openThreadWithInfo","openCreateTopicPanel","openEditTopicPanel","toggleManagement","togglePeerTranslations","setViewForumAsMessages","openBoostModal","setIsMenuOpen","shouldCloseFast","setShouldCloseFast","setIsDeleteModalOpen","setIsMuteModalOpen","isViewGroupInfoShown","closeMenu","handleViewGroupInfo","handleStartBot","command","handleRestartBot","handleUnmuteClick","handleMuteClick","handleCreateTopicClick","handleEditClick","handleEditTopicClick","handleViewAsTopicsClick","handleEnterVoiceChatClick","handleLinkedChatClick","handleGiftClick","forUserId","handleAddContactClick","handleSubscribe","handleVideoCall","handleCall","handleStatisticsClick","handleMonetizationClick","handleBoostClick","handleEnableTranslations","handleSelectMessages","handleOpenAsMessages","handleBlock","handleUnblock","botButtons","commandButtons","cmd","hasPrivacyCommand","deleteTitle","MenuSeparator","DeleteChatModal","isSavedDialog","MiddleSearchResult","senderPeer","messageChat","shouldShowChat","hiddenForwardTitle","hiddenUserName","senderName","getMessageSenderName","topRow","LastMessageMeta","meta","MessageSummary","truncateLength","CHANNELS_PEER","titleKey","RESULT_ITEM_CLASS_NAME","runDebouncedForSearch","requestedQuery","savedTag","fetchingQuery","isHashtag","selectCurrentMiddleSearch","lastSearchQuery","savedTags","savedReactionTags","isHistoryCalendarOpen","isHashtagQuery","searchType","MiddleSearch","updateMiddleSearch","resetMiddleSearch","performMiddleSearch","closeMiddleSearch","openHistoryCalendar","loadSavedReactionTags","shouldCancelSearchRef","focusedIndex","setFocusedIndex","canFocusNewer","canFocusOlder","isFullyHidden","setIsFullyHidden","hiddenTimerRef","maybeLongPressActiveRef","isFocused","markFocused","markBlurred","isViewAsList","setIsViewAsList","refs","handleClickOutside","useClickOutside","hasResultsContainer","isOnlyHash","areResultsEmpty","hasResultsDropdown","hasQueryData","hasNavigationButtons","focusInput","blurInput","blur","visualViewport","mainEl","pageTop","requestNextMutation","prevIsCalendarOpen","savedTagsArray","hasSavedTags","areSavedTagsDisabled","handleQueryChange","newQuery","removeListeners","fastRaf","viewportResults","searchResultKey","originalSender","ANONYMOUS_USER_ID","selectForwardedSender","handleMessageClick","getSearchResultKey","handleTriggerViewStyle","foundResult","updateSearchParams","activateSearchTag","tag","removeSearchSavedTag","handleDeleteTag","handleChangeSearchType","handleFocusOlder","newFocusIndex","handleFocusNewer","renderTypeTag","isForTag","selectedType","renderDropdown","dropdown","dropdownHidden","separator","wrap","isChosen","SavedTagButton","withCount","searchTypes","teactOrderKey","focused","mobile","withDropdown","adaptSearchBorders","canClose","resultsItemSelector","hasUpButton","hasDownButton","onStartBackspace","withBackIcon","onUpClick","onDownClick","searchTags","savedSearchTag","icons","getDayStartAt","counter","viewStyle","noForcedUpperCase","mobileNavigation","navigationButton","navigationDisabled","recent","favorite","effect","chatStickerSetId","effectStickers","effectEmojis","recentStickers","selectShouldLoopStickers","StickerPicker","isForEffects","loadRecentStickers","addRecentSticker","unfaveSticker","faveSticker","removeRecentSticker","sendMessageAction","useSendMessageAction","effectSets","existingAddedSetIds","shouldRenderContents","handleStickerSelect","handleStickerUnfave","handleStickerFave","handleMouseMove","handleRemoveRecentSticker","CHAT_STICKER_SET_ID","maxUniqueReactions","enabledReactions","reactionsLimit","ReactionPickerLimited","isTouchScreen","currentReactions","shouldUseCurrentReactions","allAvailableReactions","reactionsToSort","sortReactions","allowed","pickerHeight","pickerWidth","gapWidth","itemsInRow","pickerMaxHeight","REACTION_SELECTOR_WIDTH","availableEffectById","storyPeerId","sendAsMessage","areSomeReactionsAllowed","areAllReactionsAllowed","areCustomAllowed","shouldUseFullPicker","isForbidden","ReactionPicker","toggleReaction","closeReactionPicker","saveEffectInDraft","requestEffectInComposer","addLocalPaidReaction","openPaidReactionModal","renderedMessageId","renderedChatId","renderedStoryPeerId","renderedStoryId","storedPosition","renderingPosition","isDense","deltaX","FULL_PICKER_SHIFT_DELTA","handleToggleCustomReaction","shouldAddToRecent","handleToggleReaction","handleReactionContextMenu","handleStoryReactionSelect","actionText","customEmojiMessage","parseHtmlAsFormattedText","buildCustomEmojiHtml","isReaction","availableEffects","effectId","effectStickerId","chosenOrder","backdropExcludedSelector","div","BLUR_CANVAS_SIZE","AttachmentModalItem","attachment","shouldDisplayCompressed","shouldDisplayGrouped","onToggleSpoiler","displayType","quick","SUPPORTED_PHOTO_CONTENT_TYPES","mimeType","SUPPORTED_VIDEO_CONTENT_TYPES","getDisplayType","handleSpoilerClick","extension","getFileExtension","previewData","shouldSkipGrouping","shouldDisplaySpoiler","shouldSendAsSpoiler","shouldRenderOverlay","rootClassName","MediaSpoiler","isFullyVisible","isHorizontal","viewportY1","viewportY2","y2","findInViewport","selectorOrElements","shouldContainBottom","allElements","visibleIndexes","isFound","setTooltipItemVisible","useKeyboardNavigation","shouldSaveSelectionOnUpdateItems","shouldRemoveSelectionOnReset","noArrowNavigation","shouldSelectOnTab","selectedItemIndex","setSelectedItemIndex","getSelectedIndex","handleArrowKey","handleItemSelect","altKey","metaKey","shiftKey","isSelectionOutOfRange","onUp","onDown","onTab","MentionTooltip","onInsertUserName","filteredUsers","handleUserSelect","forceFocus","handleSelectMention","selectedMentionIndex","prevChatMembers","renderedChatMembers","ATTACHMENT_MODAL_INPUT_ID","attachmentSettings","baseEmojiKeywords","emojiKeywords","BASE_EMOJI_KEYWORD_LANG","groupChatMembers","keywords","customEmojiForEmoji","forEmoji","captionLimit","AttachmentModal","attachments","getHtml","editingMessage","canShowCustomSendMenu","isForMessage","shouldSuggestCompression","shouldForceCompression","shouldForceAsFile","isForCurrentMessageList","forceDarkTheme","onAttachmentsUpdate","onCaptionUpdate","onSend","onFileAppend","onClear","onSendSilent","onSendScheduled","onRemoveSymbol","canSchedule","onSendWhenOnline","svgRef","addRecentCustomEmoji","addRecentEmoji","updateAttachmentSettings","mainButtonRef","hideTimeoutRef","prevAttachments","renderingAttachments","isEditing","groupedId","notEditingFile","getAttachmentMediaType","isSymbolMenuOpen","openSymbolMenu","closeSymbolMenu","shouldSendCompressed","setShouldSendCompressed","shouldCompress","isSendingCompressed","shouldSendGrouped","setShouldSendGrouped","isInvertedMedia","handleAttachmentsScroll","areAttachmentsNotScrolled","areAttachmentsScrolledToBottom","handleCaptionScroll","isCaptionNotScrolled","renderingIsOpen","isHovered","markHovered","unmarkHovered","hasMedia","hasOnlyMedia","audio","hasSpoiler","isEverySpoiler","getSelectionRange","useGetSelectionRange","EDITABLE_INPUT_MODAL_ID","isEmojiTooltipOpen","filteredEmojis","filteredCustomEmojis","insertEmoji","closeEmojiTooltip","useEmojiTooltip","isCustomEmojiTooltipOpen","insertCustomEmoji","closeCustomEmojiTooltip","useCustomEmojiTooltip","isMentionTooltipOpen","closeMentionTooltip","insertMention","mentionFilteredUsers","useMentionTooltip","setIsInvertedMedia","removeAllSelections","isCustomSendMenuOpen","sendAttachments","shouldSendScheduled","handleSendSilent","handleSendClick","handleScheduleClick","handleFilesDrop","dataTransfer","getFilesFromDataTransferItems","handleDocumentSelect","handleEnableSpoilers","handleDisableSpoilers","handleToggleSpoiler","svg","baseVal","leftChars","leftCharsBeforeLimit","html","innerHTML","fixImageContent","br","replaceWith","textContent","isQuickGallery","areAllPhotos","areAllVideos","areAllAudios","SUPPORTED_AUDIO_CONTENT_TYPES","hasAnySpoilerable","isMultiple","canInvertMedia","attachmentsLength","isBottomDividerShown","buttonSendCaption","onDragEnter","onDrop","onDragOver","onDragLeave","relatedTarget","toTarget","fromTarget","rx","uniqueId","EmojiTooltip","CustomEmojiTooltip","SymbolMenuButton","isAttachmentModal","canSendPlainText","MessageInput","isAttachmentModalInput","customEmojiPrefix","canAutoFocus","shouldSuppressFocus","onSuppressedFocus","CustomSendMenu","onSendSchedule","PollModal","isQuiz","shouldBeAnonymous","questionInputRef","optionsListRef","question","setQuestion","setOptions","isAnonymous","setIsAnonymous","isMultipleAnswers","setIsMultipleAnswers","isQuizMode","setIsQuizMode","solution","setSolution","correctOption","setCorrectOption","hasErrors","setHasErrors","handleSolutionChange","addNewOption","newOptions","behavior","handleCreate","isNoCorrectOptionError","answers","correct","questionTrimmed","substring","optionsTrimmed","o","summary","multipleChoice","quiz","correctAnswers","solutionEntities","updateOption","removeOption","handleCorrectOptionChange","handleIsAnonymousChange","handleMultipleAnswersChange","handleQuizModeChange","handleKeyPress","handleQuestionChange","getQuestionError","getOptionsError","renderOptions","onKeyPress","renderQuizNoOptionError","EMOJI_MARGIN","EMOJI_VERTICAL_MARGIN","EMOJI_VERTICAL_MARGIN_MOBILE","MOBILE_CONTAINER_PADDING","EmojiCategory","category","useOnIntersect","emojisPerRow","EMOJI_SYMBOL_SET_ID","categoryIntersections","emojiDataPromise","emojiRawData","emojiData","AllEmojiPicker","setCategories","setEmojis","activeCategoryIndex","setActiveCategoryIndex","allCategories","exec","default","uncompressEmoji","ensureEmojiData","handleCustomEmojiSelect","categoryEl","j","ICONS_BY_CATEGORY","people","nature","foods","activity","places","objects","symbols","flags","EmojiPicker","MENU_TRANSITION_DURATION","themeCategories","selectCategory","containerClassName","GifButton","gif","onUnsaveClick","hasVideoPreview","getVideoMediaHash","withThumb","videoHash","getVideoPreviewMediaHash","videoData","shouldRenderVideo","isVideoReady","handleUnsaveClick","handleContextDelete","preload","gifs","saved","GifPicker","canSendGifs","onGifSelect","loadSavedGifs","saveGif","debounceMs","shouldUnsave","SymbolMenuTabs","SYMBOL_MENU_TAB_TITLES","AllEmoji","Emoji","GIFs","SYMBOL_MENU_TAB_ICONS","SymbolMenuFooter","onSearchOpen","renderTabButton","handleSearchOpen","isLeftColumnShown","isBackgroundTranslucent","SymbolMenu","isMessageComposer","menuPositionOptions","setRecentEmojis","setRecentCustomEmojis","handleMouseEnter","handleMouseLeave","useMouseInside","recentEmojisRef","recentCustomEmojisRef","canUpdateStickerSetsOrder","isFrom","mobileClassName","onMouseEnter","ChatCommand","withAvatar","freezeWhenClosed","ChatCommandTooltip","quickReplies","quickReplyMessages","self","sendQuickReply","handleSendCommand","handleSendQuickReply","quickReplyId","quickRepliesWithDescription","reply","topMessageId","shortcut","handleKeyboardSelect","selectedCommandIndex","isEmpty","BotCommandMenu","botCommand","StickerTooltip","prevStickers","displayedStickers","clearCustomEmojiForEmoji","ce","emojiButton","COMPOSER_EMOJI_SIZE_PICKER","isOpenToBottom","onRemoveEffect","withEffects","hasCurrentEffect","effectReactions","onToggleReaction","isInSavedMessages","isInStoryViewer","openEffectPicker","displayScheduleUntilOnline","setDisplayScheduleUntilOnline","areItemsHidden","hideItems","showItems","markIsReady","unmarkIsReady","handleOpenMessageEffectsPicker","ReactionSelector","onShowMore","TEXT_FORMAT_BY_TAG_NAME","B","STRONG","I","EM","U","DEL","CODE","SPAN","BLOCKQUOTE","fragmentEl","TextFormatter","anchorPosition","selectedRange","setSelectedRange","linkUrlInputRef","isLinkControlOpen","openLinkControl","closeLinkControl","setLinkUrl","isEditingLink","setIsEditingLink","inputClassName","setInputClassName","selectedTextFormats","setSelectedTextFormats","useVirtualBackdrop","selectedFormats","parentElement","commonAncestorContainer","EDITABLE_INPUT_ID","textFormat","tagName","restoreSelection","selection","getSelection","removeAllRanges","addRange","updateSelectedRange","getRangeAt","getSelectedText","shouldDropCustomEmoji","replaceChildren","cloneContents","INPUT_CUSTOM_EMOJI_SELECTOR","getAttribute","getSelectedElement","updateInputStyles","scrollWidth","getFormatButtonClassName","fKey","monospace","strikethrough","handleSpoilerText","spoiler","entityType","ApiMessageEntityTypes","Spoiler","execCommand","handleBoldText","handleItalicText","italic","handleUnderlineText","underline","handleStrikethroughText","handleMonospaceText","handleBlockquoteText","blockquote","handleLinkUrlConfirm","formattedLinkUrl","encodeURI","u","m","p","getKeyFromEvent","linkUrlConfirmClassName","autoComplete","CustomEmojiButton","listEmojis","handleSelectEmoji","handleCustomEmojiClick","selectedIndex","prevSelectedIndex","setItemVisible","BaseResult","thumbnailDataUrl","getWebDocumentHash","decoding","ArticleResult","inlineResult","webThumbnail","GifResult","_gif","MediaResult","isForGallery","thumbnailBlobUrl","getPhotoMediaHash","StickerResult","STICKER_SIZE_INLINE_BOT_RESULT","InlineBotTooltip","isGallery","inlineBotResults","switchPm","switchWebview","onSelectResult","startBot","requestSimpleWebView","renderedIsGallery","handleSendPm","param","handleOpenWebview","isFromSwitchWebView","prevInlineBotResults","renderedInlineBotResults","sensitiveArea","inlineBotResult","SendAsMenu","selectedSendAsId","sendAsPeerIds","saveDefaultSendAs","markMouseInside","sendAsId","selectedSendAsIndex","avatarClassName","noFake","membersCount","StickerSetResult","areStickersLoaded","premiumStickerIds","coverStickerIds","covers","otherStickers","handleStickerClick","canRenderStickers","STICKER_SIZE_SEARCH","selectCurrentStickerSearch","resultIds","featured","openedStickerSetShortName","StickerSearch","loadFeaturedStickers","selectCurrentGifSearch","canPostInChat","GifSearch","searchMoreGifs","setGifSearchQuery","handleGifClick","handleSearchMoreGifs","hasResults","postStatistic","StatisticsRecentMessage","toggleMessageStatistics","StatisticsRecentPostMeta","toggleStoryStatistics","imgBlobUrl","withStorySolid","forceUnreadStorySolid","lovelyChartPromise","LovelyChart","CHANNEL_GRAPHS_TITLES","growthGraph","followersGraph","muteGraph","topHoursGraph","viewsBySourceGraph","newFollowersBySourceGraph","languagesGraph","interactionsGraph","reactionsByEmotionGraph","storyInteractionsGraph","storyReactionsByEmotionGraph","CHANNEL_GRAPHS","GROUP_GRAPHS_TITLES","membersGraph","messagesGraph","actionsGraph","GROUP_GRAPHS","statistics","selectStatistics","dcId","statisticsDcId","messagesById","storiesById","selectPeerStories","Statistics","setIsReady","loadedCharts","loadStatistics","loadStatisticsAsyncGraph","graphs","graphTitles","graph","token","isPercentage","ensureLovelyChart","zoomToken","zoomOutLabel","StatisticsOverview","recentPosts","StatisticsRecentStory","StatisticsMessagePublicForward","openChatByUsername","GRAPH_TITLES","viewsGraph","reactionsGraph","GRAPHS","currentMessage","currentMessageId","loadMessageStatistics","loadMessagePublicForwards","publicForwards","publicForwardsData","STATISTICS_PUBLIC_FORWARDS_LIMIT","currentStory","loadStoryStatistics","loadStoryPublicForwards","StatisticsStoryPublicForward","answer","voters","offsets","pollResults","PollAnswerResults","answerVote","totalVoters","loadPollOptionResults","closePollResults","prevVotersCount","votersCount","areVotersLoaded","shouldResetVoters","handleViewMoreClick","handleMemberClick","leftVotersCount","ShowMoreButton","renderViewMoreButton","poll","selectPollFromMessage","PollResults","resultsByOption","buildCollectionByKey","ICON_SIZE","createTopicPanel","CreateTopic","createTopic","iconColorIndex","setIconColorIndex","iconEmojiId","setIconEmojiId","handleIconClick","getTopicColors","handleCreateTopic","iconColor","dummyTopic","noLoopLimit","editTopicPanel","EditTopic","editTopic","isGeneral","GENERAL_TOPIC_ID","newTitle","handleEditTopic","ERROR_NAME_MISSING","management","ManageBot","setBotInfo","uploadContactProfilePhoto","startBotFatherConversation","isFieldTouched","markFieldTouched","unmarkProfileTouched","isAvatarTouched","markAvatarTouched","unmarkAvatarTouched","currentName","setName","ManagementProgress","handleNameChange","trimmedName","handleChangeEditIntro","handleChangeEditCommands","handleChangeSettings","isSuggestRef","handleSelectAvatar","isSuggest","CHANNEL_TITLE_EMPTY","canChangeInfo","canInvite","exportedInvites","ManageChannel","updateChat","closeManagement","leaveChannel","deleteChannel","loadExportedChatInvites","loadChatJoinRequests","currentTitle","currentAbout","isDeleteDialogOpen","openDeleteDialog","closeDeleteDialog","isRevoked","adminsCount","removedUsersCount","kickedMembers","handleClickEditType","ManagementScreens","ChatPrivacyType","handleClickDiscussion","Discussion","handleClickReactions","Reactions","handleClickAdministrators","ChatAdministrators","handleClickInvites","Invites","handleClickRequests","JoinRequests","handleSetPhoto","handleAboutChange","handleUpdateChannel","trimmedTitle","trimmedAbout","handleClickSubscribers","ChannelSubscribers","handleRemovedUsersClick","ChannelRemovedUsers","handleDeleteChannel","chatReactionsDescription","enabledLength","totalLength","isChannelPublic","formatInteger","joinRequests","ManageChatAdministrators","onChatMemberSelect","toggleSignatures","areSignaturesEnabled","areSignaturesShown","areProfilesEnabled","areProfilesShown","canAddNewAdmins","canToggleSignatures","adminMembers","admins","isOwner","handleAdminMemberClick","promotedByUserId","ChatAdminRights","handleToggleSignatures","handleToggleProfiles","handleAddAdminClick","GroupAddAdmins","getMemberStatus","promotedByUser","selectManagement","maxPublicLinks","privateInviteLink","inviteLink","ManageChatPrivacyType","updatePublicLink","updatePrivateLink","toggleIsProtected","resetManagementError","privacyType","setPrivacyType","isRevokeConfirmDialogOpen","openRevokeConfirmDialog","closeRevokeConfirmDialog","isUsernameLostDialogOpen","openUsernameLostDialog","closeUsernameLostDialog","handleOptionChange","c","radioGroup","handleForwardingOptionChange","handleSave","handleMakeChannelPrivateConfirm","shouldDisableUsernames","handleRevokePrivateLink","langPrefix1","langPrefix2","forwardingOptions","chatMembers","RemoveGroupUserModal","loadMoreMembers","usersId","availableMemberIds","canDeleteMembers","removedMembers","ManageChatRemovedUsers","isRemoveUserModalOpen","openRemoveUserModal","closeRemoveUserModal","getRemovedBy","kickedByUserId","kickedByUser","getContextActions","forDiscussionIds","linkedChat","ManageDiscussion","loadGroupsForDiscussion","linkDiscussionGroup","unlinkDiscussionGroup","toggleJoinRequest","toggleJoinToSend","linkedGroupId","setLinkedGroupId","isConfirmUnlinkGroupDialogOpen","openConfirmUnlinkGroupDialog","closeConfirmUnlinkGroupDialog","isConfirmLinkGroupDialogOpen","openConfirmLinkGroupDialog","closeConfirmLinkGroupDialog","isJoinToSend","setIsJoinToSend","isJoinRequest","setIsJoinRequest","handleUnlinkGroupSessions","Initial","handleLinkGroupSessions","handleJoinToSendCheck","handleJoinRequestCheck","DiscussionGroups","STICKER_SIZE_DISCUSSION_GROUPS","linkedGroup","renderLinkGroupHeader","hasPrivateLink","renderLinkGroupConfirmText","GROUP_TITLE_EMPTY","ALL_PERMISSIONS","TOTAL_PERMISSIONS_COUNT","limitReachedModal","hasLinkedChannel","isBasicGroup","canEditForum","isChannelsPremiumLimitReached","ManageGroup","togglePreHistoryHidden","deleteChat","toggleForum","isForumEnabled","setIsForumEnabled","isPublicGroup","isPreHistoryHiddenCheckboxRef","handleClickPermissions","GroupPermissions","handleUpdateGroup","handleClickMembers","GroupMembers","handleTogglePreHistory","isPreHistoryHidden","handleForumToggle","newIsForumEnabled","checkbox","enabledPermissionsCount","handleDeleteGroup","isForForum","isPromotedByCurrentUser","isFormFullyDisabled","defaultRights","adminRights","hasFullInfo","ManageGroupAdminRights","isNewAdmin","selectedUserId","updateChatAdmin","isDismissConfirmationDialogOpen","openDismissConfirmationDialog","closeDismissConfirmationDialog","customTitle","setCustomTitle","selectedChatMember","selectedAdminMember","handleSavePermissions","handleDismissAdmin","memberStatus","handleCustomTitleChange","postMessages","editMessages","postStories","editStories","deleteStories","banUsers","addAdmins","manageCall","anonymous","areParticipantsHidden","hiddenMembersMinCount","canHideParticipants","canAddMembers","globalUserIds","ManageGroupMembers","noAdmins","toggleParticipantsHidden","setNewChatMembersDialogState","deletingUserId","setDeletingUserId","adminIds","usePeerStoriesPolling","shouldUseSearchResults","listedIds","ChatNewAdminRights","handleDeleteMembersModalClose","handleToggleParticipantsHidden","handleNewMemberDialogOpen","newChatMembersProgress","NewChatMembersProgress","memberId","DeleteMemberModal","ManageGroupPermissions","updateChatDefaultBannedRights","GroupRemovedUsers","handleAddExceptionClick","GroupUserPermissionsCreate","handleExceptionMemberClick","GroupUserPermissions","exceptionMembers","getMemberExceptions","getLangKeyForBannedRightKey","translatedString","ManageGroupUserPermissions","selectedChatMemberId","isBanConfirmationDialogOpen","openBanConfirmationDialog","closeBanConfirmationDialog","handleBanFromGroup","viewMessages","ManageGroupUserPermissionsCreate","DEFAULT_USAGE_LIMITS","DEFAULT_EXPIRE_DATE","hour","week","DEFAULT_CUSTOM_EXPIRE_DATE","editingInvite","ManageInvite","editExportedChatInvite","exportChatInvite","setIsRequestNeeded","selectedExpireOption","setSelectedExpireOption","customUsageLimit","setCustomUsageLimit","selectedUsageOption","setSelectedUsageOption","isSubmitBlocked","setIsSubmitBlocked","oldEditingInvite","editingTitle","usageLimit","editingIsRequestNeeded","minSafeDate","handleIsRequestChange","handleCustomUsageLimitChange","parseInt","handleSaveClick","formatFullDate","n","importers","requesters","ManageInviteInfo","loadChatInviteImporters","loadChatInviteRequesters","usage","adminId","renderImporters","importer","joinTime","isFromChatList","renderRequesters","requester","BULLET","inviteComparator","i1","i2","isPermanent","i1IsPermanent","i1Usage","i1Date","i2IsPermanent","i2Usage","i2Date","revokedInvites","revokedExportedInvites","ManageInvites","setEditingExportedInvite","deleteExportedChatInvite","deleteRevokedExportedChatInvites","setOpenedInviteInfo","isDeleteRevokeAllDialogOpen","openDeleteRevokeAllDialog","closeDeleteRevokeAllDialog","isRevokeDialogOpen","openRevokeDialog","closeRevokeDialog","revokingInvite","setRevokingInvite","deletingInvite","setDeletingInvite","hasDetailedCountdown","MILLISECONDS_IN_DAY","chatMainUsername","primaryInvite","primaryInviteLink","temporalInvites","revokeInvite","askToRevoke","handleCreateNewClick","EditInvite","handlePrimaryRevoke","handleDeleteAllRevoked","showInviteInfo","InviteInfo","deleteInvite","askToDelete","copyLink","prepareUsageText","requested","formatCountdown","getInviteIconClass","prepareContextActions","editInvite","Invite","STICKER_SIZE_INVITES","withPrimaryColor","JoinRequest","hideChatJoinRequest","createClassNameBuilder","fixedDate","dateString","isToday","formatHumanDate","handleAcceptRequest","isApproved","handleRejectRequest","handleUserClick","ManageJoinRequests","hideAllChatJoinRequests","isAcceptAllDialogOpen","openAcceptAllDialog","closeAcceptAllDialog","isRejectAllDialogOpen","openRejectAllDialog","closeRejectAllDialog","handleAcceptAllRequests","handleRejectAllRequests","STICKER_SIZE_JOIN_REQUESTS","MAX_UNIQUE_REACTIONS","ManageReactions","setChatEnabledReactions","localEnabledReactions","setLocalEnabledReactions","localReactionsLimit","setLocalReactionsLimit","reactionsOptions","handleSaveReactions","availableActiveReactions","localAllowedReactions","enabledAllowedReactions","localReaction","enabledReaction","handleReactionsOptionChange","handleReactionChange","local","handleReactionsLimitChange","renderReactionsMaxCountValue","shouldShowReactionsLimit","notPersonalPhoto","ManageUser","isResetPersonalPhotoDialogOpen","openResetPersonalPhotoDialog","closeResetPersonalPhotoDialog","isNotificationsEnabled","setIsNotificationsEnabled","handleNotificationChange","handleDeleteContact","handleSuggestPhoto","handleSetPersonalPhoto","handleResetPersonalAvatar","canSetPersonalPhoto","noEmojiStatus","withFullInfo","noPersonalPhoto","managementType","selectCurrentManagementType","Management","GroupRecentActions","VISA","MASTERCARD1","MASTERCARD2","MIR","CardType","cards","Default","Visa","Mastercard","Mir","detectCardType","cardNumber","streetLine1","streetLine2","city","countryIso2","postCode","shipping","cardholder","expiry","cvv","billingCountry","billingZip","saveInfo","saveCredentials","formErrors","tipAmount","savedCredentialId","reducer","Checkout","invoice","shippingPrices","checkoutInfo","totalPrice","onAcceptTos","needAddress","hasShippingOptions","savedCredentials","isPaymentFormUrl","setPaymentStep","isInteractive","termsUrl","suggestedTipAmounts","maxTipAmount","paymentMethod","paymentProvider","shippingAddress","shippingMethod","photoUrl","useMediaTransition","handleTipsClick","tips","handlePaymentMethodClick","step","PaymentStep","SavedPayments","PaymentInfo","handleShippingAddressClick","ShippingInfo","handleShippingMethodClick","Shipping","checkoutPicture","forceAspectRatio","checkoutTitle","checkoutDescription","priceInfo","prices","renderPaymentItem","priceInfoItem","priceInfoItemTitle","tipsList","tip","tipsItem","tipsItem_active","shouldOmitFractions","invoiceInfo","renderCheckoutItem","provider","langStringSplit","renderTosLink","tosCheckbox","priceInfoItemMain","checkoutInfoItemInfoTitle","checkoutInfoItemInfoData","ConfirmPayment","noRedirect","onPaymentFormSubmit","messageKey","form","PasswordConfirm","onPasswordChange","clearPaymentError","cardName","onInputChange","useFocusAfterAnimation","animationDuration","CardInput","cardNumberRef","cardType","setCardType","newCardType","formatCardNumber","cardIcon","mastercardIconPath","visaIconPath","mirIconPath","getCardIcon","ExpiryInput","endsWith","formatCardExpiry","canSaveCredentials","needCardholderName","needCountry","needZip","selectCountryRef","handleCardNumberChange","handleCardholderChange","toUpperCase","handleExpiryChange","handleCvvChange","handleCountryChange","handleBillingPostCodeChange","handleChangeSaveCredentials","Select","hasArrow","SavedPaymentCredentials","onNewCardClick","shippingOptions","handleShippingSelect","needEmail","needPhone","needName","phoneRef","handleAddress1Change","handleAddress2Change","handleCityChange","handleStateChange","handlePostCodeChange","handleFullNameChange","handleEmailChange","handleSaveInfoChange","DEFAULT_PROVIDER","DONATE_PROVIDER","SUPPORTED_PROVIDERS","confirmPaymentUrl","stripeCredentials","smartGlocalCredentials","temporaryPassword","isExtendedMedia","nativeParams","nativeProvider","providerName","isProviderError","smartGlocalToken","stripeId","passwordValidUntil","validUntil","PaymentModal","loadPasswordInfo","validateRequestedInfo","sendPaymentForm","sendCredentialsInfo","validatePaymentPassword","setSmartGlocalCardInfo","paymentState","paymentDispatch","twoFaPassword","setTwoFaPassword","prevStep","prevRequestId","canRenderFooter","setStep","nextStep","field","savedInfo","shippingAddressRest","shippingCountry","charAt","handleErrorModalClose","shippingOption","getShippingPrices","cur","getTotalPrice","cardTypeText","detectCardTypeText","findShippingOption","getCheckoutInfo","handleNewCardClick","handleClearPaymentError","sendForm","shippingOptionId","handlePaymentFormSubmit","credentials","validateRequest","requestInfo","getRequestInfo","sendCredentials","expiryMonth","expiryYear","zip","getCredentials","ConfirmPassword","shouldFillRequestedData","isEmailRequested","isPhoneRequested","isNameRequested","isShippingAddressRequested","modalHeader","isSubmitDisabled","getIsSubmitDisabled","isRecurring","cleanupOnlyKey","currentStep","isPasswordMissing","isEmailSentToProvider","isPhoneSentToProvider","renderModalContent","descriptionKey","renderError","optionId","receipt","ReceiptModal","prevReceipt","renderingReceipt","fullAddress","credentialsTitle","totalAmount","InviteViaLinkModal","sendInviteMessages","closeInviteViaLinkModal","missingUsers","setSelectedMemberIds","unselectableIds","selectableIds","requirePremiumIds","regularIds","isRequiringPremiumToMessage","invitableWithPremiumIds","isRequiringPremiumToInvite","isEveryPremiumBlocksPm","topListPeers","handleSendInviteLink","canSendInviteLink","inviteSectionText","premiumSectionText","hasPremiumSection","hasSelectableSection","lockedUnselectedSubtitle","OneTimeMediaModal","closeOneTimeMediaModal","handlePlayVoice","isOwn","isOwnMessage","closeBtnTitle","voice","OneTimeModal","RoundVideo","onStop","renderMedia","WebAppsCloseConfirmationModal","closeWebAppsCloseConfirmationModal","shouldSkipInFuture","setShouldSkipInFuture","shouldSkipConfirmation","handleSelectWithEnter","SEGMENT_COVER_EYES","SEGMENT_UNCOVER_EYE","SEGMENT_COVER_EYE","isFirstMonkeyLoaded","markFirstMonkeyLoaded","isPeekShown","markPeekShown","stikerSize","STICKER_SIZE_AUTH_MOBILE","STICKER_SIZE_AUTH","handleFirstMonkeyLoad","MonkeyClose","playSegment","MonkeyPeek","avatarPeer","avatarWebPhoto","clickable","webPhoto","badge","modalProps","hasButton","hasBackdrop","absoluteCloseButtonColor","headerAvatarPeer","starsNeeded","areOptionsExtended","markOptionsExtended","unmarkOptionsExtended","renderingOptions","canExtend","maxOption","forceShowAll","currentStackedStarsCount","canExtendOptions","isExtended","starsCount","isWide","isOdd","isActiveOption","perUserStarCount","perUserStars","wideOption","optionTop","stackedStars","stackedStar","optionBottom","moreOptions"],"sourceRoot":""}